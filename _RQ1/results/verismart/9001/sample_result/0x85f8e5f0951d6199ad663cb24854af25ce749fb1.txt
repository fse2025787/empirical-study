[INFO] Violate CEI: true
[INFO] msg.sender = this possible: false
===== Report =====
[1] [IO] line 128, (i + 1) : proven
[2] [IO] line 211, (r + (x / r)) : unproven
[3] [IO] line 212, (r + (x / r)) : proven
[4] [IO] line 213, (r + (x / r)) : proven
[5] [IO] line 214, (r + (x / r)) : proven
[6] [IO] line 215, (r + (x / r)) : proven
[7] [IO] line 216, (r + (x / r)) : proven
[8] [IO] line 217, (r + (x / r)) : proven
[9] [IO] line 244, (x + y) : unproven
[10] [IO] line 248, (x - y) : unproven
[11] [IO] line 252, (x * y) : unproven
[12] [IO] line 307, (i + 1) : proven
[13] [IO] line 307, (path.length - 1) : unproven
[14] [IO] line 308, (i + 1) : proven
[15] [IO] line 309, (i + 1) : proven
[16] [IO] line 407, (i + 1) : proven
[17] [IO] line 407, (path.length - 1) : unproven
[18] [IO] line 408, (i + 1) : proven
[19] [IO] line 410, (i + 1) : proven
[20] [IO] line 412, (i + 2) : proven
[21] [IO] line 412, (path.length - 2) : proven
[22] [IO] line 427, (amounts.length - 1) : unproven
[23] [IO] line 442, (amounts.length - 1) : unproven
[24] [IO] line 683, (userIn.mul(3988000) + reserveIn.mul(3988009)) : unproven
[25] [IO] line 720, (path.length - 1) : proven
[26] [IO] line 843, (i + 1) : proven
[27] [DZ] line 211, (x / r) : unproven
[28] [DZ] line 212, (x / r) : proven
[29] [DZ] line 213, (x / r) : proven
[30] [DZ] line 214, (x / r) : proven
[31] [DZ] line 215, (x / r) : proven
[32] [DZ] line 216, (x / r) : proven
[33] [DZ] line 217, (x / r) : proven
[34] [DZ] line 218, (x / r) : proven
[35] [DZ] line 252, (z / y) : proven
[36] [DZ] line 289, (amountA.mul(reserveB) / reserveA) : proven
[37] [DZ] line 299, (numerator / denominator) : unproven
[38] [DZ] line 658, (_amount / 2) : proven
[39] [DZ] line 668, (_amount / 2) : proven
[40] [DZ] line 681, (Babylonian.sqrt(reserveIn.mul((userIn.mul(3988000) + reserveIn.mul(3988009)))).sub(reserveIn.mul(1997)) / 1994) : proven
[41] [DZ] line 1241, (amountInWithFee.mul(reserve1) / reserve0.mul(1000).add(amountInWithFee)) : unproven
[42] [DZ] line 1247, (amountInWithFee.mul(reserve0) / reserve1.mul(1000).add(amountInWithFee)) : unproven
[43] [ETH_LEAK] line 623, (success,  ) = _swapTarget.call.value(valueToSend)(swapCallData); : proven
[44] [ETH_LEAK] line 854, (success,  ) = to.call.value(address(this).balance)(""); : unproven
[45] [ETH_LEAK] line 868, (success,  ) = to.call.value(balance)(""); : proven

============ Statistics ============
# Iter                    : 1
# Alarm / Query           : 14 / 45
- integer over/underflow  : 9 / 26
- division-by-zero        : 4 / 16
- kill-anyone             : 0 / 0
- ether-leaking           : 1 / 3

Time Elapsed (Real) : 3086.47976494
Time Elapsed (CPU)  : 3039.966993
[CHECKER] Integer Over/Underflows
[CHECKER] Division-by-zero
[CHECKER] Suicidal
[CHECKER] Ether-Leaking

- all funcs : 172
- reachable : 90
* [STEP] Generating Paths ... took 0.078822s
- #paths : 1871

* Performing Interval Analysis ... took 1.505881s
