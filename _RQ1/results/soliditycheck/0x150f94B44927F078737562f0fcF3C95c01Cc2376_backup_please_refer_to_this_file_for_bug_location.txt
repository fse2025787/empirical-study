row number 
1	  pragma abicoder v2;
2	 pragma solidity 0.7.6;
3	 contract RouterETH {
4	 address public immutable stargateEthVault;
5	 IStargateRouter public immutable stargateRouter;
6	 uint16 public immutable poolId;
7	 constructor(address _stargateEthVault, address _stargateRouter, uint16 _poolId){
8	 require(_stargateEthVault != address(0x0), "RouterETH: _stargateEthVault cant be 0x0");
9	 require(_stargateRouter != address(0x0), "RouterETH: _stargateRouter cant be 0x0");
10	 stargateEthVault = _stargateEthVault;
11	 stargateRouter = IStargateRouter(_stargateRouter);
12	 poolId = _poolId;
13	 }
14	 function addLiquidityETH() external payable {
15	 require(msg.value > 0, "Stargate: msg.value is 0");
16	 uint256 amountLD = msg.value;
17	 IStargateEthVault(stargateEthVault).deposit{
18	 value: amountLD}
19	 ();
20	 IStargateEthVault(stargateEthVault).approve(address(stargateRouter), amountLD);
21	 stargateRouter.addLiquidity( poolId, amountLD, msg.sender );
22	 }
23	 function swapETH( uint16 _dstChainId, address payable _refundAddress, bytes calldata _toAddress, uint256 _amountLD, uint256 _minAmountLD ) external payable {
24	 require(msg.value > _amountLD, "Stargate: msg.value must be > _amountLD");
25	 IStargateEthVault(stargateEthVault).deposit{
26	 value: _amountLD}
27	 ();
28	 IStargateEthVault(stargateEthVault).approve(address(stargateRouter), _amountLD);
29	 uint256 messageFee = msg.value - _amountLD;
30	 stargateRouter.swap{
31	 value: messageFee}
32	 ( _dstChainId, poolId, poolId, _refundAddress, _amountLD, _minAmountLD, IStargateRouter.lzTxObj(0, 0, "0x"), _toAddress, bytes("") );
33	 }
34	 receive() external payable {
35	 }
36	 }
37	 pragma solidity 0.7.6;
38	 interface IStargateRouter {
39	 struct lzTxObj {
40	 uint256 dstGasForCall;
41	 uint256 dstNativeAmount;
42	 bytes dstNativeAddr;
43	 }
44	 function addLiquidity( uint256 _poolId, uint256 _amountLD, address _to ) external;
45	 function swap( uint16 _dstChainId, uint256 _srcPoolId, uint256 _dstPoolId, address payable _refundAddress, uint256 _amountLD, uint256 _minAmountLD, lzTxObj memory _lzTxParams, bytes calldata _to, bytes calldata _payload ) external payable;
46	 function redeemRemote( uint16 _dstChainId, uint256 _srcPoolId, uint256 _dstPoolId, address payable _refundAddress, uint256 _amountLP, uint256 _minAmountLD, bytes calldata _to, lzTxObj memory _lzTxParams ) external payable;
47	 function instantRedeemLocal( uint16 _srcPoolId, uint256 _amountLP, address _to ) external returns (uint256);
48	 function redeemLocal( uint16 _dstChainId, uint256 _srcPoolId, uint256 _dstPoolId, address payable _refundAddress, uint256 _amountLP, bytes calldata _to, lzTxObj memory _lzTxParams ) external payable;
49	 function sendCredits( uint16 _dstChainId, uint256 _srcPoolId, uint256 _dstPoolId, address payable _refundAddress ) external payable;
50	 function quoteLayerZeroFee( uint16 _dstChainId, uint8 _functionType, bytes calldata _toAddress, bytes calldata _transferAndCallPayload, lzTxObj memory _lzTxParams ) external view returns (uint256, uint256);
51	 }
52	 pragma solidity 0.7.6;
53	 interface IStargateEthVault {
54	 function deposit() external payable;
55	 function transfer(address to, uint value) external returns (bool);
56	 function withdraw(uint) external;
57	 function approve(address guy, uint wad) external returns (bool);
58	 function transferFrom(address src, address dst, uint wad) external returns (bool);
59	 }
