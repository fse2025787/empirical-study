file name: /ssd//tools/results/soliditycheck/mainnet/0xC20628FFFF326c80056e35E39308e4eE0Ff44fFC.sol
number of lines of code: 285
use time: 0.17769 s.
total number of bugs: 114

No unencrypted private data on-Chain.


No doS with block gas limit.


No unexpected ether balance.


No unchecked call return value.


No authorization through tx.origin.


No unsafe type inference.


[Bug 7]
bug name: Floating pragma
number of bugs: 3
row number: 2 9 185 
additional description: Contracts should be deployed with the same compiler version and flags 
that they have been tested with thoroughly. Locking the pragma helps to
 ensure that contracts do not accidentally get deployed using, for example,
 an outdated compiler version that might introduce bugs that affect the 
contract system negatively.
Bug level: warning

No block values as a proxy for time.


No integer division.


No locked ether.


No byte[].


No redundant refusal of payment.


No style guide violation.


[Bug 14]
bug name: Implicit visibility level
number of bugs: 108
row number: 12 13 16 17 18 21 22 25 26 29 30 31 38 39 40 41 42 43 45 46 47 48 53 54 55 56 59 60 61 62 65 66 67 68 69 70 71 72 76 77 80 81 82 83 84 87 88 91 92 95 96 97 100 101 102 105 106 107 110 111 112 113 114 117 118 119 120 123 124 125 126 127 128 131 132 133 134 135 136 137 138 141 142 143 144 147 148 149 153 154 155 156 164 171 172 173 174 175 176 177 178 179 180 181 182 183 190 192 
additional description: Functions that do not have a function visibility type specified
are public by default. This can lead to a vulnerability if a
developer forgot to set the visibility and a malicious user
is able to make unauthorized or unintended state changes.
And labeling the visibility explicitly makes it easier to 
catch incorrect assumptions about who can access the variable.
Bug level: warning

No using fixed point number type.


No token API violation.


No dos by failed call.


[Bug 18]
bug name: Incorrect constructor name
number of bugs: 3
row number: 3 10 51 
additional description: Constructors are special functions that are called only once during the contract creation.
They often perform critical, privileged actions such as setting the owner of the contract.
 Before Solidity version 0.4.22, the only way of defining a constructor was to create a function
 with the same name as the contract class containing it. A function meant to become a constructor
becomes a normal, callable function if its name doesn't exactly match the contract name. This
behavior sometimes leads to security issues, in particular when smart contract code is re-used
with a different name but the name of the constructor function is not changed accordingly.
Bug level:error

No public function that could be declared as external.


No typographical error.


No outdated compiler version.


No use of deprecated solidity functions.


No transaction order dependence.


