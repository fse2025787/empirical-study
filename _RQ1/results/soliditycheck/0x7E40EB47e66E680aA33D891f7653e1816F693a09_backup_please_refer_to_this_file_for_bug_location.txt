row number 
1	       pragma solidity ^0.5.17;
2	 interface IProofOfHumanity {
3	 function isRegistered(address _submissionID) external view returns (bool);
4	 function submissionCounter() external view returns (uint256);
5	 }
6	 interface IERC20 {
7	 function balanceOf(address _human) external view returns (uint256);
8	 function totalSupply() external view returns (uint256);
9	 }
10	 contract UBIProxy {
11	 IProofOfHumanity public PoH;
12	 IERC20 public UBI;
13	 address public governor = msg.sender;
14	 string public name = "UBI Vote";
15	 string public symbol = "UBIVOTE";
16	 uint8 public decimals = 18;
17	 constructor(IProofOfHumanity _PoH, IERC20 _UBI) public {
18	 PoH = _PoH;
19	 UBI = _UBI;
20	 }
21	 function changePoH(IProofOfHumanity _PoH) external {
22	 require(msg.sender == governor, "The caller must be the governor.");
23	 PoH = _PoH;
24	 }
25	 function changeUBI(IERC20 _UBI) external {
26	 require(msg.sender == governor, "The caller must be the governor.");
27	 UBI = _UBI;
28	 }
29	 function changeGovernor(address _governor) external {
30	 require(msg.sender == governor, "The caller must be the governor.");
31	 governor = _governor;
32	 }
33	 function isRegistered(address _submissionID) public view returns (bool) {
34	 return PoH.isRegistered(_submissionID);
35	 }
36	 function sqrt(uint256 x) private pure returns (uint256 y) {
37	 uint256 z = (x + 1) / 2;
38	 y = x;
39	 while (z < y) {
40	 y = z;
41	 z = (x / z + z) / 2;
42	 }
43	 }
44	 function balanceOf(address _submissionID) external view returns (uint256) {
45	 return isRegistered(_submissionID) ? sqrt(UBI.balanceOf(_submissionID)) : 0;
46	 }
47	 function totalSupply() external view returns (uint256) {
48	 return UBI.totalSupply();
49	 }
50	 function transfer(address _recipient, uint256 _amount) external returns (bool) {
51	 return false;
52	 }
53	 function allowance(address _owner, address _spender) external view returns (uint256) {
54	 }
55	 function approve(address _spender, uint256 _amount) external returns (bool) {
56	 return false;
57	 }
58	 function transferFrom( address _sender, address _recipient, uint256 _amount ) external returns (bool) {
59	 return false;
60	 }
61	 }
