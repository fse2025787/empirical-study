row number 
1	   pragma solidity ^0.4.24;
2	 contract RiddleMeThis {
3	 bytes32 private answerHash;
4	 bool private isActive;
5	 Guess[] public guesses;
6	 string public riddle;
7	 string public answer;
8	 struct Guess {
9	 address player;
10	 string guess;
11	 }
12	 address private riddler;
13	 function () payable public {
14	 }
15	 constructor (string _riddle, bytes32 _answerHash) public payable {
16	 riddler = msg.sender;
17	 riddle = _riddle;
18	 answerHash = _answerHash;
19	 isActive = true;
20	 }
21	 function play(string guess) public payable {
22	 require(isActive);
23	 require(msg.value > 1 ether);
24	 require(bytes(guess).length > 0);
25	 Guess newGuess;
26	 newGuess.player = msg.sender;
27	 newGuess.guess = guess;
28	 guesses.push(newGuess);
29	 if (keccak256(guess) == answerHash) {
30	 answer = guess;
31	 isActive = false;
32	 msg.sender.transfer(this.balance);
33	 }
34	 }
35	 function end(string _answer) public {
36	 require(msg.sender == riddler);
37	 answer = _answer;
38	 isActive = false;
39	 msg.sender.transfer(this.balance);
40	 }
41	 }
