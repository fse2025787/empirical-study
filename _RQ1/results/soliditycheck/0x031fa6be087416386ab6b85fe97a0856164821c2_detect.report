file name: /ssd//tools/results/soliditycheck/mainnet/0x031fa6be087416386ab6b85fe97a0856164821c2.sol
number of lines of code: 253
use time: 0.178381 s.
total number of bugs: 19

No unencrypted private data on-Chain.


[Bug 2]
bug name: DoS with block gas limit
number of bugs: 2
row number: 117 134 
additional description: When smart contracts are deployed or functions inside them are called, 
the execution of these actions always requires a certain amount of gas, 
based of how much computation is needed to complete them. The Ethereum 
network specifies a block gas limit and the sum of all transactions included
 in a block can not exceed the threshold. 
Bug level: warning 
detect method: We detect the existence of function calls, member variables, and constants that can cause looping costs of 67668 gases in conditional statements for / while (the limit is adjustable).

No unexpected ether balance.


No unchecked call return value.


No authorization through tx.origin.


No unsafe type inference.


[Bug 7]
bug name: Floating pragma
number of bugs: 1
row number: 1 
additional description: Contracts should be deployed with the same compiler version and flags 
that they have been tested with thoroughly. Locking the pragma helps to
 ensure that contracts do not accidentally get deployed using, for example,
 an outdated compiler version that might introduce bugs that affect the 
contract system negatively.
Bug level: warning
Attention: Add the following statement to indicate the version of the security specification used: pragma experimental "vCompiler Version"

No block values as a proxy for time.


No integer division.


[Bug 10]
bug name: Locked ether
number of bugs: 1
row number: 10 
additional description:  If the contract can receive ethers, but cannot send ethers, the
ethers in the contract will be permanently locked.
Bug level: error

No byte[].


No redundant refusal of payment.


No style guide violation.


No implicit visibility level.


No using fixed point number type.


[Bug 16]
bug name: Token API violation.
number of bugs: 5
row number: 82 83 102 103 104 
additional description: In ERC20-compliant contracts, it does not recommend throwing exceptions in functions that return bool
values, such as approve, transfer, transferFrom.
Bug level: warning

No dos by failed call.


No missing constructor.


[Bug 19]
bug name: Public function that could be declared as external
number of bugs: 5
row number: 54 115 131 141 145 
additional description: Unused public functions in contracts can be declared external, which can reduce gas consumption.
Bug level: warning

No typographical error.


[Bug 21]
bug name: Outdated Compiler Version
number of bugs: 1
row number: 1 
additional description: Using an outdated compiler version can be problematic especially if
there are publicly disclosed bugs and issues that affect the current
compiler version.
Bug level: warning

[Bug 22]
bug name: Use of deprecated solidity functions
number of bugs: 4
row number: 44 45 46 47 
additional description: Several functions and operators in Solidity are deprecated. 
Using them leads to reduced code quality. With new major versions
of the Solidity compiler, deprecated functions and operators may
result in side effects and compile errors. Please refer to https://swcregistry.io/docs/SWC-111 for details.
Bug level: warning

No transaction order dependence.


