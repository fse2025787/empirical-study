row number 
1	  pragma experimental ABIEncoderV2;
2	 abstract contract SeraphProtected {
3	 ISeraph constant internal _seraph = ISeraph(0xAac09eEdCcf664a9A6a594Fc527A0A4eC6cc2788);
4	 modifier withSeraph() {
5	 _seraph.checkEnter(msg.sender, msg.sig, msg.data, 0);
6	 _;
7	 _seraph.checkLeave(msg.sig);
8	 }
9	 modifier withSeraphPayable() {
10	 _seraph.checkEnter(msg.sender, msg.sig, msg.data, msg.value);
11	 _;
12	 _seraph.checkLeave(msg.sig);
13	 }
14	 }
15	 pragma solidity =0.7.6;
16	 contract InitVerifySeraph is SeraphProtected {
17	 function init() external withSeraph {
18	 }
19	 }
20	 pragma solidity >=0.5.0 <=0.9.0;
21	 interface ISeraph {
22	 function checkEnter(address, bytes4, bytes calldata, uint256) external;
23	 function checkLeave(bytes4) external;
24	 }
