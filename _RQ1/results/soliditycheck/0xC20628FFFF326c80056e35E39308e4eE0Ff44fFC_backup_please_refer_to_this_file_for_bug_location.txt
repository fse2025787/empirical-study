row number 
1	  pragma experimental ABIEncoderV2;
2	 pragma solidity ^0.7.6;
3	 contract InitBip13 {
4	 AppStorage internal s;
5	 function init() external {
6	 s.cases = [ int8(3), 1, 0, 0, -1, -3, -3, 0, 3, 1, 0, 0, -1, -3, -3, 0, 3, 3, 1, 0, 0, -1, -3, 0, 3, 3, 1, 0, 0, -1, -3, 0 ];
7	 }
8	 }
9	 pragma solidity ^0.7.6;
10	 contract Account {
11	 struct Field {
12	 mapping(uint256 => uint256) plots;
13	 mapping(address => uint256) podAllowances;
14	 }
15	 struct AssetSilo {
16	 mapping(uint32 => uint256) withdrawals;
17	 mapping(uint32 => uint256) deposits;
18	 mapping(uint32 => uint256) depositSeeds;
19	 }
20	 struct Deposit {
21	 uint128 amount;
22	 uint128 bdv;
23	 }
24	 struct Silo {
25	 uint256 stalk;
26	 uint256 seeds;
27	 }
28	 struct SeasonOfPlenty {
29	 uint256 base;
30	 uint256 roots;
31	 uint256 basePerRoot;
32	 }
33	 struct State {
34	 Field field;
35	 AssetSilo bean;
36	 AssetSilo lp;
37	 Silo s;
38	 uint32 votedUntil;
39	 uint32 lastUpdate;
40	 uint32 lastSop;
41	 uint32 lastRain;
42	 uint32 lastSIs;
43	 uint32 proposedUntil;
44	 SeasonOfPlenty sop;
45	 uint256 roots;
46	 uint256 wrappedBeans;
47	 mapping(address => mapping(uint32 => Deposit)) deposits;
48	 mapping(address => mapping(uint32 => uint256)) withdrawals;
49	 }
50	 }
51	 contract Storage {
52	 struct Contracts {
53	 address bean;
54	 address pair;
55	 address pegPair;
56	 address weth;
57	 }
58	 struct Field {
59	 uint256 soil;
60	 uint256 pods;
61	 uint256 harvested;
62	 uint256 harvestable;
63	 }
64	 struct Bip {
65	 address proposer;
66	 uint32 start;
67	 uint32 period;
68	 bool executed;
69	 int pauseOrUnpause;
70	 uint128 timestamp;
71	 uint256 roots;
72	 uint256 endTotalRoots;
73	 }
74	 struct DiamondCut {
75	 IDiamondCut.FacetCut[] diamondCut;
76	 address initAddress;
77	 bytes initData;
78	 }
79	 struct Governance {
80	 uint32[] activeBips;
81	 uint32 bipIndex;
82	 mapping(uint32 => DiamondCut) diamondCuts;
83	 mapping(uint32 => mapping(address => bool)) voted;
84	 mapping(uint32 => Bip) bips;
85	 }
86	 struct AssetSilo {
87	 uint256 deposited;
88	 uint256 withdrawn;
89	 }
90	 struct IncreaseSilo {
91	 uint256 beans;
92	 uint256 stalk;
93	 }
94	 struct V1IncreaseSilo {
95	 uint256 beans;
96	 uint256 stalk;
97	 uint256 roots;
98	 }
99	 struct SeasonOfPlenty {
100	 uint256 weth;
101	 uint256 base;
102	 uint32 last;
103	 }
104	 struct Silo {
105	 uint256 stalk;
106	 uint256 seeds;
107	 uint256 roots;
108	 }
109	 struct Oracle {
110	 bool initialized;
111	 uint256 cumulative;
112	 uint256 pegCumulative;
113	 uint32 timestamp;
114	 uint32 pegTimestamp;
115	 }
116	 struct Rain {
117	 uint32 start;
118	 bool raining;
119	 uint256 pods;
120	 uint256 roots;
121	 }
122	 struct Season {
123	 uint32 current;
124	 uint32 sis;
125	 uint8 withdrawSeasons;
126	 uint256 start;
127	 uint256 period;
128	 uint256 timestamp;
129	 }
130	 struct Weather {
131	 uint256 startSoil;
132	 uint256 lastDSoil;
133	 uint96 lastSoilPercent;
134	 uint32 lastSowTime;
135	 uint32 nextSowTime;
136	 uint32 yield;
137	 bool didSowBelowMin;
138	 bool didSowFaster;
139	 }
140	 struct Fundraiser {
141	 address payee;
142	 address token;
143	 uint256 total;
144	 uint256 remaining;
145	 }
146	 struct SiloSettings {
147	 bytes4 selector;
148	 uint32 seeds;
149	 uint32 stalk;
150	 }
151	 }
152	 struct AppStorage {
153	 uint8 index;
154	 int8[32] cases;
155	 bool paused;
156	 uint128 pausedAt;
157	 Storage.Season season;
158	 Storage.Contracts c;
159	 Storage.Field f;
160	 Storage.Governance g;
161	 Storage.Oracle o;
162	 Storage.Rain r;
163	 Storage.Silo s;
164	 uint256 depreciated1;
165	 Storage.Weather w;
166	 Storage.AssetSilo bean;
167	 Storage.AssetSilo lp;
168	 Storage.IncreaseSilo si;
169	 Storage.SeasonOfPlenty sop;
170	 Storage.V1IncreaseSilo v1SI;
171	 uint256 unclaimedRoots;
172	 uint256 v2SIBeans;
173	 mapping (uint32 => uint256) sops;
174	 mapping (address => Account.State) a;
175	 uint32 bip0Start;
176	 uint32 hotFix3Start;
177	 mapping (uint32 => Storage.Fundraiser) fundraisers;
178	 uint32 fundraiserIndex;
179	 mapping (address => bool) isBudget;
180	 mapping(uint256 => bytes32) podListings;
181	 mapping(bytes32 => uint256) podOrders;
182	 mapping(address => Storage.AssetSilo) siloBalances;
183	 mapping(address => Storage.SiloSettings) ss;
184	 }
185	 pragma solidity ^0.7.6;
186	 interface IDiamondCut {
187	 enum FacetCutAction {
188	 Add, Replace, Remove}
189	 struct FacetCut {
190	 address facetAddress;
191	 FacetCutAction action;
192	 bytes4[] functionSelectors;
193	 }
194	 function diamondCut( FacetCut[] calldata _diamondCut, address _init, bytes calldata _calldata ) external;
195	 event DiamondCut(FacetCut[] _diamondCut, address _init, bytes _calldata);
196	 }
