row number 
1	       pragma solidity ^0.8.7;
2	 contract Token {
3	 mapping(address=> uint) public balances;
4	 mapping(address => mapping(address => uint)) public allowance;
5	 uint public totalSupply = 1000000000 * 10 ** 18;
6	 string public name = "Quarashi Token";
7	 string public symbol = "QUA";
8	 uint public decimals = 18;
9	 event Transfer(address indexed from, address indexed to, uint value);
10	 event Approval(address indexed owner, address indexed spender, uint value);
11	 constructor() {
12	 balances[msg.sender] = totalSupply;
13	 }
14	 function balanceOf(address owner) public view returns(uint) {
15	 return balances[owner];
16	 }
17	 function transfer(address to, uint value) public returns(bool) {
18	 require(balanceOf(msg.sender) >= value, 'balance too low');
19	 balances[to] += value;
20	 balances[msg.sender] -= value;
21	 emit Transfer(msg.sender, to, value);
22	 return true;
23	 }
24	 function transferFrom(address from, address to, uint value) public returns(bool) {
25	 require(balanceOf(from) >= value, 'balance too low');
26	 require(allowance[from][msg.sender] >= value, 'allowance too low');
27	 balances[to] += value;
28	 balances[from] -= value;
29	 emit Transfer(from, to, value);
30	 return true;
31	 }
32	 function approve(address spender, uint value) public returns(bool) {
33	 allowance[msg.sender][spender] = value;
34	 emit Approval(msg.sender, spender, value);
35	 return true;
36	 }
37	 }
