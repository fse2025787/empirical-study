file name: /ssd//tools/results/soliditycheck/mainnet/0x458766536f95B9333D48A78A91AB1aaF4226221a.sol
number of lines of code: 1459
use time: 0.332861 s.
total number of bugs: 30

[Bug 1]
bug name: Unencrypted private data on-chain
number of bugs: 2
row number: 92 95 
additional description: It is a common misconception that private type variables cannot be read. 
Even if your contract is not published, attackers can look at contract 
transactions to determine values stored in the state of the contract. For
 this reason, it's important that unencrypted private data is not stored in
 the contract code or state.
Bug level: warning

No doS with block gas limit.


No unexpected ether balance.


No unchecked call return value.


No authorization through tx.origin.


No unsafe type inference.


[Bug 7]
bug name: Floating pragma
number of bugs: 14
row number: 2 13 22 34 39 49 54 162 182 243 246 258 303 66 
additional description: Contracts should be deployed with the same compiler version and flags 
that they have been tested with thoroughly. Locking the pragma helps to
 ensure that contracts do not accidentally get deployed using, for example,
 an outdated compiler version that might introduce bugs that affect the 
contract system negatively.
Bug level: warning
Attention: Add the following statement to indicate the version of the security specification used: pragma experimental "vCompiler Version"

No block values as a proxy for time.


No integer division.


No locked ether.


No byte[].


No redundant refusal of payment.


No style guide violation.


[Bug 14]
bug name: Implicit visibility level
number of bugs: 6
row number: 79 165 166 167 168 169 
additional description: Functions that do not have a function visibility type specified
are public by default. This can lead to a vulnerability if a
developer forgot to set the visibility and a malicious user
is able to make unauthorized or unintended state changes.
And labeling the visibility explicitly makes it easier to 
catch incorrect assumptions about who can access the variable.
Bug level: warning

No using fixed point number type.


No token API violation.


No dos by failed call.


No missing constructor.


No public function that could be declared as external.


[Bug 20]
bug name: Typographical error
number of bugs: 3
row number: 277 305 306 
additional description: Users can use =+ and =- operators in the integer operation
without compiling errors (up to and including version 0.4.26)
Bug level: error

[Bug 21]
bug name: Outdated Compiler Version
number of bugs: 1
row number: 258 
additional description: Using an outdated compiler version can be problematic especially if
there are publicly disclosed bugs and issues that affect the current
compiler version.
Bug level: warning

[Bug 22]
bug name: Use of deprecated solidity functions
number of bugs: 4
row number: 305 306 307 308 
additional description: Several functions and operators in Solidity are deprecated. 
Using them leads to reduced code quality. With new major versions
of the Solidity compiler, deprecated functions and operators may
result in side effects and compile errors. Please refer to https://swcregistry.io/docs/SWC-111 for details.
Bug level: warning

No transaction order dependence.


