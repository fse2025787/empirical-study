row number 
1	                   pragma solidity >=0.7.0;
2	 interface IAnteTest {
3	 function testAuthor() external view returns (address);
4	 function protocolName() external view returns (string memory);
5	 function testedContracts(uint256 i) external view returns (address);
6	 function testName() external view returns (string memory);
7	 function checkTestPasses() external returns (bool);
8	 }
9	 pragma solidity >=0.7.0;
10	 abstract contract AnteTest is IAnteTest {
11	 address public override testAuthor;
12	 string public override testName;
13	 string public override protocolName;
14	 address[] public override testedContracts;
15	 constructor(string memory _testName) {
16	 testAuthor = msg.sender;
17	 testName = _testName;
18	 }
19	 function getTestedContracts() external view returns (address[] memory) {
20	 return testedContracts;
21	 }
22	 function checkTestPasses() external virtual override returns (bool) {
23	 }
24	 }
25	 pragma solidity ^0.7.0;
26	 contract AnteAcrossOptimisticBridgeTest is AnteTest("Across Bridge does not rug 70% of its top 3 tokens") {
27	 address public constant hubPoolAddr = 0xc186fA914353c44b2E33eBE05f21846F1048bEda;
28	 address public constant wethAddr = 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2;
29	 address public constant wbtcAddr = 0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599;
30	 address public constant usdcAddr = 0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48;
31	 uint256 public constant THRESHOLD = 30;
32	 IERC20 private constant WETH = IERC20(wethAddr);
33	 IERC20 private constant WBTC = IERC20(wbtcAddr);
34	 IERC20 private constant USDC = IERC20(usdcAddr);
35	 uint256 public immutable wethThreshold;
36	 uint256 public immutable wbtcThreshold;
37	 uint256 public immutable usdcThreshold;
38	 constructor() {
39	 protocolName = "Across";
40	 testedContracts = [hubPoolAddr];
41	 wethThreshold = (WETH.balanceOf(hubPoolAddr) * THRESHOLD) / 100;
42	 wbtcThreshold = (WBTC.balanceOf(hubPoolAddr) * THRESHOLD) / 100;
43	 usdcThreshold = (USDC.balanceOf(hubPoolAddr) * THRESHOLD) / 100;
44	 }
45	 function checkTestPasses() external view override returns (bool) {
46	 return wethThreshold < WETH.balanceOf(hubPoolAddr) && wbtcThreshold < WBTC.balanceOf(hubPoolAddr) && usdcThreshold < USDC.balanceOf(hubPoolAddr);
47	 }
48	 }
49	 pragma solidity >=0.6.0 <0.8.0;
50	 interface IERC20 {
51	 function totalSupply() external view returns (uint256);
52	 function balanceOf(address account) external view returns (uint256);
53	 function transfer(address recipient, uint256 amount) external returns (bool);
54	 function allowance(address owner, address spender) external view returns (uint256);
55	 function approve(address spender, uint256 amount) external returns (bool);
56	 function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);
57	 event Transfer(address indexed from, address indexed to, uint256 value);
58	 event Approval(address indexed owner, address indexed spender, uint256 value);
59	 }
