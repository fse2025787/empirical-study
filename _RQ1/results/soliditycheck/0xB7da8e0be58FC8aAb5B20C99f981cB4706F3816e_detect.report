file name: /ssd//tools/results/soliditycheck/mainnet/0xB7da8e0be58FC8aAb5B20C99f981cB4706F3816e.sol
number of lines of code: 598
use time: 0.232637 s.
total number of bugs: 121

[Bug 1]
bug name: Unencrypted private data on-chain
number of bugs: 2
row number: 16 17 
additional description: It is a common misconception that private type variables cannot be read. 
Even if your contract is not published, attackers can look at contract 
transactions to determine values stored in the state of the contract. For
 this reason, it's important that unencrypted private data is not stored in
 the contract code or state.
Bug level: warning

No doS with block gas limit.


No unexpected ether balance.


No unchecked call return value.


No authorization through tx.origin.


No unsafe type inference.


[Bug 7]
bug name: Floating pragma
number of bugs: 1
row number: 13 
additional description: Contracts should be deployed with the same compiler version and flags 
that they have been tested with thoroughly. Locking the pragma helps to
 ensure that contracts do not accidentally get deployed using, for example,
 an outdated compiler version that might introduce bugs that affect the 
contract system negatively.
Bug level: warning

No block values as a proxy for time.


No integer division.


No locked ether.


No byte[].


No redundant refusal of payment.


No style guide violation.


[Bug 14]
bug name: Implicit visibility level
number of bugs: 112
row number: 86 87 90 91 92 95 96 99 100 103 104 105 112 113 114 115 116 117 119 120 121 122 127 128 129 130 133 134 135 136 139 140 141 142 143 144 145 146 150 151 154 155 156 157 158 161 162 165 166 169 170 171 174 175 176 179 180 181 184 185 186 187 188 191 192 193 194 197 198 199 200 201 202 205 206 207 208 209 210 211 212 215 216 217 218 219 222 223 224 228 229 230 231 239 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 274 276 
additional description: Functions that do not have a function visibility type specified
are public by default. This can lead to a vulnerability if a
developer forgot to set the visibility and a malicious user
is able to make unauthorized or unintended state changes.
And labeling the visibility explicitly makes it easier to 
catch incorrect assumptions about who can access the variable.
Bug level: warning

No using fixed point number type.


No token API violation.


No dos by failed call.


[Bug 18]
bug name: Incorrect constructor name
number of bugs: 3
row number: 14 84 125 
additional description: Constructors are special functions that are called only once during the contract creation.
They often perform critical, privileged actions such as setting the owner of the contract.
 Before Solidity version 0.4.22, the only way of defining a constructor was to create a function
 with the same name as the contract class containing it. A function meant to become a constructor
becomes a normal, callable function if its name doesn't exactly match the contract name. This
behavior sometimes leads to security issues, in particular when smart contract code is re-used
with a different name but the name of the constructor function is not changed accordingly.
Bug level:error

No public function that could be declared as external.


No typographical error.


No outdated compiler version.


[Bug 22]
bug name: Use of deprecated solidity functions
number of bugs: 2
row number: 16 17 
additional description: Several functions and operators in Solidity are deprecated. 
Using them leads to reduced code quality. With new major versions
of the Solidity compiler, deprecated functions and operators may
result in side effects and compile errors. Please refer to https://swcregistry.io/docs/SWC-111 for details.
Bug level: warning

[Bug 23]
bug name: Transaction order dependence
number of bugs: 1
row number: 8 
additional description: Miners can decide which transactions are packaged into the blocks and the
order in which transactions are packaged. The current main impact of this
kind of bugs is the approve function in the ERC20 token standard.
Bug level: warning

