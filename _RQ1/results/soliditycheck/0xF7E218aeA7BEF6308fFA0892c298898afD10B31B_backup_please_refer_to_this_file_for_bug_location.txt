row number 
1	     pragma solidity ^0.7.6;
2	 interface AccountImplementations {
3	 function getImplementation(bytes4 _sig) external view returns (address);
4	 }
5	 contract StakeAllAccountV2 {
6	 AccountImplementations public immutable implementations;
7	 constructor(address _implementations) {
8	 implementations = AccountImplementations(_implementations);
9	 }
10	 function _delegate(address implementation) internal {
11	 assembly {
12	 calldatacopy(0, 0, calldatasize()) let result := delegatecall( gas(), implementation, 0, calldatasize(), 0, 0 ) returndatacopy(0, 0, returndatasize()) switch result case 0 {
13	 revert(0, returndatasize()) }
14	 default {
15	 return(0, returndatasize()) }
16	 }
17	 }
18	 function _fallback(bytes4 _sig) internal {
19	 address _implementation = implementations.getImplementation(_sig);
20	 require( _implementation != address(0), "StakeAllAccountV2: Not able to find _implementation" );
21	 _delegate(_implementation);
22	 }
23	 fallback() external payable {
24	 _fallback(msg.sig);
25	 }
26	 receive() external payable {
27	 if (msg.sig != 0x00000000) {
28	 _fallback(msg.sig);
29	 }
30	 }
31	 }
