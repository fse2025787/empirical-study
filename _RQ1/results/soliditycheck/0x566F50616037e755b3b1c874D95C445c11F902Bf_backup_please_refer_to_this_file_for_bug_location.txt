row number 
1	         pragma solidity 0.6.12;
2	 interface IPriceFeed {
3	 function getLatestPrice() external view returns (int256, uint256);
4	 function latestRoundData() external view returns ( uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound );
5	 function decimals() external view returns (uint8);
6	 }
7	 pragma solidity 0.6.12;
8	 contract ChainlinkPriceFeed is IPriceFeed {
9	 address public chainlinkFeedAddress;
10	 constructor(address _source) public {
11	 require(_source != address(0), "ChainlinkPriceFeed: Invalid source");
12	 chainlinkFeedAddress = _source;
13	 }
14	 function getLatestPrice() external override view returns (int256, uint256) {
15	 (, int256 price, , uint256 lastUpdate, ) = IChainlinkPriceFeed(chainlinkFeedAddress).latestRoundData();
16	 return (price, lastUpdate);
17	 }
18	 function latestRoundData() external override view returns ( uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound ) {
19	 return IChainlinkPriceFeed(chainlinkFeedAddress).latestRoundData();
20	 }
21	 function decimals() external override view returns (uint8) {
22	 return IChainlinkPriceFeed(chainlinkFeedAddress).decimals();
23	 }
24	 }
25	 pragma solidity 0.6.12;
26	 interface IChainlinkPriceFeed {
27	 function decimals() external view returns (uint8);
28	 function latestRoundData() external view returns ( uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound );
29	 function getAnswer(uint256 roundId) external view returns (int256);
30	 function getTimestamp(uint256 roundId) external view returns (uint256);
31	 }
