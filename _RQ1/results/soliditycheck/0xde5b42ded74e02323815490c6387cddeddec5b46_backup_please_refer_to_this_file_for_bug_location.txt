row number 
1	           pragma solidity 0.5.17;
2	 contract testArrayEvent {
3	 uint256[] growableUintsArray;
4	 bool[] growableBoolArray;
5	 address[] growableAddressArray;
6	 event arraysFixed(uint256[3] numbers, address[2] addresses, bool[4] bools);
7	 event arraysDynamic(uint256[] numbers, address[] addresses, bool[] bools);
8	 constructor () public {
9	 }
10	 function emitEventFixedArray() public {
11	 uint256 one = 1;
12	 uint256 two = 2;
13	 uint256 threehundredand4 = 304;
14	 uint256[3] memory uints = [one,two,threehundredand4];
15	 bool[4] memory bools = [true,false,true,false];
16	 address[2] memory addresses = [address(this), msg.sender];
17	 emit arraysFixed(uints, addresses, bools);
18	 }
19	 function emitEventDynamicArray(uint slots) public {
20	 uint256 count = 1;
21	 bool current = true;
22	 while (count <= slots){
23	 growableUintsArray.push(count);
24	 growableBoolArray.push(current);
25	 current = !current;
26	 growableAddressArray.push(block.coinbase);
27	 count++;
28	 }
29	 emit arraysDynamic(growableUintsArray, growableAddressArray, growableBoolArray);
30	 }
31	 }
