file name: /ssd//tools/results/soliditycheck/mainnet/0x150f94B44927F078737562f0fcF3C95c01Cc2376.sol
number of lines of code: 160
use time: 0.086593 s.
total number of bugs: 7

No unencrypted private data on-Chain.


No doS with block gas limit.


No unexpected ether balance.


No unchecked call return value.


No authorization through tx.origin.


No unsafe type inference.


[Bug 7]
bug name: Floating pragma
number of bugs: 1
row number: 1 
additional description: Contracts should be deployed with the same compiler version and flags 
that they have been tested with thoroughly. Locking the pragma helps to
 ensure that contracts do not accidentally get deployed using, for example,
 an outdated compiler version that might introduce bugs that affect the 
contract system negatively.
Bug level: warning
Attention: Add the following statement to indicate the version of the security specification used: pragma experimental "vCompiler Version"

No block values as a proxy for time.


No integer division.


[Bug 10]
bug name: Locked ether
number of bugs: 1
row number: 14 
additional description:  If the contract can receive ethers, but cannot send ethers, the
ethers in the contract will be permanently locked.
Bug level: error

No byte[].


No redundant refusal of payment.


No style guide violation.


[Bug 14]
bug name: Implicit visibility level
number of bugs: 4
row number: 7 40 41 42 
additional description: Functions that do not have a function visibility type specified
are public by default. This can lead to a vulnerability if a
developer forgot to set the visibility and a malicious user
is able to make unauthorized or unintended state changes.
And labeling the visibility explicitly makes it easier to 
catch incorrect assumptions about who can access the variable.
Bug level: warning

No using fixed point number type.


No token API violation.


No dos by failed call.


No missing constructor.


No public function that could be declared as external.


No typographical error.


No outdated compiler version.


No use of deprecated solidity functions.


[Bug 23]
bug name: Transaction order dependence
number of bugs: 1
row number: 57 
additional description: Miners can decide which transactions are packaged into the blocks and the
order in which transactions are packaged. The current main impact of this
kind of bugs is the approve function in the ERC20 token standard.
Bug level: warning

