row number 
1	       library SafeMath {
2	 function add(uint a, uint b) internal pure returns (uint c) {
3	 c = a + b;
4	 require(c >= a);
5	 }
6	 function sub(uint a, uint b) internal pure returns (uint c) {
7	 require(b <= a);
8	 c = a - b;
9	 }
10	 function mul(uint a, uint b) internal pure returns (uint c) {
11	 c = a * b;
12	 require(a == 0 || c / a == b);
13	 }
14	 function div(uint a, uint b) internal pure returns (uint c) {
15	 require(b > 0);
16	 c = a / b;
17	 }
18	 }
19	 contract Trading_Charge {
20	 using SafeMath for uint;
21	 function Amount(uint256 amount ,address to)public view returns(uint256) {
22	 uint256 charge=amount;
23	 charge=charge.mul(1);
24	 charge=charge.div(1000);
25	 uint256 res=amount-charge;
26	 return res;
27	 }
28	 }
