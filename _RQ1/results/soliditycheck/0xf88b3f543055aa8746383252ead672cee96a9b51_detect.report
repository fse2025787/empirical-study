file name: /ssd//tools/results/soliditycheck/mainnet/0xf88b3f543055aa8746383252ead672cee96a9b51.sol
number of lines of code: 2399
use time: 0.553916 s.
total number of bugs: 141

[Bug 1]
bug name: Unencrypted private data on-chain
number of bugs: 28
row number: 56 57 58 59 60 61 173 199 235 293 321 356 357 358 359 389 394 398 409 424 425 489 605 615 633 636 639 642 
additional description: It is a common misconception that private type variables cannot be read. 
Even if your contract is not published, attackers can look at contract 
transactions to determine values stored in the state of the contract. For
 this reason, it's important that unencrypted private data is not stored in
 the contract code or state.
Bug level: warning

No doS with block gas limit.


No unexpected ether balance.


[Bug 4]
bug name: Unchecked call return value
number of bugs: 1
row number: 577 
additional description: The return value of a message call is not checked. Execution will resume even 
if the called contract throws an exception. If the call fails accidentally or 
an attacker forces the call to fail, this may cause unexpected behaviour in the
 subsequent program logic.
Bug level:error 

No authorization through tx.origin.


No unsafe type inference.


[Bug 7]
bug name: Floating pragma
number of bugs: 22
row number: 1 5 20 29 35 41 52 195 223 229 286 291 318 340 347 354 419 463 487 532 595 599 
additional description: Contracts should be deployed with the same compiler version and flags 
that they have been tested with thoroughly. Locking the pragma helps to
 ensure that contracts do not accidentally get deployed using, for example,
 an outdated compiler version that might introduce bugs that affect the 
contract system negatively.
Bug level: warning
Attention: Add the following statement to indicate the version of the security specification used: pragma experimental "vCompiler Version"

No block values as a proxy for time.


No integer division.


No locked ether.


No byte[].


No redundant refusal of payment.


[Bug 1ï¼“]
bug name: Style guide violation.
number of bugs: 39
row number: 22 25 89 119 123 126 131 134 138 146 154 164 168 173 192 214 218 247 265 268 273 279 312 331 335 342 374 389 394 398 409 432 456 605 615 633 636 639 642 
additional description: Solidity specifies how functions, events are named, and arrays are declared.
Compliance with specifications improves code readability.
Bug level: warning

[Bug 14]
bug name: Implicit visibility level
number of bugs: 10
row number: 43 62 200 232 233 295 426 466 602 603 
additional description: Functions that do not have a function visibility type specified
are public by default. This can lead to a vulnerability if a
developer forgot to set the visibility and a malicious user
is able to make unauthorized or unintended state changes.
And labeling the visibility explicitly makes it easier to 
catch incorrect assumptions about who can access the variable.
Bug level: warning

No using fixed point number type.


[Bug 16]
bug name: Token API violation.
number of bugs: 3
row number: 94 95 109 
additional description: In ERC20-compliant contracts, it does not recommend throwing exceptions in functions that return bool
values, such as approve, transfer, transferFrom.
Bug level: warning

[Bug 17]
bug name: DoS with failed call
number of bugs: 4
row number: 155 174 364 371 
additional description: External calls can fail accidentally or deliberately, which can cause a DoS condition in the contract.
To minimize the damage caused by such failures, it is better to isolate each external call into its own
transaction that can be initiated by the recipient of the call. This is especially relevant for payments,
where it is better to let users withdraw funds rather than push funds to them automatically (this also
reduces the chance of problems with the gas limit).
Bug level: warning

No missing constructor.


[Bug 19]
bug name: Public function that could be declared as external
number of bugs: 30
row number: 31 66 69 73 78 81 84 102 108 203 241 244 255 258 261 305 308 322 325 328 349 360 363 367 370 435 439 448 452 459 
additional description: Unused public functions in contracts can be declared external, which can reduce gas consumption.
Bug level: warning

No typographical error.


No outdated compiler version.


[Bug 22]
bug name: Use of deprecated solidity functions
number of bugs: 4
row number: 236 422 423 489 
additional description: Several functions and operators in Solidity are deprecated. 
Using them leads to reduced code quality. With new major versions
of the Solidity compiler, deprecated functions and operators may
result in side effects and compile errors. Please refer to https://swcregistry.io/docs/SWC-111 for details.
Bug level: warning

No transaction order dependence.


