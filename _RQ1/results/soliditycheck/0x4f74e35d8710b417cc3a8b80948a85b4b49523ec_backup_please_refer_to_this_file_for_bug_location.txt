row number 
1	   pragma solidity 0.4.24;
2	 contract ERC20Old {
3	 function totalSupply() public view returns (uint256);
4	 function balanceOf(address who) public view returns (uint256);
5	 function transfer(address to, uint256 value) public;
6	 event Transfer(address indexed from, address indexed to, uint256 value);
7	 function allowance(address owner, address spender) public view returns (uint256);
8	 function transferFrom(address from, address to, uint256 value) public;
9	 function approve(address spender, uint256 value) public returns (bool);
10	 event Approval(address indexed owner, address indexed spender, uint256 value);
11	 }
12	 contract Faucet {
13	 address public token;
14	 uint public decimals;
15	 uint public dripAmount;
16	 mapping (address => bool) public alreadyReceived;
17	 modifier newUser() {
18	 require(!alreadyReceived[msg.sender]);
19	 _;
20	 }
21	 constructor(address _token, uint _decimals, uint _dripAmount) public {
22	 token = _token;
23	 decimals = _decimals;
24	 dripAmount = _dripAmount;
25	 }
26	 function dripMe() public newUser {
27	 ERC20Old(token).transfer(msg.sender, dripAmount * 10 ** decimals);
28	 alreadyReceived[msg.sender] = true;
29	 }
30	 }
