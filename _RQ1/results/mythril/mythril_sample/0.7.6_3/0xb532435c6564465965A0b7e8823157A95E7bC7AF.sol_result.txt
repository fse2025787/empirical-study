Traceback (most recent call last):
  File "myth_run.py", line 43, in parse
    output = subprocess.run(cmd,stdout = f,stderr = f,shell=True,check=True,timeout=3720,text=True)
  File "/home/amax/anaconda3/envs/python3.8/lib/python3.8/subprocess.py", line 495, in run
    stdout, stderr = process.communicate(input, timeout=timeout)
  File "/home/amax/anaconda3/envs/python3.8/lib/python3.8/subprocess.py", line 1028, in communicate
    stdout, stderr = self._communicate(input, endtime, timeout)
  File "/home/amax/anaconda3/envs/python3.8/lib/python3.8/subprocess.py", line 1894, in _communicate
    self.wait(timeout=self._remaining_time(endtime))
  File "/home/amax/anaconda3/envs/python3.8/lib/python3.8/subprocess.py", line 1083, in wait
    return self._wait(timeout=timeout)
  File "/home/amax/anaconda3/envs/python3.8/lib/python3.8/subprocess.py", line 1798, in _wait
    raise TimeoutExpired(self.args, timeout)
subprocess.TimeoutExpired: Command 'myth analyze /bdata2/sc/dataset/mainnet/0xb532435c6564465965A0b7e8823157A95E7bC7AF.sol --execution-timeout 3600 --solv 0.7.6 -t 3' timed out after 3719.9999385788105 seconds

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: TokenRecover
Function name: recoverERC20(address,uint256)
PC address: 1002
Estimated Gas Usage: 3716 - 39128
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /bdata2/sc/dataset/mainnet/0xb532435c6564465965A0b7e8823157A95E7bC7AF.sol:195

IERC20(tokenAddress).transfer(owner(), tokenAmount)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: recoverERC20(address,uint256), txdata: 0x8980f11fefefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefef, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: ServiceReceiver
Function name: recoverERC20(address,uint256)
PC address: 2664
Estimated Gas Usage: 3738 - 39150
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /bdata2/sc/dataset/mainnet/0xb532435c6564465965A0b7e8823157A95E7bC7AF.sol:195

IERC20(tokenAddress).transfer(owner(), tokenAmount)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: recoverERC20(address,uint256), txdata: 0x8980f11fefefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefef, value: 0x0


