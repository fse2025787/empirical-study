==== Exception State ====
SWC ID: 110
Severity: Medium
Contract: Admin
Function name: tiers(uint256)
PC address: 2321
Estimated Gas Usage: 1014 - 1109
An assertion violation was triggered.
It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).
--------------------
In file: /bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol:97

Tier[] public tiers

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [ATTACKER], function: tiers(uint256), txdata: 0x039af9eb, value: 0x0

==== Exception State ====
SWC ID: 110
Severity: Low
Contract: Admin
Function name: setTierData(uint256,uint256,uint256)
PC address: 3939
Estimated Gas Usage: 2573 - 4136
An assertion violation was triggered.
It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values). This issue is reported for internal compiler generated code.
--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: addGlobalAdmin(address), txdata: 0x1ab8557b000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, decoded_data: ('0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef',), value: 0x0
Caller: [ATTACKER], function: setTierData(uint256,uint256,uint256), txdata: 0x8acf94df, value: 0x0

==== Exception State ====
SWC ID: 110
Severity: Medium
Contract: BigIoAdSpace
Function name: allMinedTokens(uint256)
PC address: 8424
Estimated Gas Usage: 1388 - 1483
An assertion violation was triggered.
It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).
--------------------
In file: /bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol:251

Token[] public allMinedTokens

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: allMinedTokens(uint256), txdata: 0xa1841223, value: 0x0


