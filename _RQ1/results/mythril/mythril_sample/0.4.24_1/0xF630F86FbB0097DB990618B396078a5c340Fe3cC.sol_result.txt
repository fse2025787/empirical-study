==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: BasicAuth
Function name: SetAuth(address)
PC address: 229
Estimated Gas Usage: 1108 - 1533
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: /bdata2/sc/dataset/mainnet/0xF630F86FbB0097DB990618B396078a5c340Fe3cC.sol:104

CanHandleAuth(tx.origin) || CanHandleAuth(msg.sender)

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: SetAuth(address), txdata: 0xbf7abee6, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: BasicAuth
Function name: SetAuth(address)
PC address: 246
Estimated Gas Usage: 1128 - 1553
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: /bdata2/sc/dataset/mainnet/0xF630F86FbB0097DB990618B396078a5c340Fe3cC.sol:104

require(CanHandleAuth(tx.origin) || CanHandleAuth(msg.sender))

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: SetAuth(address), txdata: 0xbf7abee6, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: BasicAuth
Function name: ClearAuth(address)
PC address: 356
Estimated Gas Usage: 1130 - 1555
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: /bdata2/sc/dataset/mainnet/0xF630F86FbB0097DB990618B396078a5c340Fe3cC.sol:110

CanHandleAuth(tx.origin) || CanHandleAuth(msg.sender)

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: ClearAuth(address), txdata: 0xcc9b714c, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: BasicAuth
Function name: ClearAuth(address)
PC address: 373
Estimated Gas Usage: 1150 - 1575
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: /bdata2/sc/dataset/mainnet/0xF630F86FbB0097DB990618B396078a5c340Fe3cC.sol:110

require(CanHandleAuth(tx.origin) || CanHandleAuth(msg.sender))

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: ClearAuth(address), txdata: 0xcc9b714c, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: Child
Function name: kill()
PC address: 376
Estimated Gas Usage: 4264 - 39725
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /bdata2/sc/dataset/mainnet/0xF630F86FbB0097DB990618B396078a5c340Fe3cC.sol:1067

g_Main.ClearAuth(this)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: efefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, decoded_data: , value: 0x0
Caller: [CREATOR], function: kill(), txdata: 0x41c0e1b5, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Child
Function name: kill()
PC address: 402
Estimated Gas Usage: 4264 - 39725
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /bdata2/sc/dataset/mainnet/0xF630F86FbB0097DB990618B396078a5c340Fe3cC.sol:1068

creator

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: efefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, decoded_data: , value: 0x0
Caller: [CREATOR], function: kill(), txdata: 0x41c0e1b5, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: BasicAuth
Function name: SetAuth(address)
PC address: 547
Estimated Gas Usage: 1069 - 1494
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: /bdata2/sc/dataset/mainnet/0xF630F86FbB0097DB990618B396078a5c340Fe3cC.sol:99

from == creator || from == master

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [ATTACKER], function: SetAuth(address), txdata: 0xbf7abee6, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: Production
Function name: constructor
PC address: 728
Estimated Gas Usage: 23756 - 159235
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. theyâ€™re part of your own codebase).
--------------------
In file: /bdata2/sc/dataset/mainnet/0xF630F86FbB0097DB990618B396078a5c340Fe3cC.sol:1120

g_Boilers.SetAuth(this)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 04040404040404040404040404, decoded_data: , value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: MainBonus
Function name: AddNewCard(uint32,uint32,uint8,uint16,uint16,uint16,uint16,uint32[])
PC address: 2235
Estimated Gas Usage: 2322 - 3077
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: /bdata2/sc/dataset/mainnet/0xF630F86FbB0097DB990618B396078a5c340Fe3cC.sol:81

require(msg.sender == creator || msg.sender == master)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [ATTACKER], function: AddNewCard(uint32,uint32,uint8,uint16,uint16,uint16,uint16,uint32[]), txdata: 0x60a4d1a5, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: MainBonus
Function name: SetAuth(address)
PC address: 3236
Estimated Gas Usage: 1306 - 1731
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: /bdata2/sc/dataset/mainnet/0xF630F86FbB0097DB990618B396078a5c340Fe3cC.sol:104

CanHandleAuth(tx.origin) || CanHandleAuth(msg.sender)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: SetAuth(address), txdata: 0xbf7abee6, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: MainBonus
Function name: SetAuth(address)
PC address: 3253
Estimated Gas Usage: 1326 - 1751
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: /bdata2/sc/dataset/mainnet/0xF630F86FbB0097DB990618B396078a5c340Fe3cC.sol:104

require(CanHandleAuth(tx.origin) || CanHandleAuth(msg.sender))

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: SetAuth(address), txdata: 0xbf7abee6, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: MainBonus
Function name: ClearAuth(address)
PC address: 3380
Estimated Gas Usage: 3984 - 5399
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: /bdata2/sc/dataset/mainnet/0xF630F86FbB0097DB990618B396078a5c340Fe3cC.sol:110

require(CanHandleAuth(tx.origin) || CanHandleAuth(msg.sender))

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [ATTACKER], function: ClearAuth(address), txdata: 0xcc9b714c, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: MainBag
Function name: GainChip(address,uint32,bool)
PC address: 4032
Estimated Gas Usage: 1301 - 1916
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: /bdata2/sc/dataset/mainnet/0xF630F86FbB0097DB990618B396078a5c340Fe3cC.sol:87

require(acc == tx.origin)

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: SetAuth(address), txdata: 0xbf7abee6000000000000000000000000affeaffeaffeaffeaffeaffeaffeaffeaffeaffe, decoded_data: ('0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe',), value: 0x0
Caller: [CREATOR], function: GainChip(address,uint32,bool), txdata: 0x2e799a77, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: MainBonus
Function name: SetAuth(address)
PC address: 4863
Estimated Gas Usage: 1267 - 1692
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: /bdata2/sc/dataset/mainnet/0xF630F86FbB0097DB990618B396078a5c340Fe3cC.sol:99

from == creator || from == master

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: SetAuth(address), txdata: 0xbf7abee6, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: MainBag
Function name: AddNewCard(uint32,uint32,uint8,uint16,uint16,uint16,uint16,uint32[])
PC address: 5533
Estimated Gas Usage: 1488 - 1913
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: /bdata2/sc/dataset/mainnet/0xF630F86FbB0097DB990618B396078a5c340Fe3cC.sol:81

msg.sender == creator || msg.sender == master

--------------------
Initial State:

Account: [CREATOR], balance: 0x4, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [SOMEGUY], function: AddNewCard(uint32,uint32,uint8,uint16,uint16,uint16,uint16,uint32[]), txdata: 0x60a4d1a5, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: MainBag
Function name: AddNewCard(uint32,uint32,uint8,uint16,uint16,uint16,uint16,uint32[])
PC address: 5622
Estimated Gas Usage: 1508 - 1933
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: /bdata2/sc/dataset/mainnet/0xF630F86FbB0097DB990618B396078a5c340Fe3cC.sol:81

require(msg.sender == creator || msg.sender == master)

--------------------
Initial State:

Account: [CREATOR], balance: 0x8, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: AddNewCard(uint32,uint32,uint8,uint16,uint16,uint16,uint16,uint32[]), txdata: 0x60a4d1a5, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: MainBag
Function name: CostStuff(address,uint32,uint256)
PC address: 8597
Estimated Gas Usage: 1537 - 2152
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: /bdata2/sc/dataset/mainnet/0xF630F86FbB0097DB990618B396078a5c340Fe3cC.sol:87

require(acc == tx.origin)

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: SetAuth(address), txdata: 0xbf7abee6000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, decoded_data: ('0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef',), value: 0x0
Caller: [ATTACKER], function: CostStuff(address,uint32,uint256), txdata: 0x848dd14e, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: MainBag
Function name: CostChip(address,uint32)
PC address: 9801
Estimated Gas Usage: 1598 - 2213
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: /bdata2/sc/dataset/mainnet/0xF630F86FbB0097DB990618B396078a5c340Fe3cC.sol:87

require(acc == tx.origin)

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: SetAuth(address), txdata: 0xbf7abee6000000000000000000000000aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa, decoded_data: ('0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa',), value: 0x0
Caller: [SOMEGUY], function: CostChip(address,uint32), txdata: 0xbb2ebf83, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: MainBag
Function name: SetAuth(address)
PC address: 10065
Estimated Gas Usage: 1526 - 1951
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: /bdata2/sc/dataset/mainnet/0xF630F86FbB0097DB990618B396078a5c340Fe3cC.sol:104

CanHandleAuth(tx.origin) || CanHandleAuth(msg.sender)

--------------------
Initial State:

Account: [CREATOR], balance: 0x8, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: SetAuth(address), txdata: 0xbf7abee6, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: MainBag
Function name: SetAuth(address)
PC address: 10082
Estimated Gas Usage: 1546 - 1971
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: /bdata2/sc/dataset/mainnet/0xF630F86FbB0097DB990618B396078a5c340Fe3cC.sol:104

require(CanHandleAuth(tx.origin) || CanHandleAuth(msg.sender))

--------------------
Initial State:

Account: [CREATOR], balance: 0x80, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: SetAuth(address), txdata: 0xbf7abee6, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: MainBag
Function name: ClearAuth(address)
PC address: 10192
Estimated Gas Usage: 1548 - 1973
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: /bdata2/sc/dataset/mainnet/0xF630F86FbB0097DB990618B396078a5c340Fe3cC.sol:110

CanHandleAuth(tx.origin) || CanHandleAuth(msg.sender)

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: ClearAuth(address), txdata: 0xcc9b714c, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: MainBag
Function name: ClearAuth(address)
PC address: 10209
Estimated Gas Usage: 1568 - 1993
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: /bdata2/sc/dataset/mainnet/0xF630F86FbB0097DB990618B396078a5c340Fe3cC.sol:110

require(CanHandleAuth(tx.origin) || CanHandleAuth(msg.sender))

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: ClearAuth(address), txdata: 0xcc9b714c, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: MainBag
Function name: AddNewChip(uint32,uint8,uint8,uint8)
PC address: 10383
Estimated Gas Usage: 1612 - 2037
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: /bdata2/sc/dataset/mainnet/0xF630F86FbB0097DB990618B396078a5c340Fe3cC.sol:81

msg.sender == creator || msg.sender == master

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: SetAuth(address), txdata: 0xbf7abee6, value: 0x0
Caller: [ATTACKER], function: AddNewChip(uint32,uint8,uint8,uint8), txdata: 0xdc2816b7, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: MainBag
Function name: AddNewChip(uint32,uint8,uint8,uint8)
PC address: 10472
Estimated Gas Usage: 1632 - 2057
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: /bdata2/sc/dataset/mainnet/0xF630F86FbB0097DB990618B396078a5c340Fe3cC.sol:81

require(msg.sender == creator || msg.sender == master)

--------------------
Initial State:

Account: [CREATOR], balance: 0x4, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: ClearAuth(address), txdata: 0xcc9b714c, value: 0x0
Caller: [CREATOR], function: AddNewChip(uint32,uint8,uint8,uint8), txdata: 0xdc2816b7, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: Main
Function name: ClearAuth(address)
PC address: 12049
Estimated Gas Usage: 4358 - 5773
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: /bdata2/sc/dataset/mainnet/0xF630F86FbB0097DB990618B396078a5c340Fe3cC.sol:110

require(CanHandleAuth(tx.origin) || CanHandleAuth(msg.sender))

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000080, decoded_data: , value: 0x0
Caller: [SOMEGUY], function: ClearAuth(address), txdata: 0xcc9b714c, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: MainBag
Function name: SetAuth(address)
PC address: 12127
Estimated Gas Usage: 1487 - 1912
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: /bdata2/sc/dataset/mainnet/0xF630F86FbB0097DB990618B396078a5c340Fe3cC.sol:99

from == creator || from == master

--------------------
Initial State:

Account: [CREATOR], balance: 0x8, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [ATTACKER], function: SetAuth(address), txdata: 0xbf7abee6, value: 0x0


