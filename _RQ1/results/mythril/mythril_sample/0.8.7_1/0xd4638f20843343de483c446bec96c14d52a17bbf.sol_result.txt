==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: EOTW
Function name: mint(uint256)
PC address: 5588
Estimated Gas Usage: 54748 - 235270
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /bdata2/sc/dataset/mainnet/0xd4638f20843343de483c446bec96c14d52a17bbf.sol:345

_status = _NOT_ENTERED

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x400, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [ATTACKER], function: mint(uint256), txdata: 0xa0712d680000000000000000000000000000000000000000000000000000000000000001, decoded_data: (1,), value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: EOTW
Function name: mint(uint256)
PC address: 9984
Estimated Gas Usage: 54748 - 235270
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /bdata2/sc/dataset/mainnet/0xd4638f20843343de483c446bec96c14d52a17bbf.sol:1667

IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x20, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [ATTACKER], function: mint(uint256), txdata: 0xa0712d680000000000000000000000000000000000000000000000000000000000000001, decoded_data: (1,), value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: EOTW
Function name: mint(uint256)
PC address: 12098
Estimated Gas Usage: 54748 - 235270
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /bdata2/sc/dataset/mainnet/0xd4638f20843343de483c446bec96c14d52a17bbf.sol:1548

currentIndex = updatedIndex

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x400, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [ATTACKER], function: mint(uint256), txdata: 0xa0712d680000000000000000000000000000000000000000000000000000000000000001, decoded_data: (1,), value: 0x0


