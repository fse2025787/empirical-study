==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: CowardGambit
Function name: endRound()
PC address: 6561
Estimated Gas Usage: 43505 - 199812
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /bdata2/sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol:1798

RandomGenerator(randomNumberAddress).requestRandomNumber()

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [SOMEGUY], function: initialize(address,address), txdata: 0x485cc955000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef0000000000000000000000000101010101010401010101010101010102010201, decoded_data: ('0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef', '0x0101010101010401010101010101010102010201'), value: 0x0
Caller: [SOMEGUY], function: endRound(), txdata: 0x749aa2d9, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: CowardGambit
Function name: endRound()
PC address: 9973
Estimated Gas Usage: 43505 - 199812
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /bdata2/sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol:1846

roundStarted = false

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [SOMEGUY], function: initialize(address,address), txdata: 0x485cc955000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef0000000000000000000000000101010101010101400101010101010101010101, decoded_data: ('0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef', '0x0101010101010101400101010101010101010101'), value: 0x0
Caller: [SOMEGUY], function: endRound(), txdata: 0x749aa2d9, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: CowardGambit
Function name: endRound()
PC address: 9987
Estimated Gas Usage: 43505 - 199812
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /bdata2/sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol:1846

roundStarted = false

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [SOMEGUY], function: initialize(address,address), txdata: 0x485cc955000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef0000000000000000000000000101010101010101400101010101010101010101, decoded_data: ('0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef', '0x0101010101010101400101010101010101010101'), value: 0x0
Caller: [SOMEGUY], function: endRound(), txdata: 0x749aa2d9, value: 0x0


