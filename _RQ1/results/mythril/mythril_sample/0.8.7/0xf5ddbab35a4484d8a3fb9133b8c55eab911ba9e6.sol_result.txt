==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: GoldenApe
Function name: mintToken(uint256)
PC address: 7874
Estimated Gas Usage: 52623 - 213665
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /bdata2/sc/dataset/mainnet/0xf5ddbab35a4484d8a3fb9133b8c55eab911ba9e6.sol:1389

whitelistMintRemains

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [ATTACKER], function: mintToken(uint256), txdata: 0xc634d0320000000000000000000000000000000000000000000000000000000000000001, decoded_data: (1,), value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: GoldenApe
Function name: mintToken(uint256)
PC address: 7889
Estimated Gas Usage: 52623 - 213665
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /bdata2/sc/dataset/mainnet/0xf5ddbab35a4484d8a3fb9133b8c55eab911ba9e6.sol:1389

whitelistMintRemains = whitelistMintRemains - numberOfTokens

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [ATTACKER], function: mintToken(uint256), txdata: 0xc634d0320000000000000000000000000000000000000000000000000000000000000001, decoded_data: (1,), value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: GoldenApe
Function name: reserveTokens(address,uint256)
PC address: 11856
Estimated Gas Usage: 42566 - 183088
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /bdata2/sc/dataset/mainnet/0xf5ddbab35a4484d8a3fb9133b8c55eab911ba9e6.sol:1151

IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: reserveTokens(address,uint256), txdata: 0x78cf19e9000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef0000000000000000000000000000000000000000000000000000000000000001, decoded_data: ('0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef', 1), value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: GoldenApe
Function name: mintToken(uint256)
PC address: 11856
Estimated Gas Usage: 52623 - 213665
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /bdata2/sc/dataset/mainnet/0xf5ddbab35a4484d8a3fb9133b8c55eab911ba9e6.sol:1151

IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [ATTACKER], function: mintToken(uint256), txdata: 0xc634d0320000000000000000000000000000000000000000000000000000000000000001, decoded_data: (1,), value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: GoldenApe
Function name: reserveTokens(address,uint256)
PC address: 13716
Estimated Gas Usage: 42566 - 183088
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /bdata2/sc/dataset/mainnet/0xf5ddbab35a4484d8a3fb9133b8c55eab911ba9e6.sol:1032

currentIndex = updatedIndex

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: reserveTokens(address,uint256), txdata: 0x78cf19e9000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef0000000000000000000000000000000000000000000000000000000000000001, decoded_data: ('0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef', 1), value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: GoldenApe
Function name: mintToken(uint256)
PC address: 13716
Estimated Gas Usage: 52623 - 213665
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /bdata2/sc/dataset/mainnet/0xf5ddbab35a4484d8a3fb9133b8c55eab911ba9e6.sol:1032

currentIndex = updatedIndex

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [ATTACKER], function: mintToken(uint256), txdata: 0xc634d0320000000000000000000000000000000000000000000000000000000000000001, decoded_data: (1,), value: 0x0


