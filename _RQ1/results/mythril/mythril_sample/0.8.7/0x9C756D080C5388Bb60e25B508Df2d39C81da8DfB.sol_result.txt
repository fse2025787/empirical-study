==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Ded_Teddiez_Remix
Function name: mint(address,uint256)
PC address: 4521
Estimated Gas Usage: 95810 - 382565
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /bdata2/sc/dataset/mainnet/0x9C756D080C5388Bb60e25B508Df2d39C81da8DfB.sol:319

_balances[owner]

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [SOMEGUY], function: mint(address,uint256), txdata: 0x40c10f19000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef0000000000000000000000000000000000000000000000000000000000000002, decoded_data: ('0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef', 2), value: 0x8e1bc9bf040000

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Ded_Teddiez_Remix
Function name: mint(address,uint256)
PC address: 6252
Estimated Gas Usage: 95810 - 382565
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /bdata2/sc/dataset/mainnet/0x9C756D080C5388Bb60e25B508Df2d39C81da8DfB.sol:477

_owners[tokenId]

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [SOMEGUY], function: mint(address,uint256), txdata: 0x40c10f19000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef0000000000000000000000000000000000000000000000000000000000000002, decoded_data: ('0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef', 2), value: 0x8e1bc9bf040000

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: Ded_Teddiez_Remix
Function name: mint(address,uint256)
PC address: 9133
Estimated Gas Usage: 95810 - 382565
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /bdata2/sc/dataset/mainnet/0x9C756D080C5388Bb60e25B508Df2d39C81da8DfB.sol:650

IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x8e1bc9ef060000, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [ATTACKER], function: mint(address,uint256), txdata: 0x40c10f19000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef0000000000000000000000000000000000000000000000000000000000000002, decoded_data: ('0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef', 2), value: 0x8e1bc9bf040000

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Ded_Teddiez_Remix
Function name: mint(address,uint256)
PC address: 9412
Estimated Gas Usage: 95810 - 382565
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /bdata2/sc/dataset/mainnet/0x9C756D080C5388Bb60e25B508Df2d39C81da8DfB.sol:840

_allTokens.length

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [SOMEGUY], function: mint(address,uint256), txdata: 0x40c10f19000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef0000000000000000000000000000000000000000000000000000000000000002, decoded_data: ('0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef', 2), value: 0x8e1bc9bf040000

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Ded_Teddiez_Remix
Function name: mint(address,uint256)
PC address: 9436
Estimated Gas Usage: 95810 - 382565
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /bdata2/sc/dataset/mainnet/0x9C756D080C5388Bb60e25B508Df2d39C81da8DfB.sol:840

_allTokensIndex[tokenId] = _allTokens.length

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [SOMEGUY], function: mint(address,uint256), txdata: 0x40c10f19000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef0000000000000000000000000000000000000000000000000000000000000002, decoded_data: ('0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef', 2), value: 0x8e1bc9bf040000

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Ded_Teddiez_Remix
Function name: mint(address,uint256)
PC address: 9446
Estimated Gas Usage: 95810 - 382565
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /bdata2/sc/dataset/mainnet/0x9C756D080C5388Bb60e25B508Df2d39C81da8DfB.sol:841

_allTokens.push(tokenId)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [SOMEGUY], function: mint(address,uint256), txdata: 0x40c10f19000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef0000000000000000000000000000000000000000000000000000000000000002, decoded_data: ('0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef', 2), value: 0x8e1bc9bf040000

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Ded_Teddiez_Remix
Function name: mint(address,uint256)
PC address: 9450
Estimated Gas Usage: 95810 - 382565
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /bdata2/sc/dataset/mainnet/0x9C756D080C5388Bb60e25B508Df2d39C81da8DfB.sol:841

_allTokens.push(tokenId)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [SOMEGUY], function: mint(address,uint256), txdata: 0x40c10f19000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef0000000000000000000000000000000000000000000000000000000000000002, decoded_data: ('0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef', 2), value: 0x8e1bc9bf040000

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Ded_Teddiez_Remix
Function name: mint(address,uint256)
PC address: 9478
Estimated Gas Usage: 95810 - 382565
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /bdata2/sc/dataset/mainnet/0x9C756D080C5388Bb60e25B508Df2d39C81da8DfB.sol:841

_allTokens.push(tokenId)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [SOMEGUY], function: mint(address,uint256), txdata: 0x40c10f19000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef0000000000000000000000000000000000000000000000000000000000000002, decoded_data: ('0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef', 2), value: 0x8e1bc9bf040000


