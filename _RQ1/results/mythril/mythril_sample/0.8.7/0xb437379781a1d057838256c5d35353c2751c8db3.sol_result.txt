==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: DoKwoblins
Function name: sumthinboutfunds()
PC address: 2767
Estimated Gas Usage: 2211 - 37105
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /bdata2/sc/dataset/mainnet/0xb437379781a1d057838256c5d35353c2751c8db3.sol:1275

payable(msg.sender).call{value: address(this).balance}("")

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x100, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: transferOwnership(address), txdata: 0xf2fde38b000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, decoded_data: ('0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef',), value: 0x0
Caller: [ATTACKER], function: sumthinboutfunds(), txdata: 0x33958a18, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: DoKwoblins
Function name: mintHonoraries(address,uint256)
PC address: 7228
Estimated Gas Usage: 27955 - 124615
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /bdata2/sc/dataset/mainnet/0xb437379781a1d057838256c5d35353c2751c8db3.sol:972

ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: mintHonoraries(address,uint256), txdata: 0x4be02c27000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef0000000000000000000000000000000000000000000000000000000000000001, decoded_data: ('0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef', 1), value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: DoKwoblins
Function name: mintHonoraries(address,uint256)
PC address: 8280
Estimated Gas Usage: 27955 - 124615
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /bdata2/sc/dataset/mainnet/0xb437379781a1d057838256c5d35353c2751c8db3.sol:748

_currentIndex

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: mintHonoraries(address,uint256), txdata: 0x4be02c27000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef0000000000000000000000000000000000000000000000000000000000000001, decoded_data: ('0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef', 1), value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: DoKwoblins
Function name: mintHonoraries(address,uint256)
PC address: 8408
Estimated Gas Usage: 27955 - 124615
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /bdata2/sc/dataset/mainnet/0xb437379781a1d057838256c5d35353c2751c8db3.sol:754

_currentIndex = updatedIndex

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: mintHonoraries(address,uint256), txdata: 0x4be02c27000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef0000000000000000000000000000000000000000000000000000000000000001, decoded_data: ('0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef', 1), value: 0x0


