==== Dependence on predictable environment variable ====
SWC ID: 116
Severity: Low
Contract: RacaVesting
Function name: release()
PC address: 836
Estimated Gas Usage: 7220 - 27645
A control flow decision is made based on The block.timestamp environment variable.
The block.timestamp environment variable is used to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don't use any of those environment variables as sources of randomness and be aware that use of these variables introduces a certain level of trust into miners.
--------------------
In file: /bdata2/sc/dataset/mainnet/0x372b581804a3492f9d28affae2b496a29d69b632.sol:923

if (currentTime < start.add(slicePeriod)) {
            return 0;
        } else if (currentTime >= start.add(duration)) {
            return amountTotal.sub(released);
        } else {
            uint256 timeFromStart = currentTime.sub(start);
            uint256 vestedSlicePeriods = timeFromStart.div(slicePeriod);
            uint256 vestedSeconds = vestedSlicePeriods.mul(slicePeriod);
            uint256 vestedAmount = amountTotal.mul(vestedSeconds).div(duration);
            vestedAmount = vestedAmount.sub(released);
            return vestedAmount;
        }

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: changeBeneficiary(address), txdata: 0xdc070657000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, decoded_data: ('0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef',), value: 0x0
Caller: [ATTACKER], function: release(), txdata: 0x86d1a69f, value: 0x0

==== Dependence on predictable environment variable ====
SWC ID: 116
Severity: Low
Contract: RacaVesting
Function name: release()
PC address: 934
Estimated Gas Usage: 7500 - 27925
A control flow decision is made based on The block.timestamp environment variable.
The block.timestamp environment variable is used to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don't use any of those environment variables as sources of randomness and be aware that use of these variables introduces a certain level of trust into miners.
--------------------
In file: /bdata2/sc/dataset/mainnet/0x372b581804a3492f9d28affae2b496a29d69b632.sol:925

if (currentTime >= start.add(duration)) {
            return amountTotal.sub(released);
        } else {
            uint256 timeFromStart = currentTime.sub(start);
            uint256 vestedSlicePeriods = timeFromStart.div(slicePeriod);
            uint256 vestedSeconds = vestedSlicePeriods.mul(slicePeriod);
            uint256 vestedAmount = amountTotal.mul(vestedSeconds).div(duration);
            vestedAmount = vestedAmount.sub(released);
            return vestedAmount;
        }

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: changeBeneficiary(address), txdata: 0xdc070657000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, decoded_data: ('0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef',), value: 0x0
Caller: [ATTACKER], function: release(), txdata: 0x86d1a69f, value: 0x0

==== Dependence on predictable environment variable ====
SWC ID: 116
Severity: Low
Contract: RacaVesting
Function name: release()
PC address: 2307
Estimated Gas Usage: 6914 - 27339
A control flow decision is made based on The block.timestamp environment variable.
The block.timestamp environment variable is used to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don't use any of those environment variables as sources of randomness and be aware that use of these variables introduces a certain level of trust into miners.
--------------------
In file: /bdata2/sc/dataset/mainnet/0x372b581804a3492f9d28affae2b496a29d69b632.sol:909

require(block.timestamp > start, "RacaVesting: not released period")

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: changeBeneficiary(address), txdata: 0xdc070657000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, decoded_data: ('0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef',), value: 0x0
Caller: [ATTACKER], function: release(), txdata: 0x86d1a69f, value: 0x0


