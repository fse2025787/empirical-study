==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: NFTAirdropper
Function name: sendAirdrops((address,uint256)[],address[])
PC address: 2147
Estimated Gas Usage: 5948 - 43189
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /bdata2/sc/dataset/mainnet/0x6aaf9bc8573afa73adf99bd57bbfabfe18d5dfa6.sol:270

IERC721(_airdrops[i].nft).transferFrom(msg.sender,  _recipients[i],  _airdrops[i].id)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: sendAirdrops((address,uint256)[],address[]), txdata: 0xab398e64000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000001000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef0000000000000000000000000002020080200040000410204000000004000000, decoded_data: ((('0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef', 44775885276266797326023669111868181790588928),), ('0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef',)), value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: NFTAirdropper
Function name: sendAirdrops((address,uint256)[],address[])
PC address: 2147
Estimated Gas Usage: 9365 - 82577
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. theyâ€™re part of your own codebase).
--------------------
In file: /bdata2/sc/dataset/mainnet/0x6aaf9bc8573afa73adf99bd57bbfabfe18d5dfa6.sol:270

IERC721(_airdrops[i].nft).transferFrom(msg.sender,  _recipients[i],  _airdrops[i].id)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: sendAirdrops((address,uint256)[],address[]), txdata: 0xab398e64000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000720000000000000000000000000000000000000000000000000000000000000002000000000000000000000000affeaffeaffe0000000000000000000000000000000000000000000000000000000000000002000000000000000000000000010800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, decoded_data: ((('0xaffeaffeaffe0000000000000000000000000000', 10384593717069655257060992658440456), ('0x0000000000000000000000000000000000000000', 0)), ('0x0108000000000000000000000000000000000000', '0x0000000000000000000000000000000000000000')), value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: NFTAirdropper
Function name: addAirdrops((address,uint256)[])
PC address: 2684
Estimated Gas Usage: 36312 - 210277
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /bdata2/sc/dataset/mainnet/0x6aaf9bc8573afa73adf99bd57bbfabfe18d5dfa6.sol:277

airdrops[_nextAirdropId] = _airdrops[i]

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: addAirdrops((address,uint256)[]), txdata: 0xf8c8285b00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000002000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, decoded_data: ((('0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef', 0), ('0x0000000000000000000000000000000000000000', 0)),), value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: NFTAirdropper
Function name: addAirdrops((address,uint256)[])
PC address: 2737
Estimated Gas Usage: 36312 - 210277
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /bdata2/sc/dataset/mainnet/0x6aaf9bc8573afa73adf99bd57bbfabfe18d5dfa6.sol:277

airdrops[_nextAirdropId] = _airdrops[i]

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: addAirdrops((address,uint256)[]), txdata: 0xf8c8285b00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000002000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, decoded_data: ((('0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef', 0), ('0x0000000000000000000000000000000000000000', 0)),), value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: NFTAirdropper
Function name: addAirdrops((address,uint256)[])
PC address: 2748
Estimated Gas Usage: 36312 - 210277
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /bdata2/sc/dataset/mainnet/0x6aaf9bc8573afa73adf99bd57bbfabfe18d5dfa6.sol:277

airdrops[_nextAirdropId] = _airdrops[i]

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: addAirdrops((address,uint256)[]), txdata: 0xf8c8285b00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000002000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, decoded_data: ((('0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef', 0), ('0x0000000000000000000000000000000000000000', 0)),), value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: NFTAirdropper
Function name: addAirdrops((address,uint256)[])
PC address: 2901
Estimated Gas Usage: 22048 - 119431
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /bdata2/sc/dataset/mainnet/0x6aaf9bc8573afa73adf99bd57bbfabfe18d5dfa6.sol:278

IERC721(_airdrops[i].nft).transferFrom(msg.sender,  address(this),  _airdrops[i].id)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: addAirdrops((address,uint256)[]), txdata: 0xf8c8285b00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000001000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef00000000000000000000000000000000000000000000000000000000d0000010, decoded_data: ((('0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef', 3489660944),),), value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: NFTAirdropper
Function name: addAirdrops((address,uint256)[])
PC address: 2901
Estimated Gas Usage: 36312 - 210277
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. theyâ€™re part of your own codebase).
--------------------
In file: /bdata2/sc/dataset/mainnet/0x6aaf9bc8573afa73adf99bd57bbfabfe18d5dfa6.sol:278

IERC721(_airdrops[i].nft).transferFrom(msg.sender,  address(this),  _airdrops[i].id)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: addAirdrops((address,uint256)[]), txdata: 0xf8c8285b000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, decoded_data: ((('0x0000000000000000000000000000000000000000', 128), ('0x0000000000000000000000000000000000000000', 0)),), value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: NFTAirdropper
Function name: addAirdrops((address,uint256)[])
PC address: 2901
Estimated Gas Usage: 36312 - 210277
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /bdata2/sc/dataset/mainnet/0x6aaf9bc8573afa73adf99bd57bbfabfe18d5dfa6.sol:278

IERC721(_airdrops[i].nft).transferFrom(msg.sender,  address(this),  _airdrops[i].id)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: addAirdrops((address,uint256)[]), txdata: 0xf8c8285b00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000002000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, decoded_data: ((('0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef', 0), ('0x0000000000000000000000000000000000000000', 0)),), value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: NFTAirdropper
Function name: addAirdrops((address,uint256)[])
PC address: 2962
Estimated Gas Usage: 22048 - 119431
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /bdata2/sc/dataset/mainnet/0x6aaf9bc8573afa73adf99bd57bbfabfe18d5dfa6.sol:281

nextAirdropId = _nextAirdropId

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: addAirdrops((address,uint256)[]), txdata: 0xf8c8285b00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000001000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef0000000000000000000000000000000000000000000000000000000000000000, decoded_data: ((('0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef', 0),),), value: 0x0


