==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: DreamBeats
Function name: getLpIdfromPrintTokenId(uint256)
PC address: 5649
Estimated Gas Usage: 1228 - 1604
The arithmetic operator can underflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: /bdata2/sc/dataset/mainnet/0xb974149018e7eefb219555453011c576b85a33f9.sol:1563

(printID >> BITSHIFT_AMOUNT) - 1

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: getLpIdfromPrintTokenId(uint256), txdata: 0x0759a5860000000000000000000000000000000000000000000000000000000000000002, decoded_data: (2,), value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: DreamBeats
Function name: getPrintTokenIdFromLpId(uint256)
PC address: 6740
Estimated Gas Usage: 1227 - 1603
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: /bdata2/sc/dataset/mainnet/0xb974149018e7eefb219555453011c576b85a33f9.sol:1553

lpID + 1

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: getPrintTokenIdFromLpId(uint256), txdata: 0x1b3e3e4dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, decoded_data: (115792089237316195423570985008687907853269984665640564039457584007913129639935,), value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: DreamBeats
Function name: withdraw()
PC address: 9027
Estimated Gas Usage: 12972 - 87866
Write to persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /bdata2/sc/dataset/mainnet/0xb974149018e7eefb219555453011c576b85a33f9.sol:740

_status = _NOT_ENTERED

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: withdraw(), txdata: 0x3ccfd60b, value: 0x0


