==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: ENS
Function name: setEns(string,address)
PC address: 241
Estimated Gas Usage: 18861 - 83847
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: /bdata2/sc/dataset/mainnet/0xa40bec574c1950461eef7f351a7ad7b2ce50a5f7.sol:13

function setEns(string newEns,address addr) onlyOwner public{
          ensmap[newEns] = addr;
          addressmap[addr] = newEns;
     }

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: setEns(string,address), txdata: 0xbb5d69a0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdc, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: Low
Contract: ENS
Function name: setEns(string,address)
PC address: 1750
Estimated Gas Usage: 28975 - 133961
The arithmetic operator can underflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation.  This issue is reported for internal compiler generated code.
--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: setEns(string,address), txdata: 0xbb5d69a07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000000000000000000000000000000000000000000000000000000000000085, value: 0x0


