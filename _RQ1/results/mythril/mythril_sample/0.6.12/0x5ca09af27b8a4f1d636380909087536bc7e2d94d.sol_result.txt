==== Dependence on predictable environment variable ====
SWC ID: 120
Severity: Low
Contract: Alitas
Function name: getPriorVotes(address,uint256)
PC address: 3700
Estimated Gas Usage: 309 - 404
A control flow decision is made based on The block.number environment variable.
The block.number environment variable is used to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don't use any of those environment variables as sources of randomness and be aware that use of these variables introduces a certain level of trust into miners.
--------------------
In file: /bdata2/sc/dataset/mainnet/0x5ca09af27b8a4f1d636380909087536bc7e2d94d.sol:236

require(blockNumber < block.number, "Alt::getPriorVotes: not yet determined")

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: getPriorVotes(address,uint256), txdata: 0x782d6fe100000000000000000000000000000000000000000001000200000020800040010000000000000000000000000000000000000000000000000000000000000000, decoded_data: ('0x0000000000000000000100020000002080004001', 0), value: 0x0

==== Dependence on predictable environment variable ====
SWC ID: 116
Severity: Low
Contract: Alitas
Function name: delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)
PC address: 5943
Estimated Gas Usage: 11161 - 69404
A control flow decision is made based on The block.timestamp environment variable.
The block.timestamp environment variable is used to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don't use any of those environment variables as sources of randomness and be aware that use of these variables introduces a certain level of trust into miners.
--------------------
In file: /bdata2/sc/dataset/mainnet/0x5ca09af27b8a4f1d636380909087536bc7e2d94d.sol:214

require(now <= expiry, "Alt::delegateBySig: signature expired")

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [SOMEGUY], function: delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32), txdata: 0xc3cda520000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000120100000010000002000000140000410100000000820800000200000004002800000004000000100000000010000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== Dependence on predictable environment variable ====
SWC ID: 116
Severity: Low
Contract: Alitas
Function name: permit(address,address,uint256,uint256,uint8,bytes32,bytes32)
PC address: 7116
Estimated Gas Usage: 11340 - 69773
A control flow decision is made based on The block.timestamp environment variable.
The block.timestamp environment variable is used to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don't use any of those environment variables as sources of randomness and be aware that use of these variables introduces a certain level of trust into miners.
--------------------
In file: /bdata2/sc/dataset/mainnet/0x5ca09af27b8a4f1d636380909087536bc7e2d94d.sol:139

require(now <= deadline, "Alt::permit: signature expired")

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [ATTACKER], function: permit(address,address,uint256,uint256,uint8,bytes32,bytes32), txdata: 0xd505accf000000000000000000000000404040404040404040404040404040404040404000000000000000000000000000000000000000fe000000000000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, decoded_data: ('0x4040404040404040404040404040404040404040', '0x00000000000000fe000000000000000000000000', 115792089237316195423570985008687907853269984665640564039457584007913129639935, 0, 0, "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"), value: 0x0

==== Dependence on predictable environment variable ====
SWC ID: 120
Severity: Low
Contract: Alitas
Function name: delegate(address)
PC address: 11532
Estimated Gas Usage: 11565 - 39356
A control flow decision is made based on The block.number environment variable.
The block.number environment variable is used to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don't use any of those environment variables as sources of randomness and be aware that use of these variables introduces a certain level of trust into miners.
--------------------
In file: /bdata2/sc/dataset/mainnet/0x5ca09af27b8a4f1d636380909087536bc7e2d94d.sol:322

require(n < 2**32, errorMessage)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: delegate(address), txdata: 0x5c19a95c0000000000000000000000000000000000000000000000000000000000100000, decoded_data: ('0x0000000000000000000000000000000000100000',), value: 0x0


