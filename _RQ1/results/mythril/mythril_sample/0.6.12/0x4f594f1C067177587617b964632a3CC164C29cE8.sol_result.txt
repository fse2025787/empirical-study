==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: CurveSwapStrategy
Function name: estimateSwapAmount(address,address,uint256)
PC address: 2530
Estimated Gas Usage: 15585 - 125698
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /bdata2/sc/dataset/mainnet/0x4f594f1C067177587617b964632a3CC164C29cE8.sol:780

_status = _NOT_ENTERED

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: initialize(address,address), txdata: 0x485cc9550000010202010101028004010102020101010280010101022040012002040101000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: estimateSwapAmount(address,address,uint256), txdata: 0x5f2a2518100400000000000000000000000000000000000001010000000000004000000048484848484848484848484801010101010101010101010280012002010101014848484848484848484848484848484848484848484848484848484848484848, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: CurveSwapStrategy
Function name: estimateSwapAmount(address,address,uint256)
PC address: 5023
Estimated Gas Usage: 15585 - 125698
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /bdata2/sc/dataset/mainnet/0x4f594f1C067177587617b964632a3CC164C29cE8.sol:1267

ICurveRegistryAddressProvider(curveRegistryAddressProvider).get_address(CURVE_REGISTRY_EXCHANGE_ID)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [ATTACKER], function: initialize(address,address), txdata: 0x485cc9550080040202010001020001200000000000000100000100000100000001000000000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [SOMEGUY], function: estimateSwapAmount(address,address,uint256), txdata: 0x5f2a2518801001101010011001100810100110010102101001800101010801010100808048484848484848484848484801010101010101010120010120200108012001204848484848484848484848484848484848484848484848484848484848484848, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: CurveSwapStrategy
Function name: estimateSwapAmount(address,address,uint256)
PC address: 5224
Estimated Gas Usage: 15585 - 125698
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. theyâ€™re part of your own codebase).
--------------------
In file: /bdata2/sc/dataset/mainnet/0x4f594f1C067177587617b964632a3CC164C29cE8.sol:1268

ICurveRegistryExchange(registry).get_best_rate(_from, _to, _amount)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [ATTACKER], function: initialize(address,address), txdata: 0x485cc955724b6a44d576143e00c60911deadbeefdeadbeefdeadbeefdeadbeefdeadbeef0000000000000000000000000240084002802101408040020408800101202080, value: 0x0
Caller: [ATTACKER], function: estimateSwapAmount(address,address,uint256), txdata: 0x5f2a25184000000000000004014001010410100280020400010204208000800410020402484848484848484848484848deadbeefdeadbeefdeadbeefdeadbe214a8c90644848484848484848484848484848484848484848484848484848484848484848, value: 0x0


