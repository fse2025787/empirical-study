==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: EnglishAuction
Function name: bid()
PC address: 1235
Estimated Gas Usage: 201 - 296
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: /bdata2/sc/dataset/mainnet/0xa36f93429aa6eebf2ae3946471b764d0dba21e45.sol:98

require(msg.sender == tx.origin, "no contracts")

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [SOMEGUY], function: bid(), txdata: 0x1998aeef, value: 0x0

==== Dependence on predictable environment variable ====
SWC ID: 116
Severity: Low
Contract: EnglishAuction
Function name: bid()
PC address: 1355
Estimated Gas Usage: 1026 - 1121
A control flow decision is made based on The block.timestamp environment variable.
The block.timestamp environment variable is used to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don't use any of those environment variables as sources of randomness and be aware that use of these variables introduces a certain level of trust into miners.
--------------------
In file: /bdata2/sc/dataset/mainnet/0xa36f93429aa6eebf2ae3946471b764d0dba21e45.sol:99

require(block.timestamp >= startTime, "Auction not started")

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: bid(), txdata: 0x1998aeef, value: 0x0

==== Dependence on predictable environment variable ====
SWC ID: 116
Severity: Low
Contract: EnglishAuction
Function name: bid()
PC address: 1474
Estimated Gas Usage: 1848 - 1943
A control flow decision is made based on The block.timestamp environment variable.
The block.timestamp environment variable is used to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don't use any of those environment variables as sources of randomness and be aware that use of these variables introduces a certain level of trust into miners.
--------------------
In file: /bdata2/sc/dataset/mainnet/0xa36f93429aa6eebf2ae3946471b764d0dba21e45.sol:100

require(block.timestamp < endTime, "Auction ended")

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: bid(), txdata: 0x1998aeef, value: 0x0

==== Dependence on predictable environment variable ====
SWC ID: 116
Severity: Low
Contract: EnglishAuction
Function name: bid()
PC address: 1950
Estimated Gas Usage: 4775 - 5578
A control flow decision is made based on The block.timestamp environment variable.
The block.timestamp environment variable is used to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don't use any of those environment variables as sources of randomness and be aware that use of these variables introduces a certain level of trust into miners.
--------------------
In file: /bdata2/sc/dataset/mainnet/0xa36f93429aa6eebf2ae3946471b764d0dba21e45.sol:108

if (endTime - now < 15 minutes) {
            endTime = now + 15 minutes;
        }

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [SOMEGUY], function: bid(), txdata: 0x1998aeef, value: 0x30d98d59a960000

==== Dependence on predictable environment variable ====
SWC ID: 116
Severity: Low
Contract: EnglishAuction
Function name: pull()
PC address: 2473
Estimated Gas Usage: 2778 - 3533
A control flow decision is made based on The block.timestamp environment variable.
The block.timestamp environment variable is used to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don't use any of those environment variables as sources of randomness and be aware that use of these variables introduces a certain level of trust into miners.
--------------------
In file: /bdata2/sc/dataset/mainnet/0xa36f93429aa6eebf2ae3946471b764d0dba21e45.sol:134

require(!live(), "Auction live")

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: pull(), txdata: 0x329eb839, value: 0x0

==== Dependence on predictable environment variable ====
SWC ID: 116
Severity: Low
Contract: EnglishAuction
Function name: end()
PC address: 3488
Estimated Gas Usage: 2758 - 3513
A control flow decision is made based on The block.timestamp environment variable.
The block.timestamp environment variable is used to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don't use any of those environment variables as sources of randomness and be aware that use of these variables introduces a certain level of trust into miners.
--------------------
In file: /bdata2/sc/dataset/mainnet/0xa36f93429aa6eebf2ae3946471b764d0dba21e45.sol:120

require(!live(), "Auction live")

--------------------
Initial State:

Account: [CREATOR], balance: 0x3400015c0000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: bid(), txdata: 0x1998aeef, value: 0x30d98d59a960000
Caller: [SOMEGUY], function: end(), txdata: 0xefbe1c1c, value: 0x0


