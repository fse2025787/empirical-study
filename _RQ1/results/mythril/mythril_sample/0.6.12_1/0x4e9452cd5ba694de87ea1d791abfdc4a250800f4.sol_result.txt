==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: OSMedianizer
Function name: read()
PC address: 1710
Estimated Gas Usage: 8712 - 114282
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: /bdata2/sc/dataset/mainnet/0x4e9452cd5ba694de87ea1d791abfdc4a250800f4.sol:54

OSM.peek()

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: setAuthorized(address), txdata: 0x14fc2812000000000000000000000000affeaffeaffeaffeaffeaffeaffeaffeaffeaffe, decoded_data: ('0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe',), value: 0x0
Caller: [CREATOR], function: read(), txdata: 0x57de26a4, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: OSMedianizer
Function name: read()
PC address: 1916
Estimated Gas Usage: 6200 - 76880
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: /bdata2/sc/dataset/mainnet/0x4e9452cd5ba694de87ea1d791abfdc4a250800f4.sol:57

MEDIANIZER.latestAnswer()

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: setAuthorized(address), txdata: 0x14fc2812000000000000000000000000affeaffeaffeaffeaffeaffeaffeaffeaffeaffe, decoded_data: ('0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe',), value: 0x0
Caller: [CREATOR], function: read(), txdata: 0x57de26a4, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: OSMedianizer
Function name: read()
PC address: 1973
Estimated Gas Usage: 3714 - 39502
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: /bdata2/sc/dataset/mainnet/0x4e9452cd5ba694de87ea1d791abfdc4a250800f4.sol:57

uint(MEDIANIZER.latestAnswer()) * 1e10

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: revokeAuthorized(address), txdata: 0x3f48be2d0000000000000000000000000000000000000000000000000100000000000000, decoded_data: ('0x0000000000000000000000000100000000000000',), value: 0x0
Caller: [SOMEGUY], function: read(), txdata: 0x57de26a4, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: OSMedianizer
Function name: foresight()
PC address: 2790
Estimated Gas Usage: 8733 - 114303
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: /bdata2/sc/dataset/mainnet/0x4e9452cd5ba694de87ea1d791abfdc4a250800f4.sol:62

OSM.peep()

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: setAuthorized(address), txdata: 0x14fc2812000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, decoded_data: ('0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef',), value: 0x0
Caller: [ATTACKER], function: foresight(), txdata: 0xcfad9c8c, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: OSMedianizer
Function name: foresight()
PC address: 2996
Estimated Gas Usage: 6221 - 76901
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: /bdata2/sc/dataset/mainnet/0x4e9452cd5ba694de87ea1d791abfdc4a250800f4.sol:65

MEDIANIZER.latestAnswer()

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: setAuthorized(address), txdata: 0x14fc2812000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, decoded_data: ('0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef',), value: 0x0
Caller: [ATTACKER], function: foresight(), txdata: 0xcfad9c8c, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: OSMedianizer
Function name: foresight()
PC address: 3053
Estimated Gas Usage: 3735 - 39523
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: /bdata2/sc/dataset/mainnet/0x4e9452cd5ba694de87ea1d791abfdc4a250800f4.sol:65

uint(MEDIANIZER.latestAnswer()) * 1e10

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: revokeAuthorized(address), txdata: 0x3f48be2d0000000000000000000000000000000000000000000000000000000008400008, decoded_data: ('0x0000000000000000000000000000000008400008',), value: 0x0
Caller: [SOMEGUY], function: foresight(), txdata: 0xcfad9c8c, value: 0x0


