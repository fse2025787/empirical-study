Compilation warnings/errors on /bdata2/sc/dataset/mainnet/0x5da1d4bb862c91392a0147e5e9fbb09c0d2382a6.sol:
/bdata2/sc/dataset/mainnet/0x5da1d4bb862c91392a0147e5e9fbb09c0d2382a6.sol:125:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function TokenVesting() public
    ^ (Relevant source part starts here and spans across multiple lines).
/bdata2/sc/dataset/mainnet/0x5da1d4bb862c91392a0147e5e9fbb09c0d2382a6.sol:121:35: Warning: This looks like an address but has an invalid checksum. If this is not used as an address, please prepend '00'. Correct checksummed address: '0xC9ca0A382aE69dBa0c8FF2C00c1662529DDEe430'. For more information please see https://solidity.readthedocs.io/en/develop/types.html#address-literals
    ERC20Basic token = ERC20Basic(0xc9ca0a382ae69dba0c8ff2c00c1662529ddee430);
                                  ^----------------------------------------^

INFO:Detectors:
SafeERC20.safeTransferFrom(ERC20,address,address,uint256) (../../sc/dataset/mainnet/0x5da1d4bb862c91392a0147e5e9fbb09c0d2382a6.sol#39-48) uses arbitrary from in transferFrom: assert(bool)(token.transferFrom(from,to,value)) (../../sc/dataset/mainnet/0x5da1d4bb862c91392a0147e5e9fbb09c0d2382a6.sol#47)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#arbitrary-from-in-transferfrom
INFO:Detectors:
TokenVesting.fallback() (../../sc/dataset/mainnet/0x5da1d4bb862c91392a0147e5e9fbb09c0d2382a6.sol#129-144) performs a multiplication on the result of a division:
	- unreleasedHalf = unreleased.div(2) (../../sc/dataset/mainnet/0x5da1d4bb862c91392a0147e5e9fbb09c0d2382a6.sol#136)
	- released = released.add(unreleasedHalf.mul(2)) (../../sc/dataset/mainnet/0x5da1d4bb862c91392a0147e5e9fbb09c0d2382a6.sol#138)
TokenVesting.fallback() (../../sc/dataset/mainnet/0x5da1d4bb862c91392a0147e5e9fbb09c0d2382a6.sol#129-144) performs a multiplication on the result of a division:
	- unreleasedHalf = unreleased.div(2) (../../sc/dataset/mainnet/0x5da1d4bb862c91392a0147e5e9fbb09c0d2382a6.sol#136)
	- Released(unreleasedHalf.mul(2)) (../../sc/dataset/mainnet/0x5da1d4bb862c91392a0147e5e9fbb09c0d2382a6.sol#143)
TokenVesting.vestedAmount() (../../sc/dataset/mainnet/0x5da1d4bb862c91392a0147e5e9fbb09c0d2382a6.sol#155-172) performs a multiplication on the result of a division:
	- sec = timeGap.div(month).mul(month) (../../sc/dataset/mainnet/0x5da1d4bb862c91392a0147e5e9fbb09c0d2382a6.sol#168)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#divide-before-multiply
INFO:Detectors:
Contract locking ether found:
	Contract TokenVesting (../../sc/dataset/mainnet/0x5da1d4bb862c91392a0147e5e9fbb09c0d2382a6.sol#106-174) has payable functions:
	 - TokenVesting.fallback() (../../sc/dataset/mainnet/0x5da1d4bb862c91392a0147e5e9fbb09c0d2382a6.sol#129-144)
	But does not have a function to withdraw the ether
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#contracts-that-lock-ether
INFO:Detectors:
Reentrancy in TokenVesting.fallback() (../../sc/dataset/mainnet/0x5da1d4bb862c91392a0147e5e9fbb09c0d2382a6.sol#129-144):
	External calls:
	- unreleased = releasableAmount() (../../sc/dataset/mainnet/0x5da1d4bb862c91392a0147e5e9fbb09c0d2382a6.sol#132)
		- currentBalance = token.balanceOf(this) (../../sc/dataset/mainnet/0x5da1d4bb862c91392a0147e5e9fbb09c0d2382a6.sol#156)
		- currentBalance = token.balanceOf(this) (../../sc/dataset/mainnet/0x5da1d4bb862c91392a0147e5e9fbb09c0d2382a6.sol#148)
	State variables written after the call(s):
	- released = released.add(unreleasedHalf.mul(2)) (../../sc/dataset/mainnet/0x5da1d4bb862c91392a0147e5e9fbb09c0d2382a6.sol#138)
	TokenVesting.released (../../sc/dataset/mainnet/0x5da1d4bb862c91392a0147e5e9fbb09c0d2382a6.sol#123) can be used in cross function reentrancies:
	- TokenVesting.fallback() (../../sc/dataset/mainnet/0x5da1d4bb862c91392a0147e5e9fbb09c0d2382a6.sol#129-144)
	- TokenVesting.releasableAmount() (../../sc/dataset/mainnet/0x5da1d4bb862c91392a0147e5e9fbb09c0d2382a6.sol#146-153)
	- TokenVesting.released (../../sc/dataset/mainnet/0x5da1d4bb862c91392a0147e5e9fbb09c0d2382a6.sol#123)
	- TokenVesting.vestedAmount() (../../sc/dataset/mainnet/0x5da1d4bb862c91392a0147e5e9fbb09c0d2382a6.sol#155-172)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1
INFO:Detectors:
Reentrancy in TokenVesting.fallback() (../../sc/dataset/mainnet/0x5da1d4bb862c91392a0147e5e9fbb09c0d2382a6.sol#129-144):
	External calls:
	- unreleased = releasableAmount() (../../sc/dataset/mainnet/0x5da1d4bb862c91392a0147e5e9fbb09c0d2382a6.sol#132)
		- currentBalance = token.balanceOf(this) (../../sc/dataset/mainnet/0x5da1d4bb862c91392a0147e5e9fbb09c0d2382a6.sol#156)
		- currentBalance = token.balanceOf(this) (../../sc/dataset/mainnet/0x5da1d4bb862c91392a0147e5e9fbb09c0d2382a6.sol#148)
	- token.safeTransfer(beneficiary1,unreleasedHalf) (../../sc/dataset/mainnet/0x5da1d4bb862c91392a0147e5e9fbb09c0d2382a6.sol#140)
	- token.safeTransfer(beneficiary2,unreleasedHalf) (../../sc/dataset/mainnet/0x5da1d4bb862c91392a0147e5e9fbb09c0d2382a6.sol#141)
	Event emitted after the call(s):
	- Released(unreleasedHalf.mul(2)) (../../sc/dataset/mainnet/0x5da1d4bb862c91392a0147e5e9fbb09c0d2382a6.sol#143)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3
INFO:Detectors:
TokenVesting.fallback() (../../sc/dataset/mainnet/0x5da1d4bb862c91392a0147e5e9fbb09c0d2382a6.sol#129-144) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool)(unreleased > 0) (../../sc/dataset/mainnet/0x5da1d4bb862c91392a0147e5e9fbb09c0d2382a6.sol#134)
TokenVesting.releasableAmount() (../../sc/dataset/mainnet/0x5da1d4bb862c91392a0147e5e9fbb09c0d2382a6.sol#146-153) uses timestamp for comparisons
	Dangerous comparisons:
	- amount > currentBalance (../../sc/dataset/mainnet/0x5da1d4bb862c91392a0147e5e9fbb09c0d2382a6.sol#149)
TokenVesting.vestedAmount() (../../sc/dataset/mainnet/0x5da1d4bb862c91392a0147e5e9fbb09c0d2382a6.sol#155-172) uses timestamp for comparisons
	Dangerous comparisons:
	- block.timestamp < start (../../sc/dataset/mainnet/0x5da1d4bb862c91392a0147e5e9fbb09c0d2382a6.sol#159)
	- block.timestamp >= start.add(duration) (../../sc/dataset/mainnet/0x5da1d4bb862c91392a0147e5e9fbb09c0d2382a6.sol#161)
	- timeGap < month (../../sc/dataset/mainnet/0x5da1d4bb862c91392a0147e5e9fbb09c0d2382a6.sol#165)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp
INFO:Detectors:
SafeERC20.safeApprove(ERC20,address,uint256) (../../sc/dataset/mainnet/0x5da1d4bb862c91392a0147e5e9fbb09c0d2382a6.sol#50-52) is never used and should be removed
SafeERC20.safeTransferFrom(ERC20,address,address,uint256) (../../sc/dataset/mainnet/0x5da1d4bb862c91392a0147e5e9fbb09c0d2382a6.sol#39-48) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code
INFO:Detectors:
Pragma version^0.4.21 (../../sc/dataset/mainnet/0x5da1d4bb862c91392a0147e5e9fbb09c0d2382a6.sol#2) allows old versions
solc-0.4.24 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity
INFO:Detectors:
Variable TokenVesting.beneficiary1 (../../sc/dataset/mainnet/0x5da1d4bb862c91392a0147e5e9fbb09c0d2382a6.sol#113) is too similar to TokenVesting.beneficiary2 (../../sc/dataset/mainnet/0x5da1d4bb862c91392a0147e5e9fbb09c0d2382a6.sol#114)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#variable-names-too-similar
INFO:Detectors:
TokenVesting.token (../../sc/dataset/mainnet/0x5da1d4bb862c91392a0147e5e9fbb09c0d2382a6.sol#121) should be constant 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant
INFO:Slither:/bdata2/sc/dataset/mainnet/0x5da1d4bb862c91392a0147e5e9fbb09c0d2382a6.sol analyzed (5 contracts with 85 detectors), 16 result(s) found
