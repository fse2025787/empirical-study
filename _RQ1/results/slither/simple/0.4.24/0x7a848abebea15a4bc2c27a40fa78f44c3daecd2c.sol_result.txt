INFO:Detectors:
TaskRegister.solveTask(uint256,uint256,uint256,uint256) (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#911-951) sends eth to arbitrary user
	Dangerous calls:
	- msg.sender.transfer(minerReward) (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#947)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#functions-that-send-ether-to-arbitrary-destinations
INFO:Detectors:
TaskRegister (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#633-988) contract sets array length with a user-controlled value:
	- allTasks.push(Task((uint256(TaskType.BITCOIN_ADDRESS_PREFIX) << 128) | 0,0,0,0,bytes32(0),0,0,0)) (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#812)
TaskRegister (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#633-988) contract sets array length with a user-controlled value:
	- indexOfCompletedTaskId[_taskId] = completedTaskIds.push(_taskId) (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#954)
TaskRegister (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#633-988) contract sets array length with a user-controlled value:
	- indexOfActiveTaskId[taskId] = taskIds.push(taskId) (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#843)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#array-length-assignment
INFO:Detectors:
TaskRegister.claim(ERC20Basic,address) (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#979-985) ignores return value by _token.transfer(_to,_token.balanceOf(this)) (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#983)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unchecked-transfer
INFO:Detectors:
VanityLib.bytesToBytes32(bytes) (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#380-384) is declared view but contains assembly code
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#constant-functions-using-assembly-code
INFO:Detectors:
EC._inverse(uint256) (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#74-90) performs a multiplication on the result of a division:
	- q = r / newR (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#83)
	- (r,newR) = (newR,r - q * newR) (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#86)
TaskRegister.solveTask(uint256,uint256,uint256,uint256) (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#911-951) performs a multiplication on the result of a division:
	- serviceReward = taskReard.mul(serviceFee).div(MAX_PERCENT) (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#938)
	- referrerReward = serviceReward.mul(referrerFee).div(MAX_PERCENT) (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#941)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#divide-before-multiply
INFO:Detectors:
Reentrancy in TaskRegister.solveTask(uint256,uint256,uint256,uint256) (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#911-951):
	External calls:
	- require(bool)(ec.publicKeyVerify(_answerPrivateKey,publicXPoint,publicYPoint)) (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#921)
	- (publicXPoint,publicYPoint) = ec.ecadd(task.requestPublicXPoint,task.requestPublicYPoint,publicXPoint,publicYPoint) (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#922-927)
	State variables written after the call(s):
	- task.answerPrivateKey = _answerPrivateKey (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#932)
	TaskRegister.allTasks (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#658) can be used in cross function reentrancies:
	- TaskRegister.allTasks (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#658)
	- TaskRegister.allTasksCount() (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#673-675)
	- TaskRegister.completedTasks(uint256) (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#690-693)
	- TaskRegister.createBitcoinAddressPrefixTask(bytes,uint256,uint256,address) (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#872-909)
	- TaskRegister.getActiveTasks() (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#695-738)
	- TaskRegister.getCompletedTasks() (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#740-783)
	- TaskRegister.payForTask(uint256) (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#862-870)
	- TaskRegister.solveTask(uint256,uint256,uint256,uint256) (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#911-951)
	- TaskRegister.tasks(uint256) (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#681-684)
	- TaskRegister.upgrade(uint256) (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#795-845)
Reentrancy in TaskRegister.upgrade(uint256) (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#795-845):
	External calls:
	- nextTaskId = prev.nextTaskId() (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#801)
	- totalReward = prev.totalReward() (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#802)
	- serviceFee = prev.serviceFee() (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#803)
	- referrerFee = prev.referrerFee() (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#804)
	- tasksLength = prev.tasksCount() (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#807)
	- j = prev.indexOfActiveTaskId(prev.taskIds(i)) (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#813)
	- (allTasks[i].taskId,allTasks[i].creator,allTasks[i].referrer,allTasks[i].reward,None,None,None,None) = prev.allTasks(j) (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#814-823)
	State variables written after the call(s):
	- allTasks.push(Task((uint256(TaskType.BITCOIN_ADDRESS_PREFIX) << 128) | 0,0,0,0,bytes32(0),0,0,0)) (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#812)
	TaskRegister.allTasks (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#658) can be used in cross function reentrancies:
	- TaskRegister.allTasks (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#658)
	- TaskRegister.allTasksCount() (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#673-675)
	- TaskRegister.completedTasks(uint256) (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#690-693)
	- TaskRegister.createBitcoinAddressPrefixTask(bytes,uint256,uint256,address) (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#872-909)
	- TaskRegister.getActiveTasks() (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#695-738)
	- TaskRegister.getCompletedTasks() (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#740-783)
	- TaskRegister.payForTask(uint256) (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#862-870)
	- TaskRegister.solveTask(uint256,uint256,uint256,uint256) (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#911-951)
	- TaskRegister.tasks(uint256) (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#681-684)
	- TaskRegister.upgrade(uint256) (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#795-845)
	- (allTasks[i].taskId,allTasks[i].creator,allTasks[i].referrer,allTasks[i].reward,None,None,None,None) = prev.allTasks(j) (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#814-823)
	TaskRegister.allTasks (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#658) can be used in cross function reentrancies:
	- TaskRegister.allTasks (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#658)
	- TaskRegister.allTasksCount() (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#673-675)
	- TaskRegister.completedTasks(uint256) (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#690-693)
	- TaskRegister.createBitcoinAddressPrefixTask(bytes,uint256,uint256,address) (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#872-909)
	- TaskRegister.getActiveTasks() (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#695-738)
	- TaskRegister.getCompletedTasks() (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#740-783)
	- TaskRegister.payForTask(uint256) (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#862-870)
	- TaskRegister.solveTask(uint256,uint256,uint256,uint256) (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#911-951)
	- TaskRegister.tasks(uint256) (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#681-684)
	- TaskRegister.upgrade(uint256) (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#795-845)
Reentrancy in TaskRegister.upgrade(uint256) (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#795-845):
	External calls:
	- nextTaskId = prev.nextTaskId() (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#801)
	- totalReward = prev.totalReward() (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#802)
	- serviceFee = prev.serviceFee() (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#803)
	- referrerFee = prev.referrerFee() (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#804)
	- tasksLength = prev.tasksCount() (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#807)
	- j = prev.indexOfActiveTaskId(prev.taskIds(i)) (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#813)
	- (allTasks[i].taskId,allTasks[i].creator,allTasks[i].referrer,allTasks[i].reward,None,None,None,None) = prev.allTasks(j) (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#814-823)
	- j = prev.indexOfActiveTaskId(prev.taskIds(i)) (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#828)
	- (None,None,None,None,allTasks[i].data,allTasks[i].requestPublicXPoint,allTasks[i].requestPublicYPoint,allTasks[i].answerPrivateKey) = prev.allTasks(j) (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#829-838)
	State variables written after the call(s):
	- (None,None,None,None,allTasks[i].data,allTasks[i].requestPublicXPoint,allTasks[i].requestPublicYPoint,allTasks[i].answerPrivateKey) = prev.allTasks(j) (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#829-838)
	TaskRegister.allTasks (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#658) can be used in cross function reentrancies:
	- TaskRegister.allTasks (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#658)
	- TaskRegister.allTasksCount() (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#673-675)
	- TaskRegister.completedTasks(uint256) (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#690-693)
	- TaskRegister.createBitcoinAddressPrefixTask(bytes,uint256,uint256,address) (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#872-909)
	- TaskRegister.getActiveTasks() (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#695-738)
	- TaskRegister.getCompletedTasks() (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#740-783)
	- TaskRegister.payForTask(uint256) (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#862-870)
	- TaskRegister.solveTask(uint256,uint256,uint256,uint256) (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#911-951)
	- TaskRegister.tasks(uint256) (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#681-684)
	- TaskRegister.upgrade(uint256) (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#795-845)
Reentrancy in TaskRegister.upgrade(uint256) (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#795-845):
	External calls:
	- nextTaskId = prev.nextTaskId() (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#801)
	- totalReward = prev.totalReward() (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#802)
	- serviceFee = prev.serviceFee() (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#803)
	- referrerFee = prev.referrerFee() (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#804)
	- tasksLength = prev.tasksCount() (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#807)
	- j = prev.indexOfActiveTaskId(prev.taskIds(i)) (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#813)
	- (allTasks[i].taskId,allTasks[i].creator,allTasks[i].referrer,allTasks[i].reward,None,None,None,None) = prev.allTasks(j) (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#814-823)
	- j = prev.indexOfActiveTaskId(prev.taskIds(i)) (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#828)
	- (None,None,None,None,allTasks[i].data,allTasks[i].requestPublicXPoint,allTasks[i].requestPublicYPoint,allTasks[i].answerPrivateKey) = prev.allTasks(j) (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#829-838)
	- taskId = prev.taskIds(i) (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#842)
	State variables written after the call(s):
	- indexOfActiveTaskId[taskId] = taskIds.push(taskId) (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#843)
	TaskRegister.taskIds (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#659) can be used in cross function reentrancies:
	- TaskRegister._completeTask(uint256) (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#953-964)
	- TaskRegister.createBitcoinAddressPrefixTask(bytes,uint256,uint256,address) (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#872-909)
	- TaskRegister.getActiveTasks() (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#695-738)
	- TaskRegister.taskIds (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#659)
	- TaskRegister.tasks(uint256) (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#681-684)
	- TaskRegister.tasksCount() (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#677-679)
	- TaskRegister.upgrade(uint256) (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#795-845)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1
INFO:Detectors:
TaskRegister.setServiceFee(uint256) (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#785-788) should emit an event for: 
	- serviceFee = _serviceFee (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#787) 
TaskRegister.setReferrerFee(uint256) (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#790-793) should emit an event for: 
	- referrerFee = _referrerFee (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#792) 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-arithmetic
INFO:Detectors:
TaskRegister.claim(ERC20Basic,address)._to (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#979) lacks a zero-check on :
		- _to.transfer(address(this).balance - totalReward) (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#981)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation
INFO:Detectors:
TaskRegister.upgrade(uint256) (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#795-845) has external calls inside a loop: j = prev.indexOfActiveTaskId(prev.taskIds(i)) (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#813)
TaskRegister.upgrade(uint256) (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#795-845) has external calls inside a loop: (allTasks[i].taskId,allTasks[i].creator,allTasks[i].referrer,allTasks[i].reward,None,None,None,None) = prev.allTasks(j) (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#814-823)
TaskRegister.upgrade(uint256) (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#795-845) has external calls inside a loop: j = prev.indexOfActiveTaskId(prev.taskIds(i)) (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#828)
TaskRegister.upgrade(uint256) (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#795-845) has external calls inside a loop: (None,None,None,None,allTasks[i].data,allTasks[i].requestPublicXPoint,allTasks[i].requestPublicYPoint,allTasks[i].answerPrivateKey) = prev.allTasks(j) (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#829-838)
TaskRegister.upgrade(uint256) (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#795-845) has external calls inside a loop: taskId = prev.taskIds(i) (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#842)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation/#calls-inside-a-loop
INFO:Detectors:
Variable 'TaskRegister.upgrade(uint256).j (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#813)' in TaskRegister.upgrade(uint256) (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#795-845) potentially used before declaration: j = prev.indexOfActiveTaskId(prev.taskIds(i)) (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#828)
Variable 'TaskRegister.upgrade(uint256).j (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#813)' in TaskRegister.upgrade(uint256) (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#795-845) potentially used before declaration: (None,None,None,None,allTasks[i].data,allTasks[i].requestPublicXPoint,allTasks[i].requestPublicYPoint,allTasks[i].answerPrivateKey) = prev.allTasks(j) (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#829-838)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#pre-declaration-usage-of-local-variables
INFO:Detectors:
Reentrancy in TaskRegister.solveTask(uint256,uint256,uint256,uint256) (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#911-951):
	External calls:
	- require(bool)(ec.publicKeyVerify(_answerPrivateKey,publicXPoint,publicYPoint)) (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#921)
	- (publicXPoint,publicYPoint) = ec.ecadd(task.requestPublicXPoint,task.requestPublicYPoint,publicXPoint,publicYPoint) (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#922-927)
	External calls sending eth:
	- task.referrer.transfer(referrerReward) (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#942)
	- msg.sender.transfer(minerReward) (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#947)
	State variables written after the call(s):
	- _completeTask(_taskId) (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#950)
		- indexOfCompletedTaskId[_taskId] = completedTaskIds.push(_taskId) (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#954)
	- _completeTask(_taskId) (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#950)
		- delete indexOfActiveTaskId[_taskId] (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#956)
		- indexOfActiveTaskId[lastTaskId] = activeTaskIndex + 1 (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#961)
	- _completeTask(_taskId) (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#950)
		- indexOfCompletedTaskId[_taskId] = completedTaskIds.push(_taskId) (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#954)
	- _completeTask(_taskId) (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#950)
		- taskIds[activeTaskIndex] = lastTaskId (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#960)
		- taskIds.length -= 1 (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#963)
	- totalReward -= taskReard (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#948)
Reentrancy in TaskRegister.upgrade(uint256) (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#795-845):
	External calls:
	- nextTaskId = prev.nextTaskId() (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#801)
	- totalReward = prev.totalReward() (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#802)
	State variables written after the call(s):
	- totalReward = prev.totalReward() (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#802)
Reentrancy in TaskRegister.upgrade(uint256) (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#795-845):
	External calls:
	- nextTaskId = prev.nextTaskId() (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#801)
	- totalReward = prev.totalReward() (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#802)
	- serviceFee = prev.serviceFee() (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#803)
	State variables written after the call(s):
	- serviceFee = prev.serviceFee() (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#803)
Reentrancy in TaskRegister.upgrade(uint256) (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#795-845):
	External calls:
	- nextTaskId = prev.nextTaskId() (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#801)
	- totalReward = prev.totalReward() (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#802)
	- serviceFee = prev.serviceFee() (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#803)
	- referrerFee = prev.referrerFee() (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#804)
	State variables written after the call(s):
	- referrerFee = prev.referrerFee() (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#804)
Reentrancy in TaskRegister.upgrade(uint256) (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#795-845):
	External calls:
	- nextTaskId = prev.nextTaskId() (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#801)
	- totalReward = prev.totalReward() (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#802)
	- serviceFee = prev.serviceFee() (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#803)
	- referrerFee = prev.referrerFee() (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#804)
	- tasksLength = prev.tasksCount() (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#807)
	- j = prev.indexOfActiveTaskId(prev.taskIds(i)) (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#813)
	- (allTasks[i].taskId,allTasks[i].creator,allTasks[i].referrer,allTasks[i].reward,None,None,None,None) = prev.allTasks(j) (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#814-823)
	State variables written after the call(s):
	- indexOfTaskId[allTasks[i].taskId] = i + 1 (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#824)
Reentrancy in TaskRegister.upgrade(uint256) (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#795-845):
	External calls:
	- nextTaskId = prev.nextTaskId() (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#801)
	- totalReward = prev.totalReward() (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#802)
	- serviceFee = prev.serviceFee() (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#803)
	- referrerFee = prev.referrerFee() (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#804)
	- tasksLength = prev.tasksCount() (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#807)
	- j = prev.indexOfActiveTaskId(prev.taskIds(i)) (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#813)
	- (allTasks[i].taskId,allTasks[i].creator,allTasks[i].referrer,allTasks[i].reward,None,None,None,None) = prev.allTasks(j) (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#814-823)
	- j = prev.indexOfActiveTaskId(prev.taskIds(i)) (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#828)
	- (None,None,None,None,allTasks[i].data,allTasks[i].requestPublicXPoint,allTasks[i].requestPublicYPoint,allTasks[i].answerPrivateKey) = prev.allTasks(j) (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#829-838)
	- taskId = prev.taskIds(i) (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#842)
	State variables written after the call(s):
	- indexOfActiveTaskId[taskId] = taskIds.push(taskId) (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#843)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2
INFO:Detectors:
Reentrancy in Upgradable.endUpgrade() (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#347-360):
	External calls:
	- Upgradable(upgradableState.prevVersion).endUpgrade() (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#356)
	Event emitted after the call(s):
	- Initialized(upgradableState.prevVersion) (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#358)
Reentrancy in TaskRegister.solveTask(uint256,uint256,uint256,uint256) (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#911-951):
	External calls:
	- require(bool)(ec.publicKeyVerify(_answerPrivateKey,publicXPoint,publicYPoint)) (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#921)
	- (publicXPoint,publicYPoint) = ec.ecadd(task.requestPublicXPoint,task.requestPublicYPoint,publicXPoint,publicYPoint) (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#922-927)
	External calls sending eth:
	- task.referrer.transfer(referrerReward) (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#942)
	Event emitted after the call(s):
	- TaskSolved(_taskId,minerReward,referrerReward) (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#943)
Reentrancy in TaskRegister.solveTask(uint256,uint256,uint256,uint256) (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#911-951):
	External calls:
	- require(bool)(ec.publicKeyVerify(_answerPrivateKey,publicXPoint,publicYPoint)) (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#921)
	- (publicXPoint,publicYPoint) = ec.ecadd(task.requestPublicXPoint,task.requestPublicYPoint,publicXPoint,publicYPoint) (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#922-927)
	Event emitted after the call(s):
	- TaskSolved(_taskId,minerReward,0) (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#945)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3
INFO:Detectors:
VanityLib.bytesToBytes32(bytes) (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#380-384) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#381-384)
TaskRegister.createBitcoinAddressPrefixTask(bytes,uint256,uint256,address) (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#872-909) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#889-893)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage
INFO:Detectors:
Pragma version^0.4.24 (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#2) allows old versions
solc-0.4.24 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity
INFO:Detectors:
Function EC._jAdd(uint256,uint256,uint256,uint256) (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#14-29) is not in mixedCase
Function EC._jSub(uint256,uint256,uint256,uint256) (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#31-46) is not in mixedCase
Function EC._jMul(uint256,uint256,uint256,uint256) (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#48-59) is not in mixedCase
Function EC._jDiv(uint256,uint256,uint256,uint256) (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#61-72) is not in mixedCase
Function EC._inverse(uint256) (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#74-90) is not in mixedCase
Function EC._ecAdd(uint256,uint256,uint256,uint256,uint256,uint256) (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#92-140) is not in mixedCase
Function EC._ecDouble(uint256,uint256,uint256) (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#142-146) is not in mixedCase
Function EC._ecMul(uint256,uint256,uint256,uint256) (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#148-172) is not in mixedCase
Parameter Ownable.transferOwnership(address)._newOwner (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#279) is not in mixedCase
Parameter VanityLib.toBase58Checked(uint256,bytes1)._value (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#387) is not in mixedCase
Constant VanityLib.m (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#366) is not in UPPER_CASE_WITH_UNDERSCORES
Parameter TaskRegister.setServiceFee(uint256)._serviceFee (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#785) is not in mixedCase
Parameter TaskRegister.setReferrerFee(uint256)._referrerFee (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#790) is not in mixedCase
Parameter TaskRegister.upgrade(uint256)._size (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#795) is not in mixedCase
Parameter TaskRegister.payForTask(uint256)._taskId (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#862) is not in mixedCase
Parameter TaskRegister.solveTask(uint256,uint256,uint256,uint256)._taskId (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#911) is not in mixedCase
Parameter TaskRegister.solveTask(uint256,uint256,uint256,uint256)._answerPrivateKey (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#911) is not in mixedCase
Parameter TaskRegister.claim(ERC20Basic,address)._token (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#979) is not in mixedCase
Parameter TaskRegister.claim(ERC20Basic,address)._to (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#979) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions
INFO:Detectors:
Reentrancy in TaskRegister.solveTask(uint256,uint256,uint256,uint256) (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#911-951):
	External calls:
	- task.referrer.transfer(referrerReward) (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#942)
	Event emitted after the call(s):
	- TaskSolved(_taskId,minerReward,referrerReward) (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#943)
Reentrancy in TaskRegister.solveTask(uint256,uint256,uint256,uint256) (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#911-951):
	External calls:
	- task.referrer.transfer(referrerReward) (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#942)
	- msg.sender.transfer(minerReward) (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#947)
	State variables written after the call(s):
	- _completeTask(_taskId) (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#950)
		- indexOfCompletedTaskId[_taskId] = completedTaskIds.push(_taskId) (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#954)
	- _completeTask(_taskId) (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#950)
		- delete indexOfActiveTaskId[_taskId] (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#956)
		- indexOfActiveTaskId[lastTaskId] = activeTaskIndex + 1 (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#961)
	- _completeTask(_taskId) (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#950)
		- indexOfCompletedTaskId[_taskId] = completedTaskIds.push(_taskId) (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#954)
	- _completeTask(_taskId) (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#950)
		- taskIds[activeTaskIndex] = lastTaskId (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#960)
		- taskIds.length -= 1 (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#963)
	- totalReward -= taskReard (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#948)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-4
INFO:Detectors:
Variable VanityLib.createBtcAddress(uint256,uint256).publicXPoint (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#446) is too similar to VanityLib.createBtcAddressHex(uint256,uint256).publicYPoint (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#426)
Variable VanityLib.createBtcAddress(uint256,uint256).publicXPoint (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#446) is too similar to VanityLib.createBtcAddress(uint256,uint256).publicYPoint (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#446)
Variable VanityLib.createBtcAddressHex(uint256,uint256).publicXPoint (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#426) is too similar to VanityLib.createBtcAddressHex(uint256,uint256).publicYPoint (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#426)
Variable VanityLib.createBtcAddressHex(uint256,uint256).publicXPoint (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#426) is too similar to VanityLib.createBtcAddress(uint256,uint256).publicYPoint (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#446)
Variable VanityLib.createBtcAddress(uint256,uint256).publicXPoint (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#446) is too similar to TaskRegister.solveTask(uint256,uint256,uint256,uint256).publicYPoint (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#911)
Variable TaskRegister.solveTask(uint256,uint256,uint256,uint256).publicXPoint (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#911) is too similar to TaskRegister.solveTask(uint256,uint256,uint256,uint256).publicYPoint (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#911)
Variable VanityLib.createBtcAddressHex(uint256,uint256).publicXPoint (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#426) is too similar to TaskRegister.solveTask(uint256,uint256,uint256,uint256).publicYPoint (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#911)
Variable TaskRegister.solveTask(uint256,uint256,uint256,uint256).publicXPoint (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#911) is too similar to VanityLib.createBtcAddress(uint256,uint256).publicYPoint (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#446)
Variable TaskRegister.solveTask(uint256,uint256,uint256,uint256).publicXPoint (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#911) is too similar to VanityLib.createBtcAddressHex(uint256,uint256).publicYPoint (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#426)
Variable TaskRegister.createBitcoinAddressPrefixTask(bytes,uint256,uint256,address).requestPublicXPoint (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#874) is too similar to TaskRegister.createBitcoinAddressPrefixTask(bytes,uint256,uint256,address).requestPublicYPoint (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#875)
Variable TaskRegister.getActiveTasks().t_requestPublicXPoints (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#702) is too similar to TaskRegister.getCompletedTasks().t_requestPublicYPoints (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#748)
Variable TaskRegister.getCompletedTasks().t_requestPublicXPoints (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#747) is too similar to TaskRegister.getCompletedTasks().t_requestPublicYPoints (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#748)
Variable TaskRegister.getActiveTasks().t_requestPublicXPoints (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#702) is too similar to TaskRegister.getActiveTasks().t_requestPublicYPoints (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#703)
Variable TaskRegister.getCompletedTasks().t_requestPublicXPoints (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#747) is too similar to TaskRegister.getActiveTasks().t_requestPublicYPoints (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#703)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#variable-names-too-similar
INFO:Detectors:
TaskRegister.setReferrerFee(uint256) (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#790-793) uses literals with too many digits:
	- require(bool,string)(_referrerFee <= 500000,setReferrerFee: value should be less than 500000, which means 50% of service fee) (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#791)
TaskRegister.slitherConstructorConstantVariables() (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#633-988) uses literals with too many digits:
	- MAX_PERCENT = 1000000 (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#654)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits
INFO:Detectors:
complexityForBtcAddressPrefix(bytes) should be declared external:
	- VanityLib.complexityForBtcAddressPrefix(bytes) (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#450-452)
createBitcoinAddressPrefixTask(bytes,uint256,uint256,address) should be declared external:
	- TaskRegister.createBitcoinAddressPrefixTask(bytes,uint256,uint256,address) (../../sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol#872-909)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external
INFO:Slither:/bdata2/sc/dataset/mainnet/0x7a848abebea15a4bc2c27a40fa78f44c3daecd2c.sol analyzed (9 contracts with 85 detectors), 74 result(s) found
