Compilation warnings/errors on /bdata2/sc/dataset/mainnet/0x9f3d6a14aff7ca1f0bdcac794184b098c5a999a7.sol:
/bdata2/sc/dataset/mainnet/0x9f3d6a14aff7ca1f0bdcac794184b098c5a999a7.sol:204:34: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        game.wheelResult = uint8(keccak256(blockHash, game.player, address(this))) % 37;
                                 ^----------------------------------------------^

INFO:Detectors:
OracleRoulette.resolveBet(uint256) (../../sc/dataset/mainnet/0x9f3d6a14aff7ca1f0bdcac794184b098c5a999a7.sol#168-215) uses a weak PRNG: "game.wheelResult = uint8(keccak256()(blockHash,game.player,address(this))) % 37 (../../sc/dataset/mainnet/0x9f3d6a14aff7ca1f0bdcac794184b098c5a999a7.sol#204)" 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#weak-PRNG
INFO:Detectors:
OracleRoulette.placeBet(bytes32,bytes32,bytes32) (../../sc/dataset/mainnet/0x9f3d6a14aff7ca1f0bdcac794184b098c5a999a7.sol#127-166) uses a dangerous strict equality:
	- gameHistory[i].targetBlock == targetBlock (../../sc/dataset/mainnet/0x9f3d6a14aff7ca1f0bdcac794184b098c5a999a7.sol#151)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dangerous-strict-equalities
INFO:Detectors:
Reentrancy in OracleRoulette.resolveBet(uint256) (../../sc/dataset/mainnet/0x9f3d6a14aff7ca1f0bdcac794184b098c5a999a7.sol#168-215):
	External calls:
	- wonAmount = rouletteRules.getBetResult(game.betTypes,game.first16,game.second16,game.wheelResult) * BET_UNIT (../../sc/dataset/mainnet/0x9f3d6a14aff7ca1f0bdcac794184b098c5a999a7.sol#207)
	State variables written after the call(s):
	- game.status = uint8(GameStatus.RESOLVED) (../../sc/dataset/mainnet/0x9f3d6a14aff7ca1f0bdcac794184b098c5a999a7.sol#209)
	OracleRoulette.gameHistory (../../sc/dataset/mainnet/0x9f3d6a14aff7ca1f0bdcac794184b098c5a999a7.sol#221) can be used in cross function reentrancies:
	- OracleRoulette.placeBet(bytes32,bytes32,bytes32) (../../sc/dataset/mainnet/0x9f3d6a14aff7ca1f0bdcac794184b098c5a999a7.sol#127-166)
	- OracleRoulette.queryGameHistory(uint256) (../../sc/dataset/mainnet/0x9f3d6a14aff7ca1f0bdcac794184b098c5a999a7.sol#255-267)
	- OracleRoulette.queryGameHistoryLength() (../../sc/dataset/mainnet/0x9f3d6a14aff7ca1f0bdcac794184b098c5a999a7.sol#269-271)
	- OracleRoulette.queryGameStatus(uint256) (../../sc/dataset/mainnet/0x9f3d6a14aff7ca1f0bdcac794184b098c5a999a7.sol#246-249)
	- OracleRoulette.resolveBet(uint256) (../../sc/dataset/mainnet/0x9f3d6a14aff7ca1f0bdcac794184b098c5a999a7.sol#168-215)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1
INFO:Detectors:
OracleRoulette.setBlockTargetDelay(uint256) (../../sc/dataset/mainnet/0x9f3d6a14aff7ca1f0bdcac794184b098c5a999a7.sol#106-109) contains a tautology or contradiction:
	- require(bool)(newTargetDelay >= 0) (../../sc/dataset/mainnet/0x9f3d6a14aff7ca1f0bdcac794184b098c5a999a7.sol#107)
OracleRoulette.placeBet(bytes32,bytes32,bytes32) (../../sc/dataset/mainnet/0x9f3d6a14aff7ca1f0bdcac794184b098c5a999a7.sol#127-166) contains a tautology or contradiction:
	- i >= 0 (../../sc/dataset/mainnet/0x9f3d6a14aff7ca1f0bdcac794184b098c5a999a7.sol#150)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#tautology-or-contradiction
INFO:Detectors:
OracleRoulette.changeDeveloper(address) (../../sc/dataset/mainnet/0x9f3d6a14aff7ca1f0bdcac794184b098c5a999a7.sol#58-60) should emit an event for: 
	- developer = newDeveloper (../../sc/dataset/mainnet/0x9f3d6a14aff7ca1f0bdcac794184b098c5a999a7.sol#59) 
	- developer = newDeveloper (../../sc/dataset/mainnet/0x9f3d6a14aff7ca1f0bdcac794184b098c5a999a7.sol#59) 
OracleRoulette.changeOperator(address) (../../sc/dataset/mainnet/0x9f3d6a14aff7ca1f0bdcac794184b098c5a999a7.sol#62-64) should emit an event for: 
	- operator = newOperator (../../sc/dataset/mainnet/0x9f3d6a14aff7ca1f0bdcac794184b098c5a999a7.sol#63) 
	- operator = newOperator (../../sc/dataset/mainnet/0x9f3d6a14aff7ca1f0bdcac794184b098c5a999a7.sol#63) 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-access-control
INFO:Detectors:
OracleRoulette.setBetUnit(uint256) (../../sc/dataset/mainnet/0x9f3d6a14aff7ca1f0bdcac794184b098c5a999a7.sol#101-104) should emit an event for: 
	- BET_UNIT = newBetUnitInWei (../../sc/dataset/mainnet/0x9f3d6a14aff7ca1f0bdcac794184b098c5a999a7.sol#103) 
OracleRoulette.setBlockTargetDelay(uint256) (../../sc/dataset/mainnet/0x9f3d6a14aff7ca1f0bdcac794184b098c5a999a7.sol#106-109) should emit an event for: 
	- BLOCK_TARGET_DELAY = newTargetDelay (../../sc/dataset/mainnet/0x9f3d6a14aff7ca1f0bdcac794184b098c5a999a7.sol#108) 
OracleRoulette.setMaxBet(uint256) (../../sc/dataset/mainnet/0x9f3d6a14aff7ca1f0bdcac794184b098c5a999a7.sol#111-113) should emit an event for: 
	- MAX_BET = newMaxBet (../../sc/dataset/mainnet/0x9f3d6a14aff7ca1f0bdcac794184b098c5a999a7.sol#112) 
OracleRoulette.setMaxGamePerBlock(uint256) (../../sc/dataset/mainnet/0x9f3d6a14aff7ca1f0bdcac794184b098c5a999a7.sol#115-117) should emit an event for: 
	- MAX_GAME_PER_BLOCK = newMaxGamePerBlock (../../sc/dataset/mainnet/0x9f3d6a14aff7ca1f0bdcac794184b098c5a999a7.sol#116) 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-arithmetic
INFO:Detectors:
OracleRoulette.changeDeveloper(address).newDeveloper (../../sc/dataset/mainnet/0x9f3d6a14aff7ca1f0bdcac794184b098c5a999a7.sol#58) lacks a zero-check on :
		- developer = newDeveloper (../../sc/dataset/mainnet/0x9f3d6a14aff7ca1f0bdcac794184b098c5a999a7.sol#59)
OracleRoulette.changeOperator(address).newOperator (../../sc/dataset/mainnet/0x9f3d6a14aff7ca1f0bdcac794184b098c5a999a7.sol#62) lacks a zero-check on :
		- operator = newOperator (../../sc/dataset/mainnet/0x9f3d6a14aff7ca1f0bdcac794184b098c5a999a7.sol#63)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation
INFO:Detectors:
Reentrancy in OracleRoulette.placeBet(bytes32,bytes32,bytes32) (../../sc/dataset/mainnet/0x9f3d6a14aff7ca1f0bdcac794184b098c5a999a7.sol#127-166):
	External calls:
	- betAmount = rouletteRules.getTotalBetAmount(first16,second16) * BET_UNIT (../../sc/dataset/mainnet/0x9f3d6a14aff7ca1f0bdcac794184b098c5a999a7.sol#135)
	State variables written after the call(s):
	- gameId = gameHistory.push(newGame) - 1 (../../sc/dataset/mainnet/0x9f3d6a14aff7ca1f0bdcac794184b098c5a999a7.sol#164)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2
INFO:Detectors:
Reentrancy in OracleRoulette.placeBet(bytes32,bytes32,bytes32) (../../sc/dataset/mainnet/0x9f3d6a14aff7ca1f0bdcac794184b098c5a999a7.sol#127-166):
	External calls:
	- betAmount = rouletteRules.getTotalBetAmount(first16,second16) * BET_UNIT (../../sc/dataset/mainnet/0x9f3d6a14aff7ca1f0bdcac794184b098c5a999a7.sol#135)
	Event emitted after the call(s):
	- GameError(msg.sender,Wrong bet amount!) (../../sc/dataset/mainnet/0x9f3d6a14aff7ca1f0bdcac794184b098c5a999a7.sol#138)
	- GameError(msg.sender,Reached max game per block!) (../../sc/dataset/mainnet/0x9f3d6a14aff7ca1f0bdcac794184b098c5a999a7.sol#154)
	- GameStarted(msg.sender,gameId,targetBlock) (../../sc/dataset/mainnet/0x9f3d6a14aff7ca1f0bdcac794184b098c5a999a7.sol#165)
Reentrancy in OracleRoulette.resolveBet(uint256) (../../sc/dataset/mainnet/0x9f3d6a14aff7ca1f0bdcac794184b098c5a999a7.sol#168-215):
	External calls:
	- wonAmount = rouletteRules.getBetResult(game.betTypes,game.first16,game.second16,game.wheelResult) * BET_UNIT (../../sc/dataset/mainnet/0x9f3d6a14aff7ca1f0bdcac794184b098c5a999a7.sol#207)
	External calls sending eth:
	- game.player.transfer(wonAmount) (../../sc/dataset/mainnet/0x9f3d6a14aff7ca1f0bdcac794184b098c5a999a7.sol#212)
	Event emitted after the call(s):
	- GameEnded(game.player,game.wheelResult,wonAmount) (../../sc/dataset/mainnet/0x9f3d6a14aff7ca1f0bdcac794184b098c5a999a7.sol#214)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3
INFO:Detectors:
OracleRoulette.placeBet(bytes32,bytes32,bytes32) (../../sc/dataset/mainnet/0x9f3d6a14aff7ca1f0bdcac794184b098c5a999a7.sol#127-166) compares to a boolean constant:
	-shouldGateGuard == true (../../sc/dataset/mainnet/0x9f3d6a14aff7ca1f0bdcac794184b098c5a999a7.sol#129)
OracleRoulette.shouldGateGuardForEffectiveTime() (../../sc/dataset/mainnet/0x9f3d6a14aff7ca1f0bdcac794184b098c5a999a7.sol#48-56) compares to a boolean constant:
	-require(bool)(shouldGateGuard == true && (sinceGateGuarded - now) > 600) (../../sc/dataset/mainnet/0x9f3d6a14aff7ca1f0bdcac794184b098c5a999a7.sol#54)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#boolean-equality
INFO:Detectors:
Pragma version^0.4.23 (../../sc/dataset/mainnet/0x9f3d6a14aff7ca1f0bdcac794184b098c5a999a7.sol#2) allows old versions
solc-0.4.24 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity
INFO:Detectors:
Parameter OracleRoulette.setRouletteRules(address)._newRouletteRules (../../sc/dataset/mainnet/0x9f3d6a14aff7ca1f0bdcac794184b098c5a999a7.sol#71) is not in mixedCase
Variable OracleRoulette.BET_UNIT (../../sc/dataset/mainnet/0x9f3d6a14aff7ca1f0bdcac794184b098c5a999a7.sol#94) is not in mixedCase
Variable OracleRoulette.BLOCK_TARGET_DELAY (../../sc/dataset/mainnet/0x9f3d6a14aff7ca1f0bdcac794184b098c5a999a7.sol#95) is not in mixedCase
Variable OracleRoulette.MAX_BET (../../sc/dataset/mainnet/0x9f3d6a14aff7ca1f0bdcac794184b098c5a999a7.sol#98) is not in mixedCase
Variable OracleRoulette.MAX_GAME_PER_BLOCK (../../sc/dataset/mainnet/0x9f3d6a14aff7ca1f0bdcac794184b098c5a999a7.sol#99) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions
INFO:Detectors:
Reentrancy in OracleRoulette.resolveBet(uint256) (../../sc/dataset/mainnet/0x9f3d6a14aff7ca1f0bdcac794184b098c5a999a7.sol#168-215):
	External calls:
	- game.player.transfer(wonAmount) (../../sc/dataset/mainnet/0x9f3d6a14aff7ca1f0bdcac794184b098c5a999a7.sol#212)
	Event emitted after the call(s):
	- GameEnded(game.player,game.wheelResult,wonAmount) (../../sc/dataset/mainnet/0x9f3d6a14aff7ca1f0bdcac794184b098c5a999a7.sol#214)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-4
INFO:Slither:/bdata2/sc/dataset/mainnet/0x9f3d6a14aff7ca1f0bdcac794184b098c5a999a7.sol analyzed (2 contracts with 85 detectors), 26 result(s) found
