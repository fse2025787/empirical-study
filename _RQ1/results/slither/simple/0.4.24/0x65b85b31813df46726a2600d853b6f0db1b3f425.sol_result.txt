Compilation warnings/errors on /bdata2/sc/dataset/mainnet/0x65b85b31813df46726a2600d853b6f0db1b3f425.sol:
/bdata2/sc/dataset/mainnet/0x65b85b31813df46726a2600d853b6f0db1b3f425.sol:24:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function Ownable() public {
  ^ (Relevant source part starts here and spans across multiple lines).
/bdata2/sc/dataset/mainnet/0x65b85b31813df46726a2600d853b6f0db1b3f425.sol:42:5: Warning: Invoking events without "emit" prefix is deprecated.
    OwnershipTransferred(owner, newOwner);
    ^-----------------------------------^
/bdata2/sc/dataset/mainnet/0x65b85b31813df46726a2600d853b6f0db1b3f425.sol:123:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(msg.sender, _to, _value);
    ^-------------------------------^
/bdata2/sc/dataset/mainnet/0x65b85b31813df46726a2600d853b6f0db1b3f425.sol:166:5: Warning: Invoking events without "emit" prefix is deprecated.
    Pause();
    ^-----^
/bdata2/sc/dataset/mainnet/0x65b85b31813df46726a2600d853b6f0db1b3f425.sol:174:5: Warning: Invoking events without "emit" prefix is deprecated.
    Unpause();
    ^-------^
/bdata2/sc/dataset/mainnet/0x65b85b31813df46726a2600d853b6f0db1b3f425.sol:415:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(_from, _to, _value);
    ^--------------------------^
/bdata2/sc/dataset/mainnet/0x65b85b31813df46726a2600d853b6f0db1b3f425.sol:431:5: Warning: Invoking events without "emit" prefix is deprecated.
    Approval(msg.sender, _spender, _value);
    ^------------------------------------^
/bdata2/sc/dataset/mainnet/0x65b85b31813df46726a2600d853b6f0db1b3f425.sol:457:5: Warning: Invoking events without "emit" prefix is deprecated.
    Approval(msg.sender, _spender, allowed[msg.sender][_spender]);
    ^-----------------------------------------------------------^
/bdata2/sc/dataset/mainnet/0x65b85b31813df46726a2600d853b6f0db1b3f425.sol:478:5: Warning: Invoking events without "emit" prefix is deprecated.
    Approval(msg.sender, _spender, allowed[msg.sender][_spender]);
    ^-----------------------------------------------------------^
/bdata2/sc/dataset/mainnet/0x65b85b31813df46726a2600d853b6f0db1b3f425.sol:502:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(address(0), msg.sender, totalSupply_);
        ^--------------------------------------------^
/bdata2/sc/dataset/mainnet/0x65b85b31813df46726a2600d853b6f0db1b3f425.sol:698:27: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        require(amount <= this.balance);
                          ^----------^

INFO:Detectors:
APICalls.rewardTokens(address,uint256) (../../sc/dataset/mainnet/0x65b85b31813df46726a2600d853b6f0db1b3f425.sol#1070-1080) uses arbitrary from in transferFrom: token.transferFrom(tokenOwner,toReward,amount) (../../sc/dataset/mainnet/0x65b85b31813df46726a2600d853b6f0db1b3f425.sol#1078)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#arbitrary-from-in-transferfrom
INFO:Detectors:
APICalls.paySellerForBuyer(uint256,address) (../../sc/dataset/mainnet/0x65b85b31813df46726a2600d853b6f0db1b3f425.sol#810-854) sends eth to arbitrary user
	Dangerous calls:
	- sellerAddress.transfer(payout) (../../sc/dataset/mainnet/0x65b85b31813df46726a2600d853b6f0db1b3f425.sol#853)
APICalls.paySeller(uint256) (../../sc/dataset/mainnet/0x65b85b31813df46726a2600d853b6f0db1b3f425.sol#860-910) sends eth to arbitrary user
	Dangerous calls:
	- sellerAddress.transfer(payout) (../../sc/dataset/mainnet/0x65b85b31813df46726a2600d853b6f0db1b3f425.sol#909)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#functions-that-send-ether-to-arbitrary-destinations
INFO:Detectors:
APICalls (../../sc/dataset/mainnet/0x65b85b31813df46726a2600d853b6f0db1b3f425.sol#560-1257) contract sets array length with a user-controlled value:
	- apiBalance.nonzeroAddresses.push(buyerAddress) (../../sc/dataset/mainnet/0x65b85b31813df46726a2600d853b6f0db1b3f425.sol#790)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#array-length-assignment
INFO:Detectors:
APICalls.rewardTokens(address,uint256) (../../sc/dataset/mainnet/0x65b85b31813df46726a2600d853b6f0db1b3f425.sol#1070-1080) ignores return value by token.transferFrom(tokenOwner,toReward,amount) (../../sc/dataset/mainnet/0x65b85b31813df46726a2600d853b6f0db1b3f425.sol#1078)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unchecked-transfer
INFO:Detectors:
APICalls.withdrawEther(uint256) (../../sc/dataset/mainnet/0x65b85b31813df46726a2600d853b6f0db1b3f425.sol#696-702) should emit an event for: 
	- safeWithdrawAmount = safeWithdrawAmount.sub(amount) (../../sc/dataset/mainnet/0x65b85b31813df46726a2600d853b6f0db1b3f425.sol#700) 
APICalls.setTokenReward(uint256) (../../sc/dataset/mainnet/0x65b85b31813df46726a2600d853b6f0db1b3f425.sol#739-741) should emit an event for: 
	- tokenReward = _tokenReward (../../sc/dataset/mainnet/0x65b85b31813df46726a2600d853b6f0db1b3f425.sol#740) 
APICalls.setSaleFee(uint256) (../../sc/dataset/mainnet/0x65b85b31813df46726a2600d853b6f0db1b3f425.sol#746-748) should emit an event for: 
	- saleFee = _saleFee (../../sc/dataset/mainnet/0x65b85b31813df46726a2600d853b6f0db1b3f425.sol#747) 
APICalls.setDefaultBuyerLastPaidAt(uint256) (../../sc/dataset/mainnet/0x65b85b31813df46726a2600d853b6f0db1b3f425.sol#753-755) should emit an event for: 
	- defaultBuyerLastPaidAt = _defaultBuyerLastPaidAt (../../sc/dataset/mainnet/0x65b85b31813df46726a2600d853b6f0db1b3f425.sol#754) 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-arithmetic
INFO:Detectors:
Reentrancy in APICalls.paySeller(uint256) (../../sc/dataset/mainnet/0x65b85b31813df46726a2600d853b6f0db1b3f425.sol#860-910):
	External calls:
	- apiRegistryAddress = relay.apiRegistryContractAddress() (../../sc/dataset/mainnet/0x65b85b31813df46726a2600d853b6f0db1b3f425.sol#863)
	- (pricePerCall,sellerUsername,apiName,sellerAddress) = apiRegistry.getApiByIdWithoutDynamics(apiId) (../../sc/dataset/mainnet/0x65b85b31813df46726a2600d853b6f0db1b3f425.sol#873)
	State variables written after the call(s):
	- (totalPayable,totalBuyers) = processSalesForAllBuyers(apiId) (../../sc/dataset/mainnet/0x65b85b31813df46726a2600d853b6f0db1b3f425.sol#881)
		- buyer.overdrafted = false (../../sc/dataset/mainnet/0x65b85b31813df46726a2600d853b6f0db1b3f425.sol#1197)
		- buyer.exceededApprovedAmount[apiId] = false (../../sc/dataset/mainnet/0x65b85b31813df46726a2600d853b6f0db1b3f425.sol#1203)
		- buyer.exceededApprovedAmount[apiId] = true (../../sc/dataset/mainnet/0x65b85b31813df46726a2600d853b6f0db1b3f425.sol#1211)
		- buyer.lifetimeExceededApprovalAmountCount += 1 (../../sc/dataset/mainnet/0x65b85b31813df46726a2600d853b6f0db1b3f425.sol#1212)
		- buyer.overdrafted = true (../../sc/dataset/mainnet/0x65b85b31813df46726a2600d853b6f0db1b3f425.sol#1220)
		- buyer.lifetimeOverdraftCount += 1 (../../sc/dataset/mainnet/0x65b85b31813df46726a2600d853b6f0db1b3f425.sol#1221)
		- buyer.credits = buyer.credits.sub(paid) (../../sc/dataset/mainnet/0x65b85b31813df46726a2600d853b6f0db1b3f425.sol#1235)
		- buyer.lifetimeCreditsUsed = buyer.lifetimeCreditsUsed.add(paid) (../../sc/dataset/mainnet/0x65b85b31813df46726a2600d853b6f0db1b3f425.sol#1236)
	- (totalPayable,totalBuyers) = processSalesForAllBuyers(apiId) (../../sc/dataset/mainnet/0x65b85b31813df46726a2600d853b6f0db1b3f425.sol#881)
		- apiBalance.nonzeroAddresses = new address[](0) (../../sc/dataset/mainnet/0x65b85b31813df46726a2600d853b6f0db1b3f425.sol#1130)
		- apiBalance.amounts[buyerAddress] = buyerNowOwes (../../sc/dataset/mainnet/0x65b85b31813df46726a2600d853b6f0db1b3f425.sol#1149)
		- apiBalance.nonzeroAddresses.push(buyerAddress) (../../sc/dataset/mainnet/0x65b85b31813df46726a2600d853b6f0db1b3f425.sol#1153)
		- apiBalance.buyerLastPaidAt[buyerAddress] = now (../../sc/dataset/mainnet/0x65b85b31813df46726a2600d853b6f0db1b3f425.sol#1161)
	- safeWithdrawAmount += fee (../../sc/dataset/mainnet/0x65b85b31813df46726a2600d853b6f0db1b3f425.sol#892)
Reentrancy in APICalls.paySellerForBuyer(uint256,address) (../../sc/dataset/mainnet/0x65b85b31813df46726a2600d853b6f0db1b3f425.sol#810-854):
	External calls:
	- apiRegistryAddress = relay.apiRegistryContractAddress() (../../sc/dataset/mainnet/0x65b85b31813df46726a2600d853b6f0db1b3f425.sol#813)
	- (pricePerCall,sellerUsername,apiName,sellerAddress) = apiRegistry.getApiByIdWithoutDynamics(apiId) (../../sc/dataset/mainnet/0x65b85b31813df46726a2600d853b6f0db1b3f425.sol#823)
	State variables written after the call(s):
	- buyerPaid = processSalesForSingleBuyer(apiId,buyerAddress) (../../sc/dataset/mainnet/0x65b85b31813df46726a2600d853b6f0db1b3f425.sol#828)
		- buyer.overdrafted = false (../../sc/dataset/mainnet/0x65b85b31813df46726a2600d853b6f0db1b3f425.sol#1197)
		- buyer.exceededApprovedAmount[apiId] = false (../../sc/dataset/mainnet/0x65b85b31813df46726a2600d853b6f0db1b3f425.sol#1203)
		- buyer.exceededApprovedAmount[apiId] = true (../../sc/dataset/mainnet/0x65b85b31813df46726a2600d853b6f0db1b3f425.sol#1211)
		- buyer.lifetimeExceededApprovalAmountCount += 1 (../../sc/dataset/mainnet/0x65b85b31813df46726a2600d853b6f0db1b3f425.sol#1212)
		- buyer.overdrafted = true (../../sc/dataset/mainnet/0x65b85b31813df46726a2600d853b6f0db1b3f425.sol#1220)
		- buyer.lifetimeOverdraftCount += 1 (../../sc/dataset/mainnet/0x65b85b31813df46726a2600d853b6f0db1b3f425.sol#1221)
		- buyer.credits = buyer.credits.sub(paid) (../../sc/dataset/mainnet/0x65b85b31813df46726a2600d853b6f0db1b3f425.sol#1235)
		- buyer.lifetimeCreditsUsed = buyer.lifetimeCreditsUsed.add(paid) (../../sc/dataset/mainnet/0x65b85b31813df46726a2600d853b6f0db1b3f425.sol#1236)
	- buyerPaid = processSalesForSingleBuyer(apiId,buyerAddress) (../../sc/dataset/mainnet/0x65b85b31813df46726a2600d853b6f0db1b3f425.sol#828)
		- apiBalance.nonzeroAddresses[i] = apiBalance.nonzeroAddresses[i + 1] (../../sc/dataset/mainnet/0x65b85b31813df46726a2600d853b6f0db1b3f425.sol#1249)
		- apiBalance.amounts[buyerAddress] = buyerNowOwes (../../sc/dataset/mainnet/0x65b85b31813df46726a2600d853b6f0db1b3f425.sol#1102)
		- apiBalance.nonzeroAddresses.length -- (../../sc/dataset/mainnet/0x65b85b31813df46726a2600d853b6f0db1b3f425.sol#1253)
		- apiBalance.buyerLastPaidAt[buyerAddress] = now (../../sc/dataset/mainnet/0x65b85b31813df46726a2600d853b6f0db1b3f425.sol#1117)
	- safeWithdrawAmount += fee (../../sc/dataset/mainnet/0x65b85b31813df46726a2600d853b6f0db1b3f425.sol#839)
Reentrancy in APICalls.reportUsage(uint256,uint256,address) (../../sc/dataset/mainnet/0x65b85b31813df46726a2600d853b6f0db1b3f425.sol#760-804):
	External calls:
	- apiRegistryAddress = relay.apiRegistryContractAddress() (../../sc/dataset/mainnet/0x65b85b31813df46726a2600d853b6f0db1b3f425.sol#763)
	- (pricePerCall,sellerUsername,apiName,sellerAddress) = apiRegistry.getApiByIdWithoutDynamics(apiId) (../../sc/dataset/mainnet/0x65b85b31813df46726a2600d853b6f0db1b3f425.sol#773)
	State variables written after the call(s):
	- apiBalance.nonzeroAddresses.push(buyerAddress) (../../sc/dataset/mainnet/0x65b85b31813df46726a2600d853b6f0db1b3f425.sol#790)
	- apiBalance.amounts[buyerAddress] = apiBalance.amounts[buyerAddress].add(totalPrice) (../../sc/dataset/mainnet/0x65b85b31813df46726a2600d853b6f0db1b3f425.sol#793)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2
INFO:Detectors:
Reentrancy in APICalls.paySeller(uint256) (../../sc/dataset/mainnet/0x65b85b31813df46726a2600d853b6f0db1b3f425.sol#860-910):
	External calls:
	- apiRegistryAddress = relay.apiRegistryContractAddress() (../../sc/dataset/mainnet/0x65b85b31813df46726a2600d853b6f0db1b3f425.sol#863)
	- (pricePerCall,sellerUsername,apiName,sellerAddress) = apiRegistry.getApiByIdWithoutDynamics(apiId) (../../sc/dataset/mainnet/0x65b85b31813df46726a2600d853b6f0db1b3f425.sol#873)
	Event emitted after the call(s):
	- LogAPICallsPaid(apiId,sellerAddress,totalPayable,totalTokenReward,fee) (../../sc/dataset/mainnet/0x65b85b31813df46726a2600d853b6f0db1b3f425.sol#897-903)
	- LogSpendCredits(buyerAddress,apiId,buyerPaid,overdrafted) (../../sc/dataset/mainnet/0x65b85b31813df46726a2600d853b6f0db1b3f425.sol#1158)
		- (totalPayable,totalBuyers) = processSalesForAllBuyers(apiId) (../../sc/dataset/mainnet/0x65b85b31813df46726a2600d853b6f0db1b3f425.sol#881)
Reentrancy in APICalls.paySellerForBuyer(uint256,address) (../../sc/dataset/mainnet/0x65b85b31813df46726a2600d853b6f0db1b3f425.sol#810-854):
	External calls:
	- apiRegistryAddress = relay.apiRegistryContractAddress() (../../sc/dataset/mainnet/0x65b85b31813df46726a2600d853b6f0db1b3f425.sol#813)
	- (pricePerCall,sellerUsername,apiName,sellerAddress) = apiRegistry.getApiByIdWithoutDynamics(apiId) (../../sc/dataset/mainnet/0x65b85b31813df46726a2600d853b6f0db1b3f425.sol#823)
	Event emitted after the call(s):
	- LogAPICallsPaid(apiId,sellerAddress,buyerPaid,tokenReward,fee) (../../sc/dataset/mainnet/0x65b85b31813df46726a2600d853b6f0db1b3f425.sol#841-847)
	- LogSpendCredits(buyerAddress,apiId,buyerPaid,overdrafted) (../../sc/dataset/mainnet/0x65b85b31813df46726a2600d853b6f0db1b3f425.sol#1114)
		- buyerPaid = processSalesForSingleBuyer(apiId,buyerAddress) (../../sc/dataset/mainnet/0x65b85b31813df46726a2600d853b6f0db1b3f425.sol#828)
Reentrancy in APICalls.reportUsage(uint256,uint256,address) (../../sc/dataset/mainnet/0x65b85b31813df46726a2600d853b6f0db1b3f425.sol#760-804):
	External calls:
	- apiRegistryAddress = relay.apiRegistryContractAddress() (../../sc/dataset/mainnet/0x65b85b31813df46726a2600d853b6f0db1b3f425.sol#763)
	- (pricePerCall,sellerUsername,apiName,sellerAddress) = apiRegistry.getApiByIdWithoutDynamics(apiId) (../../sc/dataset/mainnet/0x65b85b31813df46726a2600d853b6f0db1b3f425.sol#773)
	Event emitted after the call(s):
	- LogAPICallsMade(apiId,sellerAddress,buyerAddress,pricePerCall,numCalls,totalPrice,msg.sender) (../../sc/dataset/mainnet/0x65b85b31813df46726a2600d853b6f0db1b3f425.sol#795-803)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3
INFO:Detectors:
APICalls.processSalesForSingleBuyer(uint256,address) (../../sc/dataset/mainnet/0x65b85b31813df46726a2600d853b6f0db1b3f425.sol#1085-1120) uses timestamp for comparisons
	Dangerous comparisons:
	- buyerLastPaidAtTime == 0 (../../sc/dataset/mainnet/0x65b85b31813df46726a2600d853b6f0db1b3f425.sol#1090)
APICalls.processSalesForAllBuyers(uint256) (../../sc/dataset/mainnet/0x65b85b31813df46726a2600d853b6f0db1b3f425.sol#1125-1167) uses timestamp for comparisons
	Dangerous comparisons:
	- buyerLastPaidAtTime == 0 (../../sc/dataset/mainnet/0x65b85b31813df46726a2600d853b6f0db1b3f425.sol#1136)
APICalls.chargeBuyer(uint256,address,uint256,uint256) (../../sc/dataset/mainnet/0x65b85b31813df46726a2600d853b6f0db1b3f425.sol#1177-1237) uses timestamp for comparisons
	Dangerous comparisons:
	- approvedAmountSinceLastPayout >= buyerOwes (../../sc/dataset/mainnet/0x65b85b31813df46726a2600d853b6f0db1b3f425.sol#1200)
	- buyer.credits >= approvedAmountSinceLastPayout (../../sc/dataset/mainnet/0x65b85b31813df46726a2600d853b6f0db1b3f425.sol#1224)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp
INFO:Detectors:
APICalls.removeAddressFromNonzeroBalancesArray(uint256,address) (../../sc/dataset/mainnet/0x65b85b31813df46726a2600d853b6f0db1b3f425.sol#1239-1255) compares to a boolean constant:
	-foundElement == true (../../sc/dataset/mainnet/0x65b85b31813df46726a2600d853b6f0db1b3f425.sol#1248)
APICalls.removeAddressFromNonzeroBalancesArray(uint256,address) (../../sc/dataset/mainnet/0x65b85b31813df46726a2600d853b6f0db1b3f425.sol#1239-1255) compares to a boolean constant:
	-foundElement == true (../../sc/dataset/mainnet/0x65b85b31813df46726a2600d853b6f0db1b3f425.sol#1252)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#boolean-equality
INFO:Detectors:
Pragma version0.4.24 (../../sc/dataset/mainnet/0x65b85b31813df46726a2600d853b6f0db1b3f425.sol#2) allows old versions
solc-0.4.24 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity
INFO:Detectors:
Parameter BasicToken.transfer(address,uint256)._to (../../sc/dataset/mainnet/0x65b85b31813df46726a2600d853b6f0db1b3f425.sol#116) is not in mixedCase
Parameter BasicToken.transfer(address,uint256)._value (../../sc/dataset/mainnet/0x65b85b31813df46726a2600d853b6f0db1b3f425.sol#116) is not in mixedCase
Parameter BasicToken.balanceOf(address)._owner (../../sc/dataset/mainnet/0x65b85b31813df46726a2600d853b6f0db1b3f425.sol#132) is not in mixedCase
Parameter APIRegistry.getApiByName(string)._hostname (../../sc/dataset/mainnet/0x65b85b31813df46726a2600d853b6f0db1b3f425.sol#347) is not in mixedCase
Parameter StandardToken.transferFrom(address,address,uint256)._from (../../sc/dataset/mainnet/0x65b85b31813df46726a2600d853b6f0db1b3f425.sol#407) is not in mixedCase
Parameter StandardToken.transferFrom(address,address,uint256)._to (../../sc/dataset/mainnet/0x65b85b31813df46726a2600d853b6f0db1b3f425.sol#407) is not in mixedCase
Parameter StandardToken.transferFrom(address,address,uint256)._value (../../sc/dataset/mainnet/0x65b85b31813df46726a2600d853b6f0db1b3f425.sol#407) is not in mixedCase
Parameter StandardToken.approve(address,uint256)._spender (../../sc/dataset/mainnet/0x65b85b31813df46726a2600d853b6f0db1b3f425.sol#429) is not in mixedCase
Parameter StandardToken.approve(address,uint256)._value (../../sc/dataset/mainnet/0x65b85b31813df46726a2600d853b6f0db1b3f425.sol#429) is not in mixedCase
Parameter StandardToken.allowance(address,address)._owner (../../sc/dataset/mainnet/0x65b85b31813df46726a2600d853b6f0db1b3f425.sol#441) is not in mixedCase
Parameter StandardToken.allowance(address,address)._spender (../../sc/dataset/mainnet/0x65b85b31813df46726a2600d853b6f0db1b3f425.sol#441) is not in mixedCase
Parameter StandardToken.increaseApproval(address,uint256)._spender (../../sc/dataset/mainnet/0x65b85b31813df46726a2600d853b6f0db1b3f425.sol#455) is not in mixedCase
Parameter StandardToken.increaseApproval(address,uint256)._addedValue (../../sc/dataset/mainnet/0x65b85b31813df46726a2600d853b6f0db1b3f425.sol#455) is not in mixedCase
Parameter StandardToken.decreaseApproval(address,uint256)._spender (../../sc/dataset/mainnet/0x65b85b31813df46726a2600d853b6f0db1b3f425.sol#471) is not in mixedCase
Parameter StandardToken.decreaseApproval(address,uint256)._subtractedValue (../../sc/dataset/mainnet/0x65b85b31813df46726a2600d853b6f0db1b3f425.sol#471) is not in mixedCase
Parameter DeconetToken.transfer(address,uint256)._to (../../sc/dataset/mainnet/0x65b85b31813df46726a2600d853b6f0db1b3f425.sol#527) is not in mixedCase
Parameter DeconetToken.transfer(address,uint256)._value (../../sc/dataset/mainnet/0x65b85b31813df46726a2600d853b6f0db1b3f425.sol#527) is not in mixedCase
Parameter DeconetToken.transferFrom(address,address,uint256)._from (../../sc/dataset/mainnet/0x65b85b31813df46726a2600d853b6f0db1b3f425.sol#534) is not in mixedCase
Parameter DeconetToken.transferFrom(address,address,uint256)._to (../../sc/dataset/mainnet/0x65b85b31813df46726a2600d853b6f0db1b3f425.sol#534) is not in mixedCase
Parameter DeconetToken.transferFrom(address,address,uint256)._value (../../sc/dataset/mainnet/0x65b85b31813df46726a2600d853b6f0db1b3f425.sol#534) is not in mixedCase
Parameter DeconetToken.approve(address,uint256)._spender (../../sc/dataset/mainnet/0x65b85b31813df46726a2600d853b6f0db1b3f425.sol#541) is not in mixedCase
Parameter DeconetToken.approve(address,uint256)._value (../../sc/dataset/mainnet/0x65b85b31813df46726a2600d853b6f0db1b3f425.sol#541) is not in mixedCase
Parameter DeconetToken.increaseApproval(address,uint256)._spender (../../sc/dataset/mainnet/0x65b85b31813df46726a2600d853b6f0db1b3f425.sol#548) is not in mixedCase
Parameter DeconetToken.increaseApproval(address,uint256)._addedValue (../../sc/dataset/mainnet/0x65b85b31813df46726a2600d853b6f0db1b3f425.sol#548) is not in mixedCase
Parameter DeconetToken.decreaseApproval(address,uint256)._spender (../../sc/dataset/mainnet/0x65b85b31813df46726a2600d853b6f0db1b3f425.sol#555) is not in mixedCase
Parameter DeconetToken.decreaseApproval(address,uint256)._subtractedValue (../../sc/dataset/mainnet/0x65b85b31813df46726a2600d853b6f0db1b3f425.sol#555) is not in mixedCase
Parameter APICalls.setWithdrawAddress(address)._withdrawAddress (../../sc/dataset/mainnet/0x65b85b31813df46726a2600d853b6f0db1b3f425.sol#707) is not in mixedCase
Parameter APICalls.setUsageReportingAddress(address)._usageReportingAddress (../../sc/dataset/mainnet/0x65b85b31813df46726a2600d853b6f0db1b3f425.sol#715) is not in mixedCase
Parameter APICalls.setRelayContractAddress(address)._relayContractAddress (../../sc/dataset/mainnet/0x65b85b31813df46726a2600d853b6f0db1b3f425.sol#723) is not in mixedCase
Parameter APICalls.setTokenContractAddress(address)._tokenContractAddress (../../sc/dataset/mainnet/0x65b85b31813df46726a2600d853b6f0db1b3f425.sol#731) is not in mixedCase
Parameter APICalls.setTokenReward(uint256)._tokenReward (../../sc/dataset/mainnet/0x65b85b31813df46726a2600d853b6f0db1b3f425.sol#739) is not in mixedCase
Parameter APICalls.setSaleFee(uint256)._saleFee (../../sc/dataset/mainnet/0x65b85b31813df46726a2600d853b6f0db1b3f425.sol#746) is not in mixedCase
Parameter APICalls.setDefaultBuyerLastPaidAt(uint256)._defaultBuyerLastPaidAt (../../sc/dataset/mainnet/0x65b85b31813df46726a2600d853b6f0db1b3f425.sol#753) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions
INFO:Detectors:
Reentrancy in APICalls.withdrawCredits(uint256) (../../sc/dataset/mainnet/0x65b85b31813df46726a2600d853b6f0db1b3f425.sol#962-968):
	External calls:
	- msg.sender.transfer(amount) (../../sc/dataset/mainnet/0x65b85b31813df46726a2600d853b6f0db1b3f425.sol#966)
	Event emitted after the call(s):
	- LogWithdrawCredits(msg.sender,amount) (../../sc/dataset/mainnet/0x65b85b31813df46726a2600d853b6f0db1b3f425.sol#967)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-4
INFO:Detectors:
DeconetToken.constructor() (../../sc/dataset/mainnet/0x65b85b31813df46726a2600d853b6f0db1b3f425.sol#496-506) uses literals with too many digits:
	- totalSupply_ = 1000000000 * 10 ** uint256(decimals) (../../sc/dataset/mainnet/0x65b85b31813df46726a2600d853b6f0db1b3f425.sol#498)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits
INFO:Detectors:
listApi(uint256,bytes32,bytes32,string,string) should be declared external:
	- APIRegistry.listApi(uint256,bytes32,bytes32,string,string) (../../sc/dataset/mainnet/0x65b85b31813df46726a2600d853b6f0db1b3f425.sol#266-284)
getApiId(string) should be declared external:
	- APIRegistry.getApiId(string) (../../sc/dataset/mainnet/0x65b85b31813df46726a2600d853b6f0db1b3f425.sol#289-291)
getApiByName(string) should be declared external:
	- APIRegistry.getApiByName(string) (../../sc/dataset/mainnet/0x65b85b31813df46726a2600d853b6f0db1b3f425.sol#346-372)
editApi(uint256,uint256,address,string) should be declared external:
	- APIRegistry.editApi(uint256,uint256,address,string) (../../sc/dataset/mainnet/0x65b85b31813df46726a2600d853b6f0db1b3f425.sol#377-394)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external
INFO:Slither:/bdata2/sc/dataset/mainnet/0x65b85b31813df46726a2600d853b6f0db1b3f425.sol analyzed (11 contracts with 85 detectors), 61 result(s) found
