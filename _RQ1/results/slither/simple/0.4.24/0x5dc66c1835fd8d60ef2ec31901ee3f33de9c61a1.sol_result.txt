Compilation warnings/errors on /bdata2/sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol:
/bdata2/sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol:286:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function Owned() public 
    ^ (Relevant source part starts here and spans across multiple lines).
/bdata2/sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol:600:2: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
	function TTGOracle() public 
 ^ (Relevant source part starts here and spans across multiple lines).
/bdata2/sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol:238:3: Warning: Invoking events without "emit" prefix is deprecated.
		Approval(msg.sender, _to, _tokenId);
		^---------------------------------^
/bdata2/sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol:262:4: Warning: Invoking events without "emit" prefix is deprecated.
			Transfer(_from, _to, _tokenId);
			^----------------------------^
/bdata2/sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol:640:3: Warning: Invoking events without "emit" prefix is deprecated.
		LogEvent( "AddGame", _nameLottery, newGameId );
		^--------------------------------------------^
/bdata2/sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol:703:3: Warning: Invoking events without "emit" prefix is deprecated.
		LogToken( "Buy", msg.sender, idLottery, uint32(newTokenId), combination, userStake);
		^---------------------------------------------------------------------------------^
/bdata2/sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol:741:3: Warning: Invoking events without "emit" prefix is deprecated.
		LogToken( "Redeem", msg.sender, idLottery, uint32(_tokenId), combination, sumPayment);
		^-----------------------------------------------------------------------------------^
/bdata2/sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol:754:3: Warning: Invoking events without "emit" prefix is deprecated.
		LogEvent( "CancelLottery", curGame.nameLottery, idLottery );
		^---------------------------------------------------------^
/bdata2/sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol:775:3: Warning: Invoking events without "emit" prefix is deprecated.
		LogEvent( error, curGame.nameLottery, tmpCombination );
		^----------------------------------------------------^
/bdata2/sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol:793:3: Warning: Invoking events without "emit" prefix is deprecated.
		LogEvent( "ResolveLotteryByOraclize", curGame.nameLottery, delaySec );
		^-------------------------------------------------------------------^
/bdata2/sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol:818:3: Warning: Invoking events without "emit" prefix is deprecated.
		LogEvent( "ResolveLotteryByHand", curGame.nameLottery, curGame.winCombination );
		^-----------------------------------------------------------------------------^
/bdata2/sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol:834:4: Warning: Invoking events without "emit" prefix is deprecated.
			LogEvent( "NOBODYWIN", curGame.nameLottery, curGame.betsSumIn+curGame.feeValue );
			^------------------------------------------------------------------------------^
/bdata2/sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol:848:4: Warning: Invoking events without "emit" prefix is deprecated.
			LogEvent( "TakeFee", curGame.nameLottery, curGame.feeValue );
			^----------------------------------------------------------^
/bdata2/sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol:860:3: Warning: Invoking events without "emit" prefix is deprecated.
		LogEvent( "WITHDRAW", "", tmpFeeLottery);
		^--------------------------------------^
/bdata2/sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol:867:3: Warning: Functions in interfaces should be declared external.
  function airDrop(address transmitter, address receiver, uint amount) public  returns (uint actual);  
  ^-------------------------------------------------------------------------------------------------^
/bdata2/sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol:871:5: Warning: Functions in interfaces should be declared external.
    function ownerOf (uint256 _itemId) public view returns (address _owner);  
    ^----------------------------------------------------------------------^

INFO:Detectors:
Reentrancy in TTGOracle.redeemToken(uint256,uint32) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#707-742):
	External calls:
	- teamOwner = itemToken.ownerOf(teamID) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#728)
	External calls sending eth:
	- teamOwner.transfer(sumPayment.div(100)) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#730)
	State variables written after the call(s):
	- tkn.option = packed (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#737)
	ERC721.tokens (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#186) can be used in cross function reentrancies:
	- TTGOracle.buyToken(uint32,uint32,uint32,address) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#653-704)
	- TTGOracle.getTokenByID(uint256) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#504-537)
	- TTGOracle.getUserTokensByMatch(address,uint32) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#556-576)
	- TTGOracle.redeemToken(uint256,uint32) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#707-742)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities
INFO:Detectors:
usingOraclize.getCodeSize(address) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#147-151) is declared view but contains assembly code
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#constant-functions-using-assembly-code
INFO:Detectors:
TTGOracle.redeemToken(uint256,uint32) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#707-742) performs a multiplication on the result of a division:
	- sumPayment = curGame.betsSumIn * tkn.price / betsAll[idLottery][curGame.winCombination].sum (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#727)
	- sumPayment = sumPayment.mul(99).div(100) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#731)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#divide-before-multiply
INFO:Detectors:
Reentrancy in TTGOracle.buyToken(uint32,uint32,uint32,address) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#653-704):
	External calls:
	- ttgCoin.airDrop(this,msg.sender,airDropAmountUser) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#668)
	- teamOwner = itemToken.ownerOf(teamID) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#669)
	- ttgCoin.airDrop(this,teamOwner,airDropAmountOwner) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#673)
	- ttgCoin.airDrop(this,captainAddress,airDropAmountOwner) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#684)
	State variables written after the call(s):
	- curGame.feeValue = curGame.feeValue.add(feeValue) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#687)
	TTGOracle.game (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#412) can be used in cross function reentrancies:
	- TTGOracle.__callback(bytes32,string) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#759-782)
	- TTGOracle.addLottery(string,uint32,uint32,uint32,uint32,uint32,uint32) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#618-641)
	- TTGOracle.buyToken(uint32,uint32,uint32,address) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#653-704)
	- TTGOracle.cancelLottery(uint32) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#744-757)
	- TTGOracle.checkWinNobody(uint32) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#823-838)
	- TTGOracle.freezeLottery(uint32,bool) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#611-616)
	- TTGOracle.getCountTokensByLottery(uint32) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#488-494)
	- TTGOracle.getLotteryByID(uint32) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#455-486)
	- TTGOracle.getStatLotteries() (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#578-598)
	- TTGOracle.getSumInByLottery(uint32) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#496-502)
	- TTGOracle.getTokenByID(uint256) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#504-537)
	- TTGOracle.redeemToken(uint256,uint32) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#707-742)
	- TTGOracle.resolveLotteryByHand(uint32,uint32) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#806-821)
	- TTGOracle.resolveLotteryByOraclize(uint32,uint32) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#784-804)
	- TTGOracle.takeFee(uint32) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#840-850)
Reentrancy in usingOraclize.oraclizeAPI() (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#83-92):
	External calls:
	- address(oraclize) != OAR.getAddress() (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#88)
	- oraclize = OraclizeI(OAR.getAddress()) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#89)
	State variables written after the call(s):
	- oraclize = OraclizeI(OAR.getAddress()) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#89)
Reentrancy in TTGOracle.resolveLotteryByOraclize(uint32,uint32) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#784-804):
	External calls:
	- oraclizeFee = oraclize_getPrice(URL,ORACLIZE_GAS_LIMIT) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#788)
		- oraclize.getPrice(datasource,gaslimit) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#136)
		- address(oraclize) != OAR.getAddress() (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#88)
		- oraclize = OraclizeI(OAR.getAddress()) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#89)
	State variables written after the call(s):
	- curGame.feeValue = curGame.feeValue + msg.value - oraclizeFee (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#791)
	TTGOracle.game (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#412) can be used in cross function reentrancies:
	- TTGOracle.__callback(bytes32,string) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#759-782)
	- TTGOracle.addLottery(string,uint32,uint32,uint32,uint32,uint32,uint32) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#618-641)
	- TTGOracle.buyToken(uint32,uint32,uint32,address) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#653-704)
	- TTGOracle.cancelLottery(uint32) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#744-757)
	- TTGOracle.checkWinNobody(uint32) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#823-838)
	- TTGOracle.freezeLottery(uint32,bool) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#611-616)
	- TTGOracle.getCountTokensByLottery(uint32) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#488-494)
	- TTGOracle.getLotteryByID(uint32) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#455-486)
	- TTGOracle.getStatLotteries() (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#578-598)
	- TTGOracle.getSumInByLottery(uint32) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#496-502)
	- TTGOracle.getTokenByID(uint256) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#504-537)
	- TTGOracle.redeemToken(uint256,uint32) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#707-742)
	- TTGOracle.resolveLotteryByHand(uint32,uint32) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#806-821)
	- TTGOracle.resolveLotteryByOraclize(uint32,uint32) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#784-804)
	- TTGOracle.takeFee(uint32) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#840-850)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1
INFO:Detectors:
TTGOracle.getUserTokens(address,uint32) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#539-554) contains a tautology or contradiction:
	- i >= 0 (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#544)
TTGOracle.getUserTokensByMatch(address,uint32) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#556-576) contains a tautology or contradiction:
	- i >= 0 (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#561)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#tautology-or-contradiction
INFO:Detectors:
TTGOracle.addLottery(string,uint32,uint32,uint32,uint32,uint32,uint32)._game (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#626) is a local variable never initialized
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#uninitialized-local-variables
INFO:Detectors:
TTGOracle.buyToken(uint32,uint32,uint32,address) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#653-704) ignores return value by ttgCoin.airDrop(this,msg.sender,airDropAmountUser) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#668)
TTGOracle.buyToken(uint32,uint32,uint32,address) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#653-704) ignores return value by ttgCoin.airDrop(this,teamOwner,airDropAmountOwner) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#673)
TTGOracle.buyToken(uint32,uint32,uint32,address) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#653-704) ignores return value by ttgCoin.airDrop(this,captainAddress,airDropAmountOwner) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#684)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return
INFO:Detectors:
Owned.changeOwner(address).newOwner (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#291) lacks a zero-check on :
		- candidate = newOwner (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#294)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation
INFO:Detectors:
Variable 'TTGOracle.buyToken(uint32,uint32,uint32,address).airDropAmountOwner (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#671)' in TTGOracle.buyToken(uint32,uint32,uint32,address) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#653-704) potentially used before declaration: ttgCoin.airDrop(this,captainAddress,airDropAmountOwner) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#684)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#pre-declaration-usage-of-local-variables
INFO:Detectors:
Reentrancy in TTGOracle.__callback(bytes32,string) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#759-782):
	External calls:
	- onlyOraclize() (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#759)
		- oraclize.cbAddress() (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#144)
		- address(oraclize) != OAR.getAddress() (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#88)
		- oraclize = OraclizeI(OAR.getAddress()) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#89)
	State variables written after the call(s):
	- checkWinNobody(idLottery) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#780)
		- feeLottery = feeLottery + curGame.feeValue (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#847)
		- feeLottery = feeLottery.add(curGame.betsSumIn).add(curGame.feeValue) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#833)
	- curGame.winCombination = tmpCombination (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#779)
	- checkWinNobody(idLottery) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#780)
		- curGame.status = Status.PAYING (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#827)
		- curGame.betsSumIn = getSumInByLottery(idLottery) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#828)
Reentrancy in TTGOracle.buyToken(uint32,uint32,uint32,address) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#653-704):
	External calls:
	- ttgCoin.airDrop(this,msg.sender,airDropAmountUser) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#668)
	- teamOwner = itemToken.ownerOf(teamID) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#669)
	- ttgCoin.airDrop(this,teamOwner,airDropAmountOwner) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#673)
	- ttgCoin.airDrop(this,captainAddress,airDropAmountOwner) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#684)
	State variables written after the call(s):
	- betsAll[idLottery][combination].sum += userStake (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#688)
	- betsAll[idLottery][combination].count ++ (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#689)
	- _transfer(0,msg.sender,newTokenId) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#701)
		- ownershipTokenCount[_to] ++ (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#257)
		- ownershipTokenCount[_from] -- (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#263)
	- _transfer(0,msg.sender,newTokenId) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#701)
		- delete tokenIndexToApproved[_tokenId] (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#265)
	- _transfer(0,msg.sender,newTokenId) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#701)
		- tokenIndexToOwner[_tokenId] = _to (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#258)
	- tokens[newTokenId] = _token (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#700)
	- newTokenId = totalSupply ++ (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#699)
Reentrancy in TTGOracle.resolveLotteryByOraclize(uint32,uint32) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#784-804):
	External calls:
	- oraclizeFee = oraclize_getPrice(URL,ORACLIZE_GAS_LIMIT) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#788)
		- oraclize.getPrice(datasource,gaslimit) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#136)
		- address(oraclize) != OAR.getAddress() (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#88)
		- oraclize = OraclizeI(OAR.getAddress()) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#89)
	- queryId = oraclize_query(delay,URL,tmpQuery,ORACLIZE_GAS_LIMIT) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#802)
		- price = oraclize.getPrice(datasource,gaslimit) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#126)
		- address(oraclize) != OAR.getAddress() (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#88)
		- oraclize = OraclizeI(OAR.getAddress()) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#89)
		- oraclize.query_withGasLimit.value(price)(timestamp,datasource,arg,gaslimit) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#128)
	External calls sending eth:
	- queryId = oraclize_query(delay,URL,tmpQuery,ORACLIZE_GAS_LIMIT) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#802)
		- oraclize.query_withGasLimit.value(price)(timestamp,datasource,arg,gaslimit) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#128)
	State variables written after the call(s):
	- queryRes[queryId] = idLottery (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#803)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2
INFO:Detectors:
Reentrancy in TTGOracle.__callback(bytes32,string) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#759-782):
	External calls:
	- onlyOraclize() (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#759)
		- oraclize.cbAddress() (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#144)
		- address(oraclize) != OAR.getAddress() (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#88)
		- oraclize = OraclizeI(OAR.getAddress()) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#89)
	Event emitted after the call(s):
	- LogEvent(TakeFee,curGame.nameLottery,curGame.feeValue) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#848)
		- checkWinNobody(idLottery) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#780)
	- LogEvent(NOBODYWIN,curGame.nameLottery,curGame.betsSumIn + curGame.feeValue) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#834)
		- checkWinNobody(idLottery) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#780)
	- LogEvent(error,curGame.nameLottery,tmpCombination) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#775)
Reentrancy in TTGOracle.buyToken(uint32,uint32,uint32,address) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#653-704):
	External calls:
	- ttgCoin.airDrop(this,msg.sender,airDropAmountUser) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#668)
	- teamOwner = itemToken.ownerOf(teamID) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#669)
	- ttgCoin.airDrop(this,teamOwner,airDropAmountOwner) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#673)
	- ttgCoin.airDrop(this,captainAddress,airDropAmountOwner) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#684)
	Event emitted after the call(s):
	- LogToken(Buy,msg.sender,idLottery,uint32(newTokenId),combination,userStake) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#703)
	- Transfer(_from,_to,_tokenId) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#262)
		- _transfer(0,msg.sender,newTokenId) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#701)
Reentrancy in TTGOracle.redeemToken(uint256,uint32) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#707-742):
	External calls:
	- teamOwner = itemToken.ownerOf(teamID) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#728)
	External calls sending eth:
	- teamOwner.transfer(sumPayment.div(100)) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#730)
	- msg.sender.transfer(sumPayment) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#739)
	Event emitted after the call(s):
	- LogToken(Redeem,msg.sender,idLottery,uint32(_tokenId),combination,sumPayment) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#741)
Reentrancy in TTGOracle.resolveLotteryByOraclize(uint32,uint32) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#784-804):
	External calls:
	- oraclizeFee = oraclize_getPrice(URL,ORACLIZE_GAS_LIMIT) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#788)
		- oraclize.getPrice(datasource,gaslimit) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#136)
		- address(oraclize) != OAR.getAddress() (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#88)
		- oraclize = OraclizeI(OAR.getAddress()) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#89)
	Event emitted after the call(s):
	- LogEvent(ResolveLotteryByOraclize,curGame.nameLottery,delaySec) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#793)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3
INFO:Detectors:
TTGOracle.getLotteryByID(uint32) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#455-486) uses timestamp for comparisons
	Dangerous comparisons:
	- status == Status.PLAYING && timenow() > dateStopBuy (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#484)
TTGOracle.getStatLotteries() (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#578-598) uses timestamp for comparisons
	Dangerous comparisons:
	- curtime < game[i].dateStopBuy (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#594)
	- curtime >= game[i].dateStopBuy (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#595)
TTGOracle.addLottery(string,uint32,uint32,uint32,uint32,uint32,uint32) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#618-641) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool)(_dateStopBuy > timenow()) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#624)
TTGOracle.buyToken(uint32,uint32,uint32,address) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#653-704) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool)(timenow() < curGame.dateStopBuy) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#657)
TTGOracle.cancelLottery(uint32) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#744-757) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool)(msg.sender == owner || admins[msg.sender] || timenow() > curGame.dateStopBuy.add(7 * 24 * 60 * 60)) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#750)
TTGOracle.__callback(bytes32,string) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#759-782) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool)(timenow() > curGame.dateStopBuy) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#767)
TTGOracle.resolveLotteryByOraclize(uint32,uint32) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#784-804) uses timestamp for comparisons
	Dangerous comparisons:
	- timenow() < curGame.dateStopBuy (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#799)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp
INFO:Detectors:
usingOraclize.getCodeSize(address) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#147-151) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#148-151)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage
INFO:Detectors:
TTGOracle.buyToken(uint32,uint32,uint32,address) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#653-704) compares to a boolean constant:
	-require(bool)(curGame.isFreezing == false) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#660)
TTGOracle.redeemToken(uint256,uint32) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#707-742) compares to a boolean constant:
	-require(bool)(payout == false) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#721)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#boolean-equality
INFO:Detectors:
SafeMathLib.plus(uint256,uint256) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#24-28) is never used and should be removed
SafeMathLib.sub(uint256,uint256) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#42-45) is never used and should be removed
SafeMathLib.times(uint256,uint256) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#13-17) is never used and should be removed
usingOraclize.oraclize_getPrice(string) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#131-133) is never used and should be removed
usingOraclize.oraclize_query(string,string,uint256) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#119-123) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code
INFO:Detectors:
Pragma version^0.4.18 (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#2) allows old versions
solc-0.4.24 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity
INFO:Detectors:
Function OraclizeI.query_withGasLimit(uint256,string,string,uint256) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#58) is not in mixedCase
Function OraclizeI.query2_withGasLimit(uint256,string,string,string,uint256) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#60) is not in mixedCase
Function OraclizeI.queryN_withGasLimit(uint256,string,bytes,uint256) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#62) is not in mixedCase
Function OraclizeI.randomDS_getSessionPubKeyHash() (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#67) is not in mixedCase
Contract usingOraclize (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#72-153) is not in CapWords
Function usingOraclize.oraclize_setNetwork(uint8) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#98-102) is not in mixedCase
Function usingOraclize.oraclize_setNetwork() (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#104-117) is not in mixedCase
Function usingOraclize.oraclize_query(string,string,uint256) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#119-123) is not in mixedCase
Function usingOraclize.oraclize_query(uint256,string,string,uint256) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#125-129) is not in mixedCase
Function usingOraclize.oraclize_getPrice(string) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#131-133) is not in mixedCase
Function usingOraclize.oraclize_getPrice(string,uint256) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#135-137) is not in mixedCase
Function usingOraclize.oraclize_setCustomGasPrice(uint256) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#139-141) is not in mixedCase
Function usingOraclize.oraclize_cbAddress() (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#143-145) is not in mixedCase
Constant usingOraclize.networkID_auto (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#74) is not in UPPER_CASE_WITH_UNDERSCORES
Constant usingOraclize.networkID_mainnet (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#75) is not in UPPER_CASE_WITH_UNDERSCORES
Constant usingOraclize.networkID_testnet (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#76) is not in UPPER_CASE_WITH_UNDERSCORES
Constant usingOraclize.networkID_morden (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#77) is not in UPPER_CASE_WITH_UNDERSCORES
Constant usingOraclize.networkID_consensys (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#78) is not in UPPER_CASE_WITH_UNDERSCORES
Variable usingOraclize.OAR (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#80) is not in mixedCase
Parameter ERC721.balanceOf(address)._owner (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#204) is not in mixedCase
Parameter ERC721.ownerOf(uint256)._tokenId (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#209) is not in mixedCase
Parameter ERC721.approve(address,uint256)._to (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#229) is not in mixedCase
Parameter ERC721.approve(address,uint256)._tokenId (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#229) is not in mixedCase
Parameter ERC721.transferFrom(address,address,uint256)._from (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#241) is not in mixedCase
Parameter ERC721.transferFrom(address,address,uint256)._to (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#241) is not in mixedCase
Parameter ERC721.transferFrom(address,address,uint256)._tokenId (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#241) is not in mixedCase
Parameter ERC721.transfer(address,uint256)._to (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#270) is not in mixedCase
Parameter ERC721.transfer(address,uint256)._tokenId (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#270) is not in mixedCase
Parameter Functional.parseInt(string,uint256)._a (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#319) is not in mixedCase
Parameter Functional.parseInt(string,uint256)._b (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#319) is not in mixedCase
Parameter Functional.strConcat(string,string,string)._a (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#356) is not in mixedCase
Parameter Functional.strConcat(string,string,string)._b (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#356) is not in mixedCase
Parameter Functional.strConcat(string,string,string)._c (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#356) is not in mixedCase
Parameter TTGOracle.setTTGCoin(address)._ttgCoin (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#446) is not in mixedCase
Parameter TTGOracle.setItemToken(address)._itemToken (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#450) is not in mixedCase
Parameter TTGOracle.getLotteryByID(uint32)._id (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#455) is not in mixedCase
Parameter TTGOracle.getTokenByID(uint256)._id (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#504) is not in mixedCase
Parameter TTGOracle.addLottery(string,uint32,uint32,uint32,uint32,uint32,uint32)._nameLottery (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#618) is not in mixedCase
Parameter TTGOracle.addLottery(string,uint32,uint32,uint32,uint32,uint32,uint32)._dateStopBuy (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#618) is not in mixedCase
Parameter TTGOracle.addLottery(string,uint32,uint32,uint32,uint32,uint32,uint32)._countCombinations (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#618) is not in mixedCase
Parameter TTGOracle.addLottery(string,uint32,uint32,uint32,uint32,uint32,uint32)._minStakeFinney (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#618) is not in mixedCase
Parameter TTGOracle.redeemToken(uint256,uint32)._tokenId (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#707) is not in mixedCase
Function TTGOracle.__callback(bytes32,string) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#759-782) is not in mixedCase
Parameter TTGOracle.__callback(bytes32,string)._result (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#759) is not in mixedCase
Variable TTGOracle.ORACLIZE_GAS_LIMIT (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#425) is not in mixedCase
Variable TTGOracle.ORACLIZE_GASPRICE_GWEY (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#426) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions
INFO:Detectors:
Redundant expression "networkID (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#101)" inusingOraclize (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#72-153)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#redundant-statements
INFO:Detectors:
Reentrancy in TTGOracle.redeemToken(uint256,uint32) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#707-742):
	External calls:
	- teamOwner.transfer(sumPayment.div(100)) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#730)
	State variables written after the call(s):
	- tkn.option = packed (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#737)
Reentrancy in TTGOracle.redeemToken(uint256,uint32) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#707-742):
	External calls:
	- teamOwner.transfer(sumPayment.div(100)) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#730)
	- msg.sender.transfer(sumPayment) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#739)
	Event emitted after the call(s):
	- LogToken(Redeem,msg.sender,idLottery,uint32(_tokenId),combination,sumPayment) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#741)
Reentrancy in TTGOracle.withdraw() (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#852-861):
	External calls:
	- owner.transfer(tmpFeeLottery) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#859)
	Event emitted after the call(s):
	- LogEvent(WITHDRAW,,tmpFeeLottery) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#860)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-4
INFO:Detectors:
TTGOracle.slitherConstructorVariables() (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#384-863) uses literals with too many digits:
	- ORACLIZE_GAS_LIMIT = 2000000 (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#425)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits
INFO:Detectors:
usingOraclize.networkID_mainnet (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#75) is never used in TTGOracle (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#384-863)
usingOraclize.networkID_testnet (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#76) is never used in TTGOracle (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#384-863)
usingOraclize.networkID_morden (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#77) is never used in TTGOracle (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#384-863)
usingOraclize.networkID_consensys (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#78) is never used in TTGOracle (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#384-863)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-state-variable
INFO:Detectors:
OraclizeI.cbAddress (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#56) should be constant 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant
INFO:Detectors:
query2(uint256,string,string,string) should be declared external:
	- OraclizeI.query2(uint256,string,string,string) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#59)
queryN(uint256,string,bytes) should be declared external:
	- OraclizeI.queryN(uint256,string,bytes) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#61)
getPrice(string) should be declared external:
	- OraclizeI.getPrice(string) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#63)
getPrice(string,uint256) should be declared external:
	- OraclizeI.getPrice(string,uint256) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#64)
addLottery(string,uint32,uint32,uint32,uint32,uint32,uint32) should be declared external:
	- TTGOracle.addLottery(string,uint32,uint32,uint32,uint32,uint32,uint32) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#618-641)
__callback(bytes32,string) should be declared external:
	- TTGOracle.__callback(bytes32,string) (../../sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol#759-782)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external
INFO:Slither:/bdata2/sc/dataset/mainnet/0x5dc66c1835fd8d60ef2ec31901ee3f33de9c61a1.sol analyzed (11 contracts with 85 detectors), 100 result(s) found
