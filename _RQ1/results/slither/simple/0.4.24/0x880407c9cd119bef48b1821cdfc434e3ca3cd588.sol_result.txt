INFO:Detectors:
CompatibleERC20Functions.safeTransferFrom(address,address,address,uint256) (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#1314-1317) uses arbitrary from in transferFrom: CompatibleERC20(token).transferFrom(from,to,amount) (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#1315)
CompatibleERC20Functions.safeTransferFromWithFees(address,address,address,uint256) (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#1327-1333) uses arbitrary from in transferFrom: CompatibleERC20(token).transferFrom(from,to,amount) (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#1329)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#arbitrary-from-in-transferfrom
INFO:Detectors:
DarknodeRewardVault.withdraw(address,ERC20) (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#1448-1461) sends eth to arbitrary user
	Dangerous calls:
	- darknodeOwner.transfer(value) (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#1457)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#functions-that-send-ether-to-arbitrary-destinations
INFO:Detectors:
DarknodeRegistry.register(address,bytes,uint256) (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#934-955) ignores return value by ren.transfer(address(store),_bond) (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#939)
DarknodeRegistry.slash(address,address,address) (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#1063-1084) ignores return value by ren.transfer(store.darknodeOwner(_challenger1),reward) (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#1082)
DarknodeRegistry.slash(address,address,address) (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#1063-1084) ignores return value by ren.transfer(store.darknodeOwner(_challenger2),reward) (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#1083)
DarknodeRegistry.refund(address) (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#1092-1106) ignores return value by ren.transfer(darknodeOwner,amount) (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#1102)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unchecked-transfer
INFO:Detectors:
CompatibleERC20Functions.previousReturnValue() (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#1338-1365) is declared view but contains assembly code
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#constant-functions-using-assembly-code
INFO:Detectors:
CompatibleERC20 (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#1370-1382) has incorrect ERC20 function interface:CompatibleERC20.transfer(address,uint256) (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#1372)
CompatibleERC20 (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#1370-1382) has incorrect ERC20 function interface:CompatibleERC20.transferFrom(address,address,uint256) (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#1373)
CompatibleERC20 (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#1370-1382) has incorrect ERC20 function interface:CompatibleERC20.approve(address,uint256) (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#1374)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-erc20-interface
INFO:Detectors:
DarknodeRegistry.epoch() (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#975-1016) uses a dangerous strict equality:
	- previousEpoch.blocknumber == 0 (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#976)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dangerous-strict-equalities
INFO:Detectors:
DarknodeRegistry.updateSlasher(address)._slasher (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#1050) lacks a zero-check on :
		- nextSlasher = _slasher (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#1051)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation
INFO:Detectors:
Reentrancy in DarknodeRewardVault.deposit(address,ERC20,uint256) (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#1430-1439):
	External calls:
	- receivedValue = CompatibleERC20(_token).safeTransferFromWithFees(msg.sender,address(this),_value) (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#1436)
	State variables written after the call(s):
	- darknodeBalances[_darknode][_token] = darknodeBalances[_darknode][_token].add(receivedValue) (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#1438)
Reentrancy in DarknodeRegistry.deregister(address) (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#963-970):
	External calls:
	- store.updateDarknodeDeregisteredAt(_darknodeID,currentEpoch.blocknumber + minimumEpochInterval) (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#965)
	- onlyDeregisterable(_darknodeID) (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#963)
		- registeredAt = store.darknodeRegisteredAt(_darknodeID) (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#1215)
		- deregisteredAt = store.darknodeDeregisteredAt(_darknodeID) (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#1179)
		- deregisteredAt = store.darknodeDeregisteredAt(_darknodeID) (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#1216)
	- onlyDarknodeOwner(_darknodeID) (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#963)
		- require(bool,string)(store.darknodeOwner(_darknodeID) == msg.sender,must be darknode owner) (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#852)
	State variables written after the call(s):
	- numDarknodesNextEpoch -= 1 (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#966)
Reentrancy in DarknodeRegistry.register(address,bytes,uint256) (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#934-955):
	External calls:
	- require(bool,string)(ren.transferFrom(msg.sender,address(this),_bond),bond transfer failed) (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#938)
	- ren.transfer(address(store),_bond) (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#939)
	- store.appendDarknode(_darknodeID,msg.sender,_bond,_publicKey,currentEpoch.blocknumber + minimumEpochInterval,0) (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#942-949)
	- onlyRefunded(_darknodeID) (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#934)
		- registeredAt = store.darknodeRegisteredAt(_darknodeID) (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#1189)
		- deregisteredAt = store.darknodeDeregisteredAt(_darknodeID) (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#1190)
	State variables written after the call(s):
	- numDarknodesNextEpoch += 1 (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#951)
Reentrancy in DarknodeRegistry.slash(address,address,address) (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#1063-1084):
	External calls:
	- penalty = store.darknodeBond(_prover) / 2 (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#1067)
	- store.updateDarknodeBond(_prover,penalty) (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#1071)
	- isDeregisterable(_prover) (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#1074)
		- registeredAt = store.darknodeRegisteredAt(_darknodeID) (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#1215)
		- deregisteredAt = store.darknodeDeregisteredAt(_darknodeID) (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#1179)
		- deregisteredAt = store.darknodeDeregisteredAt(_darknodeID) (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#1216)
	- store.updateDarknodeDeregisteredAt(_prover,currentEpoch.blocknumber + minimumEpochInterval) (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#1075)
	State variables written after the call(s):
	- numDarknodesNextEpoch -= 1 (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#1076)
Reentrancy in DarknodeRewardVault.withdraw(address,ERC20) (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#1448-1461):
	External calls:
	- darknodeOwner = darknodeRegistry.getDarknodeOwner(address(_darknode)) (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#1449)
	State variables written after the call(s):
	- darknodeBalances[_darknode][_token] = 0 (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#1454)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2
INFO:Detectors:
Reentrancy in DarknodeRegistry.deregister(address) (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#963-970):
	External calls:
	- store.updateDarknodeDeregisteredAt(_darknodeID,currentEpoch.blocknumber + minimumEpochInterval) (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#965)
	- onlyDeregisterable(_darknodeID) (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#963)
		- registeredAt = store.darknodeRegisteredAt(_darknodeID) (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#1215)
		- deregisteredAt = store.darknodeDeregisteredAt(_darknodeID) (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#1179)
		- deregisteredAt = store.darknodeDeregisteredAt(_darknodeID) (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#1216)
	- onlyDarknodeOwner(_darknodeID) (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#963)
		- require(bool,string)(store.darknodeOwner(_darknodeID) == msg.sender,must be darknode owner) (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#852)
	Event emitted after the call(s):
	- LogDarknodeDeregistered(_darknodeID) (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#969)
Reentrancy in DarknodeRegistry.refund(address) (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#1092-1106):
	External calls:
	- darknodeOwner = store.darknodeOwner(_darknodeID) (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#1093)
	- amount = store.darknodeBond(_darknodeID) (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#1096)
	- store.removeDarknode(_darknodeID) (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#1099)
	- ren.transfer(darknodeOwner,amount) (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#1102)
	- onlyRefundable(_darknodeID) (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#1092)
		- isDeregistered(_darknodeID) && store.darknodeDeregisteredAt(_darknodeID) <= previousEpoch.blocknumber (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#1197)
		- deregisteredAt = store.darknodeDeregisteredAt(_darknodeID) (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#1171)
	Event emitted after the call(s):
	- LogDarknodeOwnerRefunded(darknodeOwner,amount) (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#1105)
Reentrancy in DarknodeRegistry.register(address,bytes,uint256) (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#934-955):
	External calls:
	- require(bool,string)(ren.transferFrom(msg.sender,address(this),_bond),bond transfer failed) (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#938)
	- ren.transfer(address(store),_bond) (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#939)
	- store.appendDarknode(_darknodeID,msg.sender,_bond,_publicKey,currentEpoch.blocknumber + minimumEpochInterval,0) (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#942-949)
	- onlyRefunded(_darknodeID) (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#934)
		- registeredAt = store.darknodeRegisteredAt(_darknodeID) (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#1189)
		- deregisteredAt = store.darknodeDeregisteredAt(_darknodeID) (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#1190)
	Event emitted after the call(s):
	- LogDarknodeRegistered(_darknodeID,_bond) (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#954)
Reentrancy in DarknodeRegistry.slash(address,address,address) (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#1063-1084):
	External calls:
	- penalty = store.darknodeBond(_prover) / 2 (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#1067)
	- store.updateDarknodeBond(_prover,penalty) (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#1071)
	- isDeregisterable(_prover) (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#1074)
		- registeredAt = store.darknodeRegisteredAt(_darknodeID) (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#1215)
		- deregisteredAt = store.darknodeDeregisteredAt(_darknodeID) (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#1179)
		- deregisteredAt = store.darknodeDeregisteredAt(_darknodeID) (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#1216)
	- store.updateDarknodeDeregisteredAt(_prover,currentEpoch.blocknumber + minimumEpochInterval) (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#1075)
	Event emitted after the call(s):
	- LogDarknodeDeregistered(_prover) (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#1077)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3
INFO:Detectors:
CompatibleERC20Functions.previousReturnValue() (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#1338-1365) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#1342-1364)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage
INFO:Detectors:
CompatibleERC20Functions.safeApprove(address,address,uint256) (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#1320-1323) is never used and should be removed
CompatibleERC20Functions.safeTransferFrom(address,address,address,uint256) (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#1314-1317) is never used and should be removed
LinkedList.insertBefore(LinkedList.List,address,address) (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#507-520) is never used and should be removed
LinkedList.prepend(LinkedList.List,address) (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#575-579) is never used and should be removed
LinkedList.previous(LinkedList.List,address) (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#636-639) is never used and should be removed
LinkedList.swap(LinkedList.List,address,address) (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#593-601) is never used and should be removed
Math.max256(uint256,uint256) (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#1281-1283) is never used and should be removed
Math.max64(uint64,uint64) (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#1273-1275) is never used and should be removed
Math.min64(uint64,uint64) (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#1277-1279) is never used and should be removed
SafeMath.div(uint256,uint256) (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#122-127) is never used and should be removed
SafeMath.mul(uint256,uint256) (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#106-117) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code
INFO:Detectors:
Pragma version^0.4.24 (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#2) allows old versions
solc-0.4.24 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity
INFO:Detectors:
Parameter Ownable.transferOwnership(address)._newOwner (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#51) is not in mixedCase
Parameter BasicToken.transfer(address,uint256)._to (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#170) is not in mixedCase
Parameter BasicToken.transfer(address,uint256)._value (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#170) is not in mixedCase
Parameter BasicToken.balanceOf(address)._owner (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#185) is not in mixedCase
Parameter StandardToken.transferFrom(address,address,uint256)._from (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#210) is not in mixedCase
Parameter StandardToken.transferFrom(address,address,uint256)._to (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#211) is not in mixedCase
Parameter StandardToken.transferFrom(address,address,uint256)._value (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#212) is not in mixedCase
Parameter StandardToken.approve(address,uint256)._spender (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#237) is not in mixedCase
Parameter StandardToken.approve(address,uint256)._value (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#237) is not in mixedCase
Parameter StandardToken.allowance(address,address)._owner (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#250) is not in mixedCase
Parameter StandardToken.allowance(address,address)._spender (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#251) is not in mixedCase
Parameter StandardToken.increaseApproval(address,uint256)._spender (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#270) is not in mixedCase
Parameter StandardToken.increaseApproval(address,uint256)._addedValue (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#271) is not in mixedCase
Parameter StandardToken.decreaseApproval(address,uint256)._spender (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#292) is not in mixedCase
Parameter StandardToken.decreaseApproval(address,uint256)._subtractedValue (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#293) is not in mixedCase
Parameter PausableToken.transfer(address,uint256)._to (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#361) is not in mixedCase
Parameter PausableToken.transfer(address,uint256)._value (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#362) is not in mixedCase
Parameter PausableToken.transferFrom(address,address,uint256)._from (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#372) is not in mixedCase
Parameter PausableToken.transferFrom(address,address,uint256)._to (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#373) is not in mixedCase
Parameter PausableToken.transferFrom(address,address,uint256)._value (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#374) is not in mixedCase
Parameter PausableToken.approve(address,uint256)._spender (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#384) is not in mixedCase
Parameter PausableToken.approve(address,uint256)._value (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#385) is not in mixedCase
Parameter PausableToken.increaseApproval(address,uint256)._spender (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#395) is not in mixedCase
Parameter PausableToken.increaseApproval(address,uint256)._addedValue (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#396) is not in mixedCase
Parameter PausableToken.decreaseApproval(address,uint256)._spender (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#406) is not in mixedCase
Parameter PausableToken.decreaseApproval(address,uint256)._subtractedValue (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#407) is not in mixedCase
Parameter BurnableToken.burn(uint256)._value (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#429) is not in mixedCase
Parameter DarknodeRegistryStore.appendDarknode(address,address,uint256,bytes,uint256,uint256)._darknodeID (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#708) is not in mixedCase
Parameter DarknodeRegistryStore.appendDarknode(address,address,uint256,bytes,uint256,uint256)._darknodeOwner (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#709) is not in mixedCase
Parameter DarknodeRegistryStore.appendDarknode(address,address,uint256,bytes,uint256,uint256)._bond (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#710) is not in mixedCase
Parameter DarknodeRegistryStore.appendDarknode(address,address,uint256,bytes,uint256,uint256)._publicKey (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#711) is not in mixedCase
Parameter DarknodeRegistryStore.appendDarknode(address,address,uint256,bytes,uint256,uint256)._registeredAt (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#712) is not in mixedCase
Parameter DarknodeRegistryStore.appendDarknode(address,address,uint256,bytes,uint256,uint256)._deregisteredAt (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#713) is not in mixedCase
Variable DarknodeRegistryStore.VERSION (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#647) is not in mixedCase
Parameter DarknodeRegistry.register(address,bytes,uint256)._darknodeID (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#934) is not in mixedCase
Parameter DarknodeRegistry.register(address,bytes,uint256)._publicKey (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#934) is not in mixedCase
Parameter DarknodeRegistry.register(address,bytes,uint256)._bond (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#934) is not in mixedCase
Parameter DarknodeRegistry.deregister(address)._darknodeID (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#963) is not in mixedCase
Parameter DarknodeRegistry.transferStoreOwnership(address)._newOwner (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#1021) is not in mixedCase
Parameter DarknodeRegistry.updateMinimumBond(uint256)._nextMinimumBond (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#1028) is not in mixedCase
Parameter DarknodeRegistry.updateMinimumPodSize(uint256)._nextMinimumPodSize (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#1035) is not in mixedCase
Parameter DarknodeRegistry.updateMinimumEpochInterval(uint256)._nextMinimumEpochInterval (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#1042) is not in mixedCase
Parameter DarknodeRegistry.updateSlasher(address)._slasher (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#1050) is not in mixedCase
Parameter DarknodeRegistry.slash(address,address,address)._prover (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#1063) is not in mixedCase
Parameter DarknodeRegistry.slash(address,address,address)._challenger1 (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#1063) is not in mixedCase
Parameter DarknodeRegistry.slash(address,address,address)._challenger2 (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#1063) is not in mixedCase
Parameter DarknodeRegistry.refund(address)._darknodeID (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#1092) is not in mixedCase
Parameter DarknodeRegistry.getDarknodeOwner(address)._darknodeID (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#1110) is not in mixedCase
Parameter DarknodeRegistry.getDarknodeBond(address)._darknodeID (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#1116) is not in mixedCase
Parameter DarknodeRegistry.getDarknodePublicKey(address)._darknodeID (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#1122) is not in mixedCase
Parameter DarknodeRegistry.getDarknodes(address,uint256)._start (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#1136) is not in mixedCase
Parameter DarknodeRegistry.getDarknodes(address,uint256)._count (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#1136) is not in mixedCase
Parameter DarknodeRegistry.getPreviousDarknodes(address,uint256)._start (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#1146) is not in mixedCase
Parameter DarknodeRegistry.getPreviousDarknodes(address,uint256)._count (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#1146) is not in mixedCase
Parameter DarknodeRegistry.isPendingRegistration(address)._darknodeID (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#1157) is not in mixedCase
Parameter DarknodeRegistry.isPendingDeregistration(address)._darknodeID (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#1164) is not in mixedCase
Parameter DarknodeRegistry.isDeregistered(address)._darknodeID (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#1170) is not in mixedCase
Parameter DarknodeRegistry.isDeregisterable(address)._darknodeID (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#1178) is not in mixedCase
Parameter DarknodeRegistry.isRefunded(address)._darknodeID (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#1188) is not in mixedCase
Parameter DarknodeRegistry.isRefundable(address)._darknodeID (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#1196) is not in mixedCase
Parameter DarknodeRegistry.isRegistered(address)._darknodeID (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#1201) is not in mixedCase
Parameter DarknodeRegistry.isRegisteredInPreviousEpoch(address)._darknodeID (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#1206) is not in mixedCase
Parameter DarknodeRegistry.isRegisteredInEpoch(address,DarknodeRegistry.Epoch)._darknodeID (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#1214) is not in mixedCase
Parameter DarknodeRegistry.isRegisteredInEpoch(address,DarknodeRegistry.Epoch)._epoch (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#1214) is not in mixedCase
Parameter DarknodeRegistry.getDarknodesFromEpochs(address,uint256,bool)._start (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#1229) is not in mixedCase
Parameter DarknodeRegistry.getDarknodesFromEpochs(address,uint256,bool)._count (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#1229) is not in mixedCase
Parameter DarknodeRegistry.getDarknodesFromEpochs(address,uint256,bool)._usePreviousEpoch (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#1229) is not in mixedCase
Variable DarknodeRegistry.VERSION (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#790) is not in mixedCase
Parameter DarknodeRewardVault.updateDarknodeRegistry(DarknodeRegistry)._newDarknodeRegistry (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#1413) is not in mixedCase
Parameter DarknodeRewardVault.deposit(address,ERC20,uint256)._darknode (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#1430) is not in mixedCase
Parameter DarknodeRewardVault.deposit(address,ERC20,uint256)._token (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#1430) is not in mixedCase
Parameter DarknodeRewardVault.deposit(address,ERC20,uint256)._value (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#1430) is not in mixedCase
Parameter DarknodeRewardVault.withdraw(address,ERC20)._darknode (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#1448) is not in mixedCase
Parameter DarknodeRewardVault.withdraw(address,ERC20)._token (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#1448) is not in mixedCase
Variable DarknodeRewardVault.VERSION (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#1392) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions
INFO:Detectors:
Variable DarknodeRegistry.slash(address,address,address)._challenger1 (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#1063) is too similar to DarknodeRegistry.slash(address,address,address)._challenger2 (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#1063)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#variable-names-too-similar
INFO:Detectors:
RepublicToken.slitherConstructorConstantVariables() (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#445-468) uses literals with too many digits:
	- INITIAL_SUPPLY = 1000000000 * 10 ** uint256(decimals) (../../sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol#450)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits
INFO:Slither:/bdata2/sc/dataset/mainnet/0x880407c9cd119bef48b1821cdfc434e3ca3cd588.sol analyzed (17 contracts with 85 detectors), 113 result(s) found
