Compilation warnings/errors on /bdata2/sc/dataset/mainnet/0x0c24e3aa0fc411debf74f138674cf2066c2e0ace.sol:
/bdata2/sc/dataset/mainnet/0x0c24e3aa0fc411debf74f138674cf2066c2e0ace.sol:25:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function FalconFarmer() public{
    ^ (Relevant source part starts here and spans across multiple lines).
/bdata2/sc/dataset/mainnet/0x0c24e3aa0fc411debf74f138674cf2066c2e0ace.sol:67:67: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        uint256 eggsBought=calculateEggBuy(msg.value,SafeMath.sub(this.balance,msg.value));
                                                                  ^----------^
/bdata2/sc/dataset/mainnet/0x0c24e3aa0fc411debf74f138674cf2066c2e0ace.sol:78:47: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        return calculateTrade(eggs,marketEggs,this.balance);
                                              ^----------^
/bdata2/sc/dataset/mainnet/0x0c24e3aa0fc411debf74f138674cf2066c2e0ace.sol:84:36: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        return calculateEggBuy(eth,this.balance);
                                   ^----------^
/bdata2/sc/dataset/mainnet/0x0c24e3aa0fc411debf74f138674cf2066c2e0ace.sol:103:16: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        return this.balance;
               ^----------^
/bdata2/sc/dataset/mainnet/0x0c24e3aa0fc411debf74f138674cf2066c2e0ace.sol:86:5: Warning: Function state mutability can be restricted to pure
    function devFee(uint256 amount) public view returns(uint256){
    ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:
FalconFarmer.sellEggs() (../../sc/dataset/mainnet/0x0c24e3aa0fc411debf74f138674cf2066c2e0ace.sol#52-64) performs a multiplication on the result of a division:
	- hatcheryFalcon[msg.sender] = SafeMath.mul(SafeMath.div(hatcheryFalcon[msg.sender],3),2) (../../sc/dataset/mainnet/0x0c24e3aa0fc411debf74f138674cf2066c2e0ace.sol#58)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#divide-before-multiply
INFO:Detectors:
FalconFarmer.getFreeFalcon() (../../sc/dataset/mainnet/0x0c24e3aa0fc411debf74f138674cf2066c2e0ace.sol#94-101) uses a dangerous strict equality:
	- require(bool)(hatcheryFalcon[msg.sender] == 0) (../../sc/dataset/mainnet/0x0c24e3aa0fc411debf74f138674cf2066c2e0ace.sol#98)
FalconFarmer.seedMarket(uint256) (../../sc/dataset/mainnet/0x0c24e3aa0fc411debf74f138674cf2066c2e0ace.sol#89-93) uses a dangerous strict equality:
	- require(bool)(marketEggs == 0) (../../sc/dataset/mainnet/0x0c24e3aa0fc411debf74f138674cf2066c2e0ace.sol#90)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dangerous-strict-equalities
INFO:Detectors:
FalconFarmer.becomeFalconmaster() (../../sc/dataset/mainnet/0x0c24e3aa0fc411debf74f138674cf2066c2e0ace.sol#28-34) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool)(hatcheryFalcon[msg.sender] >= falconmasterReq) (../../sc/dataset/mainnet/0x0c24e3aa0fc411debf74f138674cf2066c2e0ace.sol#30)
FalconFarmer.seedMarket(uint256) (../../sc/dataset/mainnet/0x0c24e3aa0fc411debf74f138674cf2066c2e0ace.sol#89-93) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool)(marketEggs == 0) (../../sc/dataset/mainnet/0x0c24e3aa0fc411debf74f138674cf2066c2e0ace.sol#90)
FalconFarmer.getFreeFalcon() (../../sc/dataset/mainnet/0x0c24e3aa0fc411debf74f138674cf2066c2e0ace.sol#94-101) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool)(hatcheryFalcon[msg.sender] == 0) (../../sc/dataset/mainnet/0x0c24e3aa0fc411debf74f138674cf2066c2e0ace.sol#98)
FalconFarmer.min(uint256,uint256) (../../sc/dataset/mainnet/0x0c24e3aa0fc411debf74f138674cf2066c2e0ace.sol#118-120) uses timestamp for comparisons
	Dangerous comparisons:
	- a < b (../../sc/dataset/mainnet/0x0c24e3aa0fc411debf74f138674cf2066c2e0ace.sol#119)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp
INFO:Detectors:
Pragma version^0.4.20 (../../sc/dataset/mainnet/0x0c24e3aa0fc411debf74f138674cf2066c2e0ace.sol#2) allows old versions
solc-0.4.24 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity
INFO:Detectors:
Variable FalconFarmer.EGGS_TO_HATCH_1FALCON (../../sc/dataset/mainnet/0x0c24e3aa0fc411debf74f138674cf2066c2e0ace.sol#13) is not in mixedCase
Variable FalconFarmer.STARTING_FALCON (../../sc/dataset/mainnet/0x0c24e3aa0fc411debf74f138674cf2066c2e0ace.sol#14) is not in mixedCase
Variable FalconFarmer.PSN (../../sc/dataset/mainnet/0x0c24e3aa0fc411debf74f138674cf2066c2e0ace.sol#15) is not in mixedCase
Variable FalconFarmer.PSNH (../../sc/dataset/mainnet/0x0c24e3aa0fc411debf74f138674cf2066c2e0ace.sol#16) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions
INFO:Detectors:
Reentrancy in FalconFarmer.buyEggs() (../../sc/dataset/mainnet/0x0c24e3aa0fc411debf74f138674cf2066c2e0ace.sol#65-71):
	External calls:
	- ceoAddress.transfer(devFee(msg.value)) (../../sc/dataset/mainnet/0x0c24e3aa0fc411debf74f138674cf2066c2e0ace.sol#69)
	State variables written after the call(s):
	- claimedEggs[msg.sender] = SafeMath.add(claimedEggs[msg.sender],eggsBought) (../../sc/dataset/mainnet/0x0c24e3aa0fc411debf74f138674cf2066c2e0ace.sol#70)
Reentrancy in FalconFarmer.getFreeFalcon() (../../sc/dataset/mainnet/0x0c24e3aa0fc411debf74f138674cf2066c2e0ace.sol#94-101):
	External calls:
	- ceoAddress.transfer(msg.value) (../../sc/dataset/mainnet/0x0c24e3aa0fc411debf74f138674cf2066c2e0ace.sol#97)
	State variables written after the call(s):
	- hatcheryFalcon[msg.sender] = STARTING_FALCON (../../sc/dataset/mainnet/0x0c24e3aa0fc411debf74f138674cf2066c2e0ace.sol#100)
	- lastHatch[msg.sender] = now (../../sc/dataset/mainnet/0x0c24e3aa0fc411debf74f138674cf2066c2e0ace.sol#99)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-4
INFO:Detectors:
FalconFarmer.becomeFalconmaster() (../../sc/dataset/mainnet/0x0c24e3aa0fc411debf74f138674cf2066c2e0ace.sol#28-34) uses literals with too many digits:
	- falconmasterReq = SafeMath.add(falconmasterReq,100000) (../../sc/dataset/mainnet/0x0c24e3aa0fc411debf74f138674cf2066c2e0ace.sol#32)
FalconFarmer.slitherConstructorVariables() (../../sc/dataset/mainnet/0x0c24e3aa0fc411debf74f138674cf2066c2e0ace.sol#11-121) uses literals with too many digits:
	- falconmasterReq = 100000 (../../sc/dataset/mainnet/0x0c24e3aa0fc411debf74f138674cf2066c2e0ace.sol#24)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits
INFO:Detectors:
FalconFarmer.EGGS_TO_HATCH_1FALCON (../../sc/dataset/mainnet/0x0c24e3aa0fc411debf74f138674cf2066c2e0ace.sol#13) should be constant 
FalconFarmer.PSN (../../sc/dataset/mainnet/0x0c24e3aa0fc411debf74f138674cf2066c2e0ace.sol#15) should be constant 
FalconFarmer.PSNH (../../sc/dataset/mainnet/0x0c24e3aa0fc411debf74f138674cf2066c2e0ace.sol#16) should be constant 
FalconFarmer.STARTING_FALCON (../../sc/dataset/mainnet/0x0c24e3aa0fc411debf74f138674cf2066c2e0ace.sol#14) should be constant 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant
INFO:Slither:/bdata2/sc/dataset/mainnet/0x0c24e3aa0fc411debf74f138674cf2066c2e0ace.sol analyzed (2 contracts with 85 detectors), 21 result(s) found
