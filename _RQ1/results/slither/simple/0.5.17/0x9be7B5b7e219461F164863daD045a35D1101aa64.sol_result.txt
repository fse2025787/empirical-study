INFO:Detectors:
CTokenStorage.totalSupply (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#106) is never initialized. It is used in:
	- CToken.exchangeRateStoredInternal() (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3475-3493)
CTokenStorage.accountTokens (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#111) is never initialized. It is used in:
	- CToken.balanceOf(address) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3301-3303)
	- CToken.balanceOfUnderlying(address) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3311-3314)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#uninitialized-state-variables
INFO:Detectors:
CCollateralCapErc20NoInterestDelegate._becomeImplementation(bytes) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3152-3171) uses a Boolean constant improperly:
	-false (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3157)
CCollateralCapErc20NoInterestDelegate._resignImplementation() (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3176-3183) uses a Boolean constant improperly:
	-false (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3178)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#misuse-of-a-boolean-constant
INFO:Detectors:
EIP20NonStandardInterface (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#4805-4870) has incorrect ERC20 function interface:EIP20NonStandardInterface.transfer(address,uint256) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#4830)
EIP20NonStandardInterface (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#4805-4870) has incorrect ERC20 function interface:EIP20NonStandardInterface.transferFrom(address,address,uint256) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#4844-4848)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-erc20-interface
INFO:Detectors:
CTokenNoInterest.accrueInterest() (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1417-1478) uses a dangerous strict equality:
	- accrualBlockNumberPrior == currentBlockNumber (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1423)
CCollateralCapErc20NoInterest.decreaseUserCollateralInternal(address,uint256) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2827-2840) uses a dangerous strict equality:
	- amount == 0 (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2832)
CTokenNoInterest.exchangeRateStoredInternal() (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1384-1402) uses a dangerous strict equality:
	- _totalSupply == 0 (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1386)
CCollateralCapErc20NoInterest.flashLoan(ERC3156FlashBorrowerInterface,address,uint256,bytes) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2478-2532) uses a dangerous strict equality:
	- require(bool,string)(cashOnChainAfter == add_(cashOnChainBefore,totalFee),BALANCE_INCONSISTENT) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2522)
CTokenNoInterest.initialize(ComptrollerInterface,InterestRateModel,uint256,string,string,uint8) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1098-1131) uses a dangerous strict equality:
	- require(bool,string)(accrualBlockNumber == 0 && borrowIndex == 0,market may only be initialized once) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1107)
CTokenNoInterest.initialize(ComptrollerInterface,InterestRateModel,uint256,string,string,uint8) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1098-1131) uses a dangerous strict equality:
	- require(bool,string)(err == uint256(Error.NO_ERROR),setting comptroller failed) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1115)
CTokenNoInterest.initialize(ComptrollerInterface,InterestRateModel,uint256,string,string,uint8) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1098-1131) uses a dangerous strict equality:
	- require(bool,string)(err == uint256(Error.NO_ERROR),setting interest rate model failed) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1123)
CTokenNoInterest.liquidateBorrowFresh(address,address,uint256,CTokenInterface,bool) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1792-1887) uses a dangerous strict equality:
	- require(bool,string)(vars.amountSeizeError == uint256(Error.NO_ERROR),LIQUIDATE_COMPTROLLER_CALCULATE_AMOUNT_SEIZE_FAILED) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1854-1857)
CTokenNoInterest.liquidateBorrowFresh(address,address,uint256,CTokenInterface,bool) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1792-1887) uses a dangerous strict equality:
	- require(bool,string)(seizeError == uint256(Error.NO_ERROR),token seizure failed) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1871)
Exponential.mulExp(Exponential.Exp,Exponential.Exp) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#735-754) uses a dangerous strict equality:
	- assert(bool)(err2 == MathError.NO_ERROR) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#751)
Exponential.mul_(uint256,uint256,string) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#898-909) uses a dangerous strict equality:
	- a == 0 || b == 0 (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#903)
Exponential.mul_(uint256,uint256,string) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#898-909) uses a dangerous strict equality:
	- require(bool,string)(c / a == b,errorMessage) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#907)
CCollateralCapErc20NoInterest.redeemFresh(address,uint256,uint256,bool) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2947-3041) uses a dangerous strict equality:
	- require(bool,string)(comptroller.redeemAllowed(address(this),redeemer,collateralTokens) == 0,comptroller rejection) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2995)
CCollateralCapErc20NoInterest.seizeInternal(address,address,address,uint256) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3053-3103) uses a dangerous strict equality:
	- seizeTokens == 0 (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3073)
CTokenNoInterest.transfer(address,uint256) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1139-1141) uses a dangerous strict equality:
	- transferTokens(msg.sender,msg.sender,dst,amount) == uint256(Error.NO_ERROR) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1140)
CTokenNoInterest.transferFrom(address,address,uint256) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1150-1156) uses a dangerous strict equality:
	- transferTokens(msg.sender,src,dst,amount) == uint256(Error.NO_ERROR) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1155)
CToken.accrueInterest() (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3508-3564) uses a dangerous strict equality:
	- accrualBlockNumberPrior == currentBlockNumber (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3514)
CToken.initialize(ComptrollerInterface,InterestRateModel,uint256,string,string,uint8) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3211-3244) uses a dangerous strict equality:
	- require(bool,string)(accrualBlockNumber == 0 && borrowIndex == 0,market may only be initialized once) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3220)
CToken.initialize(ComptrollerInterface,InterestRateModel,uint256,string,string,uint8) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3211-3244) uses a dangerous strict equality:
	- require(bool,string)(err == uint256(Error.NO_ERROR),setting comptroller failed) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3228)
CToken.initialize(ComptrollerInterface,InterestRateModel,uint256,string,string,uint8) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3211-3244) uses a dangerous strict equality:
	- require(bool,string)(err == uint256(Error.NO_ERROR),setting interest rate model failed) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3236)
CToken.liquidateBorrowFresh(address,address,uint256,CTokenInterface,bool) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3878-3973) uses a dangerous strict equality:
	- require(bool,string)(vars.amountSeizeError == uint256(Error.NO_ERROR),LIQUIDATE_COMPTROLLER_CALCULATE_AMOUNT_SEIZE_FAILED) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3940-3943)
CToken.liquidateBorrowFresh(address,address,uint256,CTokenInterface,bool) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3878-3973) uses a dangerous strict equality:
	- require(bool,string)(seizeError == uint256(Error.NO_ERROR),token seizure failed) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3957)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dangerous-strict-equalities
INFO:Detectors:
Reentrancy in CCollateralCapErc20NoInterest.flashLoan(ERC3156FlashBorrowerInterface,address,uint256,bytes) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2478-2532):
	External calls:
	- doTransferOut(address(uint160(address(receiver))),amount,false) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2503)
		- token.transfer(to,amount) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2677)
	State variables written after the call(s):
	- totalBorrows = add_(totalBorrows,amount) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2506)
	CTokenStorage.totalBorrows (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#96) can be used in cross function reentrancies:
	- CTokenNoInterest.accrueInterest() (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1417-1478)
	- CTokenNoInterest.borrowFresh(address,uint256,bool) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1560-1616)
	- CTokenNoInterest.borrowRatePerBlock() (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1247-1249)
	- CTokenNoInterest.estimateBorrowRatePerBlockAfterChange(uint256,bool) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1268-1280)
	- CTokenNoInterest.estimateSupplyRatePerBlockAfterChange(uint256,bool) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1286-1302)
	- CTokenNoInterest.exchangeRateStoredInternal() (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1384-1402)
	- CTokenNoInterest.repayBorrowFresh(address,address,uint256,bool) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1674-1742)
	- CTokenNoInterest.supplyRatePerBlock() (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1256-1262)
	- CTokenStorage.totalBorrows (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#96)
Reentrancy in CCollateralCapErc20NoInterest.flashLoan(ERC3156FlashBorrowerInterface,address,uint256,bytes) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2478-2532):
	External calls:
	- doTransferOut(address(uint160(address(receiver))),amount,false) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2503)
		- token.transfer(to,amount) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2677)
	- require(bool,string)(receiver.onFlashLoan(initiator,underlying,amount,totalFee,data) == keccak256(bytes)(ERC3156FlashBorrowerInterface.onFlashLoan),IERC3156: Callback failed) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2510-2514)
	- doTransferIn(address(receiver),repaymentAmount,false) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2518)
		- token.transferFrom(from,address(this),amount) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2632)
	State variables written after the call(s):
	- doTransferIn(address(receiver),repaymentAmount,false) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2518)
		- internalCash = add_(internalCash,transferredIn) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2656)
	CSupplyCapStorage.internalCash (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#227) can be used in cross function reentrancies:
	- CCollateralCapErc20NoInterest.doTransferIn(address,uint256,bool) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2623-2658)
	- CCollateralCapErc20NoInterest.doTransferOut(address,uint256,bool) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2669-2698)
	- CCollateralCapErc20NoInterest.getCashPrior() (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2576-2578)
	- CSupplyCapStorage.internalCash (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#227)
	- internalCash = add_(cashBefore,totalFee) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2527)
	CSupplyCapStorage.internalCash (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#227) can be used in cross function reentrancies:
	- CCollateralCapErc20NoInterest.doTransferIn(address,uint256,bool) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2623-2658)
	- CCollateralCapErc20NoInterest.doTransferOut(address,uint256,bool) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2669-2698)
	- CCollateralCapErc20NoInterest.getCashPrior() (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2576-2578)
	- CSupplyCapStorage.internalCash (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#227)
	- totalBorrows = sub_(totalBorrows,amount) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2528)
	CTokenStorage.totalBorrows (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#96) can be used in cross function reentrancies:
	- CTokenNoInterest.accrueInterest() (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1417-1478)
	- CTokenNoInterest.borrowFresh(address,uint256,bool) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1560-1616)
	- CTokenNoInterest.borrowRatePerBlock() (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1247-1249)
	- CTokenNoInterest.estimateBorrowRatePerBlockAfterChange(uint256,bool) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1268-1280)
	- CTokenNoInterest.estimateSupplyRatePerBlockAfterChange(uint256,bool) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1286-1302)
	- CTokenNoInterest.exchangeRateStoredInternal() (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1384-1402)
	- CTokenNoInterest.repayBorrowFresh(address,address,uint256,bool) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1674-1742)
	- CTokenNoInterest.supplyRatePerBlock() (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1256-1262)
	- CTokenStorage.totalBorrows (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#96)
	- totalReserves = add_(totalReserves,reservesFee) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2526)
	CTokenStorage.totalReserves (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#101) can be used in cross function reentrancies:
	- CTokenNoInterest._addReservesFresh(uint256,bool) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2052-2086)
	- CTokenNoInterest.accrueInterest() (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1417-1478)
	- CTokenNoInterest.borrowRatePerBlock() (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1247-1249)
	- CTokenNoInterest.estimateBorrowRatePerBlockAfterChange(uint256,bool) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1268-1280)
	- CTokenNoInterest.estimateSupplyRatePerBlockAfterChange(uint256,bool) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1286-1302)
	- CTokenNoInterest.exchangeRateStoredInternal() (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1384-1402)
	- CTokenNoInterest.supplyRatePerBlock() (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1256-1262)
	- CTokenStorage.totalReserves (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#101)
Reentrancy in CTokenNoInterest.liquidateBorrowInternal(address,uint256,CTokenInterface,bool) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1753-1773):
	External calls:
	- error = cTokenCollateral.accrueInterest() (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1765)
	- liquidateBorrowFresh(msg.sender,borrower,repayAmount,cTokenCollateral,isNative) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1772)
		- allowed = comptroller.repayBorrowAllowed(address(this),payer,borrower,repayAmount) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1681)
		- allowed = comptroller.liquidateBorrowAllowed(address(this),address(cTokenCollateral),liquidator,borrower,repayAmount) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1800-1806)
		- comptroller.repayBorrowVerify(address(this),payer,borrower,vars.actualRepayAmount,vars.borrowerIndex) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1739)
		- seizeError = cTokenCollateral.seize(liquidator,borrower,vars.seizeTokens) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1867)
		- comptroller.liquidateBorrowVerify(address(this),address(cTokenCollateral),liquidator,borrower,vars.actualRepayAmount,vars.seizeTokens) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1877-1884)
	State variables written after the call(s):
	- liquidateBorrowFresh(msg.sender,borrower,repayAmount,cTokenCollateral,isNative) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1772)
		- accountBorrows[borrower].principal = vars.accountBorrowsNew (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1731)
		- accountBorrows[borrower].interestIndex = borrowIndex (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1732)
	CTokenStorage.accountBorrows (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#131) can be used in cross function reentrancies:
	- CTokenNoInterest.borrowBalanceStoredInternal(address) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1337-1359)
	- CTokenNoInterest.getAlphaDebt() (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1238-1240)
	- liquidateBorrowFresh(msg.sender,borrower,repayAmount,cTokenCollateral,isNative) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1772)
		- totalBorrows = vars.totalBorrowsNew (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1733)
	CTokenStorage.totalBorrows (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#96) can be used in cross function reentrancies:
	- CTokenNoInterest.accrueInterest() (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1417-1478)
	- CTokenNoInterest.borrowRatePerBlock() (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1247-1249)
	- CTokenNoInterest.estimateBorrowRatePerBlockAfterChange(uint256,bool) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1268-1280)
	- CTokenNoInterest.estimateSupplyRatePerBlockAfterChange(uint256,bool) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1286-1302)
	- CTokenNoInterest.exchangeRateStoredInternal() (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1384-1402)
	- CTokenNoInterest.supplyRatePerBlock() (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1256-1262)
	- CTokenStorage.totalBorrows (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#96)
Reentrancy in CToken.liquidateBorrowInternal(address,uint256,CTokenInterface,bool) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3839-3859):
	External calls:
	- error = cTokenCollateral.accrueInterest() (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3851)
	- liquidateBorrowFresh(msg.sender,borrower,repayAmount,cTokenCollateral,isNative) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3858)
		- allowed = comptroller.liquidateBorrowAllowed(address(this),address(cTokenCollateral),liquidator,borrower,repayAmount) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3886-3892)
		- allowed = comptroller.repayBorrowAllowed(address(this),payer,borrower,repayAmount) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3767)
		- comptroller.repayBorrowVerify(address(this),payer,borrower,vars.actualRepayAmount,vars.borrowerIndex) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3825)
		- seizeError = cTokenCollateral.seize(liquidator,borrower,vars.seizeTokens) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3953)
		- comptroller.liquidateBorrowVerify(address(this),address(cTokenCollateral),liquidator,borrower,vars.actualRepayAmount,vars.seizeTokens) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3963-3970)
	State variables written after the call(s):
	- liquidateBorrowFresh(msg.sender,borrower,repayAmount,cTokenCollateral,isNative) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3858)
		- totalBorrows = vars.totalBorrowsNew (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3819)
	CTokenStorage.totalBorrows (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#96) can be used in cross function reentrancies:
	- CToken.accrueInterest() (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3508-3564)
	- CToken.borrowRatePerBlock() (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3351-3353)
	- CToken.estimateBorrowRatePerBlockAfterChange(uint256,bool) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3367-3379)
	- CToken.estimateSupplyRatePerBlockAfterChange(uint256,bool) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3385-3398)
	- CToken.exchangeRateStoredInternal() (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3475-3493)
	- CToken.supplyRatePerBlock() (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3359-3361)
	- CTokenStorage.totalBorrows (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#96)
Reentrancy in CCollateralCapErc20NoInterest.mintFresh(address,uint256,bool) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2856-2930):
	External calls:
	- allowed = comptroller.mintAllowed(address(this),minter,mintAmount) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2865)
	- vars.actualMintAmount = doTransferIn(minter,mintAmount,isNative) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2899)
		- token.transferFrom(from,address(this),amount) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2632)
	State variables written after the call(s):
	- increaseUserCollateralInternal(minter,vars.mintTokens) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2919)
		- accountCollateralTokens[account] = add_(accountCollateralTokens[account],amount) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2805)
		- accountCollateralTokens[account] = add_(accountCollateralTokens[account],gap) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2814)
	CCollateralCapStorage.accountCollateralTokens (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1009) can be used in cross function reentrancies:
	- CCollateralCapStorage.accountCollateralTokens (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1009)
	- CCollateralCapErc20NoInterest.decreaseUserCollateralInternal(address,uint256) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2827-2840)
	- CCollateralCapErc20NoInterest.getCTokenBalanceInternal(address) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2781-2790)
	- CCollateralCapErc20NoInterest.increaseUserCollateralInternal(address,uint256) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2798-2820)
	- CCollateralCapErc20NoInterest.initializeAccountCollateralTokens(address) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2595-2612)
	- CCollateralCapErc20NoInterest.redeemFresh(address,uint256,uint256,bool) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2947-3041)
	- CCollateralCapErc20NoInterest.registerCollateral(address) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2540-2548)
	- CCollateralCapErc20NoInterest.seizeInternal(address,address,address,uint256) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3053-3103)
	- CCollateralCapErc20NoInterest.unregisterCollateral(address) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2555-2566)
	- accountTokens[minter] = add_(accountTokens[minter],vars.mintTokens) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2913)
	CTokenStorage.accountTokens (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#111) can be used in cross function reentrancies:
	- CTokenNoInterest.balanceOf(address) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1188-1190)
	- CTokenNoInterest.balanceOfUnderlying(address) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1198-1201)
	- CCollateralCapErc20NoInterest.getCTokenBalanceInternal(address) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2781-2790)
	- CCollateralCapErc20NoInterest.initializeAccountCollateralTokens(address) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2595-2612)
	- CCollateralCapErc20NoInterest.mintFresh(address,uint256,bool) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2856-2930)
	- CCollateralCapErc20NoInterest.redeemFresh(address,uint256,uint256,bool) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2947-3041)
	- CCollateralCapErc20NoInterest.registerCollateral(address) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2540-2548)
	- CCollateralCapErc20NoInterest.seizeInternal(address,address,address,uint256) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3053-3103)
	- increaseUserCollateralInternal(minter,vars.mintTokens) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2919)
		- totalCollateralTokens = totalCollateralTokensNew (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2804)
		- totalCollateralTokens = add_(totalCollateralTokens,gap) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2813)
	CCollateralCapStorage.totalCollateralTokens (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1003) can be used in cross function reentrancies:
	- CCollateralCapErc20NoInterest.decreaseUserCollateralInternal(address,uint256) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2827-2840)
	- CCollateralCapErc20NoInterest.increaseUserCollateralInternal(address,uint256) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2798-2820)
	- CCollateralCapErc20NoInterest.initializeAccountCollateralTokens(address) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2595-2612)
	- CCollateralCapStorage.totalCollateralTokens (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1003)
	- totalSupply = add_(totalSupply,vars.mintTokens) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2912)
	CTokenStorage.totalSupply (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#106) can be used in cross function reentrancies:
	- CTokenNoInterest.exchangeRateStoredInternal() (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1384-1402)
	- CCollateralCapErc20NoInterest.mintFresh(address,uint256,bool) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2856-2930)
	- CCollateralCapErc20NoInterest.redeemFresh(address,uint256,uint256,bool) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2947-3041)
	- CTokenStorage.totalSupply (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#106)
Reentrancy in CCollateralCapErc20NoInterest.redeemFresh(address,uint256,uint256,bool) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2947-3041):
	External calls:
	- require(bool,string)(comptroller.redeemAllowed(address(this),redeemer,collateralTokens) == 0,comptroller rejection) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2995)
	State variables written after the call(s):
	- decreaseUserCollateralInternal(redeemer,collateralTokens) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3023)
		- accountCollateralTokens[account] = sub_(accountCollateralTokens[account],amount) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2837)
	CCollateralCapStorage.accountCollateralTokens (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1009) can be used in cross function reentrancies:
	- CCollateralCapStorage.accountCollateralTokens (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1009)
	- CCollateralCapErc20NoInterest.decreaseUserCollateralInternal(address,uint256) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2827-2840)
	- CCollateralCapErc20NoInterest.getCTokenBalanceInternal(address) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2781-2790)
	- CCollateralCapErc20NoInterest.increaseUserCollateralInternal(address,uint256) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2798-2820)
	- CCollateralCapErc20NoInterest.initializeAccountCollateralTokens(address) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2595-2612)
	- CCollateralCapErc20NoInterest.redeemFresh(address,uint256,uint256,bool) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2947-3041)
	- CCollateralCapErc20NoInterest.registerCollateral(address) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2540-2548)
	- CCollateralCapErc20NoInterest.seizeInternal(address,address,address,uint256) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3053-3103)
	- CCollateralCapErc20NoInterest.unregisterCollateral(address) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2555-2566)
	- accountTokens[redeemer] = sub_(accountTokens[redeemer],vars.redeemTokens) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3018)
	CTokenStorage.accountTokens (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#111) can be used in cross function reentrancies:
	- CTokenNoInterest.balanceOf(address) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1188-1190)
	- CTokenNoInterest.balanceOfUnderlying(address) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1198-1201)
	- CCollateralCapErc20NoInterest.getCTokenBalanceInternal(address) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2781-2790)
	- CCollateralCapErc20NoInterest.initializeAccountCollateralTokens(address) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2595-2612)
	- CCollateralCapErc20NoInterest.mintFresh(address,uint256,bool) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2856-2930)
	- CCollateralCapErc20NoInterest.redeemFresh(address,uint256,uint256,bool) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2947-3041)
	- CCollateralCapErc20NoInterest.registerCollateral(address) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2540-2548)
	- CCollateralCapErc20NoInterest.seizeInternal(address,address,address,uint256) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3053-3103)
	- decreaseUserCollateralInternal(redeemer,collateralTokens) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3023)
		- totalCollateralTokens = sub_(totalCollateralTokens,amount) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2836)
	CCollateralCapStorage.totalCollateralTokens (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1003) can be used in cross function reentrancies:
	- CCollateralCapErc20NoInterest.decreaseUserCollateralInternal(address,uint256) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2827-2840)
	- CCollateralCapErc20NoInterest.increaseUserCollateralInternal(address,uint256) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2798-2820)
	- CCollateralCapErc20NoInterest.initializeAccountCollateralTokens(address) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2595-2612)
	- CCollateralCapStorage.totalCollateralTokens (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1003)
	- totalSupply = sub_(totalSupply,vars.redeemTokens) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3017)
	CTokenStorage.totalSupply (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#106) can be used in cross function reentrancies:
	- CTokenNoInterest.exchangeRateStoredInternal() (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1384-1402)
	- CCollateralCapErc20NoInterest.mintFresh(address,uint256,bool) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2856-2930)
	- CCollateralCapErc20NoInterest.redeemFresh(address,uint256,uint256,bool) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2947-3041)
	- CTokenStorage.totalSupply (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#106)
Reentrancy in CCollateralCapErc20NoInterest.redeemFresh(address,uint256,uint256,bool) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2947-3041):
	External calls:
	- require(bool,string)(comptroller.redeemAllowed(address(this),redeemer,collateralTokens) == 0,comptroller rejection) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2995)
	- doTransferOut(redeemer,vars.redeemAmount,isNative) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3031)
		- token.transfer(to,amount) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2677)
	State variables written after the call(s):
	- doTransferOut(redeemer,vars.redeemAmount,isNative) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3031)
		- internalCash = sub_(internalCash,amount) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2697)
	CSupplyCapStorage.internalCash (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#227) can be used in cross function reentrancies:
	- CCollateralCapErc20NoInterest.doTransferIn(address,uint256,bool) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2623-2658)
	- CCollateralCapErc20NoInterest.doTransferOut(address,uint256,bool) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2669-2698)
	- CCollateralCapErc20NoInterest.getCashPrior() (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2576-2578)
	- CSupplyCapStorage.internalCash (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#227)
Reentrancy in CCollateralCapErc20NoInterest.seizeInternal(address,address,address,uint256) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3053-3103):
	External calls:
	- allowed = comptroller.seizeAllowed(address(this),seizerToken,liquidator,borrower,seizeTokens) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3064)
	State variables written after the call(s):
	- accountCollateralTokens[borrower] = sub_(accountCollateralTokens[borrower],seizeTokens) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3091)
	CCollateralCapStorage.accountCollateralTokens (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1009) can be used in cross function reentrancies:
	- CCollateralCapStorage.accountCollateralTokens (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1009)
	- CCollateralCapErc20NoInterest.decreaseUserCollateralInternal(address,uint256) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2827-2840)
	- CCollateralCapErc20NoInterest.getCTokenBalanceInternal(address) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2781-2790)
	- CCollateralCapErc20NoInterest.increaseUserCollateralInternal(address,uint256) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2798-2820)
	- CCollateralCapErc20NoInterest.initializeAccountCollateralTokens(address) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2595-2612)
	- CCollateralCapErc20NoInterest.redeemFresh(address,uint256,uint256,bool) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2947-3041)
	- CCollateralCapErc20NoInterest.registerCollateral(address) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2540-2548)
	- CCollateralCapErc20NoInterest.seizeInternal(address,address,address,uint256) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3053-3103)
	- CCollateralCapErc20NoInterest.unregisterCollateral(address) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2555-2566)
	- accountCollateralTokens[liquidator] = add_(accountCollateralTokens[liquidator],seizeTokens) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3092)
	CCollateralCapStorage.accountCollateralTokens (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1009) can be used in cross function reentrancies:
	- CCollateralCapStorage.accountCollateralTokens (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1009)
	- CCollateralCapErc20NoInterest.decreaseUserCollateralInternal(address,uint256) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2827-2840)
	- CCollateralCapErc20NoInterest.getCTokenBalanceInternal(address) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2781-2790)
	- CCollateralCapErc20NoInterest.increaseUserCollateralInternal(address,uint256) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2798-2820)
	- CCollateralCapErc20NoInterest.initializeAccountCollateralTokens(address) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2595-2612)
	- CCollateralCapErc20NoInterest.redeemFresh(address,uint256,uint256,bool) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2947-3041)
	- CCollateralCapErc20NoInterest.registerCollateral(address) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2540-2548)
	- CCollateralCapErc20NoInterest.seizeInternal(address,address,address,uint256) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3053-3103)
	- CCollateralCapErc20NoInterest.unregisterCollateral(address) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2555-2566)
	- accountTokens[borrower] = sub_(accountTokens[borrower],seizeTokens) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3089)
	CTokenStorage.accountTokens (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#111) can be used in cross function reentrancies:
	- CTokenNoInterest.balanceOf(address) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1188-1190)
	- CTokenNoInterest.balanceOfUnderlying(address) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1198-1201)
	- CCollateralCapErc20NoInterest.getCTokenBalanceInternal(address) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2781-2790)
	- CCollateralCapErc20NoInterest.initializeAccountCollateralTokens(address) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2595-2612)
	- CCollateralCapErc20NoInterest.mintFresh(address,uint256,bool) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2856-2930)
	- CCollateralCapErc20NoInterest.redeemFresh(address,uint256,uint256,bool) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2947-3041)
	- CCollateralCapErc20NoInterest.registerCollateral(address) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2540-2548)
	- CCollateralCapErc20NoInterest.seizeInternal(address,address,address,uint256) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3053-3103)
	- accountTokens[liquidator] = add_(accountTokens[liquidator],seizeTokens) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3090)
	CTokenStorage.accountTokens (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#111) can be used in cross function reentrancies:
	- CTokenNoInterest.balanceOf(address) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1188-1190)
	- CTokenNoInterest.balanceOfUnderlying(address) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1198-1201)
	- CCollateralCapErc20NoInterest.getCTokenBalanceInternal(address) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2781-2790)
	- CCollateralCapErc20NoInterest.initializeAccountCollateralTokens(address) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2595-2612)
	- CCollateralCapErc20NoInterest.mintFresh(address,uint256,bool) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2856-2930)
	- CCollateralCapErc20NoInterest.redeemFresh(address,uint256,uint256,bool) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2947-3041)
	- CCollateralCapErc20NoInterest.registerCollateral(address) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2540-2548)
	- CCollateralCapErc20NoInterest.seizeInternal(address,address,address,uint256) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3053-3103)
Reentrancy in CCollateralCapErc20NoInterest.transferTokens(address,address,address,uint256) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2709-2775):
	External calls:
	- allowed = comptroller.transferAllowed(address(this),src,dst,collateralTokens) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2735)
	State variables written after the call(s):
	- accountCollateralTokens[src] = sub_(accountCollateralTokens[src],collateralTokens) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2757)
	CCollateralCapStorage.accountCollateralTokens (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1009) can be used in cross function reentrancies:
	- CCollateralCapStorage.accountCollateralTokens (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1009)
	- CCollateralCapErc20NoInterest.decreaseUserCollateralInternal(address,uint256) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2827-2840)
	- CCollateralCapErc20NoInterest.getCTokenBalanceInternal(address) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2781-2790)
	- CCollateralCapErc20NoInterest.increaseUserCollateralInternal(address,uint256) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2798-2820)
	- CCollateralCapErc20NoInterest.initializeAccountCollateralTokens(address) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2595-2612)
	- CCollateralCapErc20NoInterest.redeemFresh(address,uint256,uint256,bool) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2947-3041)
	- CCollateralCapErc20NoInterest.registerCollateral(address) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2540-2548)
	- CCollateralCapErc20NoInterest.seizeInternal(address,address,address,uint256) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3053-3103)
	- CCollateralCapErc20NoInterest.unregisterCollateral(address) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2555-2566)
	- accountCollateralTokens[dst] = add_(accountCollateralTokens[dst],collateralTokens) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2758)
	CCollateralCapStorage.accountCollateralTokens (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1009) can be used in cross function reentrancies:
	- CCollateralCapStorage.accountCollateralTokens (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1009)
	- CCollateralCapErc20NoInterest.decreaseUserCollateralInternal(address,uint256) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2827-2840)
	- CCollateralCapErc20NoInterest.getCTokenBalanceInternal(address) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2781-2790)
	- CCollateralCapErc20NoInterest.increaseUserCollateralInternal(address,uint256) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2798-2820)
	- CCollateralCapErc20NoInterest.initializeAccountCollateralTokens(address) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2595-2612)
	- CCollateralCapErc20NoInterest.redeemFresh(address,uint256,uint256,bool) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2947-3041)
	- CCollateralCapErc20NoInterest.registerCollateral(address) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2540-2548)
	- CCollateralCapErc20NoInterest.seizeInternal(address,address,address,uint256) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3053-3103)
	- CCollateralCapErc20NoInterest.unregisterCollateral(address) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2555-2566)
	- accountTokens[src] = sub_(accountTokens[src],tokens) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2754)
	CTokenStorage.accountTokens (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#111) can be used in cross function reentrancies:
	- CTokenNoInterest.balanceOf(address) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1188-1190)
	- CTokenNoInterest.balanceOfUnderlying(address) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1198-1201)
	- CCollateralCapErc20NoInterest.getCTokenBalanceInternal(address) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2781-2790)
	- CCollateralCapErc20NoInterest.initializeAccountCollateralTokens(address) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2595-2612)
	- CCollateralCapErc20NoInterest.mintFresh(address,uint256,bool) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2856-2930)
	- CCollateralCapErc20NoInterest.redeemFresh(address,uint256,uint256,bool) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2947-3041)
	- CCollateralCapErc20NoInterest.registerCollateral(address) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2540-2548)
	- CCollateralCapErc20NoInterest.seizeInternal(address,address,address,uint256) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3053-3103)
	- accountTokens[dst] = add_(accountTokens[dst],tokens) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2755)
	CTokenStorage.accountTokens (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#111) can be used in cross function reentrancies:
	- CTokenNoInterest.balanceOf(address) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1188-1190)
	- CTokenNoInterest.balanceOfUnderlying(address) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1198-1201)
	- CCollateralCapErc20NoInterest.getCTokenBalanceInternal(address) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2781-2790)
	- CCollateralCapErc20NoInterest.initializeAccountCollateralTokens(address) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2595-2612)
	- CCollateralCapErc20NoInterest.mintFresh(address,uint256,bool) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2856-2930)
	- CCollateralCapErc20NoInterest.redeemFresh(address,uint256,uint256,bool) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2947-3041)
	- CCollateralCapErc20NoInterest.registerCollateral(address) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2540-2548)
	- CCollateralCapErc20NoInterest.seizeInternal(address,address,address,uint256) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3053-3103)
Reentrancy in CCollateralCapErc20NoInterest.unregisterCollateral(address) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2555-2566):
	External calls:
	- require(bool,string)(comptroller.redeemAllowed(address(this),account,accountCollateralTokens[account]) == 0,comptroller rejection) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2560-2563)
	State variables written after the call(s):
	- decreaseUserCollateralInternal(account,accountCollateralTokens[account]) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2565)
		- accountCollateralTokens[account] = sub_(accountCollateralTokens[account],amount) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2837)
	CCollateralCapStorage.accountCollateralTokens (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1009) can be used in cross function reentrancies:
	- CCollateralCapStorage.accountCollateralTokens (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1009)
	- CCollateralCapErc20NoInterest.decreaseUserCollateralInternal(address,uint256) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2827-2840)
	- CCollateralCapErc20NoInterest.getCTokenBalanceInternal(address) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2781-2790)
	- CCollateralCapErc20NoInterest.increaseUserCollateralInternal(address,uint256) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2798-2820)
	- CCollateralCapErc20NoInterest.initializeAccountCollateralTokens(address) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2595-2612)
	- CCollateralCapErc20NoInterest.redeemFresh(address,uint256,uint256,bool) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2947-3041)
	- CCollateralCapErc20NoInterest.registerCollateral(address) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2540-2548)
	- CCollateralCapErc20NoInterest.seizeInternal(address,address,address,uint256) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3053-3103)
	- CCollateralCapErc20NoInterest.unregisterCollateral(address) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2555-2566)
	- decreaseUserCollateralInternal(account,accountCollateralTokens[account]) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2565)
		- totalCollateralTokens = sub_(totalCollateralTokens,amount) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2836)
	CCollateralCapStorage.totalCollateralTokens (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1003) can be used in cross function reentrancies:
	- CCollateralCapErc20NoInterest.decreaseUserCollateralInternal(address,uint256) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2827-2840)
	- CCollateralCapErc20NoInterest.increaseUserCollateralInternal(address,uint256) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2798-2820)
	- CCollateralCapErc20NoInterest.initializeAccountCollateralTokens(address) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2595-2612)
	- CCollateralCapStorage.totalCollateralTokens (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1003)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1
INFO:Detectors:
CCollateralCapErc20NoInterest.mintFresh(address,uint256,bool).vars (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2883) is a local variable never initialized
CTokenNoInterest.repayBorrowFresh(address,address,uint256,bool).vars (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1694) is a local variable never initialized
CToken.liquidateBorrowFresh(address,address,uint256,CTokenInterface,bool).vars (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3922) is a local variable never initialized
CToken._addReservesFresh(uint256,bool).actualAddAmount (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#4141) is a local variable never initialized
CToken.borrowFresh(address,uint256,bool).vars (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3667) is a local variable never initialized
CTokenNoInterest._addReservesFresh(uint256,bool).actualAddAmount (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2055) is a local variable never initialized
CCollateralCapErc20NoInterest.redeemFresh(address,uint256,uint256,bool).vars (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2958) is a local variable never initialized
CTokenNoInterest.liquidateBorrowFresh(address,address,uint256,CTokenInterface,bool).vars (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1836) is a local variable never initialized
CTokenNoInterest.borrowFresh(address,uint256,bool).vars (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1581) is a local variable never initialized
CToken.repayBorrowFresh(address,address,uint256,bool).vars (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3780) is a local variable never initialized
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#uninitialized-local-variables
INFO:Detectors:
CCollateralCapErc20NoInterest.initialize(address,ComptrollerInterface,InterestRateModel,uint256,string,string,uint8) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2316-2331) ignores return value by EIP20Interface(underlying).totalSupply() (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2330)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return
INFO:Detectors:
Exponential.divScalarByExpTruncate(uint256,Exponential.Exp).fraction (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#699) shadows:
	- Exponential.fraction(uint256,uint256) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#948-950) (function)
Exponential.div_ScalarByExpTruncate(uint256,Exponential.Exp).fraction (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#728) shadows:
	- Exponential.fraction(uint256,uint256) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#948-950) (function)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing
INFO:Detectors:
CToken.initialize(ComptrollerInterface,InterestRateModel,uint256,string,string,uint8) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3211-3244) should emit an event for: 
	- initialExchangeRateMantissa = initialExchangeRateMantissa_ (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3223) 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-arithmetic
INFO:Detectors:
CCollateralCapErc20NoInterest.initialize(address,ComptrollerInterface,InterestRateModel,uint256,string,string,uint8).underlying_ (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2317) lacks a zero-check on :
		- underlying = underlying_ (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2329)
CTokenNoInterest._setPendingAdmin(address).newPendingAdmin (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1914) lacks a zero-check on :
		- pendingAdmin = newPendingAdmin (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1924)
CToken._setPendingAdmin(address).newPendingAdmin (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#4000) lacks a zero-check on :
		- pendingAdmin = newPendingAdmin (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#4010)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation
INFO:Detectors:
Reentrancy in CTokenNoInterest.borrowFresh(address,uint256,bool) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1560-1616):
	External calls:
	- allowed = comptroller.borrowAllowed(address(this),borrower,borrowAmount) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1566)
	State variables written after the call(s):
	- accountBorrows[borrower].principal = vars.accountBorrowsNew (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1597)
	- accountBorrows[borrower].interestIndex = borrowIndex (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1598)
	- totalBorrows = vars.totalBorrowsNew (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1599)
Reentrancy in CToken.borrowFresh(address,uint256,bool) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3646-3702):
	External calls:
	- allowed = comptroller.borrowAllowed(address(this),borrower,borrowAmount) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3652)
	State variables written after the call(s):
	- accountBorrows[borrower].principal = vars.accountBorrowsNew (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3683)
	- accountBorrows[borrower].interestIndex = borrowIndex (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3684)
	- totalBorrows = vars.totalBorrowsNew (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3685)
Reentrancy in CCollateralCapErc20NoInterest.doTransferIn(address,uint256,bool) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2623-2658):
	External calls:
	- token.transferFrom(from,address(this),amount) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2632)
	State variables written after the call(s):
	- internalCash = add_(internalCash,transferredIn) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2656)
Reentrancy in CCollateralCapErc20NoInterest.doTransferOut(address,uint256,bool) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2669-2698):
	External calls:
	- token.transfer(to,amount) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2677)
	State variables written after the call(s):
	- internalCash = sub_(internalCash,amount) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2697)
Reentrancy in CTokenNoInterest.repayBorrowFresh(address,address,uint256,bool) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1674-1742):
	External calls:
	- allowed = comptroller.repayBorrowAllowed(address(this),payer,borrower,repayAmount) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1681)
	State variables written after the call(s):
	- accountBorrows[borrower].principal = vars.accountBorrowsNew (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1731)
	- accountBorrows[borrower].interestIndex = borrowIndex (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1732)
	- totalBorrows = vars.totalBorrowsNew (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1733)
Reentrancy in CToken.repayBorrowFresh(address,address,uint256,bool) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3760-3828):
	External calls:
	- allowed = comptroller.repayBorrowAllowed(address(this),payer,borrower,repayAmount) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3767)
	State variables written after the call(s):
	- accountBorrows[borrower].principal = vars.accountBorrowsNew (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3817)
	- accountBorrows[borrower].interestIndex = borrowIndex (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3818)
	- totalBorrows = vars.totalBorrowsNew (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3819)
Reentrancy in CCollateralCapErc20NoInterest.transferTokens(address,address,address,uint256) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2709-2775):
	External calls:
	- allowed = comptroller.transferAllowed(address(this),src,dst,collateralTokens) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2735)
	State variables written after the call(s):
	- transferAllowances[src][spender] = sub_(startingAllowance,tokens) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2766)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2
INFO:Detectors:
Reentrancy in CTokenNoInterest.borrowFresh(address,uint256,bool) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1560-1616):
	External calls:
	- allowed = comptroller.borrowAllowed(address(this),borrower,borrowAmount) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1566)
	Event emitted after the call(s):
	- Borrow(borrower,borrowAmount,vars.accountBorrowsNew,vars.totalBorrowsNew) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1610)
	- Failure(uint256(err),uint256(info),0) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#522)
		- fail(Error.MARKET_NOT_FRESH,FailureInfo.BORROW_FRESHNESS_CHECK) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1573)
	- Failure(uint256(err),uint256(info),opaqueError) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#535)
		- failOpaque(Error.COMPTROLLER_REJECTION,FailureInfo.BORROW_COMPTROLLER_REJECTION,allowed) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1568)
	- Failure(uint256(err),uint256(info),0) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#522)
		- fail(Error.TOKEN_INSUFFICIENT_CASH,FailureInfo.BORROW_CASH_NOT_AVAILABLE) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1578)
Reentrancy in CToken.borrowFresh(address,uint256,bool) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3646-3702):
	External calls:
	- allowed = comptroller.borrowAllowed(address(this),borrower,borrowAmount) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3652)
	Event emitted after the call(s):
	- Borrow(borrower,borrowAmount,vars.accountBorrowsNew,vars.totalBorrowsNew) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3696)
	- Failure(uint256(err),uint256(info),0) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#522)
		- fail(Error.MARKET_NOT_FRESH,FailureInfo.BORROW_FRESHNESS_CHECK) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3659)
	- Failure(uint256(err),uint256(info),0) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#522)
		- fail(Error.TOKEN_INSUFFICIENT_CASH,FailureInfo.BORROW_CASH_NOT_AVAILABLE) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3664)
	- Failure(uint256(err),uint256(info),opaqueError) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#535)
		- failOpaque(Error.COMPTROLLER_REJECTION,FailureInfo.BORROW_COMPTROLLER_REJECTION,allowed) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3654)
Reentrancy in CTokenNoInterest.liquidateBorrowFresh(address,address,uint256,CTokenInterface,bool) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1792-1887):
	External calls:
	- allowed = comptroller.liquidateBorrowAllowed(address(this),address(cTokenCollateral),liquidator,borrower,repayAmount) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1800-1806)
	Event emitted after the call(s):
	- Failure(uint256(err),uint256(info),opaqueError) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#535)
		- (failOpaque(Error.COMPTROLLER_REJECTION,FailureInfo.LIQUIDATE_COMPTROLLER_REJECTION,allowed),0) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1808)
	- Failure(uint256(err),uint256(info),0) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#522)
		- (fail(Error.MARKET_NOT_FRESH,FailureInfo.LIQUIDATE_COLLATERAL_FRESHNESS_CHECK),0) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1818)
	- Failure(uint256(err),uint256(info),0) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#522)
		- (fail(Error.INVALID_ACCOUNT_PAIR,FailureInfo.LIQUIDATE_LIQUIDATOR_IS_BORROWER),0) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1823)
	- Failure(uint256(err),uint256(info),0) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#522)
		- (fail(Error.INVALID_CLOSE_AMOUNT_REQUESTED,FailureInfo.LIQUIDATE_CLOSE_AMOUNT_IS_ZERO),0) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1828)
	- Failure(uint256(err),uint256(info),0) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#522)
		- (fail(Error.INVALID_CLOSE_AMOUNT_REQUESTED,FailureInfo.LIQUIDATE_CLOSE_AMOUNT_IS_UINT_MAX),0) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1833)
	- Failure(uint256(err),uint256(info),0) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#522)
		- (fail(Error.MARKET_NOT_FRESH,FailureInfo.LIQUIDATE_FRESHNESS_CHECK),0) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1813)
Reentrancy in CTokenNoInterest.liquidateBorrowFresh(address,address,uint256,CTokenInterface,bool) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1792-1887):
	External calls:
	- allowed = comptroller.liquidateBorrowAllowed(address(this),address(cTokenCollateral),liquidator,borrower,repayAmount) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1800-1806)
	- (vars.repayBorrowError,vars.actualRepayAmount) = repayBorrowFresh(liquidator,borrower,repayAmount,isNative) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1839)
		- allowed = comptroller.repayBorrowAllowed(address(this),payer,borrower,repayAmount) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1681)
		- comptroller.repayBorrowVerify(address(this),payer,borrower,vars.actualRepayAmount,vars.borrowerIndex) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1739)
	Event emitted after the call(s):
	- Failure(uint256(err),uint256(info),0) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#522)
		- (fail(TokenErrorReporter.Error(vars.repayBorrowError),FailureInfo.LIQUIDATE_REPAY_BORROW_FRESH_FAILED),0) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1841)
	- Failure(uint256(err),uint256(info),opaqueError) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#535)
		- (vars.repayBorrowError,vars.actualRepayAmount) = repayBorrowFresh(liquidator,borrower,repayAmount,isNative) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1839)
	- Failure(uint256(err),uint256(info),0) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#522)
		- (vars.repayBorrowError,vars.actualRepayAmount) = repayBorrowFresh(liquidator,borrower,repayAmount,isNative) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1839)
	- RepayBorrow(payer,borrower,vars.actualRepayAmount,vars.accountBorrowsNew,vars.totalBorrowsNew) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1736)
		- (vars.repayBorrowError,vars.actualRepayAmount) = repayBorrowFresh(liquidator,borrower,repayAmount,isNative) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1839)
Reentrancy in CTokenNoInterest.liquidateBorrowFresh(address,address,uint256,CTokenInterface,bool) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1792-1887):
	External calls:
	- allowed = comptroller.liquidateBorrowAllowed(address(this),address(cTokenCollateral),liquidator,borrower,repayAmount) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1800-1806)
	- (vars.repayBorrowError,vars.actualRepayAmount) = repayBorrowFresh(liquidator,borrower,repayAmount,isNative) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1839)
		- allowed = comptroller.repayBorrowAllowed(address(this),payer,borrower,repayAmount) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1681)
		- comptroller.repayBorrowVerify(address(this),payer,borrower,vars.actualRepayAmount,vars.borrowerIndex) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1739)
	- seizeError = cTokenCollateral.seize(liquidator,borrower,vars.seizeTokens) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1867)
	Event emitted after the call(s):
	- LiquidateBorrow(liquidator,borrower,vars.actualRepayAmount,address(cTokenCollateral),vars.seizeTokens) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1874)
Reentrancy in CToken.liquidateBorrowFresh(address,address,uint256,CTokenInterface,bool) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3878-3973):
	External calls:
	- allowed = comptroller.liquidateBorrowAllowed(address(this),address(cTokenCollateral),liquidator,borrower,repayAmount) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3886-3892)
	Event emitted after the call(s):
	- Failure(uint256(err),uint256(info),0) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#522)
		- (fail(Error.INVALID_CLOSE_AMOUNT_REQUESTED,FailureInfo.LIQUIDATE_CLOSE_AMOUNT_IS_UINT_MAX),0) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3919)
	- Failure(uint256(err),uint256(info),0) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#522)
		- (fail(Error.MARKET_NOT_FRESH,FailureInfo.LIQUIDATE_FRESHNESS_CHECK),0) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3899)
	- Failure(uint256(err),uint256(info),opaqueError) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#535)
		- (failOpaque(Error.COMPTROLLER_REJECTION,FailureInfo.LIQUIDATE_COMPTROLLER_REJECTION,allowed),0) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3894)
	- Failure(uint256(err),uint256(info),0) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#522)
		- (fail(Error.MARKET_NOT_FRESH,FailureInfo.LIQUIDATE_COLLATERAL_FRESHNESS_CHECK),0) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3904)
	- Failure(uint256(err),uint256(info),0) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#522)
		- (fail(Error.INVALID_ACCOUNT_PAIR,FailureInfo.LIQUIDATE_LIQUIDATOR_IS_BORROWER),0) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3909)
	- Failure(uint256(err),uint256(info),0) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#522)
		- (fail(Error.INVALID_CLOSE_AMOUNT_REQUESTED,FailureInfo.LIQUIDATE_CLOSE_AMOUNT_IS_ZERO),0) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3914)
Reentrancy in CToken.liquidateBorrowFresh(address,address,uint256,CTokenInterface,bool) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3878-3973):
	External calls:
	- allowed = comptroller.liquidateBorrowAllowed(address(this),address(cTokenCollateral),liquidator,borrower,repayAmount) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3886-3892)
	- (vars.repayBorrowError,vars.actualRepayAmount) = repayBorrowFresh(liquidator,borrower,repayAmount,isNative) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3925)
		- allowed = comptroller.repayBorrowAllowed(address(this),payer,borrower,repayAmount) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3767)
		- comptroller.repayBorrowVerify(address(this),payer,borrower,vars.actualRepayAmount,vars.borrowerIndex) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3825)
	Event emitted after the call(s):
	- Failure(uint256(err),uint256(info),opaqueError) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#535)
		- (vars.repayBorrowError,vars.actualRepayAmount) = repayBorrowFresh(liquidator,borrower,repayAmount,isNative) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3925)
	- Failure(uint256(err),uint256(info),0) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#522)
		- (vars.repayBorrowError,vars.actualRepayAmount) = repayBorrowFresh(liquidator,borrower,repayAmount,isNative) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3925)
	- Failure(uint256(err),uint256(info),0) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#522)
		- (fail(TokenErrorReporter.Error(vars.repayBorrowError),FailureInfo.LIQUIDATE_REPAY_BORROW_FRESH_FAILED),0) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3927)
	- RepayBorrow(payer,borrower,vars.actualRepayAmount,vars.accountBorrowsNew,vars.totalBorrowsNew) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3822)
		- (vars.repayBorrowError,vars.actualRepayAmount) = repayBorrowFresh(liquidator,borrower,repayAmount,isNative) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3925)
Reentrancy in CToken.liquidateBorrowFresh(address,address,uint256,CTokenInterface,bool) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3878-3973):
	External calls:
	- allowed = comptroller.liquidateBorrowAllowed(address(this),address(cTokenCollateral),liquidator,borrower,repayAmount) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3886-3892)
	- (vars.repayBorrowError,vars.actualRepayAmount) = repayBorrowFresh(liquidator,borrower,repayAmount,isNative) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3925)
		- allowed = comptroller.repayBorrowAllowed(address(this),payer,borrower,repayAmount) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3767)
		- comptroller.repayBorrowVerify(address(this),payer,borrower,vars.actualRepayAmount,vars.borrowerIndex) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3825)
	- seizeError = cTokenCollateral.seize(liquidator,borrower,vars.seizeTokens) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3953)
	Event emitted after the call(s):
	- LiquidateBorrow(liquidator,borrower,vars.actualRepayAmount,address(cTokenCollateral),vars.seizeTokens) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3960)
Reentrancy in CCollateralCapErc20NoInterest.mintFresh(address,uint256,bool) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2856-2930):
	External calls:
	- allowed = comptroller.mintAllowed(address(this),minter,mintAmount) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2865)
	Event emitted after the call(s):
	- Failure(uint256(err),uint256(info),0) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#522)
		- (fail(Error.MARKET_NOT_FRESH,FailureInfo.MINT_FRESHNESS_CHECK),0) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2880)
	- Failure(uint256(err),uint256(info),opaqueError) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#535)
		- (failOpaque(Error.COMPTROLLER_REJECTION,FailureInfo.MINT_COMPTROLLER_REJECTION,allowed),0) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2867)
Reentrancy in CCollateralCapErc20NoInterest.mintFresh(address,uint256,bool) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2856-2930):
	External calls:
	- allowed = comptroller.mintAllowed(address(this),minter,mintAmount) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2865)
	- vars.actualMintAmount = doTransferIn(minter,mintAmount,isNative) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2899)
		- token.transferFrom(from,address(this),amount) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2632)
	Event emitted after the call(s):
	- Mint(minter,vars.actualMintAmount,vars.mintTokens) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2923)
	- Transfer(address(this),minter,vars.mintTokens) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2924)
	- UserCollateralChanged(account,accountCollateralTokens[account]) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2807)
		- increaseUserCollateralInternal(minter,vars.mintTokens) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2919)
	- UserCollateralChanged(account,accountCollateralTokens[account]) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2816)
		- increaseUserCollateralInternal(minter,vars.mintTokens) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2919)
Reentrancy in CCollateralCapErc20NoInterest.redeemFresh(address,uint256,uint256,bool) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2947-3041):
	External calls:
	- require(bool,string)(comptroller.redeemAllowed(address(this),redeemer,collateralTokens) == 0,comptroller rejection) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2995)
	Event emitted after the call(s):
	- Failure(uint256(err),uint256(info),0) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#522)
		- fail(Error.TOKEN_INSUFFICIENT_CASH,FailureInfo.REDEEM_TRANSFER_OUT_NOT_POSSIBLE) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3005)
	- Failure(uint256(err),uint256(info),0) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#522)
		- fail(Error.MARKET_NOT_FRESH,FailureInfo.REDEEM_FRESHNESS_CHECK) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3000)
	- UserCollateralChanged(account,accountCollateralTokens[account]) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2839)
		- decreaseUserCollateralInternal(redeemer,collateralTokens) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3023)
Reentrancy in CCollateralCapErc20NoInterest.redeemFresh(address,uint256,uint256,bool) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2947-3041):
	External calls:
	- require(bool,string)(comptroller.redeemAllowed(address(this),redeemer,collateralTokens) == 0,comptroller rejection) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2995)
	- doTransferOut(redeemer,vars.redeemAmount,isNative) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3031)
		- token.transfer(to,amount) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2677)
	Event emitted after the call(s):
	- Redeem(redeemer,vars.redeemAmount,vars.redeemTokens) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3035)
	- Transfer(redeemer,address(this),vars.redeemTokens) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3034)
Reentrancy in CTokenNoInterest.repayBorrowFresh(address,address,uint256,bool) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1674-1742):
	External calls:
	- allowed = comptroller.repayBorrowAllowed(address(this),payer,borrower,repayAmount) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1681)
	Event emitted after the call(s):
	- Failure(uint256(err),uint256(info),opaqueError) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#535)
		- (failOpaque(Error.COMPTROLLER_REJECTION,FailureInfo.REPAY_BORROW_COMPTROLLER_REJECTION,allowed),0) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1683-1686)
	- Failure(uint256(err),uint256(info),0) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#522)
		- (fail(Error.MARKET_NOT_FRESH,FailureInfo.REPAY_BORROW_FRESHNESS_CHECK),0) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1691)
	- RepayBorrow(payer,borrower,vars.actualRepayAmount,vars.accountBorrowsNew,vars.totalBorrowsNew) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1736)
Reentrancy in CToken.repayBorrowFresh(address,address,uint256,bool) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3760-3828):
	External calls:
	- allowed = comptroller.repayBorrowAllowed(address(this),payer,borrower,repayAmount) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3767)
	Event emitted after the call(s):
	- Failure(uint256(err),uint256(info),opaqueError) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#535)
		- (failOpaque(Error.COMPTROLLER_REJECTION,FailureInfo.REPAY_BORROW_COMPTROLLER_REJECTION,allowed),0) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3769-3772)
	- Failure(uint256(err),uint256(info),0) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#522)
		- (fail(Error.MARKET_NOT_FRESH,FailureInfo.REPAY_BORROW_FRESHNESS_CHECK),0) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3777)
	- RepayBorrow(payer,borrower,vars.actualRepayAmount,vars.accountBorrowsNew,vars.totalBorrowsNew) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3822)
Reentrancy in CCollateralCapErc20NoInterest.seizeInternal(address,address,address,uint256) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3053-3103):
	External calls:
	- allowed = comptroller.seizeAllowed(address(this),seizerToken,liquidator,borrower,seizeTokens) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3064)
	Event emitted after the call(s):
	- Failure(uint256(err),uint256(info),opaqueError) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#535)
		- failOpaque(Error.COMPTROLLER_REJECTION,FailureInfo.LIQUIDATE_SEIZE_COMPTROLLER_REJECTION,allowed) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3066)
	- Failure(uint256(err),uint256(info),0) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#522)
		- fail(Error.INVALID_ACCOUNT_PAIR,FailureInfo.LIQUIDATE_SEIZE_LIQUIDATOR_IS_BORROWER) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3079)
	- Transfer(borrower,liquidator,seizeTokens) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3095)
	- UserCollateralChanged(borrower,accountCollateralTokens[borrower]) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3096)
	- UserCollateralChanged(liquidator,accountCollateralTokens[liquidator]) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3097)
Reentrancy in CCollateralCapErc20NoInterest.unregisterCollateral(address) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2555-2566):
	External calls:
	- require(bool,string)(comptroller.redeemAllowed(address(this),account,accountCollateralTokens[account]) == 0,comptroller rejection) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2560-2563)
	Event emitted after the call(s):
	- UserCollateralChanged(account,accountCollateralTokens[account]) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2839)
		- decreaseUserCollateralInternal(account,accountCollateralTokens[account]) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2565)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3
INFO:Detectors:
CCollateralCapErc20NoInterest.doTransferIn(address,uint256,bool) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2623-2658) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2635-2650)
CCollateralCapErc20NoInterest.doTransferOut(address,uint256,bool) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2669-2698) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2680-2695)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage
INFO:Detectors:
CToken._addReservesFresh(uint256,bool) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#4138-4172) is never used and should be removed
CToken._addReservesInternal(uint256,bool) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#4119-4129) is never used and should be removed
CToken.borrowFresh(address,uint256,bool) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3646-3702) is never used and should be removed
CToken.borrowInternal(uint256,bool) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3623-3631) is never used and should be removed
CToken.liquidateBorrowFresh(address,address,uint256,CTokenInterface,bool) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3878-3973) is never used and should be removed
CToken.liquidateBorrowInternal(address,uint256,CTokenInterface,bool) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3839-3859) is never used and should be removed
CToken.mintInternal(uint256,bool) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3573-3581) is never used and should be removed
CToken.redeemInternal(uint256,bool) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3590-3598) is never used and should be removed
CToken.redeemUnderlyingInternal(uint256,bool) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3607-3615) is never used and should be removed
CToken.repayBorrowBehalfInternal(address,uint256,bool) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3727-3739) is never used and should be removed
CToken.repayBorrowFresh(address,address,uint256,bool) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3760-3828) is never used and should be removed
CToken.repayBorrowInternal(uint256,bool) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3710-3718) is never used and should be removed
CarefulMath.addThenSubUInt(uint256,uint256,uint256) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#208-220) is never used and should be removed
CarefulMath.addUInt(uint256,uint256) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#195-203) is never used and should be removed
CarefulMath.divUInt(uint256,uint256) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#173-179) is never used and should be removed
CarefulMath.mulUInt(uint256,uint256) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#156-168) is never used and should be removed
CarefulMath.subUInt(uint256,uint256) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#184-190) is never used and should be removed
ComptrollerErrorReporter.fail(ComptrollerErrorReporter.Error,ComptrollerErrorReporter.FailureInfo) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#4983-4987) is never used and should be removed
ComptrollerErrorReporter.failOpaque(ComptrollerErrorReporter.Error,ComptrollerErrorReporter.FailureInfo,uint256) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#4992-5000) is never used and should be removed
Exponential.addExp(Exponential.Exp,Exponential.Exp) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#588-592) is never used and should be removed
Exponential.add_(Exponential.Double,Exponential.Double) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#831-833) is never used and should be removed
Exponential.add_(Exponential.Exp,Exponential.Exp) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#827-829) is never used and should be removed
Exponential.divExp(Exponential.Exp,Exponential.Exp) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#783-785) is never used and should be removed
Exponential.divScalar(Exponential.Exp,uint256) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#666-673) is never used and should be removed
Exponential.divScalarByExp(uint256,Exponential.Exp) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#678-693) is never used and should be removed
Exponential.divScalarByExpTruncate(uint256,Exponential.Exp) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#698-705) is never used and should be removed
Exponential.div_(Exponential.Double,Exponential.Double) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#923-925) is never used and should be removed
Exponential.div_(Exponential.Double,uint256) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#927-929) is never used and should be removed
Exponential.div_(Exponential.Exp,Exponential.Exp) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#911-913) is never used and should be removed
Exponential.div_(Exponential.Exp,uint256) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#915-917) is never used and should be removed
Exponential.div_(uint256,Exponential.Double) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#931-933) is never used and should be removed
Exponential.fraction(uint256,uint256) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#948-950) is never used and should be removed
Exponential.getExp(uint256,uint256) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#571-583) is never used and should be removed
Exponential.isZeroExp(Exponential.Exp) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#813-815) is never used and should be removed
Exponential.lessThanExp(Exponential.Exp,Exponential.Exp) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#799-801) is never used and should be removed
Exponential.lessThanOrEqualExp(Exponential.Exp,Exponential.Exp) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#806-808) is never used and should be removed
Exponential.mulExp(Exponential.Exp,Exponential.Exp) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#735-754) is never used and should be removed
Exponential.mulExp(uint256,uint256) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#759-761) is never used and should be removed
Exponential.mulExp3(Exponential.Exp,Exponential.Exp,Exponential.Exp) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#766-776) is never used and should be removed
Exponential.mulScalar(Exponential.Exp,uint256) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#606-613) is never used and should be removed
Exponential.mulScalarTruncate(Exponential.Exp,uint256) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#618-625) is never used and should be removed
Exponential.mulScalarTruncateAddUInt(Exponential.Exp,uint256,uint256) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#630-641) is never used and should be removed
Exponential.mul_(Exponential.Double,Exponential.Double) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#882-884) is never used and should be removed
Exponential.mul_(Exponential.Double,uint256) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#886-888) is never used and should be removed
Exponential.mul_(Exponential.Exp,Exponential.Exp) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#870-872) is never used and should be removed
Exponential.mul_(uint256,Exponential.Double) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#890-892) is never used and should be removed
Exponential.mul_(uint256,Exponential.Exp) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#878-880) is never used and should be removed
Exponential.safe224(uint256,string) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#817-820) is never used and should be removed
Exponential.safe32(uint256,string) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#822-825) is never used and should be removed
Exponential.sqrt(uint256) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#954-996) is never used and should be removed
Exponential.subExp(Exponential.Exp,Exponential.Exp) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#597-601) is never used and should be removed
Exponential.sub_(Exponential.Double,Exponential.Double) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#853-855) is never used and should be removed
Exponential.sub_(Exponential.Exp,Exponential.Exp) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#849-851) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code
INFO:Detectors:
Pragma version^0.5.16 (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#15) allows old versions
Pragma version^0.5.16 (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#134) allows old versions
Pragma version^0.5.16 (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#541) allows old versions
Pragma version^0.5.16 (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1071) allows old versions
Pragma version^0.5.16 (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2293) allows old versions
Pragma version^0.5.16 (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3106) allows old versions
Pragma version^0.5.16 (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3133) allows old versions
Pragma version^0.5.16 (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3186) allows old versions
Pragma version^0.5.16 (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#4470) allows old versions
Pragma version^0.5.16 (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#4729) allows old versions
Pragma version^0.5.16 (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#4798) allows old versions
Pragma version^0.5.16 (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#4872) allows old versions
Pragma version^0.5.16 (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#4893) allows old versions
Pragma version^0.5.16 (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#4927) allows old versions
Pragma version^0.5.16 (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#5003) allows old versions
Pragma version^0.5.16 (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#5042) allows old versions
solc-0.5.17 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity
INFO:Detectors:
CCollateralCapErc20NoInterestDelegate (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3142-3184) should inherit from CDelegateInterface (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#4441-4453)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-inheritance
INFO:Detectors:
Variable CTokenStorage._notEntered (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#25) is not in mixedCase
Constant CTokenStorage.borrowRateMaxMantissa (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#46) is not in UPPER_CASE_WITH_UNDERSCORES
Constant CTokenStorage.reserveFactorMaxMantissa (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#51) is not in UPPER_CASE_WITH_UNDERSCORES
Function CErc20Interface._addReserves(uint256) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#251) is not in mixedCase
Function CTokenInterface._setPendingAdmin(address) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#412) is not in mixedCase
Function CTokenInterface._acceptAdmin() (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#414) is not in mixedCase
Function CTokenInterface._setComptroller(ComptrollerInterface) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#416) is not in mixedCase
Function CTokenInterface._setReserveFactor(uint256) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#418) is not in mixedCase
Function CTokenInterface._reduceReserves(uint256) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#420) is not in mixedCase
Function CTokenInterface._setInterestRateModel(InterestRateModel) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#422) is not in mixedCase
Function Exponential.mul_ScalarTruncate(Exponential.Exp,uint256) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#646-649) is not in mixedCase
Function Exponential.mul_ScalarTruncateAddUInt(Exponential.Exp,uint256,uint256) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#654-661) is not in mixedCase
Function Exponential.div_ScalarByExp(uint256,Exponential.Exp) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#710-722) is not in mixedCase
Function Exponential.div_ScalarByExpTruncate(uint256,Exponential.Exp) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#727-730) is not in mixedCase
Constant Exponential.expScale (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#553) is not in UPPER_CASE_WITH_UNDERSCORES
Constant Exponential.doubleScale (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#554) is not in UPPER_CASE_WITH_UNDERSCORES
Constant Exponential.halfExpScale (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#555) is not in UPPER_CASE_WITH_UNDERSCORES
Constant Exponential.mantissaOne (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#556) is not in UPPER_CASE_WITH_UNDERSCORES
Function CCollateralCapErc20Interface._setCollateralCap(uint256) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1068) is not in mixedCase
Function CTokenNoInterest._setPendingAdmin(address) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1914-1930) is not in mixedCase
Function CTokenNoInterest._acceptAdmin() (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1937-1957) is not in mixedCase
Function CTokenNoInterest._setComptroller(ComptrollerInterface) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1964-1981) is not in mixedCase
Function CTokenNoInterest._setReserveFactor(uint256) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1988-1996) is not in mixedCase
Function CTokenNoInterest._reduceReserves(uint256) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2093-2101) is not in mixedCase
Function CTokenNoInterest._setInterestRateModel(InterestRateModel) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2157-2165) is not in mixedCase
Function CCollateralCapErc20NoInterest._addReserves(uint256) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2418-2420) is not in mixedCase
Function CCollateralCapErc20NoInterest._setCollateralCap(uint256) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2426-2431) is not in mixedCase
Function CCollateralCapErc20NoInterestDelegate._becomeImplementation(bytes) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3152-3171) is not in mixedCase
Function CCollateralCapErc20NoInterestDelegate._resignImplementation() (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3176-3183) is not in mixedCase
Function CToken._setPendingAdmin(address) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#4000-4016) is not in mixedCase
Function CToken._acceptAdmin() (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#4023-4043) is not in mixedCase
Function CToken._setComptroller(ComptrollerInterface) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#4050-4067) is not in mixedCase
Function CToken._setReserveFactor(uint256) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#4074-4082) is not in mixedCase
Function CToken._reduceReserves(uint256) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#4179-4187) is not in mixedCase
Function CToken._setInterestRateModel(InterestRateModel) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#4243-4251) is not in mixedCase
Function CWrappedNativeInterface._addReservesNative() (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#4419) is not in mixedCase
Function CDelegatorInterface._setImplementation(address,bool,bytes) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#4434-4438) is not in mixedCase
Function CDelegateInterface._becomeImplementation(bytes) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#4447) is not in mixedCase
Function CDelegateInterface._resignImplementation() (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#4452) is not in mixedCase
Variable ComptrollerV1Storage._mintGuardianPaused (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#4672) is not in mixedCase
Variable ComptrollerV1Storage._borrowGuardianPaused (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#4673) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions
INFO:Detectors:
Redundant expression "isNative (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2628)" inCCollateralCapErc20NoInterest (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2305-3104)
Redundant expression "isNative (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2674)" inCCollateralCapErc20NoInterest (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2305-3104)
Redundant expression "data (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3154)" inCCollateralCapErc20NoInterestDelegate (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3142-3184)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#redundant-statements
INFO:Detectors:
Variable CTokenInterface.seize(address,address,uint256).seizeTokens (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#407) is too similar to CTokenNoInterest.seizeInternal(address,address,address,uint256).seizerToken (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2275)
Variable CTokenNoInterest.seizeInternal(address,address,address,uint256).seizeTokens (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2278) is too similar to CTokenNoInterest.seizeInternal(address,address,address,uint256).seizerToken (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2275)
Variable CTokenNoInterest.seize(address,address,uint256).seizeTokens (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1901) is too similar to CTokenNoInterest.seizeInternal(address,address,address,uint256).seizerToken (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2275)
Variable CTokenNoInterest.seize(address,address,uint256).seizeTokens (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#1901) is too similar to CCollateralCapErc20NoInterest.seizeInternal(address,address,address,uint256).seizerToken (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3054)
Variable CTokenNoInterest.seizeInternal(address,address,address,uint256).seizeTokens (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2278) is too similar to CCollateralCapErc20NoInterest.seizeInternal(address,address,address,uint256).seizerToken (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3054)
Variable CCollateralCapErc20NoInterest.seizeInternal(address,address,address,uint256).seizeTokens (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3057) is too similar to CTokenNoInterest.seizeInternal(address,address,address,uint256).seizerToken (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2275)
Variable CCollateralCapErc20NoInterest.seizeInternal(address,address,address,uint256).seizeTokens (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3057) is too similar to CCollateralCapErc20NoInterest.seizeInternal(address,address,address,uint256).seizerToken (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3054)
Variable CTokenInterface.seize(address,address,uint256).seizeTokens (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#407) is too similar to CCollateralCapErc20NoInterest.seizeInternal(address,address,address,uint256).seizerToken (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3054)
Variable CTokenInterface.seize(address,address,uint256).seizeTokens (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#407) is too similar to CToken.seizeInternal(address,address,address,uint256).seizerToken (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#4361)
Variable CToken.seize(address,address,uint256).seizeTokens (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3987) is too similar to CToken.seizeInternal(address,address,address,uint256).seizerToken (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#4361)
Variable CToken.seizeInternal(address,address,address,uint256).seizeTokens (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#4364) is too similar to CToken.seizeInternal(address,address,address,uint256).seizerToken (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#4361)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#variable-names-too-similar
INFO:Detectors:
Exponential.sqrt(uint256) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#954-996) uses literals with too many digits:
	- xx >= 0x100000000000000000000000000000000 (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#959)
Exponential.sqrt(uint256) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#954-996) uses literals with too many digits:
	- xx >= 0x10000000000000000 (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#963)
Exponential.sqrt(uint256) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#954-996) uses literals with too many digits:
	- xx >= 0x100000000 (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#967)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits
INFO:Detectors:
CToken (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3201-4378) does not implement functions:
	- CToken.doTransferIn(address,uint256,bool) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#4301-4305)
	- CToken.doTransferOut(address,uint256,bool) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#4312-4316)
	- CToken.getCTokenBalanceInternal(address) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#4332)
	- CToken.getCashPrior() (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#4295)
	- CToken.mintFresh(address,uint256,bool) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#4338-4342)
	- CToken.redeemFresh(address,uint256,uint256,bool) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#4348-4353)
	- CToken.seizeInternal(address,address,address,uint256) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#4360-4365)
	- CToken.transferTokens(address,address,address,uint256) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#4322-4327)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unimplemented-functions
INFO:Detectors:
CErc20Storage.implementation (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#12) should be constant 
CErc20Storage.underlying (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#7) should be constant 
CTokenStorage.totalSupply (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#106) should be constant 
ComptrollerV1Storage._borrowGuardianPaused (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#4673) should be constant 
ComptrollerV1Storage._mintGuardianPaused (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#4672) should be constant 
ComptrollerV1Storage.borrowCapGuardian (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#4708) should be constant 
ComptrollerV1Storage.closeFactorMantissa (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#4627) should be constant 
ComptrollerV1Storage.liquidationIncentiveMantissa (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#4632) should be constant 
ComptrollerV1Storage.liquidityMining (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#4726) should be constant 
ComptrollerV1Storage.oracle (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#4622) should be constant 
ComptrollerV1Storage.pauseGuardian (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#4671) should be constant 
ComptrollerV1Storage.seizeGuardianPaused (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#4675) should be constant 
ComptrollerV1Storage.supplyCapGuardian (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#4714) should be constant 
ComptrollerV1Storage.transferGuardianPaused (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#4674) should be constant 
UnitrollerAdminStorage.admin (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3115) should be constant 
UnitrollerAdminStorage.comptrollerImplementation (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3125) should be constant 
UnitrollerAdminStorage.pendingAdmin (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3120) should be constant 
UnitrollerAdminStorage.pendingComptrollerImplementation (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3130) should be constant 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant
INFO:Detectors:
initialize(address,ComptrollerInterface,InterestRateModel,uint256,string,string,uint8) should be declared external:
	- CCollateralCapErc20NoInterest.initialize(address,ComptrollerInterface,InterestRateModel,uint256,string,string,uint8) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#2316-2331)
Moreover, the following function parameters should change its data location:
name_ location should be calldata
symbol_ location should be calldata
_becomeImplementation(bytes) should be declared external:
	- CCollateralCapErc20NoInterestDelegate._becomeImplementation(bytes) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3152-3171)
Moreover, the following function parameters should change its data location:
data location should be calldata
initialize(ComptrollerInterface,InterestRateModel,uint256,string,string,uint8) should be declared external:
	- CToken.initialize(ComptrollerInterface,InterestRateModel,uint256,string,string,uint8) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#3211-3244)
Moreover, the following function parameters should change its data location:
name_ location should be calldata
symbol_ location should be calldata
_setImplementation(address,bool,bytes) should be declared external:
	- CDelegatorInterface._setImplementation(address,bool,bytes) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#4434-4438)
Moreover, the following function parameters should change its data location:
becomeImplementationData location should be calldata
_becomeImplementation(bytes) should be declared external:
	- CDelegateInterface._becomeImplementation(bytes) (../../sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol#4447)
Moreover, the following function parameters should change its data location:
data location should be calldata
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external
INFO:Slither:/bdata2/sc/dataset/mainnet/0x9be7B5b7e219461F164863daD045a35D1101aa64.sol analyzed (30 contracts with 85 detectors), 233 result(s) found
