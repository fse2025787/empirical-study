INFO:Detectors:
StrategyETHConvex.deposit() (../../sc/dataset/mainnet/0xEc365C69C183FD2a388BEC79d9d992087ddFc8F5.sol#224-241) performs a multiplication on the result of a division:
	- v = _want.mul(1e18).div(ICurveFi(eCRVPool).get_virtual_price()) (../../sc/dataset/mainnet/0xEc365C69C183FD2a388BEC79d9d992087ddFc8F5.sol#229)
	- ICurveFi(eCRVPool).add_liquidity.value(_want)(amounts,v.mul(DENOMINATOR.sub(slip)).div(DENOMINATOR)) (../../sc/dataset/mainnet/0xEc365C69C183FD2a388BEC79d9d992087ddFc8F5.sol#231)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#divide-before-multiply
INFO:Detectors:
StrategyETHConvex.constructor() (../../sc/dataset/mainnet/0xEc365C69C183FD2a388BEC79d9d992087ddFc8F5.sol#208-219) ignores return value by IERC20(CRV).approve(unirouter,uint256(- 1)) (../../sc/dataset/mainnet/0xEc365C69C183FD2a388BEC79d9d992087ddFc8F5.sol#216)
StrategyETHConvex.constructor() (../../sc/dataset/mainnet/0xEc365C69C183FD2a388BEC79d9d992087ddFc8F5.sol#208-219) ignores return value by IERC20(CVX).approve(unirouter,uint256(- 1)) (../../sc/dataset/mainnet/0xEc365C69C183FD2a388BEC79d9d992087ddFc8F5.sol#217)
StrategyETHConvex.constructor() (../../sc/dataset/mainnet/0xEc365C69C183FD2a388BEC79d9d992087ddFc8F5.sol#208-219) ignores return value by IERC20(weth).approve(unirouter,uint256(- 1)) (../../sc/dataset/mainnet/0xEc365C69C183FD2a388BEC79d9d992087ddFc8F5.sol#218)
StrategyETHConvex.deposit() (../../sc/dataset/mainnet/0xEc365C69C183FD2a388BEC79d9d992087ddFc8F5.sol#224-241) ignores return value by Booster(booster).depositAll(pid,true) (../../sc/dataset/mainnet/0xEc365C69C183FD2a388BEC79d9d992087ddFc8F5.sol#239)
StrategyETHConvex._withdrawSome(uint256) (../../sc/dataset/mainnet/0xEc365C69C183FD2a388BEC79d9d992087ddFc8F5.sol#273-288) ignores return value by BaseRewardPool(baserewardpool).withdrawAndUnwrap(_eCRV,false) (../../sc/dataset/mainnet/0xEc365C69C183FD2a388BEC79d9d992087ddFc8F5.sol#283)
StrategyETHConvex.harvest() (../../sc/dataset/mainnet/0xEc365C69C183FD2a388BEC79d9d992087ddFc8F5.sol#324-328) ignores return value by BaseRewardPool(baserewardpool).getReward(address(this),true) (../../sc/dataset/mainnet/0xEc365C69C183FD2a388BEC79d9d992087ddFc8F5.sol#326)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return
INFO:Detectors:
StrategyETHConvex.setGovernance(address) (../../sc/dataset/mainnet/0xEc365C69C183FD2a388BEC79d9d992087ddFc8F5.sol#351-354) should emit an event for: 
	- governance = _governance (../../sc/dataset/mainnet/0xEc365C69C183FD2a388BEC79d9d992087ddFc8F5.sol#353) 
StrategyETHConvex.setController(address) (../../sc/dataset/mainnet/0xEc365C69C183FD2a388BEC79d9d992087ddFc8F5.sol#356-359) should emit an event for: 
	- controller = _controller (../../sc/dataset/mainnet/0xEc365C69C183FD2a388BEC79d9d992087ddFc8F5.sol#358) 
	- controller = _controller (../../sc/dataset/mainnet/0xEc365C69C183FD2a388BEC79d9d992087ddFc8F5.sol#358) 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-access-control
INFO:Detectors:
StrategyETHConvex.setSlip(uint256) (../../sc/dataset/mainnet/0xEc365C69C183FD2a388BEC79d9d992087ddFc8F5.sol#361-365) should emit an event for: 
	- slip = _slip (../../sc/dataset/mainnet/0xEc365C69C183FD2a388BEC79d9d992087ddFc8F5.sol#364) 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-arithmetic
INFO:Detectors:
StrategyETHConvex.setGovernance(address)._governance (../../sc/dataset/mainnet/0xEc365C69C183FD2a388BEC79d9d992087ddFc8F5.sol#351) lacks a zero-check on :
		- governance = _governance (../../sc/dataset/mainnet/0xEc365C69C183FD2a388BEC79d9d992087ddFc8F5.sol#353)
StrategyETHConvex.setController(address)._controller (../../sc/dataset/mainnet/0xEc365C69C183FD2a388BEC79d9d992087ddFc8F5.sol#356) lacks a zero-check on :
		- controller = _controller (../../sc/dataset/mainnet/0xEc365C69C183FD2a388BEC79d9d992087ddFc8F5.sol#358)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation
INFO:Detectors:
Reentrancy in StrategyETHConvex.deposit() (../../sc/dataset/mainnet/0xEc365C69C183FD2a388BEC79d9d992087ddFc8F5.sol#224-241):
	External calls:
	- WETH(address(weth)).withdraw(_want) (../../sc/dataset/mainnet/0xEc365C69C183FD2a388BEC79d9d992087ddFc8F5.sol#227)
	- ICurveFi(eCRVPool).add_liquidity.value(_want)(amounts,v.mul(DENOMINATOR.sub(slip)).div(DENOMINATOR)) (../../sc/dataset/mainnet/0xEc365C69C183FD2a388BEC79d9d992087ddFc8F5.sol#231)
	External calls sending eth:
	- ICurveFi(eCRVPool).add_liquidity.value(_want)(amounts,v.mul(DENOMINATOR.sub(slip)).div(DENOMINATOR)) (../../sc/dataset/mainnet/0xEc365C69C183FD2a388BEC79d9d992087ddFc8F5.sol#231)
	State variables written after the call(s):
	- depositLastPrice = _want.mul(1e18).div(_eCRV.sub(beforeCRV)) (../../sc/dataset/mainnet/0xEc365C69C183FD2a388BEC79d9d992087ddFc8F5.sol#233)
Reentrancy in StrategyETHConvex.harvest() (../../sc/dataset/mainnet/0xEc365C69C183FD2a388BEC79d9d992087ddFc8F5.sol#324-328):
	External calls:
	- BaseRewardPool(baserewardpool).getReward(address(this),true) (../../sc/dataset/mainnet/0xEc365C69C183FD2a388BEC79d9d992087ddFc8F5.sol#326)
	- redelivery() (../../sc/dataset/mainnet/0xEc365C69C183FD2a388BEC79d9d992087ddFc8F5.sol#327)
		- WETH(address(weth)).withdraw(_want) (../../sc/dataset/mainnet/0xEc365C69C183FD2a388BEC79d9d992087ddFc8F5.sol#227)
		- UniswapRouter(unirouter).swapExactTokensForTokens(IERC20(CRV).balanceOf(address(this)),0,swapCRV2ETHRouting,address(this),now.add(1800)) (../../sc/dataset/mainnet/0xEc365C69C183FD2a388BEC79d9d992087ddFc8F5.sol#334)
		- (success,returndata) = address(token).call(data) (../../sc/dataset/mainnet/0xEc365C69C183FD2a388BEC79d9d992087ddFc8F5.sol#111)
		- UniswapRouter(unirouter).swapExactTokensForTokens(IERC20(CVX).balanceOf(address(this)),0,swapCVX2ETHRouting,address(this),now.add(1800)) (../../sc/dataset/mainnet/0xEc365C69C183FD2a388BEC79d9d992087ddFc8F5.sol#335)
		- UniswapRouter(unirouter).swapExactTokensForTokens(_2bt,0,swap2BTRouting,Controller(controller).rewards(),now.add(1800)) (../../sc/dataset/mainnet/0xEc365C69C183FD2a388BEC79d9d992087ddFc8F5.sol#339)
		- ICurveFi(eCRVPool).add_liquidity.value(_want)(amounts,v.mul(DENOMINATOR.sub(slip)).div(DENOMINATOR)) (../../sc/dataset/mainnet/0xEc365C69C183FD2a388BEC79d9d992087ddFc8F5.sol#231)
		- IERC20(want).safeApprove(booster,0) (../../sc/dataset/mainnet/0xEc365C69C183FD2a388BEC79d9d992087ddFc8F5.sol#236)
		- IERC20(want).safeApprove(booster,_eCRV) (../../sc/dataset/mainnet/0xEc365C69C183FD2a388BEC79d9d992087ddFc8F5.sol#237)
		- Booster(booster).depositAll(pid,true) (../../sc/dataset/mainnet/0xEc365C69C183FD2a388BEC79d9d992087ddFc8F5.sol#239)
	External calls sending eth:
	- redelivery() (../../sc/dataset/mainnet/0xEc365C69C183FD2a388BEC79d9d992087ddFc8F5.sol#327)
		- ICurveFi(eCRVPool).add_liquidity.value(_want)(amounts,v.mul(DENOMINATOR.sub(slip)).div(DENOMINATOR)) (../../sc/dataset/mainnet/0xEc365C69C183FD2a388BEC79d9d992087ddFc8F5.sol#231)
	State variables written after the call(s):
	- redelivery() (../../sc/dataset/mainnet/0xEc365C69C183FD2a388BEC79d9d992087ddFc8F5.sol#327)
		- depositLastPrice = _want.mul(1e18).div(_eCRV.sub(beforeCRV)) (../../sc/dataset/mainnet/0xEc365C69C183FD2a388BEC79d9d992087ddFc8F5.sol#233)
Reentrancy in StrategyETHConvex.redelivery() (../../sc/dataset/mainnet/0xEc365C69C183FD2a388BEC79d9d992087ddFc8F5.sol#330-342):
	External calls:
	- UniswapRouter(unirouter).swapExactTokensForTokens(IERC20(CRV).balanceOf(address(this)),0,swapCRV2ETHRouting,address(this),now.add(1800)) (../../sc/dataset/mainnet/0xEc365C69C183FD2a388BEC79d9d992087ddFc8F5.sol#334)
	- UniswapRouter(unirouter).swapExactTokensForTokens(IERC20(CVX).balanceOf(address(this)),0,swapCVX2ETHRouting,address(this),now.add(1800)) (../../sc/dataset/mainnet/0xEc365C69C183FD2a388BEC79d9d992087ddFc8F5.sol#335)
	- UniswapRouter(unirouter).swapExactTokensForTokens(_2bt,0,swap2BTRouting,Controller(controller).rewards(),now.add(1800)) (../../sc/dataset/mainnet/0xEc365C69C183FD2a388BEC79d9d992087ddFc8F5.sol#339)
	- deposit() (../../sc/dataset/mainnet/0xEc365C69C183FD2a388BEC79d9d992087ddFc8F5.sol#341)
		- WETH(address(weth)).withdraw(_want) (../../sc/dataset/mainnet/0xEc365C69C183FD2a388BEC79d9d992087ddFc8F5.sol#227)
		- (success,returndata) = address(token).call(data) (../../sc/dataset/mainnet/0xEc365C69C183FD2a388BEC79d9d992087ddFc8F5.sol#111)
		- ICurveFi(eCRVPool).add_liquidity.value(_want)(amounts,v.mul(DENOMINATOR.sub(slip)).div(DENOMINATOR)) (../../sc/dataset/mainnet/0xEc365C69C183FD2a388BEC79d9d992087ddFc8F5.sol#231)
		- IERC20(want).safeApprove(booster,0) (../../sc/dataset/mainnet/0xEc365C69C183FD2a388BEC79d9d992087ddFc8F5.sol#236)
		- IERC20(want).safeApprove(booster,_eCRV) (../../sc/dataset/mainnet/0xEc365C69C183FD2a388BEC79d9d992087ddFc8F5.sol#237)
		- Booster(booster).depositAll(pid,true) (../../sc/dataset/mainnet/0xEc365C69C183FD2a388BEC79d9d992087ddFc8F5.sol#239)
	External calls sending eth:
	- deposit() (../../sc/dataset/mainnet/0xEc365C69C183FD2a388BEC79d9d992087ddFc8F5.sol#341)
		- ICurveFi(eCRVPool).add_liquidity.value(_want)(amounts,v.mul(DENOMINATOR.sub(slip)).div(DENOMINATOR)) (../../sc/dataset/mainnet/0xEc365C69C183FD2a388BEC79d9d992087ddFc8F5.sol#231)
	State variables written after the call(s):
	- deposit() (../../sc/dataset/mainnet/0xEc365C69C183FD2a388BEC79d9d992087ddFc8F5.sol#341)
		- depositLastPrice = _want.mul(1e18).div(_eCRV.sub(beforeCRV)) (../../sc/dataset/mainnet/0xEc365C69C183FD2a388BEC79d9d992087ddFc8F5.sol#233)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2
INFO:Detectors:
Address.isContract(address) (../../sc/dataset/mainnet/0xEc365C69C183FD2a388BEC79d9d992087ddFc8F5.sol#70-76) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0xEc365C69C183FD2a388BEC79d9d992087ddFc8F5.sol#74)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage
INFO:Detectors:
Address.sendValue(address,uint256) (../../sc/dataset/mainnet/0xEc365C69C183FD2a388BEC79d9d992087ddFc8F5.sol#80-86) is never used and should be removed
Address.toPayable(address) (../../sc/dataset/mainnet/0xEc365C69C183FD2a388BEC79d9d992087ddFc8F5.sol#77-79) is never used and should be removed
SafeERC20.safeTransferFrom(IERC20,address,address,uint256) (../../sc/dataset/mainnet/0xEc365C69C183FD2a388BEC79d9d992087ddFc8F5.sol#97-99) is never used and should be removed
SafeMath.mod(uint256,uint256) (../../sc/dataset/mainnet/0xEc365C69C183FD2a388BEC79d9d992087ddFc8F5.sol#60-62) is never used and should be removed
SafeMath.mod(uint256,uint256,string) (../../sc/dataset/mainnet/0xEc365C69C183FD2a388BEC79d9d992087ddFc8F5.sol#63-66) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code
INFO:Detectors:
Pragma version^0.5.17 (../../sc/dataset/mainnet/0xEc365C69C183FD2a388BEC79d9d992087ddFc8F5.sol#9) allows old versions
solc-0.5.17 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity
INFO:Detectors:
Low level call in Address.sendValue(address,uint256) (../../sc/dataset/mainnet/0xEc365C69C183FD2a388BEC79d9d992087ddFc8F5.sol#80-86):
	- (success) = recipient.call.value(amount)() (../../sc/dataset/mainnet/0xEc365C69C183FD2a388BEC79d9d992087ddFc8F5.sol#84)
Low level call in SafeERC20.callOptionalReturn(IERC20,bytes) (../../sc/dataset/mainnet/0xEc365C69C183FD2a388BEC79d9d992087ddFc8F5.sol#107-118):
	- (success,returndata) = address(token).call(data) (../../sc/dataset/mainnet/0xEc365C69C183FD2a388BEC79d9d992087ddFc8F5.sol#111)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls
INFO:Detectors:
StrategyETHConvex (../../sc/dataset/mainnet/0xEc365C69C183FD2a388BEC79d9d992087ddFc8F5.sol#163-371) should inherit from WETH (../../sc/dataset/mainnet/0xEc365C69C183FD2a388BEC79d9d992087ddFc8F5.sol#131-136)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-inheritance
INFO:Detectors:
Function ICurveFi.add_liquidity(uint256[2],uint256) (../../sc/dataset/mainnet/0xEc365C69C183FD2a388BEC79d9d992087ddFc8F5.sol#139-142) is not in mixedCase
Parameter ICurveFi.add_liquidity(uint256[2],uint256).min_mint_amount (../../sc/dataset/mainnet/0xEc365C69C183FD2a388BEC79d9d992087ddFc8F5.sol#141) is not in mixedCase
Function ICurveFi.remove_liquidity_one_coin(uint256,int128,uint256) (../../sc/dataset/mainnet/0xEc365C69C183FD2a388BEC79d9d992087ddFc8F5.sol#143-147) is not in mixedCase
Parameter ICurveFi.remove_liquidity_one_coin(uint256,int128,uint256)._token_amount (../../sc/dataset/mainnet/0xEc365C69C183FD2a388BEC79d9d992087ddFc8F5.sol#144) is not in mixedCase
Parameter ICurveFi.remove_liquidity_one_coin(uint256,int128,uint256).min_amount (../../sc/dataset/mainnet/0xEc365C69C183FD2a388BEC79d9d992087ddFc8F5.sol#146) is not in mixedCase
Function ICurveFi.get_virtual_price() (../../sc/dataset/mainnet/0xEc365C69C183FD2a388BEC79d9d992087ddFc8F5.sol#148) is not in mixedCase
Parameter StrategyETHConvex.withdraw(uint256)._amount (../../sc/dataset/mainnet/0xEc365C69C183FD2a388BEC79d9d992087ddFc8F5.sol#245) is not in mixedCase
Parameter StrategyETHConvex.setGovernance(address)._governance (../../sc/dataset/mainnet/0xEc365C69C183FD2a388BEC79d9d992087ddFc8F5.sol#351) is not in mixedCase
Parameter StrategyETHConvex.setController(address)._controller (../../sc/dataset/mainnet/0xEc365C69C183FD2a388BEC79d9d992087ddFc8F5.sol#356) is not in mixedCase
Parameter StrategyETHConvex.setSlip(uint256)._slip (../../sc/dataset/mainnet/0xEc365C69C183FD2a388BEC79d9d992087ddFc8F5.sol#361) is not in mixedCase
Parameter StrategyETHConvex.setWithdrawSlipCheck(bool)._check (../../sc/dataset/mainnet/0xEc365C69C183FD2a388BEC79d9d992087ddFc8F5.sol#366) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions
INFO:Detectors:
Variable StrategyETHConvex.swapCRV2ETHRouting (../../sc/dataset/mainnet/0xEc365C69C183FD2a388BEC79d9d992087ddFc8F5.sol#195) is too similar to StrategyETHConvex.swapCVX2ETHRouting (../../sc/dataset/mainnet/0xEc365C69C183FD2a388BEC79d9d992087ddFc8F5.sol#194)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#variable-names-too-similar
INFO:Detectors:
StrategyETHConvex.pid (../../sc/dataset/mainnet/0xEc365C69C183FD2a388BEC79d9d992087ddFc8F5.sol#168) should be constant 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant
INFO:Slither:/bdata2/sc/dataset/mainnet/0xEc365C69C183FD2a388BEC79d9d992087ddFc8F5.sol analyzed (11 contracts with 85 detectors), 39 result(s) found
