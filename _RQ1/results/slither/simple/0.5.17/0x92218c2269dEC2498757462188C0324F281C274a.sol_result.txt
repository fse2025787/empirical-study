INFO:Detectors:
TBV2Pool.notifyRewardAmount(uint256) (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#803-818) performs a multiplication on the result of a division:
	- rewardRate = reward.div(BONUS_DURATION) (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#809)
	- leftover = remaining.mul(rewardRate) (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#812)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#divide-before-multiply
INFO:Detectors:
TBV2Pool.rewardPerToken() (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#746-758) uses a dangerous strict equality:
	- totalSupply() == 0 (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#747)
vBid.vstake(uint256,uint256) (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#625-648) uses a dangerous strict equality:
	- require(bool,string)(_balances[msg.sender] == 0,this should be called with zero stake) (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#628)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dangerous-strict-equalities
INFO:Detectors:
Reentrancy in TBV2Pool.exit() (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#785-788):
	External calls:
	- withdraw() (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#786)
		- IUpdateTBD(_contract).updateTopbidderDivident(value) (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#620)
		- (success,returndata) = address(token).call(data) (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#521)
		- bid.safeTransfer(msg.sender,_bidBalances[msg.sender]) (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#693)
	- getReward() (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#787)
		- lptoken.safeTransfer(msg.sender,reward) (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#798)
		- (success,returndata) = address(token).call(data) (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#521)
	State variables written after the call(s):
	- getReward() (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#787)
		- lastUpdateTime = lastTimeRewardApplicable() (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#734)
	TBV2Pool.lastUpdateTime (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#715) can be used in cross function reentrancies:
	- TBV2Pool.lastUpdateTime (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#715)
	- TBV2Pool.notifyRewardAmount(uint256) (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#803-818)
	- TBV2Pool.rewardPerToken() (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#746-758)
	- TBV2Pool.updateReward(address) (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#732-740)
	- getReward() (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#787)
		- rewardPerTokenStored = rewardPerToken() (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#733)
	TBV2Pool.rewardPerTokenStored (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#716) can be used in cross function reentrancies:
	- TBV2Pool.rewardPerToken() (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#746-758)
	- TBV2Pool.rewardPerTokenStored (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#716)
	- TBV2Pool.updateReward(address) (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#732-740)
	- getReward() (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#787)
		- rewards[msg.sender] = 0 (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#797)
		- rewards[account] = earned(account) (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#736)
	TBV2Pool.rewards (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#718) can be used in cross function reentrancies:
	- TBV2Pool.earned(address) (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#760-766)
	- TBV2Pool.getReward() (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#794-801)
	- TBV2Pool.rewards (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#718)
	- TBV2Pool.updateReward(address) (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#732-740)
	- getReward() (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#787)
		- userRewardPerTokenPaid[account] = rewardPerTokenStored (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#737)
	TBV2Pool.userRewardPerTokenPaid (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#717) can be used in cross function reentrancies:
	- TBV2Pool.earned(address) (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#760-766)
	- TBV2Pool.updateReward(address) (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#732-740)
	- TBV2Pool.userRewardPerTokenPaid (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#717)
Reentrancy in vBid.increaseStakeAndTime(uint256,uint256) (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#651-680):
	External calls:
	- bid.safeTransferFrom(msg.sender,address(this),bidAmount) (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#667)
	State variables written after the call(s):
	- _bidBalances[msg.sender] = _bidBalances[msg.sender].add(bidAmount) (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#668)
	vBid._bidBalances (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#583) can be used in cross function reentrancies:
	- vBid._bidBalances (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#583)
	- vBid.withdraw() (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#684-704)
	- _stakeTimes[msg.sender] = newStakeTime (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#672)
	vBid._stakeTimes (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#585) can be used in cross function reentrancies:
	- vBid._stakeTimes (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#585)
	- vBid.withdraw() (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#684-704)
Reentrancy in vBid.voteContract(address) (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#603-617):
	External calls:
	- updateContract(old_contract,_contractTotals[msg.sender]) (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#612)
		- IUpdateTBD(_contract).updateTopbidderDivident(value) (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#620)
	State variables written after the call(s):
	- _contractTotals[_contract] += _balances[msg.sender].div(12) (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#615)
	vBid._contractTotals (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#589) can be used in cross function reentrancies:
	- vBid._contractTotals (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#589)
	- vBid.withdraw() (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#684-704)
Reentrancy in vBid.withdraw() (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#684-704):
	External calls:
	- bid.safeTransfer(msg.sender,_bidBalances[msg.sender]) (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#693)
	State variables written after the call(s):
	- _bidBalances[msg.sender] = 0 (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#694)
	vBid._bidBalances (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#583) can be used in cross function reentrancies:
	- vBid._bidBalances (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#583)
	- vBid.withdraw() (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#684-704)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1
INFO:Detectors:
IRewardDistributionRecipient.setRewardDistribution(address) (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#547-552) should emit an event for: 
	- rewardDistribution = _rewardDistribution (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#551) 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-access-control
INFO:Detectors:
IRewardDistributionRecipient.setRewardDistribution(address)._rewardDistribution (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#547) lacks a zero-check on :
		- rewardDistribution = _rewardDistribution (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#551)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation
INFO:Detectors:
Reentrancy in vBid.increaseStakeAndTime(uint256,uint256) (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#651-680):
	External calls:
	- bid.safeTransferFrom(msg.sender,address(this),bidAmount) (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#667)
	State variables written after the call(s):
	- _contractTotals[_contract] = _contractTotals[_contract].add(amountNew.div(12)) (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#676)
	- _totalSupplyBid = _totalSupplyBid.add(bidAmount) (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#669)
Reentrancy in vBid.vstake(uint256,uint256) (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#625-648):
	External calls:
	- bid.safeTransferFrom(msg.sender,address(this),bidAmount) (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#637)
	State variables written after the call(s):
	- _bidBalances[msg.sender] = bidAmount (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#638)
	- _contractTotals[_contract] = _contractTotals[_contract].add(_balances[msg.sender].div(12)) (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#644)
	- _stakeTimes[msg.sender] = stakeTime (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#640)
	- _startTimes[msg.sender] = block.timestamp (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#639)
Reentrancy in vBid.withdraw() (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#684-704):
	External calls:
	- bid.safeTransfer(msg.sender,_bidBalances[msg.sender]) (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#693)
	State variables written after the call(s):
	- _contractTotals[_contract] = _contractTotals[_contract].sub(amount.div(12)) (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#700)
	- _stakeTimes[msg.sender] = 0 (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#696)
	- _startTimes[msg.sender] = 0 (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#695)
	- _voteContracts[msg.sender] = address(0) (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#701)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2
INFO:Detectors:
Reentrancy in TBV2Pool.exit() (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#785-788):
	External calls:
	- withdraw() (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#786)
		- IUpdateTBD(_contract).updateTopbidderDivident(value) (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#620)
		- (success,returndata) = address(token).call(data) (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#521)
		- bid.safeTransfer(msg.sender,_bidBalances[msg.sender]) (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#693)
	- getReward() (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#787)
		- lptoken.safeTransfer(msg.sender,reward) (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#798)
		- (success,returndata) = address(token).call(data) (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#521)
	Event emitted after the call(s):
	- RewardPaid(msg.sender,reward) (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#799)
		- getReward() (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#787)
Reentrancy in TBV2Pool.getReward() (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#794-801):
	External calls:
	- lptoken.safeTransfer(msg.sender,reward) (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#798)
	Event emitted after the call(s):
	- RewardPaid(msg.sender,reward) (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#799)
Reentrancy in TBV2Pool.increaseStakeWTime(uint256,uint256) (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#773-776):
	External calls:
	- super.increaseStakeAndTime(bidAmount,time) (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#774)
		- IUpdateTBD(_contract).updateTopbidderDivident(value) (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#620)
		- (success,returndata) = address(token).call(data) (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#521)
		- bid.safeTransferFrom(msg.sender,address(this),bidAmount) (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#667)
	Event emitted after the call(s):
	- Staked(msg.sender,bidAmount,time) (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#775)
Reentrancy in TBV2Pool.stake(uint256,uint256) (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#768-772):
	External calls:
	- super.vstake(bidAmount,time) (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#770)
		- IUpdateTBD(_contract).updateTopbidderDivident(value) (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#620)
		- (success,returndata) = address(token).call(data) (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#521)
		- bid.safeTransferFrom(msg.sender,address(this),bidAmount) (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#637)
	Event emitted after the call(s):
	- Staked(msg.sender,bidAmount,time) (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#771)
Reentrancy in TBV2Pool.withdraw() (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#779-783):
	External calls:
	- super.withdraw() (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#781)
		- IUpdateTBD(_contract).updateTopbidderDivident(value) (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#620)
		- (success,returndata) = address(token).call(data) (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#521)
		- bid.safeTransfer(msg.sender,_bidBalances[msg.sender]) (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#693)
	Event emitted after the call(s):
	- Withdrawn(msg.sender,bidAmount) (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#782)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3
INFO:Detectors:
vBid.voteContract(address) (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#603-617) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(_voteDate[msg.sender] < block.timestamp - 864000,can not change vote in 10 days) (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#604)
vBid.vstake(uint256,uint256) (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#625-648) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(_balances[msg.sender] == 0,this should be called with zero stake) (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#628)
vBid.increaseStakeAndTime(uint256,uint256) (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#651-680) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(block.timestamp <= _startTimes[msg.sender].add(_stakeTimes[msg.sender]),stake time expire, please withdraw all) (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#652)
	- require(bool,string)(_balances[msg.sender] > 0,this should be called with non-zero stake) (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#654)
TBV2Pool.rewardPerToken() (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#746-758) uses timestamp for comparisons
	Dangerous comparisons:
	- totalSupply() == 0 (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#747)
TBV2Pool.getReward() (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#794-801) uses timestamp for comparisons
	Dangerous comparisons:
	- reward > 0 (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#796)
TBV2Pool.notifyRewardAmount(uint256) (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#803-818) uses timestamp for comparisons
	Dangerous comparisons:
	- block.timestamp >= periodFinish (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#808)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp
INFO:Detectors:
Address.isContract(address) (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#402-415) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#413)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage
INFO:Detectors:
Different versions of Solidity are used:
	- Version used: ['^0.5.0', '^0.5.5']
	- ^0.5.0 (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#7)
	- ^0.5.0 (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#39)
	- ^0.5.0 (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#198)
	- ^0.5.0 (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#228)
	- ^0.5.0 (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#306)
	- ^0.5.0 (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#456)
	- ^0.5.0 (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#533)
	- ^0.5.0 (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#557)
	- ^0.5.5 (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#385)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#different-pragma-directives-are-used
INFO:Detectors:
Address.sendValue(address,uint256) (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#445-451) is never used and should be removed
Address.toPayable(address) (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#423-425) is never used and should be removed
Context._msgData() (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#220-223) is never used and should be removed
Math.average(uint256,uint256) (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#31-34) is never used and should be removed
Math.max(uint256,uint256) (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#16-18) is never used and should be removed
SafeERC20.safeApprove(IERC20,address,uint256) (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#482-491) is never used and should be removed
SafeERC20.safeDecreaseAllowance(IERC20,address,uint256) (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#498-501) is never used and should be removed
SafeERC20.safeIncreaseAllowance(IERC20,address,uint256) (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#493-496) is never used and should be removed
SafeMath.mod(uint256,uint256) (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#173-175) is never used and should be removed
SafeMath.mod(uint256,uint256,string) (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#190-193) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code
INFO:Detectors:
Pragma version^0.5.0 (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#7) allows old versions
Pragma version^0.5.0 (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#39) allows old versions
Pragma version^0.5.0 (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#198) allows old versions
Pragma version^0.5.0 (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#228) allows old versions
Pragma version^0.5.0 (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#306) allows old versions
Pragma version^0.5.5 (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#385) is known to contain severe issues (https://solidity.readthedocs.io/en/latest/bugs.html)
Pragma version^0.5.0 (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#456) allows old versions
Pragma version^0.5.0 (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#533) allows old versions
Pragma version^0.5.0 (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#557) allows old versions
solc-0.5.17 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity
INFO:Detectors:
Low level call in Address.sendValue(address,uint256) (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#445-451):
	- (success) = recipient.call.value(amount)() (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#449)
Low level call in SafeERC20.callOptionalReturn(IERC20,bytes) (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#509-528):
	- (success,returndata) = address(token).call(data) (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#521)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls
INFO:Detectors:
Parameter IRewardDistributionRecipient.setRewardDistribution(address)._rewardDistribution (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#547) is not in mixedCase
Contract vBid (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#569-705) is not in CapWords
Parameter vBid.voteContract(address)._contract (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#603) is not in mixedCase
Parameter vBid.updateContract(address,uint256)._contract (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#618) is not in mixedCase
Variable vBid.STAKE_DURATION (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#576) is not in mixedCase
Variable vBid.MAX_STAKE_TIME (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#577) is not in mixedCase
Variable vBid._totalSupplyBid (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#580) is not in mixedCase
Variable vBid._balances (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#582) is not in mixedCase
Variable vBid._bidBalances (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#583) is not in mixedCase
Variable vBid._startTimes (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#584) is not in mixedCase
Variable vBid._stakeTimes (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#585) is not in mixedCase
Variable vBid._voteContracts (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#587) is not in mixedCase
Variable vBid._voteDate (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#588) is not in mixedCase
Variable vBid._contractTotals (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#589) is not in mixedCase
Parameter TBV2Pool.vote(address)._contract (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#790) is not in mixedCase
Variable TBV2Pool.BONUS_DURATION (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#712) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions
INFO:Detectors:
Redundant expression "this (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#221)" inContext (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#210-224)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#redundant-statements
INFO:Detectors:
TBV2Pool.lptoken (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#709) should be constant 
vBid.bid (../../sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol#573) should be constant 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant
INFO:Slither:/bdata2/sc/dataset/mainnet/0x92218c2269dEC2498757462188C0324F281C274a.sol analyzed (11 contracts with 85 detectors), 66 result(s) found
