INFO:Detectors:
StakingRewards.notifyRewardAmount(uint256) (../../sc/dataset/mainnet/0xb43095432c268a01efe7033cfd84c8ea9b3d1c18.sol#631-650) performs a multiplication on the result of a division:
	- rewardRate = reward.div(rewardsDuration) (../../sc/dataset/mainnet/0xb43095432c268a01efe7033cfd84c8ea9b3d1c18.sol#633)
	- leftover = remaining.mul(rewardRate) (../../sc/dataset/mainnet/0xb43095432c268a01efe7033cfd84c8ea9b3d1c18.sol#636)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#divide-before-multiply
INFO:Detectors:
Reentrancy in StakingRewards.exit() (../../sc/dataset/mainnet/0xb43095432c268a01efe7033cfd84c8ea9b3d1c18.sol#624-627):
	External calls:
	- withdraw(_balances[msg.sender]) (../../sc/dataset/mainnet/0xb43095432c268a01efe7033cfd84c8ea9b3d1c18.sol#625)
		- (success,returndata) = address(token).call(data) (../../sc/dataset/mainnet/0xb43095432c268a01efe7033cfd84c8ea9b3d1c18.sol#435)
		- stakingToken.safeTransfer(msg.sender,amount) (../../sc/dataset/mainnet/0xb43095432c268a01efe7033cfd84c8ea9b3d1c18.sol#611)
	- getReward() (../../sc/dataset/mainnet/0xb43095432c268a01efe7033cfd84c8ea9b3d1c18.sol#626)
		- (success,returndata) = address(token).call(data) (../../sc/dataset/mainnet/0xb43095432c268a01efe7033cfd84c8ea9b3d1c18.sol#435)
		- rewardsToken.safeTransfer(msg.sender,reward) (../../sc/dataset/mainnet/0xb43095432c268a01efe7033cfd84c8ea9b3d1c18.sol#619)
	State variables written after the call(s):
	- getReward() (../../sc/dataset/mainnet/0xb43095432c268a01efe7033cfd84c8ea9b3d1c18.sol#626)
		- _guardCounter += 1 (../../sc/dataset/mainnet/0xb43095432c268a01efe7033cfd84c8ea9b3d1c18.sol#475)
	ReentrancyGuard._guardCounter (../../sc/dataset/mainnet/0xb43095432c268a01efe7033cfd84c8ea9b3d1c18.sol#459) can be used in cross function reentrancies:
	- ReentrancyGuard.nonReentrant() (../../sc/dataset/mainnet/0xb43095432c268a01efe7033cfd84c8ea9b3d1c18.sol#474-479)
	- getReward() (../../sc/dataset/mainnet/0xb43095432c268a01efe7033cfd84c8ea9b3d1c18.sol#626)
		- lastUpdateTime = lastTimeRewardApplicable() (../../sc/dataset/mainnet/0xb43095432c268a01efe7033cfd84c8ea9b3d1c18.sol#656)
	StakingRewards.lastUpdateTime (../../sc/dataset/mainnet/0xb43095432c268a01efe7033cfd84c8ea9b3d1c18.sol#530) can be used in cross function reentrancies:
	- StakingRewards.lastUpdateTime (../../sc/dataset/mainnet/0xb43095432c268a01efe7033cfd84c8ea9b3d1c18.sol#530)
	- StakingRewards.notifyRewardAmount(uint256) (../../sc/dataset/mainnet/0xb43095432c268a01efe7033cfd84c8ea9b3d1c18.sol#631-650)
	- StakingRewards.rewardPerToken() (../../sc/dataset/mainnet/0xb43095432c268a01efe7033cfd84c8ea9b3d1c18.sol#567-575)
	- StakingRewards.updateReward(address) (../../sc/dataset/mainnet/0xb43095432c268a01efe7033cfd84c8ea9b3d1c18.sol#654-662)
	- getReward() (../../sc/dataset/mainnet/0xb43095432c268a01efe7033cfd84c8ea9b3d1c18.sol#626)
		- rewardPerTokenStored = rewardPerToken() (../../sc/dataset/mainnet/0xb43095432c268a01efe7033cfd84c8ea9b3d1c18.sol#655)
	StakingRewards.rewardPerTokenStored (../../sc/dataset/mainnet/0xb43095432c268a01efe7033cfd84c8ea9b3d1c18.sol#531) can be used in cross function reentrancies:
	- StakingRewards.rewardPerToken() (../../sc/dataset/mainnet/0xb43095432c268a01efe7033cfd84c8ea9b3d1c18.sol#567-575)
	- StakingRewards.rewardPerTokenStored (../../sc/dataset/mainnet/0xb43095432c268a01efe7033cfd84c8ea9b3d1c18.sol#531)
	- StakingRewards.updateReward(address) (../../sc/dataset/mainnet/0xb43095432c268a01efe7033cfd84c8ea9b3d1c18.sol#654-662)
	- getReward() (../../sc/dataset/mainnet/0xb43095432c268a01efe7033cfd84c8ea9b3d1c18.sol#626)
		- rewards[msg.sender] = 0 (../../sc/dataset/mainnet/0xb43095432c268a01efe7033cfd84c8ea9b3d1c18.sol#618)
		- rewards[account] = earned(account) (../../sc/dataset/mainnet/0xb43095432c268a01efe7033cfd84c8ea9b3d1c18.sol#658)
	StakingRewards.rewards (../../sc/dataset/mainnet/0xb43095432c268a01efe7033cfd84c8ea9b3d1c18.sol#534) can be used in cross function reentrancies:
	- StakingRewards.earned(address) (../../sc/dataset/mainnet/0xb43095432c268a01efe7033cfd84c8ea9b3d1c18.sol#577-579)
	- StakingRewards.getReward() (../../sc/dataset/mainnet/0xb43095432c268a01efe7033cfd84c8ea9b3d1c18.sol#615-622)
	- StakingRewards.rewards (../../sc/dataset/mainnet/0xb43095432c268a01efe7033cfd84c8ea9b3d1c18.sol#534)
	- StakingRewards.updateReward(address) (../../sc/dataset/mainnet/0xb43095432c268a01efe7033cfd84c8ea9b3d1c18.sol#654-662)
	- getReward() (../../sc/dataset/mainnet/0xb43095432c268a01efe7033cfd84c8ea9b3d1c18.sol#626)
		- userRewardPerTokenPaid[account] = rewardPerTokenStored (../../sc/dataset/mainnet/0xb43095432c268a01efe7033cfd84c8ea9b3d1c18.sol#659)
	StakingRewards.userRewardPerTokenPaid (../../sc/dataset/mainnet/0xb43095432c268a01efe7033cfd84c8ea9b3d1c18.sol#533) can be used in cross function reentrancies:
	- StakingRewards.earned(address) (../../sc/dataset/mainnet/0xb43095432c268a01efe7033cfd84c8ea9b3d1c18.sol#577-579)
	- StakingRewards.updateReward(address) (../../sc/dataset/mainnet/0xb43095432c268a01efe7033cfd84c8ea9b3d1c18.sol#654-662)
	- StakingRewards.userRewardPerTokenPaid (../../sc/dataset/mainnet/0xb43095432c268a01efe7033cfd84c8ea9b3d1c18.sol#533)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1
INFO:Detectors:
ERC20Detailed.constructor(string,string,uint8).name (../../sc/dataset/mainnet/0xb43095432c268a01efe7033cfd84c8ea9b3d1c18.sol#311) shadows:
	- ERC20Detailed.name() (../../sc/dataset/mainnet/0xb43095432c268a01efe7033cfd84c8ea9b3d1c18.sol#320-322) (function)
ERC20Detailed.constructor(string,string,uint8).symbol (../../sc/dataset/mainnet/0xb43095432c268a01efe7033cfd84c8ea9b3d1c18.sol#311) shadows:
	- ERC20Detailed.symbol() (../../sc/dataset/mainnet/0xb43095432c268a01efe7033cfd84c8ea9b3d1c18.sol#328-330) (function)
ERC20Detailed.constructor(string,string,uint8).decimals (../../sc/dataset/mainnet/0xb43095432c268a01efe7033cfd84c8ea9b3d1c18.sol#311) shadows:
	- ERC20Detailed.decimals() (../../sc/dataset/mainnet/0xb43095432c268a01efe7033cfd84c8ea9b3d1c18.sol#344-346) (function)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing
INFO:Detectors:
StakingRewards.constructor(address,address,address,uint256)._rewardsDistribution (../../sc/dataset/mainnet/0xb43095432c268a01efe7033cfd84c8ea9b3d1c18.sol#542) lacks a zero-check on :
		- rewardsDistribution = _rewardsDistribution (../../sc/dataset/mainnet/0xb43095432c268a01efe7033cfd84c8ea9b3d1c18.sol#549)
StakingRewardsFactory.constructor(address,uint256)._rewardsToken (../../sc/dataset/mainnet/0xb43095432c268a01efe7033cfd84c8ea9b3d1c18.sol#694) lacks a zero-check on :
		- rewardsToken = _rewardsToken (../../sc/dataset/mainnet/0xb43095432c268a01efe7033cfd84c8ea9b3d1c18.sol#699)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation
INFO:Detectors:
StakingRewardsFactory.notifyRewardAmount(address) (../../sc/dataset/mainnet/0xb43095432c268a01efe7033cfd84c8ea9b3d1c18.sol#728-744) has external calls inside a loop: require(bool,string)(IERC20(rewardsToken).transfer(info.stakingRewards,rewardAmount),StakingRewardsFactory::notifyRewardAmount: transfer failed) (../../sc/dataset/mainnet/0xb43095432c268a01efe7033cfd84c8ea9b3d1c18.sol#738-741)
StakingRewardsFactory.notifyRewardAmount(address) (../../sc/dataset/mainnet/0xb43095432c268a01efe7033cfd84c8ea9b3d1c18.sol#728-744) has external calls inside a loop: StakingRewards(info.stakingRewards).notifyRewardAmount(rewardAmount) (../../sc/dataset/mainnet/0xb43095432c268a01efe7033cfd84c8ea9b3d1c18.sol#742)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation/#calls-inside-a-loop
INFO:Detectors:
Reentrancy in StakingRewards.exit() (../../sc/dataset/mainnet/0xb43095432c268a01efe7033cfd84c8ea9b3d1c18.sol#624-627):
	External calls:
	- withdraw(_balances[msg.sender]) (../../sc/dataset/mainnet/0xb43095432c268a01efe7033cfd84c8ea9b3d1c18.sol#625)
		- (success,returndata) = address(token).call(data) (../../sc/dataset/mainnet/0xb43095432c268a01efe7033cfd84c8ea9b3d1c18.sol#435)
		- stakingToken.safeTransfer(msg.sender,amount) (../../sc/dataset/mainnet/0xb43095432c268a01efe7033cfd84c8ea9b3d1c18.sol#611)
	- getReward() (../../sc/dataset/mainnet/0xb43095432c268a01efe7033cfd84c8ea9b3d1c18.sol#626)
		- (success,returndata) = address(token).call(data) (../../sc/dataset/mainnet/0xb43095432c268a01efe7033cfd84c8ea9b3d1c18.sol#435)
		- rewardsToken.safeTransfer(msg.sender,reward) (../../sc/dataset/mainnet/0xb43095432c268a01efe7033cfd84c8ea9b3d1c18.sol#619)
	Event emitted after the call(s):
	- RewardPaid(msg.sender,reward) (../../sc/dataset/mainnet/0xb43095432c268a01efe7033cfd84c8ea9b3d1c18.sol#620)
		- getReward() (../../sc/dataset/mainnet/0xb43095432c268a01efe7033cfd84c8ea9b3d1c18.sol#626)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3
INFO:Detectors:
StakingRewards.getReward() (../../sc/dataset/mainnet/0xb43095432c268a01efe7033cfd84c8ea9b3d1c18.sol#615-622) uses timestamp for comparisons
	Dangerous comparisons:
	- reward > 0 (../../sc/dataset/mainnet/0xb43095432c268a01efe7033cfd84c8ea9b3d1c18.sol#617)
StakingRewards.notifyRewardAmount(uint256) (../../sc/dataset/mainnet/0xb43095432c268a01efe7033cfd84c8ea9b3d1c18.sol#631-650) uses timestamp for comparisons
	Dangerous comparisons:
	- block.timestamp >= periodFinish (../../sc/dataset/mainnet/0xb43095432c268a01efe7033cfd84c8ea9b3d1c18.sol#632)
	- require(bool,string)(rewardRate <= balance.div(rewardsDuration),Provided reward too high) (../../sc/dataset/mainnet/0xb43095432c268a01efe7033cfd84c8ea9b3d1c18.sol#645)
StakingRewardsFactory.constructor(address,uint256) (../../sc/dataset/mainnet/0xb43095432c268a01efe7033cfd84c8ea9b3d1c18.sol#693-701) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(_stakingRewardsGenesis >= block.timestamp,StakingRewardsFactory::constructor: genesis too soon) (../../sc/dataset/mainnet/0xb43095432c268a01efe7033cfd84c8ea9b3d1c18.sol#697)
StakingRewardsFactory.notifyRewardAmount(address) (../../sc/dataset/mainnet/0xb43095432c268a01efe7033cfd84c8ea9b3d1c18.sol#728-744) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(block.timestamp >= stakingRewardsGenesis,StakingRewardsFactory::notifyRewardAmount: not ready) (../../sc/dataset/mainnet/0xb43095432c268a01efe7033cfd84c8ea9b3d1c18.sol#729)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp
INFO:Detectors:
Address.isContract(address) (../../sc/dataset/mainnet/0xb43095432c268a01efe7033cfd84c8ea9b3d1c18.sol#363-372) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0xb43095432c268a01efe7033cfd84c8ea9b3d1c18.sol#370)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage
INFO:Detectors:
Math.average(uint256,uint256) (../../sc/dataset/mainnet/0xb43095432c268a01efe7033cfd84c8ea9b3d1c18.sol#292-295) is never used and should be removed
Math.max(uint256,uint256) (../../sc/dataset/mainnet/0xb43095432c268a01efe7033cfd84c8ea9b3d1c18.sol#277-279) is never used and should be removed
SafeERC20.safeApprove(IERC20,address,uint256) (../../sc/dataset/mainnet/0xb43095432c268a01efe7033cfd84c8ea9b3d1c18.sol#396-405) is never used and should be removed
SafeERC20.safeDecreaseAllowance(IERC20,address,uint256) (../../sc/dataset/mainnet/0xb43095432c268a01efe7033cfd84c8ea9b3d1c18.sol#412-415) is never used and should be removed
SafeERC20.safeIncreaseAllowance(IERC20,address,uint256) (../../sc/dataset/mainnet/0xb43095432c268a01efe7033cfd84c8ea9b3d1c18.sol#407-410) is never used and should be removed
SafeMath.mod(uint256,uint256) (../../sc/dataset/mainnet/0xb43095432c268a01efe7033cfd84c8ea9b3d1c18.sol#264-267) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code
INFO:Detectors:
Pragma version^0.5.16 (../../sc/dataset/mainnet/0xb43095432c268a01efe7033cfd84c8ea9b3d1c18.sol#14) allows old versions
solc-0.5.17 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity
INFO:Detectors:
Low level call in SafeERC20.callOptionalReturn(IERC20,bytes) (../../sc/dataset/mainnet/0xb43095432c268a01efe7033cfd84c8ea9b3d1c18.sol#423-442):
	- (success,returndata) = address(token).call(data) (../../sc/dataset/mainnet/0xb43095432c268a01efe7033cfd84c8ea9b3d1c18.sol#435)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls
INFO:Detectors:
ERC20Detailed (../../sc/dataset/mainnet/0xb43095432c268a01efe7033cfd84c8ea9b3d1c18.sol#301-347) does not implement functions:
	- IERC20.allowance(address,address) (../../sc/dataset/mainnet/0xb43095432c268a01efe7033cfd84c8ea9b3d1c18.sol#46)
	- IERC20.approve(address,uint256) (../../sc/dataset/mainnet/0xb43095432c268a01efe7033cfd84c8ea9b3d1c18.sol#62)
	- IERC20.balanceOf(address) (../../sc/dataset/mainnet/0xb43095432c268a01efe7033cfd84c8ea9b3d1c18.sol#29)
	- IERC20.totalSupply() (../../sc/dataset/mainnet/0xb43095432c268a01efe7033cfd84c8ea9b3d1c18.sol#24)
	- IERC20.transfer(address,uint256) (../../sc/dataset/mainnet/0xb43095432c268a01efe7033cfd84c8ea9b3d1c18.sol#37)
	- IERC20.transferFrom(address,address,uint256) (../../sc/dataset/mainnet/0xb43095432c268a01efe7033cfd84c8ea9b3d1c18.sol#73)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unimplemented-functions
INFO:Slither:/bdata2/sc/dataset/mainnet/0xb43095432c268a01efe7033cfd84c8ea9b3d1c18.sol analyzed (13 contracts with 85 detectors), 25 result(s) found
