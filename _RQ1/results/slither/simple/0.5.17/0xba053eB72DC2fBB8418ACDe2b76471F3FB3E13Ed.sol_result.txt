Compilation warnings/errors on /bdata2/sc/dataset/mainnet/0xba053eB72DC2fBB8418ACDe2b76471F3FB3E13Ed.sol:
/bdata2/sc/dataset/mainnet/0xba053eB72DC2fBB8418ACDe2b76471F3FB3E13Ed.sol:539:36: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    function stake(uint256 amount, bytes calldata data) external {
                                   ^-----------------^
/bdata2/sc/dataset/mainnet/0xba053eB72DC2fBB8418ACDe2b76471F3FB3E13Ed.sol:549:53: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    function stakeFor(address user, uint256 amount, bytes calldata data) external onlyOwner {
                                                    ^-----------------^
/bdata2/sc/dataset/mainnet/0xba053eB72DC2fBB8418ACDe2b76471F3FB3E13Ed.sol:598:38: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    function unstake(uint256 amount, bytes calldata data) external {
                                     ^-----------------^

INFO:Detectors:
TokenGeyser (../../sc/dataset/mainnet/0xba053eB72DC2fBB8418ACDe2b76471F3FB3E13Ed.sol#425-914) contract sets array length with a user-controlled value:
	- _userStakes[beneficiary].push(newStake) (../../sc/dataset/mainnet/0xba053eB72DC2fBB8418ACDe2b76471F3FB3E13Ed.sol#578)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#array-length-assignment
INFO:Detectors:
TokenGeyser._unstake(uint256) (../../sc/dataset/mainnet/0xba053eB72DC2fBB8418ACDe2b76471F3FB3E13Ed.sol#616-677) performs a multiplication on the result of a division:
	- stakingSharesToBurn = totalStakingShares.mul(amount).div(totalStaked()) (../../sc/dataset/mainnet/0xba053eB72DC2fBB8418ACDe2b76471F3FB3E13Ed.sol#623)
	- sharesLeftToBurn = stakingSharesToBurn (../../sc/dataset/mainnet/0xba053eB72DC2fBB8418ACDe2b76471F3FB3E13Ed.sol#632)
	- newStakingShareSecondsToBurn = sharesLeftToBurn.mul(stakeTimeSec) (../../sc/dataset/mainnet/0xba053eB72DC2fBB8418ACDe2b76471F3FB3E13Ed.sol#647)
TokenGeyser.computeNewReward(uint256,uint256,uint256) (../../sc/dataset/mainnet/0xba053eB72DC2fBB8418ACDe2b76471F3FB3E13Ed.sol#693-713) performs a multiplication on the result of a division:
	- newRewardTokens = totalUnlocked().mul(stakingShareSeconds).div(_totalStakingShareSeconds) (../../sc/dataset/mainnet/0xba053eB72DC2fBB8418ACDe2b76471F3FB3E13Ed.sol#697-700)
	- bonusedReward = startBonus.add(oneHundredPct.sub(startBonus).mul(stakeTimeSec).div(bonusPeriodSec)).mul(newRewardTokens).div(oneHundredPct) (../../sc/dataset/mainnet/0xba053eB72DC2fBB8418ACDe2b76471F3FB3E13Ed.sol#707-711)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#divide-before-multiply
INFO:Detectors:
Reentrancy in TokenGeyser._stakeFor(address,address,uint256) (../../sc/dataset/mainnet/0xba053eB72DC2fBB8418ACDe2b76471F3FB3E13Ed.sol#559-590):
	External calls:
	- updateAccounting() (../../sc/dataset/mainnet/0xba053eB72DC2fBB8418ACDe2b76471F3FB3E13Ed.sol#570)
		- require(bool,string)(_lockedPool.transfer(address(_unlockedPool),unlockedTokens),TokenGeyser: transfer out of locked pool failed) (../../sc/dataset/mainnet/0xba053eB72DC2fBB8418ACDe2b76471F3FB3E13Ed.sol#863-864)
	State variables written after the call(s):
	- totals.stakingShares = totals.stakingShares.add(mintedStakingShares) (../../sc/dataset/mainnet/0xba053eB72DC2fBB8418ACDe2b76471F3FB3E13Ed.sol#574)
	TokenGeyser._userTotals (../../sc/dataset/mainnet/0xba053eB72DC2fBB8418ACDe2b76471F3FB3E13Ed.sol#474) can be used in cross function reentrancies:
	- TokenGeyser._stakeFor(address,address,uint256) (../../sc/dataset/mainnet/0xba053eB72DC2fBB8418ACDe2b76471F3FB3E13Ed.sol#559-590)
	- TokenGeyser._unstake(uint256) (../../sc/dataset/mainnet/0xba053eB72DC2fBB8418ACDe2b76471F3FB3E13Ed.sol#616-677)
	- TokenGeyser.totalStakedFor(address) (../../sc/dataset/mainnet/0xba053eB72DC2fBB8418ACDe2b76471F3FB3E13Ed.sol#719-722)
	- TokenGeyser.updateAccounting() (../../sc/dataset/mainnet/0xba053eB72DC2fBB8418ACDe2b76471F3FB3E13Ed.sol#750-786)
	- totals.lastAccountingTimestampSec = now (../../sc/dataset/mainnet/0xba053eB72DC2fBB8418ACDe2b76471F3FB3E13Ed.sol#575)
	TokenGeyser._userTotals (../../sc/dataset/mainnet/0xba053eB72DC2fBB8418ACDe2b76471F3FB3E13Ed.sol#474) can be used in cross function reentrancies:
	- TokenGeyser._stakeFor(address,address,uint256) (../../sc/dataset/mainnet/0xba053eB72DC2fBB8418ACDe2b76471F3FB3E13Ed.sol#559-590)
	- TokenGeyser._unstake(uint256) (../../sc/dataset/mainnet/0xba053eB72DC2fBB8418ACDe2b76471F3FB3E13Ed.sol#616-677)
	- TokenGeyser.totalStakedFor(address) (../../sc/dataset/mainnet/0xba053eB72DC2fBB8418ACDe2b76471F3FB3E13Ed.sol#719-722)
	- TokenGeyser.updateAccounting() (../../sc/dataset/mainnet/0xba053eB72DC2fBB8418ACDe2b76471F3FB3E13Ed.sol#750-786)
	- totalStakingShares = totalStakingShares.add(mintedStakingShares) (../../sc/dataset/mainnet/0xba053eB72DC2fBB8418ACDe2b76471F3FB3E13Ed.sol#581)
	TokenGeyser.totalStakingShares (../../sc/dataset/mainnet/0xba053eB72DC2fBB8418ACDe2b76471F3FB3E13Ed.sol#450) can be used in cross function reentrancies:
	- TokenGeyser._stakeFor(address,address,uint256) (../../sc/dataset/mainnet/0xba053eB72DC2fBB8418ACDe2b76471F3FB3E13Ed.sol#559-590)
	- TokenGeyser._unstake(uint256) (../../sc/dataset/mainnet/0xba053eB72DC2fBB8418ACDe2b76471F3FB3E13Ed.sol#616-677)
	- TokenGeyser.totalStakedFor(address) (../../sc/dataset/mainnet/0xba053eB72DC2fBB8418ACDe2b76471F3FB3E13Ed.sol#719-722)
	- TokenGeyser.totalStakingShares (../../sc/dataset/mainnet/0xba053eB72DC2fBB8418ACDe2b76471F3FB3E13Ed.sol#450)
	- TokenGeyser.updateAccounting() (../../sc/dataset/mainnet/0xba053eB72DC2fBB8418ACDe2b76471F3FB3E13Ed.sol#750-786)
Reentrancy in TokenGeyser._unstake(uint256) (../../sc/dataset/mainnet/0xba053eB72DC2fBB8418ACDe2b76471F3FB3E13Ed.sol#616-677):
	External calls:
	- updateAccounting() (../../sc/dataset/mainnet/0xba053eB72DC2fBB8418ACDe2b76471F3FB3E13Ed.sol#617)
		- require(bool,string)(_lockedPool.transfer(address(_unlockedPool),unlockedTokens),TokenGeyser: transfer out of locked pool failed) (../../sc/dataset/mainnet/0xba053eB72DC2fBB8418ACDe2b76471F3FB3E13Ed.sol#863-864)
	State variables written after the call(s):
	- _totalStakingShareSeconds = _totalStakingShareSeconds.sub(stakingShareSecondsToBurn) (../../sc/dataset/mainnet/0xba053eB72DC2fBB8418ACDe2b76471F3FB3E13Ed.sol#660)
	TokenGeyser._totalStakingShareSeconds (../../sc/dataset/mainnet/0xba053eB72DC2fBB8418ACDe2b76471F3FB3E13Ed.sol#451) can be used in cross function reentrancies:
	- TokenGeyser._unstake(uint256) (../../sc/dataset/mainnet/0xba053eB72DC2fBB8418ACDe2b76471F3FB3E13Ed.sol#616-677)
	- TokenGeyser.computeNewReward(uint256,uint256,uint256) (../../sc/dataset/mainnet/0xba053eB72DC2fBB8418ACDe2b76471F3FB3E13Ed.sol#693-713)
	- TokenGeyser.updateAccounting() (../../sc/dataset/mainnet/0xba053eB72DC2fBB8418ACDe2b76471F3FB3E13Ed.sol#750-786)
	- totals.stakingShareSeconds = totals.stakingShareSeconds.sub(stakingShareSecondsToBurn) (../../sc/dataset/mainnet/0xba053eB72DC2fBB8418ACDe2b76471F3FB3E13Ed.sol#654)
	TokenGeyser._userTotals (../../sc/dataset/mainnet/0xba053eB72DC2fBB8418ACDe2b76471F3FB3E13Ed.sol#474) can be used in cross function reentrancies:
	- TokenGeyser._stakeFor(address,address,uint256) (../../sc/dataset/mainnet/0xba053eB72DC2fBB8418ACDe2b76471F3FB3E13Ed.sol#559-590)
	- TokenGeyser._unstake(uint256) (../../sc/dataset/mainnet/0xba053eB72DC2fBB8418ACDe2b76471F3FB3E13Ed.sol#616-677)
	- TokenGeyser.totalStakedFor(address) (../../sc/dataset/mainnet/0xba053eB72DC2fBB8418ACDe2b76471F3FB3E13Ed.sol#719-722)
	- TokenGeyser.updateAccounting() (../../sc/dataset/mainnet/0xba053eB72DC2fBB8418ACDe2b76471F3FB3E13Ed.sol#750-786)
	- totals.stakingShares = totals.stakingShares.sub(stakingSharesToBurn) (../../sc/dataset/mainnet/0xba053eB72DC2fBB8418ACDe2b76471F3FB3E13Ed.sol#655)
	TokenGeyser._userTotals (../../sc/dataset/mainnet/0xba053eB72DC2fBB8418ACDe2b76471F3FB3E13Ed.sol#474) can be used in cross function reentrancies:
	- TokenGeyser._stakeFor(address,address,uint256) (../../sc/dataset/mainnet/0xba053eB72DC2fBB8418ACDe2b76471F3FB3E13Ed.sol#559-590)
	- TokenGeyser._unstake(uint256) (../../sc/dataset/mainnet/0xba053eB72DC2fBB8418ACDe2b76471F3FB3E13Ed.sol#616-677)
	- TokenGeyser.totalStakedFor(address) (../../sc/dataset/mainnet/0xba053eB72DC2fBB8418ACDe2b76471F3FB3E13Ed.sol#719-722)
	- TokenGeyser.updateAccounting() (../../sc/dataset/mainnet/0xba053eB72DC2fBB8418ACDe2b76471F3FB3E13Ed.sol#750-786)
	- totalStakingShares = totalStakingShares.sub(stakingSharesToBurn) (../../sc/dataset/mainnet/0xba053eB72DC2fBB8418ACDe2b76471F3FB3E13Ed.sol#661)
	TokenGeyser.totalStakingShares (../../sc/dataset/mainnet/0xba053eB72DC2fBB8418ACDe2b76471F3FB3E13Ed.sol#450) can be used in cross function reentrancies:
	- TokenGeyser._stakeFor(address,address,uint256) (../../sc/dataset/mainnet/0xba053eB72DC2fBB8418ACDe2b76471F3FB3E13Ed.sol#559-590)
	- TokenGeyser._unstake(uint256) (../../sc/dataset/mainnet/0xba053eB72DC2fBB8418ACDe2b76471F3FB3E13Ed.sol#616-677)
	- TokenGeyser.totalStakedFor(address) (../../sc/dataset/mainnet/0xba053eB72DC2fBB8418ACDe2b76471F3FB3E13Ed.sol#719-722)
	- TokenGeyser.totalStakingShares (../../sc/dataset/mainnet/0xba053eB72DC2fBB8418ACDe2b76471F3FB3E13Ed.sol#450)
	- TokenGeyser.updateAccounting() (../../sc/dataset/mainnet/0xba053eB72DC2fBB8418ACDe2b76471F3FB3E13Ed.sol#750-786)
Reentrancy in TokenGeyser.lockTokens(uint256,uint256) (../../sc/dataset/mainnet/0xba053eB72DC2fBB8418ACDe2b76471F3FB3E13Ed.sol#816-840):
	External calls:
	- updateAccounting() (../../sc/dataset/mainnet/0xba053eB72DC2fBB8418ACDe2b76471F3FB3E13Ed.sol#821)
		- require(bool,string)(_lockedPool.transfer(address(_unlockedPool),unlockedTokens),TokenGeyser: transfer out of locked pool failed) (../../sc/dataset/mainnet/0xba053eB72DC2fBB8418ACDe2b76471F3FB3E13Ed.sol#863-864)
	State variables written after the call(s):
	- totalLockedShares = totalLockedShares.add(mintedLockedShares) (../../sc/dataset/mainnet/0xba053eB72DC2fBB8418ACDe2b76471F3FB3E13Ed.sol#835)
	TokenGeyser.totalLockedShares (../../sc/dataset/mainnet/0xba053eB72DC2fBB8418ACDe2b76471F3FB3E13Ed.sol#449) can be used in cross function reentrancies:
	- TokenGeyser.lockTokens(uint256,uint256) (../../sc/dataset/mainnet/0xba053eB72DC2fBB8418ACDe2b76471F3FB3E13Ed.sol#816-840)
	- TokenGeyser.totalLockedShares (../../sc/dataset/mainnet/0xba053eB72DC2fBB8418ACDe2b76471F3FB3E13Ed.sol#449)
	- TokenGeyser.unlockTokens() (../../sc/dataset/mainnet/0xba053eB72DC2fBB8418ACDe2b76471F3FB3E13Ed.sol#847-869)
	- unlockSchedules.push(schedule) (../../sc/dataset/mainnet/0xba053eB72DC2fBB8418ACDe2b76471F3FB3E13Ed.sol#833)
	TokenGeyser.unlockSchedules (../../sc/dataset/mainnet/0xba053eB72DC2fBB8418ACDe2b76471F3FB3E13Ed.sol#490) can be used in cross function reentrancies:
	- TokenGeyser.lockTokens(uint256,uint256) (../../sc/dataset/mainnet/0xba053eB72DC2fBB8418ACDe2b76471F3FB3E13Ed.sol#816-840)
	- TokenGeyser.unlockScheduleCount() (../../sc/dataset/mainnet/0xba053eB72DC2fBB8418ACDe2b76471F3FB3E13Ed.sol#805-807)
	- TokenGeyser.unlockScheduleShares(uint256) (../../sc/dataset/mainnet/0xba053eB72DC2fBB8418ACDe2b76471F3FB3E13Ed.sol#878-899)
	- TokenGeyser.unlockSchedules (../../sc/dataset/mainnet/0xba053eB72DC2fBB8418ACDe2b76471F3FB3E13Ed.sol#490)
	- TokenGeyser.unlockTokens() (../../sc/dataset/mainnet/0xba053eB72DC2fBB8418ACDe2b76471F3FB3E13Ed.sol#847-869)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1
INFO:Detectors:
TokenGeyser.lockTokens(uint256,uint256).schedule (../../sc/dataset/mainnet/0xba053eB72DC2fBB8418ACDe2b76471F3FB3E13Ed.sol#828) is a local variable never initialized
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#uninitialized-local-variables
INFO:Detectors:
Reentrancy in TokenGeyser._stakeFor(address,address,uint256) (../../sc/dataset/mainnet/0xba053eB72DC2fBB8418ACDe2b76471F3FB3E13Ed.sol#559-590):
	External calls:
	- updateAccounting() (../../sc/dataset/mainnet/0xba053eB72DC2fBB8418ACDe2b76471F3FB3E13Ed.sol#570)
		- require(bool,string)(_lockedPool.transfer(address(_unlockedPool),unlockedTokens),TokenGeyser: transfer out of locked pool failed) (../../sc/dataset/mainnet/0xba053eB72DC2fBB8418ACDe2b76471F3FB3E13Ed.sol#863-864)
	State variables written after the call(s):
	- _userStakes[beneficiary].push(newStake) (../../sc/dataset/mainnet/0xba053eB72DC2fBB8418ACDe2b76471F3FB3E13Ed.sol#578)
Reentrancy in TokenGeyser.updateAccounting() (../../sc/dataset/mainnet/0xba053eB72DC2fBB8418ACDe2b76471F3FB3E13Ed.sol#750-786):
	External calls:
	- unlockTokens() (../../sc/dataset/mainnet/0xba053eB72DC2fBB8418ACDe2b76471F3FB3E13Ed.sol#753)
		- require(bool,string)(_lockedPool.transfer(address(_unlockedPool),unlockedTokens),TokenGeyser: transfer out of locked pool failed) (../../sc/dataset/mainnet/0xba053eB72DC2fBB8418ACDe2b76471F3FB3E13Ed.sol#863-864)
	State variables written after the call(s):
	- _lastAccountingTimestampSec = now (../../sc/dataset/mainnet/0xba053eB72DC2fBB8418ACDe2b76471F3FB3E13Ed.sol#761)
	- _totalStakingShareSeconds = _totalStakingShareSeconds.add(newStakingShareSeconds) (../../sc/dataset/mainnet/0xba053eB72DC2fBB8418ACDe2b76471F3FB3E13Ed.sol#760)
	- totals.stakingShareSeconds = totals.stakingShareSeconds.add(newUserStakingShareSeconds) (../../sc/dataset/mainnet/0xba053eB72DC2fBB8418ACDe2b76471F3FB3E13Ed.sol#769-771)
	- totals.lastAccountingTimestampSec = now (../../sc/dataset/mainnet/0xba053eB72DC2fBB8418ACDe2b76471F3FB3E13Ed.sol#772)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2
INFO:Detectors:
Reentrancy in TokenGeyser._stakeFor(address,address,uint256) (../../sc/dataset/mainnet/0xba053eB72DC2fBB8418ACDe2b76471F3FB3E13Ed.sol#559-590):
	External calls:
	- updateAccounting() (../../sc/dataset/mainnet/0xba053eB72DC2fBB8418ACDe2b76471F3FB3E13Ed.sol#570)
		- require(bool,string)(_lockedPool.transfer(address(_unlockedPool),unlockedTokens),TokenGeyser: transfer out of locked pool failed) (../../sc/dataset/mainnet/0xba053eB72DC2fBB8418ACDe2b76471F3FB3E13Ed.sol#863-864)
	- require(bool,string)(_stakingPool.token().transferFrom(staker,address(_stakingPool),amount),TokenGeyser: transfer into staking pool failed) (../../sc/dataset/mainnet/0xba053eB72DC2fBB8418ACDe2b76471F3FB3E13Ed.sol#586-587)
	Event emitted after the call(s):
	- Staked(beneficiary,amount,totalStakedFor(beneficiary),) (../../sc/dataset/mainnet/0xba053eB72DC2fBB8418ACDe2b76471F3FB3E13Ed.sol#589)
Reentrancy in TokenGeyser._unstake(uint256) (../../sc/dataset/mainnet/0xba053eB72DC2fBB8418ACDe2b76471F3FB3E13Ed.sol#616-677):
	External calls:
	- updateAccounting() (../../sc/dataset/mainnet/0xba053eB72DC2fBB8418ACDe2b76471F3FB3E13Ed.sol#617)
		- require(bool,string)(_lockedPool.transfer(address(_unlockedPool),unlockedTokens),TokenGeyser: transfer out of locked pool failed) (../../sc/dataset/mainnet/0xba053eB72DC2fBB8418ACDe2b76471F3FB3E13Ed.sol#863-864)
	- require(bool,string)(_stakingPool.transfer(msg.sender,amount),TokenGeyser: transfer out of staking pool failed) (../../sc/dataset/mainnet/0xba053eB72DC2fBB8418ACDe2b76471F3FB3E13Ed.sol#666-667)
	- require(bool,string)(_unlockedPool.transfer(msg.sender,rewardAmount),TokenGeyser: transfer out of unlocked pool failed) (../../sc/dataset/mainnet/0xba053eB72DC2fBB8418ACDe2b76471F3FB3E13Ed.sol#668-669)
	Event emitted after the call(s):
	- TokensClaimed(msg.sender,rewardAmount) (../../sc/dataset/mainnet/0xba053eB72DC2fBB8418ACDe2b76471F3FB3E13Ed.sol#672)
	- Unstaked(msg.sender,amount,totalStakedFor(msg.sender),) (../../sc/dataset/mainnet/0xba053eB72DC2fBB8418ACDe2b76471F3FB3E13Ed.sol#671)
Reentrancy in TokenGeyser.lockTokens(uint256,uint256) (../../sc/dataset/mainnet/0xba053eB72DC2fBB8418ACDe2b76471F3FB3E13Ed.sol#816-840):
	External calls:
	- updateAccounting() (../../sc/dataset/mainnet/0xba053eB72DC2fBB8418ACDe2b76471F3FB3E13Ed.sol#821)
		- require(bool,string)(_lockedPool.transfer(address(_unlockedPool),unlockedTokens),TokenGeyser: transfer out of locked pool failed) (../../sc/dataset/mainnet/0xba053eB72DC2fBB8418ACDe2b76471F3FB3E13Ed.sol#863-864)
	- require(bool,string)(_lockedPool.token().transferFrom(msg.sender,address(_lockedPool),amount),TokenGeyser: transfer into locked pool failed) (../../sc/dataset/mainnet/0xba053eB72DC2fBB8418ACDe2b76471F3FB3E13Ed.sol#837-838)
	Event emitted after the call(s):
	- TokensLocked(amount,durationSec,totalLocked()) (../../sc/dataset/mainnet/0xba053eB72DC2fBB8418ACDe2b76471F3FB3E13Ed.sol#839)
Reentrancy in TokenGeyser.unlockTokens() (../../sc/dataset/mainnet/0xba053eB72DC2fBB8418ACDe2b76471F3FB3E13Ed.sol#847-869):
	External calls:
	- require(bool,string)(_lockedPool.transfer(address(_unlockedPool),unlockedTokens),TokenGeyser: transfer out of locked pool failed) (../../sc/dataset/mainnet/0xba053eB72DC2fBB8418ACDe2b76471F3FB3E13Ed.sol#863-864)
	Event emitted after the call(s):
	- TokensUnlocked(unlockedTokens,totalLocked()) (../../sc/dataset/mainnet/0xba053eB72DC2fBB8418ACDe2b76471F3FB3E13Ed.sol#865)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3
INFO:Detectors:
TokenGeyser._unstake(uint256) (../../sc/dataset/mainnet/0xba053eB72DC2fBB8418ACDe2b76471F3FB3E13Ed.sol#616-677) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(_unlockedPool.transfer(msg.sender,rewardAmount),TokenGeyser: transfer out of unlocked pool failed) (../../sc/dataset/mainnet/0xba053eB72DC2fBB8418ACDe2b76471F3FB3E13Ed.sol#668-669)
TokenGeyser.computeNewReward(uint256,uint256,uint256) (../../sc/dataset/mainnet/0xba053eB72DC2fBB8418ACDe2b76471F3FB3E13Ed.sol#693-713) uses timestamp for comparisons
	Dangerous comparisons:
	- stakeTimeSec >= bonusPeriodSec (../../sc/dataset/mainnet/0xba053eB72DC2fBB8418ACDe2b76471F3FB3E13Ed.sol#702)
TokenGeyser.updateAccounting() (../../sc/dataset/mainnet/0xba053eB72DC2fBB8418ACDe2b76471F3FB3E13Ed.sol#750-786) uses timestamp for comparisons
	Dangerous comparisons:
	- (_totalStakingShareSeconds > 0) (../../sc/dataset/mainnet/0xba053eB72DC2fBB8418ACDe2b76471F3FB3E13Ed.sol#774-776)
TokenGeyser.lockTokens(uint256,uint256) (../../sc/dataset/mainnet/0xba053eB72DC2fBB8418ACDe2b76471F3FB3E13Ed.sol#816-840) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(unlockSchedules.length < _maxUnlockSchedules,TokenGeyser: reached maximum unlock schedules) (../../sc/dataset/mainnet/0xba053eB72DC2fBB8418ACDe2b76471F3FB3E13Ed.sol#817-818)
TokenGeyser.unlockTokens() (../../sc/dataset/mainnet/0xba053eB72DC2fBB8418ACDe2b76471F3FB3E13Ed.sol#847-869) uses timestamp for comparisons
	Dangerous comparisons:
	- totalLockedShares == 0 (../../sc/dataset/mainnet/0xba053eB72DC2fBB8418ACDe2b76471F3FB3E13Ed.sol#851)
	- unlockedTokens > 0 (../../sc/dataset/mainnet/0xba053eB72DC2fBB8418ACDe2b76471F3FB3E13Ed.sol#862)
	- require(bool,string)(_lockedPool.transfer(address(_unlockedPool),unlockedTokens),TokenGeyser: transfer out of locked pool failed) (../../sc/dataset/mainnet/0xba053eB72DC2fBB8418ACDe2b76471F3FB3E13Ed.sol#863-864)
TokenGeyser.unlockScheduleShares(uint256) (../../sc/dataset/mainnet/0xba053eB72DC2fBB8418ACDe2b76471F3FB3E13Ed.sol#878-899) uses timestamp for comparisons
	Dangerous comparisons:
	- now >= schedule.endAtSec (../../sc/dataset/mainnet/0xba053eB72DC2fBB8418ACDe2b76471F3FB3E13Ed.sol#887)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp
INFO:Detectors:
Context._msgData() (../../sc/dataset/mainnet/0xba053eB72DC2fBB8418ACDe2b76471F3FB3E13Ed.sol#60-63) is never used and should be removed
SafeMath.mod(uint256,uint256) (../../sc/dataset/mainnet/0xba053eB72DC2fBB8418ACDe2b76471F3FB3E13Ed.sol#277-279) is never used and should be removed
SafeMath.mod(uint256,uint256,string) (../../sc/dataset/mainnet/0xba053eB72DC2fBB8418ACDe2b76471F3FB3E13Ed.sol#294-297) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code
INFO:Detectors:
Pragma version0.5.17 (../../sc/dataset/mainnet/0xba053eB72DC2fBB8418ACDe2b76471F3FB3E13Ed.sol#9) allows old versions
solc-0.5.17 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity
INFO:Detectors:
Redundant expression "this (../../sc/dataset/mainnet/0xba053eB72DC2fBB8418ACDe2b76471F3FB3E13Ed.sol#61)" inContext (../../sc/dataset/mainnet/0xba053eB72DC2fBB8418ACDe2b76471F3FB3E13Ed.sol#50-64)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#redundant-statements
INFO:Slither:/bdata2/sc/dataset/mainnet/0xba053eB72DC2fBB8418ACDe2b76471F3FB3E13Ed.sol analyzed (7 contracts with 85 detectors), 25 result(s) found
