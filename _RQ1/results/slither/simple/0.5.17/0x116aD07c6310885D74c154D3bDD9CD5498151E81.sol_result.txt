Compilation warnings/errors on /bdata2/sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol:
/bdata2/sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol:1:1: Warning: Experimental features are turned on. Do not use experimental features on live deployments.
pragma experimental ABIEncoderV2;
^-------------------------------^
/bdata2/sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol:1147:9: Warning: This declaration shadows an existing declaration.
        uint256 totalBonded = totalBonded();
        ^-----------------^
/bdata2/sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol:1098:5: The shadowed declaration is here:
    function totalBonded() public view returns (uint256) {
    ^ (Relevant source part starts here and spans across multiple lines).
/bdata2/sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol:1157:9: Warning: This declaration shadows an existing declaration.
        uint256 balanceOfPhantom = balanceOfPhantom(account);
        ^----------------------^
/bdata2/sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol:1138:5: The shadowed declaration is here:
    function balanceOfPhantom(address account) public view returns (uint256) {
    ^ (Relevant source part starts here and spans across multiple lines).
/bdata2/sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol:1086:5: Warning: Function state mutability can be restricted to pure
    function wbtc() public view returns (address) {
    ^ (Relevant source part starts here and spans across multiple lines).
/bdata2/sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol:1090:5: Warning: Function state mutability can be restricted to pure
    function abtc() public view returns (ABTC) {
    ^ (Relevant source part starts here and spans across multiple lines).
/bdata2/sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol:1094:5: Warning: Function state mutability can be restricted to pure
    function univ2() public view returns (IERC20) {
    ^ (Relevant source part starts here and spans across multiple lines).
/bdata2/sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol:1530:5: Warning: Function state mutability can be restricted to view
    function balanceCheck() private {
    ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:
Liquidity.addLiquidity(uint256) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1361-1373) ignores return value by IERC20(abtc).transfer(pair,abtcAmount) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1370)
Liquidity.addLiquidity(uint256) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1361-1373) ignores return value by IERC20(wbtc).transferFrom(msg.sender,pair,wbtcAmount) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1371)
Pool.deposit(uint256) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1418-1425) ignores return value by univ2().transferFrom(msg.sender,address(this),value) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1419)
Pool.withdraw(uint256) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1427-1434) ignores return value by univ2().transfer(msg.sender,value) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1428)
Pool.claim(uint256) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1436-1443) ignores return value by abtc().transfer(msg.sender,value) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1437)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unchecked-transfer
INFO:Detectors:
Pool.bond(uint256) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1445-1460) uses a dangerous strict equality:
	- totalRewarded() == 0 (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1449-1451)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dangerous-strict-equalities
INFO:Detectors:
Reentrancy in Pool.claim(uint256) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1436-1443):
	External calls:
	- abtc().transfer(msg.sender,value) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1437)
	State variables written after the call(s):
	- decrementBalanceOfClaimable(msg.sender,value,Pool: insufficient claimable balance) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1438)
		- _state.accounts[account].claimable = _state.accounts[account].claimable.sub(amount,reason) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1236)
		- _state.balance.claimable = _state.balance.claimable.sub(amount,reason) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1237)
	PoolState._state (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1054) can be used in cross function reentrancies:
	- PoolGetters.balanceOfBonded(address) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1134-1136)
	- PoolGetters.balanceOfClaimable(address) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1130-1132)
	- PoolGetters.balanceOfFluidUtil(address) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1142-1144)
	- PoolGetters.balanceOfPhantom(address) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1138-1140)
	- PoolGetters.balanceOfStaged(address) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1126-1128)
	- PoolSetters.decrementBalanceOfBonded(address,uint256,string) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1215-1218)
	- PoolSetters.decrementBalanceOfClaimable(address,uint256,string) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1235-1238)
	- PoolSetters.decrementBalanceOfPhantom(address,uint256,string) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1245-1248)
	- PoolSetters.decrementBalanceOfStaged(address,uint256,string) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1225-1228)
	- PoolSetters.incrementBalanceOfBonded(address,uint256) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1210-1213)
	- PoolSetters.incrementBalanceOfClaimable(address,uint256) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1230-1233)
	- PoolSetters.incrementBalanceOfPhantom(address,uint256) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1240-1243)
	- PoolSetters.incrementBalanceOfStaged(address,uint256) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1220-1223)
	- PoolSetters.pause() (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1202-1204)
	- PoolGetters.paused() (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1118-1120)
	- PoolGetters.statusOf(address) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1164-1168)
	- PoolGetters.totalBonded() (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1098-1100)
	- PoolGetters.totalClaimable() (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1106-1108)
	- PoolGetters.totalPhantom() (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1110-1112)
	- PoolGetters.totalStaged() (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1102-1104)
	- PoolSetters.unfreeze(address) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1250-1252)
Reentrancy in Pool.deposit(uint256) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1418-1425):
	External calls:
	- univ2().transferFrom(msg.sender,address(this),value) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1419)
	State variables written after the call(s):
	- incrementBalanceOfStaged(msg.sender,value) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1420)
		- _state.accounts[account].staged = _state.accounts[account].staged.add(amount) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1221)
		- _state.balance.staged = _state.balance.staged.add(amount) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1222)
	PoolState._state (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1054) can be used in cross function reentrancies:
	- PoolGetters.balanceOfBonded(address) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1134-1136)
	- PoolGetters.balanceOfClaimable(address) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1130-1132)
	- PoolGetters.balanceOfFluidUtil(address) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1142-1144)
	- PoolGetters.balanceOfPhantom(address) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1138-1140)
	- PoolGetters.balanceOfStaged(address) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1126-1128)
	- PoolSetters.decrementBalanceOfBonded(address,uint256,string) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1215-1218)
	- PoolSetters.decrementBalanceOfClaimable(address,uint256,string) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1235-1238)
	- PoolSetters.decrementBalanceOfPhantom(address,uint256,string) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1245-1248)
	- PoolSetters.decrementBalanceOfStaged(address,uint256,string) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1225-1228)
	- PoolSetters.incrementBalanceOfBonded(address,uint256) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1210-1213)
	- PoolSetters.incrementBalanceOfClaimable(address,uint256) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1230-1233)
	- PoolSetters.incrementBalanceOfPhantom(address,uint256) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1240-1243)
	- PoolSetters.incrementBalanceOfStaged(address,uint256) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1220-1223)
	- PoolSetters.pause() (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1202-1204)
	- PoolGetters.paused() (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1118-1120)
	- PoolGetters.statusOf(address) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1164-1168)
	- PoolGetters.totalBonded() (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1098-1100)
	- PoolGetters.totalClaimable() (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1106-1108)
	- PoolGetters.totalPhantom() (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1110-1112)
	- PoolGetters.totalStaged() (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1102-1104)
	- PoolSetters.unfreeze(address) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1250-1252)
Reentrancy in Pool.provide(uint256) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1485-1516):
	External calls:
	- (lesswbtc,newUniv2) = addLiquidity(value) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1504)
		- IERC20(abtc).transfer(pair,abtcAmount) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1370)
		- IERC20(wbtc).transferFrom(msg.sender,pair,wbtcAmount) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1371)
		- (wbtcAmount,IUniswapV2Pair(pair).mint(address(this))) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1372)
	State variables written after the call(s):
	- incrementBalanceOfBonded(msg.sender,newUniv2) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1509)
		- _state.accounts[account].bonded = _state.accounts[account].bonded.add(amount) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1211)
		- _state.balance.bonded = _state.balance.bonded.add(amount) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1212)
	PoolState._state (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1054) can be used in cross function reentrancies:
	- PoolGetters.balanceOfBonded(address) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1134-1136)
	- PoolGetters.balanceOfClaimable(address) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1130-1132)
	- PoolGetters.balanceOfFluidUtil(address) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1142-1144)
	- PoolGetters.balanceOfPhantom(address) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1138-1140)
	- PoolGetters.balanceOfStaged(address) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1126-1128)
	- PoolSetters.decrementBalanceOfBonded(address,uint256,string) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1215-1218)
	- PoolSetters.decrementBalanceOfClaimable(address,uint256,string) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1235-1238)
	- PoolSetters.decrementBalanceOfPhantom(address,uint256,string) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1245-1248)
	- PoolSetters.decrementBalanceOfStaged(address,uint256,string) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1225-1228)
	- PoolSetters.incrementBalanceOfBonded(address,uint256) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1210-1213)
	- PoolSetters.incrementBalanceOfClaimable(address,uint256) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1230-1233)
	- PoolSetters.incrementBalanceOfPhantom(address,uint256) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1240-1243)
	- PoolSetters.incrementBalanceOfStaged(address,uint256) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1220-1223)
	- PoolSetters.pause() (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1202-1204)
	- PoolGetters.paused() (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1118-1120)
	- PoolGetters.statusOf(address) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1164-1168)
	- PoolGetters.totalBonded() (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1098-1100)
	- PoolGetters.totalClaimable() (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1106-1108)
	- PoolGetters.totalPhantom() (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1110-1112)
	- PoolGetters.totalStaged() (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1102-1104)
	- PoolSetters.unfreeze(address) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1250-1252)
	- incrementBalanceOfPhantom(msg.sender,value.add(newPhantomFromBonded)) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1510)
		- _state.accounts[account].phantom = _state.accounts[account].phantom.add(amount) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1241)
		- _state.balance.phantom = _state.balance.phantom.add(amount) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1242)
	PoolState._state (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1054) can be used in cross function reentrancies:
	- PoolGetters.balanceOfBonded(address) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1134-1136)
	- PoolGetters.balanceOfClaimable(address) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1130-1132)
	- PoolGetters.balanceOfFluidUtil(address) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1142-1144)
	- PoolGetters.balanceOfPhantom(address) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1138-1140)
	- PoolGetters.balanceOfStaged(address) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1126-1128)
	- PoolSetters.decrementBalanceOfBonded(address,uint256,string) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1215-1218)
	- PoolSetters.decrementBalanceOfClaimable(address,uint256,string) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1235-1238)
	- PoolSetters.decrementBalanceOfPhantom(address,uint256,string) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1245-1248)
	- PoolSetters.decrementBalanceOfStaged(address,uint256,string) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1225-1228)
	- PoolSetters.incrementBalanceOfBonded(address,uint256) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1210-1213)
	- PoolSetters.incrementBalanceOfClaimable(address,uint256) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1230-1233)
	- PoolSetters.incrementBalanceOfPhantom(address,uint256) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1240-1243)
	- PoolSetters.incrementBalanceOfStaged(address,uint256) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1220-1223)
	- PoolSetters.pause() (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1202-1204)
	- PoolGetters.paused() (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1118-1120)
	- PoolGetters.statusOf(address) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1164-1168)
	- PoolGetters.totalBonded() (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1098-1100)
	- PoolGetters.totalClaimable() (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1106-1108)
	- PoolGetters.totalPhantom() (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1110-1112)
	- PoolGetters.totalStaged() (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1102-1104)
	- PoolSetters.unfreeze(address) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1250-1252)
Reentrancy in Pool.withdraw(uint256) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1427-1434):
	External calls:
	- univ2().transfer(msg.sender,value) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1428)
	State variables written after the call(s):
	- decrementBalanceOfStaged(msg.sender,value,Pool: insufficient staged balance) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1429)
		- _state.accounts[account].staged = _state.accounts[account].staged.sub(amount,reason) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1226)
		- _state.balance.staged = _state.balance.staged.sub(amount,reason) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1227)
	PoolState._state (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1054) can be used in cross function reentrancies:
	- PoolGetters.balanceOfBonded(address) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1134-1136)
	- PoolGetters.balanceOfClaimable(address) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1130-1132)
	- PoolGetters.balanceOfFluidUtil(address) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1142-1144)
	- PoolGetters.balanceOfPhantom(address) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1138-1140)
	- PoolGetters.balanceOfStaged(address) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1126-1128)
	- PoolSetters.decrementBalanceOfBonded(address,uint256,string) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1215-1218)
	- PoolSetters.decrementBalanceOfClaimable(address,uint256,string) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1235-1238)
	- PoolSetters.decrementBalanceOfPhantom(address,uint256,string) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1245-1248)
	- PoolSetters.decrementBalanceOfStaged(address,uint256,string) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1225-1228)
	- PoolSetters.incrementBalanceOfBonded(address,uint256) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1210-1213)
	- PoolSetters.incrementBalanceOfClaimable(address,uint256) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1230-1233)
	- PoolSetters.incrementBalanceOfPhantom(address,uint256) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1240-1243)
	- PoolSetters.incrementBalanceOfStaged(address,uint256) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1220-1223)
	- PoolSetters.pause() (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1202-1204)
	- PoolGetters.paused() (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1118-1120)
	- PoolGetters.statusOf(address) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1164-1168)
	- PoolGetters.totalBonded() (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1098-1100)
	- PoolGetters.totalClaimable() (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1106-1108)
	- PoolGetters.totalPhantom() (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1110-1112)
	- PoolGetters.totalStaged() (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1102-1104)
	- PoolSetters.unfreeze(address) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1250-1252)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1
INFO:Detectors:
PoolGetters.balanceOfRewarded(address).totalBonded (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1147) shadows:
	- PoolGetters.totalBonded() (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1098-1100) (function)
PoolGetters.balanceOfRewarded(address).balanceOfPhantom (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1157) shadows:
	- PoolGetters.balanceOfPhantom(address) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1138-1140) (function)
Liquidity.addLiquidity(uint256).abtc (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1362) shadows:
	- PoolGetters.abtc() (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1090-1092) (function)
Liquidity.addLiquidity(uint256).wbtc (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1362) shadows:
	- PoolGetters.wbtc() (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1086-1088) (function)
Pool.unbond(uint256).balanceOfBonded (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1465) shadows:
	- PoolGetters.balanceOfBonded(address) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1134-1136) (function)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing
INFO:Detectors:
Pool.changeDao(address)._daoAddr (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1522) lacks a zero-check on :
		- daoAddress = _daoAddr (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1523)
Pool.changePOW(address)._powAddr (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1526) lacks a zero-check on :
		- powAddress = _powAddr (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1527)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation
INFO:Detectors:
Reentrancy in Pool.claim(uint256) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1436-1443):
	External calls:
	- abtc().transfer(msg.sender,value) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1437)
	Event emitted after the call(s):
	- Claim(msg.sender,value) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1442)
Reentrancy in Pool.deposit(uint256) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1418-1425):
	External calls:
	- univ2().transferFrom(msg.sender,address(this),value) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1419)
	Event emitted after the call(s):
	- Deposit(msg.sender,value) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1424)
Reentrancy in Pool.provide(uint256) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1485-1516):
	External calls:
	- (lesswbtc,newUniv2) = addLiquidity(value) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1504)
		- IERC20(abtc).transfer(pair,abtcAmount) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1370)
		- IERC20(wbtc).transferFrom(msg.sender,pair,wbtcAmount) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1371)
		- (wbtcAmount,IUniswapV2Pair(pair).mint(address(this))) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1372)
	Event emitted after the call(s):
	- Provide(msg.sender,value,lesswbtc,newUniv2) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1515)
Reentrancy in Pool.withdraw(uint256) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1427-1434):
	External calls:
	- univ2().transfer(msg.sender,value) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1428)
	Event emitted after the call(s):
	- Withdraw(msg.sender,value) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1433)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3
INFO:Detectors:
Require.stringifyTruncated(bytes32) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#493-524) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#514-516)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage
INFO:Detectors:
Decimal.add(Decimal.D256,Decimal.D256) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#802-811) is never used and should be removed
Decimal.add(Decimal.D256,uint256) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#726-735) is never used and should be removed
Decimal.asUint256(Decimal.D256) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#882-884) is never used and should be removed
Decimal.compareTo(Decimal.D256,Decimal.D256) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#900-912) is never used and should be removed
Decimal.div(Decimal.D256,Decimal.D256) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#847-856) is never used and should be removed
Decimal.div(Decimal.D256,uint256) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#771-780) is never used and should be removed
Decimal.equals(Decimal.D256,Decimal.D256) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#858-860) is never used and should be removed
Decimal.from(uint256) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#703-711) is never used and should be removed
Decimal.getPartial(uint256,uint256,uint256) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#888-898) is never used and should be removed
Decimal.greaterThan(Decimal.D256,Decimal.D256) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#862-864) is never used and should be removed
Decimal.greaterThanOrEqualTo(Decimal.D256,Decimal.D256) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#870-872) is never used and should be removed
Decimal.isZero(Decimal.D256) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#878-880) is never used and should be removed
Decimal.lessThan(Decimal.D256,Decimal.D256) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#866-868) is never used and should be removed
Decimal.lessThanOrEqualTo(Decimal.D256,Decimal.D256) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#874-876) is never used and should be removed
Decimal.mul(Decimal.D256,Decimal.D256) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#836-845) is never used and should be removed
Decimal.mul(Decimal.D256,uint256) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#760-769) is never used and should be removed
Decimal.one() (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#695-701) is never used and should be removed
Decimal.pow(Decimal.D256,uint256) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#782-800) is never used and should be removed
Decimal.ratio(uint256,uint256) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#713-722) is never used and should be removed
Decimal.sub(Decimal.D256,Decimal.D256) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#813-822) is never used and should be removed
Decimal.sub(Decimal.D256,Decimal.D256,string) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#824-834) is never used and should be removed
Decimal.sub(Decimal.D256,uint256) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#737-746) is never used and should be removed
Decimal.sub(Decimal.D256,uint256,string) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#748-758) is never used and should be removed
Decimal.zero() (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#687-693) is never used and should be removed
Require.char(uint256) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#631-645) is never used and should be removed
Require.stringify(address) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#565-596) is never used and should be removed
Require.stringify(bytes32) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#598-629) is never used and should be removed
Require.stringify(uint256) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#526-563) is never used and should be removed
Require.that(bool,bytes32,bytes32,address) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#351-374) is never used and should be removed
Require.that(bool,bytes32,bytes32,address,uint256) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#376-402) is never used and should be removed
Require.that(bool,bytes32,bytes32,address,uint256,uint256) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#404-433) is never used and should be removed
Require.that(bool,bytes32,bytes32,bytes32) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#435-458) is never used and should be removed
Require.that(bool,bytes32,bytes32,bytes32,uint256,uint256) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#460-489) is never used and should be removed
Require.that(bool,bytes32,bytes32,uint256) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#298-321) is never used and should be removed
Require.that(bool,bytes32,bytes32,uint256,uint256) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#323-349) is never used and should be removed
SafeMath.mod(uint256,uint256) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#143-145) is never used and should be removed
SafeMath.mod(uint256,uint256,string) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#160-163) is never used and should be removed
UniswapV2Library.getReserves(address,address,address) (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1328-1332) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code
INFO:Detectors:
Pragma version^0.5.17 (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#7) allows old versions
solc-0.5.17 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity
INFO:Detectors:
Variable PoolState._state (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1054) is not in mixedCase
Function IUniswapV2Pair.DOMAIN_SEPARATOR() (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1270) is not in mixedCase
Function IUniswapV2Pair.PERMIT_TYPEHASH() (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1271) is not in mixedCase
Function IUniswapV2Pair.MINIMUM_LIQUIDITY() (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1288) is not in mixedCase
Parameter Pool.changeDao(address)._daoAddr (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1522) is not in mixedCase
Parameter Pool.changePOW(address)._powAddr (../../sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol#1526) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions
INFO:Slither:/bdata2/sc/dataset/mainnet/0x116aD07c6310885D74c154D3bDD9CD5498151E81.sol analyzed (16 contracts with 85 detectors), 68 result(s) found
