INFO:Detectors:
Reentrancy in BsktEthLPPool.exit() (../../sc/dataset/mainnet/0x9fa6bd7c0250231b746c7adbfd039ce73c847a6d.sol#463-466):
	External calls:
	- withdraw(balanceOf(_msgSender())) (../../sc/dataset/mainnet/0x9fa6bd7c0250231b746c7adbfd039ce73c847a6d.sol#464)
		- BSKTETHLPToken.safeTransfer(_msgSender(),amount) (../../sc/dataset/mainnet/0x9fa6bd7c0250231b746c7adbfd039ce73c847a6d.sol#372)
		- (success,returndata) = address(token).call(data) (../../sc/dataset/mainnet/0x9fa6bd7c0250231b746c7adbfd039ce73c847a6d.sol#332)
	- getReward() (../../sc/dataset/mainnet/0x9fa6bd7c0250231b746c7adbfd039ce73c847a6d.sol#465)
		- BSKTREWARD.safeTransfer(_msgSender(),reward) (../../sc/dataset/mainnet/0x9fa6bd7c0250231b746c7adbfd039ce73c847a6d.sol#475)
		- (success,returndata) = address(token).call(data) (../../sc/dataset/mainnet/0x9fa6bd7c0250231b746c7adbfd039ce73c847a6d.sol#332)
	State variables written after the call(s):
	- getReward() (../../sc/dataset/mainnet/0x9fa6bd7c0250231b746c7adbfd039ce73c847a6d.sol#465)
		- _status = _ENTERED (../../sc/dataset/mainnet/0x9fa6bd7c0250231b746c7adbfd039ce73c847a6d.sol#41)
		- _status = _NOT_ENTERED (../../sc/dataset/mainnet/0x9fa6bd7c0250231b746c7adbfd039ce73c847a6d.sol#47)
	ReentrancyGuard._status (../../sc/dataset/mainnet/0x9fa6bd7c0250231b746c7adbfd039ce73c847a6d.sol#23) can be used in cross function reentrancies:
	- ReentrancyGuard.nonReentrant() (../../sc/dataset/mainnet/0x9fa6bd7c0250231b746c7adbfd039ce73c847a6d.sol#36-48)
	- getReward() (../../sc/dataset/mainnet/0x9fa6bd7c0250231b746c7adbfd039ce73c847a6d.sol#465)
		- lastUpdateTime = lastTimeRewardApplicable() (../../sc/dataset/mainnet/0x9fa6bd7c0250231b746c7adbfd039ce73c847a6d.sol#407)
	BsktEthLPPool.lastUpdateTime (../../sc/dataset/mainnet/0x9fa6bd7c0250231b746c7adbfd039ce73c847a6d.sol#384) can be used in cross function reentrancies:
	- BsktEthLPPool.lastUpdateTime (../../sc/dataset/mainnet/0x9fa6bd7c0250231b746c7adbfd039ce73c847a6d.sol#384)
	- BsktEthLPPool.notifyRewardRate(uint256) (../../sc/dataset/mainnet/0x9fa6bd7c0250231b746c7adbfd039ce73c847a6d.sol#483-494)
	- BsktEthLPPool.rewardPerToken() (../../sc/dataset/mainnet/0x9fa6bd7c0250231b746c7adbfd039ce73c847a6d.sol#421-433)
	- BsktEthLPPool.updateReward(address) (../../sc/dataset/mainnet/0x9fa6bd7c0250231b746c7adbfd039ce73c847a6d.sol#405-413)
	- getReward() (../../sc/dataset/mainnet/0x9fa6bd7c0250231b746c7adbfd039ce73c847a6d.sol#465)
		- rewardPerTokenStored = rewardPerToken() (../../sc/dataset/mainnet/0x9fa6bd7c0250231b746c7adbfd039ce73c847a6d.sol#406)
	BsktEthLPPool.rewardPerTokenStored (../../sc/dataset/mainnet/0x9fa6bd7c0250231b746c7adbfd039ce73c847a6d.sol#385) can be used in cross function reentrancies:
	- BsktEthLPPool.rewardPerToken() (../../sc/dataset/mainnet/0x9fa6bd7c0250231b746c7adbfd039ce73c847a6d.sol#421-433)
	- BsktEthLPPool.rewardPerTokenStored (../../sc/dataset/mainnet/0x9fa6bd7c0250231b746c7adbfd039ce73c847a6d.sol#385)
	- BsktEthLPPool.updateReward(address) (../../sc/dataset/mainnet/0x9fa6bd7c0250231b746c7adbfd039ce73c847a6d.sol#405-413)
	- getReward() (../../sc/dataset/mainnet/0x9fa6bd7c0250231b746c7adbfd039ce73c847a6d.sol#465)
		- rewards[_msgSender()] = 0 (../../sc/dataset/mainnet/0x9fa6bd7c0250231b746c7adbfd039ce73c847a6d.sol#473)
		- rewards[account] = earned(account) (../../sc/dataset/mainnet/0x9fa6bd7c0250231b746c7adbfd039ce73c847a6d.sol#409)
	BsktEthLPPool.rewards (../../sc/dataset/mainnet/0x9fa6bd7c0250231b746c7adbfd039ce73c847a6d.sol#390) can be used in cross function reentrancies:
	- BsktEthLPPool.earned(address) (../../sc/dataset/mainnet/0x9fa6bd7c0250231b746c7adbfd039ce73c847a6d.sol#436-441)
	- BsktEthLPPool.getReward() (../../sc/dataset/mainnet/0x9fa6bd7c0250231b746c7adbfd039ce73c847a6d.sol#469-480)
	- BsktEthLPPool.rewards (../../sc/dataset/mainnet/0x9fa6bd7c0250231b746c7adbfd039ce73c847a6d.sol#390)
	- BsktEthLPPool.updateReward(address) (../../sc/dataset/mainnet/0x9fa6bd7c0250231b746c7adbfd039ce73c847a6d.sol#405-413)
	- getReward() (../../sc/dataset/mainnet/0x9fa6bd7c0250231b746c7adbfd039ce73c847a6d.sol#465)
		- userRewardPerTokenPaid[account] = rewardPerTokenStored (../../sc/dataset/mainnet/0x9fa6bd7c0250231b746c7adbfd039ce73c847a6d.sol#410)
	BsktEthLPPool.userRewardPerTokenPaid (../../sc/dataset/mainnet/0x9fa6bd7c0250231b746c7adbfd039ce73c847a6d.sol#389) can be used in cross function reentrancies:
	- BsktEthLPPool.earned(address) (../../sc/dataset/mainnet/0x9fa6bd7c0250231b746c7adbfd039ce73c847a6d.sol#436-441)
	- BsktEthLPPool.updateReward(address) (../../sc/dataset/mainnet/0x9fa6bd7c0250231b746c7adbfd039ce73c847a6d.sol#405-413)
	- BsktEthLPPool.userRewardPerTokenPaid (../../sc/dataset/mainnet/0x9fa6bd7c0250231b746c7adbfd039ce73c847a6d.sol#389)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1
INFO:Detectors:
BsktEthLPPool.notifyRewardRate(uint256) (../../sc/dataset/mainnet/0x9fa6bd7c0250231b746c7adbfd039ce73c847a6d.sol#483-494) should emit an event for: 
	- rewardRate = _reward.div(duration) (../../sc/dataset/mainnet/0x9fa6bd7c0250231b746c7adbfd039ce73c847a6d.sol#487) 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-arithmetic
INFO:Detectors:
Reentrancy in BsktEthLPPool.exit() (../../sc/dataset/mainnet/0x9fa6bd7c0250231b746c7adbfd039ce73c847a6d.sol#463-466):
	External calls:
	- withdraw(balanceOf(_msgSender())) (../../sc/dataset/mainnet/0x9fa6bd7c0250231b746c7adbfd039ce73c847a6d.sol#464)
		- BSKTETHLPToken.safeTransfer(_msgSender(),amount) (../../sc/dataset/mainnet/0x9fa6bd7c0250231b746c7adbfd039ce73c847a6d.sol#372)
		- (success,returndata) = address(token).call(data) (../../sc/dataset/mainnet/0x9fa6bd7c0250231b746c7adbfd039ce73c847a6d.sol#332)
	- getReward() (../../sc/dataset/mainnet/0x9fa6bd7c0250231b746c7adbfd039ce73c847a6d.sol#465)
		- BSKTREWARD.safeTransfer(_msgSender(),reward) (../../sc/dataset/mainnet/0x9fa6bd7c0250231b746c7adbfd039ce73c847a6d.sol#475)
		- (success,returndata) = address(token).call(data) (../../sc/dataset/mainnet/0x9fa6bd7c0250231b746c7adbfd039ce73c847a6d.sol#332)
	Event emitted after the call(s):
	- Rewarded(address(this),_msgSender(),reward) (../../sc/dataset/mainnet/0x9fa6bd7c0250231b746c7adbfd039ce73c847a6d.sol#477)
		- getReward() (../../sc/dataset/mainnet/0x9fa6bd7c0250231b746c7adbfd039ce73c847a6d.sol#465)
Reentrancy in BsktEthLPPool.stake(uint256) (../../sc/dataset/mainnet/0x9fa6bd7c0250231b746c7adbfd039ce73c847a6d.sol#444-449):
	External calls:
	- super.stake(amount) (../../sc/dataset/mainnet/0x9fa6bd7c0250231b746c7adbfd039ce73c847a6d.sol#446)
		- BSKTETHLPToken.safeTransferFrom(_msgSender(),address(this),amount) (../../sc/dataset/mainnet/0x9fa6bd7c0250231b746c7adbfd039ce73c847a6d.sol#366)
		- (success,returndata) = address(token).call(data) (../../sc/dataset/mainnet/0x9fa6bd7c0250231b746c7adbfd039ce73c847a6d.sol#332)
	Event emitted after the call(s):
	- Staked(_msgSender(),amount) (../../sc/dataset/mainnet/0x9fa6bd7c0250231b746c7adbfd039ce73c847a6d.sol#448)
Reentrancy in BsktEthLPPool.withdraw(uint256) (../../sc/dataset/mainnet/0x9fa6bd7c0250231b746c7adbfd039ce73c847a6d.sol#452-460):
	External calls:
	- super.withdraw(amount) (../../sc/dataset/mainnet/0x9fa6bd7c0250231b746c7adbfd039ce73c847a6d.sol#457)
		- BSKTETHLPToken.safeTransfer(_msgSender(),amount) (../../sc/dataset/mainnet/0x9fa6bd7c0250231b746c7adbfd039ce73c847a6d.sol#372)
		- (success,returndata) = address(token).call(data) (../../sc/dataset/mainnet/0x9fa6bd7c0250231b746c7adbfd039ce73c847a6d.sol#332)
	Event emitted after the call(s):
	- Withdrawn(_msgSender(),amount) (../../sc/dataset/mainnet/0x9fa6bd7c0250231b746c7adbfd039ce73c847a6d.sol#459)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3
INFO:Detectors:
BsktEthLPPool.getReward() (../../sc/dataset/mainnet/0x9fa6bd7c0250231b746c7adbfd039ce73c847a6d.sol#469-480) uses timestamp for comparisons
	Dangerous comparisons:
	- reward > 0 (../../sc/dataset/mainnet/0x9fa6bd7c0250231b746c7adbfd039ce73c847a6d.sol#472)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp
INFO:Detectors:
Address.isContract(address) (../../sc/dataset/mainnet/0x9fa6bd7c0250231b746c7adbfd039ce73c847a6d.sol#217-226) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0x9fa6bd7c0250231b746c7adbfd039ce73c847a6d.sol#222-224)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage
INFO:Detectors:
Address.sendValue(address,uint256) (../../sc/dataset/mainnet/0x9fa6bd7c0250231b746c7adbfd039ce73c847a6d.sol#236-247) is never used and should be removed
Address.toPayable(address) (../../sc/dataset/mainnet/0x9fa6bd7c0250231b746c7adbfd039ce73c847a6d.sol#228-234) is never used and should be removed
Context._msgData() (../../sc/dataset/mainnet/0x9fa6bd7c0250231b746c7adbfd039ce73c847a6d.sol#135-138) is never used and should be removed
Math.average(uint256,uint256) (../../sc/dataset/mainnet/0x9fa6bd7c0250231b746c7adbfd039ce73c847a6d.sol#60-62) is never used and should be removed
Math.max(uint256,uint256) (../../sc/dataset/mainnet/0x9fa6bd7c0250231b746c7adbfd039ce73c847a6d.sol#52-54) is never used and should be removed
SafeERC20.safeApprove(IERC20,address,uint256) (../../sc/dataset/mainnet/0x9fa6bd7c0250231b746c7adbfd039ce73c847a6d.sol#277-290) is never used and should be removed
SafeERC20.safeDecreaseAllowance(IERC20,address,uint256) (../../sc/dataset/mainnet/0x9fa6bd7c0250231b746c7adbfd039ce73c847a6d.sol#309-327) is never used and should be removed
SafeERC20.safeIncreaseAllowance(IERC20,address,uint256) (../../sc/dataset/mainnet/0x9fa6bd7c0250231b746c7adbfd039ce73c847a6d.sol#292-307) is never used and should be removed
SafeMath.mod(uint256,uint256) (../../sc/dataset/mainnet/0x9fa6bd7c0250231b746c7adbfd039ce73c847a6d.sol#114-116) is never used and should be removed
SafeMath.mod(uint256,uint256,string) (../../sc/dataset/mainnet/0x9fa6bd7c0250231b746c7adbfd039ce73c847a6d.sol#118-125) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code
INFO:Detectors:
Pragma version0.5.17 (../../sc/dataset/mainnet/0x9fa6bd7c0250231b746c7adbfd039ce73c847a6d.sol#6) allows old versions
solc-0.5.17 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity
INFO:Detectors:
Low level call in Address.sendValue(address,uint256) (../../sc/dataset/mainnet/0x9fa6bd7c0250231b746c7adbfd039ce73c847a6d.sol#236-247):
	- (success) = recipient.call.value(amount)() (../../sc/dataset/mainnet/0x9fa6bd7c0250231b746c7adbfd039ce73c847a6d.sol#242)
Low level call in SafeERC20.callOptionalReturn(IERC20,bytes) (../../sc/dataset/mainnet/0x9fa6bd7c0250231b746c7adbfd039ce73c847a6d.sol#329-343):
	- (success,returndata) = address(token).call(data) (../../sc/dataset/mainnet/0x9fa6bd7c0250231b746c7adbfd039ce73c847a6d.sol#332)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls
INFO:Detectors:
Variable LPTokenWrapper.BSKTETHLPToken (../../sc/dataset/mainnet/0x9fa6bd7c0250231b746c7adbfd039ce73c847a6d.sol#350) is not in mixedCase
Parameter BsktEthLPPool.notifyRewardRate(uint256)._reward (../../sc/dataset/mainnet/0x9fa6bd7c0250231b746c7adbfd039ce73c847a6d.sol#483) is not in mixedCase
Variable BsktEthLPPool.BSKTREWARD (../../sc/dataset/mainnet/0x9fa6bd7c0250231b746c7adbfd039ce73c847a6d.sol#378) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions
INFO:Detectors:
Redundant expression "this (../../sc/dataset/mainnet/0x9fa6bd7c0250231b746c7adbfd039ce73c847a6d.sol#136)" inContext (../../sc/dataset/mainnet/0x9fa6bd7c0250231b746c7adbfd039ce73c847a6d.sol#128-139)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#redundant-statements
INFO:Detectors:
BsktEthLPPool.BSKTREWARD (../../sc/dataset/mainnet/0x9fa6bd7c0250231b746c7adbfd039ce73c847a6d.sol#378) should be constant 
LPTokenWrapper.BSKTETHLPToken (../../sc/dataset/mainnet/0x9fa6bd7c0250231b746c7adbfd039ce73c847a6d.sol#350) should be constant 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant
INFO:Slither:/bdata2/sc/dataset/mainnet/0x9fa6bd7c0250231b746c7adbfd039ce73c847a6d.sol analyzed (10 contracts with 85 detectors), 27 result(s) found
