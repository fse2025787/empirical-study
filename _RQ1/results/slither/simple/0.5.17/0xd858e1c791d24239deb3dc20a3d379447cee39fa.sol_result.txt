INFO:Detectors:
StakingRewards.notifyRewardAmount(uint256) (../../sc/dataset/mainnet/0xd858e1c791d24239deb3dc20a3d379447cee39fa.sol#625-644) performs a multiplication on the result of a division:
	- rewardRate = reward.div(rewardsDuration) (../../sc/dataset/mainnet/0xd858e1c791d24239deb3dc20a3d379447cee39fa.sol#627)
	- leftover = remaining.mul(rewardRate) (../../sc/dataset/mainnet/0xd858e1c791d24239deb3dc20a3d379447cee39fa.sol#630)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#divide-before-multiply
INFO:Detectors:
Reentrancy in StakingRewards.exit() (../../sc/dataset/mainnet/0xd858e1c791d24239deb3dc20a3d379447cee39fa.sol#618-621):
	External calls:
	- withdraw(_balances[msg.sender]) (../../sc/dataset/mainnet/0xd858e1c791d24239deb3dc20a3d379447cee39fa.sol#619)
		- (success,returndata) = address(token).call(data) (../../sc/dataset/mainnet/0xd858e1c791d24239deb3dc20a3d379447cee39fa.sol#431)
		- stakingToken.safeTransfer(msg.sender,amount) (../../sc/dataset/mainnet/0xd858e1c791d24239deb3dc20a3d379447cee39fa.sol#605)
	- getReward() (../../sc/dataset/mainnet/0xd858e1c791d24239deb3dc20a3d379447cee39fa.sol#620)
		- rewardsToken.safeTransfer(msg.sender,reward) (../../sc/dataset/mainnet/0xd858e1c791d24239deb3dc20a3d379447cee39fa.sol#613)
		- (success,returndata) = address(token).call(data) (../../sc/dataset/mainnet/0xd858e1c791d24239deb3dc20a3d379447cee39fa.sol#431)
	State variables written after the call(s):
	- getReward() (../../sc/dataset/mainnet/0xd858e1c791d24239deb3dc20a3d379447cee39fa.sol#620)
		- _guardCounter += 1 (../../sc/dataset/mainnet/0xd858e1c791d24239deb3dc20a3d379447cee39fa.sol#471)
	ReentrancyGuard._guardCounter (../../sc/dataset/mainnet/0xd858e1c791d24239deb3dc20a3d379447cee39fa.sol#455) can be used in cross function reentrancies:
	- ReentrancyGuard.nonReentrant() (../../sc/dataset/mainnet/0xd858e1c791d24239deb3dc20a3d379447cee39fa.sol#470-475)
	- getReward() (../../sc/dataset/mainnet/0xd858e1c791d24239deb3dc20a3d379447cee39fa.sol#620)
		- lastUpdateTime = lastTimeRewardApplicable() (../../sc/dataset/mainnet/0xd858e1c791d24239deb3dc20a3d379447cee39fa.sol#650)
	StakingRewards.lastUpdateTime (../../sc/dataset/mainnet/0xd858e1c791d24239deb3dc20a3d379447cee39fa.sol#526) can be used in cross function reentrancies:
	- StakingRewards.lastUpdateTime (../../sc/dataset/mainnet/0xd858e1c791d24239deb3dc20a3d379447cee39fa.sol#526)
	- StakingRewards.notifyRewardAmount(uint256) (../../sc/dataset/mainnet/0xd858e1c791d24239deb3dc20a3d379447cee39fa.sol#625-644)
	- StakingRewards.rewardPerToken() (../../sc/dataset/mainnet/0xd858e1c791d24239deb3dc20a3d379447cee39fa.sol#561-569)
	- StakingRewards.updateReward(address) (../../sc/dataset/mainnet/0xd858e1c791d24239deb3dc20a3d379447cee39fa.sol#648-656)
	- getReward() (../../sc/dataset/mainnet/0xd858e1c791d24239deb3dc20a3d379447cee39fa.sol#620)
		- rewardPerTokenStored = rewardPerToken() (../../sc/dataset/mainnet/0xd858e1c791d24239deb3dc20a3d379447cee39fa.sol#649)
	StakingRewards.rewardPerTokenStored (../../sc/dataset/mainnet/0xd858e1c791d24239deb3dc20a3d379447cee39fa.sol#527) can be used in cross function reentrancies:
	- StakingRewards.rewardPerToken() (../../sc/dataset/mainnet/0xd858e1c791d24239deb3dc20a3d379447cee39fa.sol#561-569)
	- StakingRewards.rewardPerTokenStored (../../sc/dataset/mainnet/0xd858e1c791d24239deb3dc20a3d379447cee39fa.sol#527)
	- StakingRewards.updateReward(address) (../../sc/dataset/mainnet/0xd858e1c791d24239deb3dc20a3d379447cee39fa.sol#648-656)
	- getReward() (../../sc/dataset/mainnet/0xd858e1c791d24239deb3dc20a3d379447cee39fa.sol#620)
		- rewards[msg.sender] = 0 (../../sc/dataset/mainnet/0xd858e1c791d24239deb3dc20a3d379447cee39fa.sol#612)
		- rewards[account] = earned(account) (../../sc/dataset/mainnet/0xd858e1c791d24239deb3dc20a3d379447cee39fa.sol#652)
	StakingRewards.rewards (../../sc/dataset/mainnet/0xd858e1c791d24239deb3dc20a3d379447cee39fa.sol#530) can be used in cross function reentrancies:
	- StakingRewards.earned(address) (../../sc/dataset/mainnet/0xd858e1c791d24239deb3dc20a3d379447cee39fa.sol#571-573)
	- StakingRewards.getReward() (../../sc/dataset/mainnet/0xd858e1c791d24239deb3dc20a3d379447cee39fa.sol#609-616)
	- StakingRewards.rewards (../../sc/dataset/mainnet/0xd858e1c791d24239deb3dc20a3d379447cee39fa.sol#530)
	- StakingRewards.updateReward(address) (../../sc/dataset/mainnet/0xd858e1c791d24239deb3dc20a3d379447cee39fa.sol#648-656)
	- getReward() (../../sc/dataset/mainnet/0xd858e1c791d24239deb3dc20a3d379447cee39fa.sol#620)
		- userRewardPerTokenPaid[account] = rewardPerTokenStored (../../sc/dataset/mainnet/0xd858e1c791d24239deb3dc20a3d379447cee39fa.sol#653)
	StakingRewards.userRewardPerTokenPaid (../../sc/dataset/mainnet/0xd858e1c791d24239deb3dc20a3d379447cee39fa.sol#529) can be used in cross function reentrancies:
	- StakingRewards.earned(address) (../../sc/dataset/mainnet/0xd858e1c791d24239deb3dc20a3d379447cee39fa.sol#571-573)
	- StakingRewards.updateReward(address) (../../sc/dataset/mainnet/0xd858e1c791d24239deb3dc20a3d379447cee39fa.sol#648-656)
	- StakingRewards.userRewardPerTokenPaid (../../sc/dataset/mainnet/0xd858e1c791d24239deb3dc20a3d379447cee39fa.sol#529)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1
INFO:Detectors:
ERC20Detailed.constructor(string,string,uint8).name (../../sc/dataset/mainnet/0xd858e1c791d24239deb3dc20a3d379447cee39fa.sol#307) shadows:
	- ERC20Detailed.name() (../../sc/dataset/mainnet/0xd858e1c791d24239deb3dc20a3d379447cee39fa.sol#316-318) (function)
ERC20Detailed.constructor(string,string,uint8).symbol (../../sc/dataset/mainnet/0xd858e1c791d24239deb3dc20a3d379447cee39fa.sol#307) shadows:
	- ERC20Detailed.symbol() (../../sc/dataset/mainnet/0xd858e1c791d24239deb3dc20a3d379447cee39fa.sol#324-326) (function)
ERC20Detailed.constructor(string,string,uint8).decimals (../../sc/dataset/mainnet/0xd858e1c791d24239deb3dc20a3d379447cee39fa.sol#307) shadows:
	- ERC20Detailed.decimals() (../../sc/dataset/mainnet/0xd858e1c791d24239deb3dc20a3d379447cee39fa.sol#340-342) (function)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing
INFO:Detectors:
StakingRewards.constructor(address,address,address)._rewardsDistribution (../../sc/dataset/mainnet/0xd858e1c791d24239deb3dc20a3d379447cee39fa.sol#538) lacks a zero-check on :
		- rewardsDistribution = _rewardsDistribution (../../sc/dataset/mainnet/0xd858e1c791d24239deb3dc20a3d379447cee39fa.sol#544)
StakingRewardsFactory.constructor(address,uint256)._rewardsToken (../../sc/dataset/mainnet/0xd858e1c791d24239deb3dc20a3d379447cee39fa.sol#688) lacks a zero-check on :
		- rewardsToken = _rewardsToken (../../sc/dataset/mainnet/0xd858e1c791d24239deb3dc20a3d379447cee39fa.sol#693)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation
INFO:Detectors:
StakingRewardsFactory.notifyRewardAmount(address) (../../sc/dataset/mainnet/0xd858e1c791d24239deb3dc20a3d379447cee39fa.sol#722-738) has external calls inside a loop: require(bool,string)(IERC20(rewardsToken).transfer(info.stakingRewards,rewardAmount),StakingRewardsFactory::notifyRewardAmount: transfer failed) (../../sc/dataset/mainnet/0xd858e1c791d24239deb3dc20a3d379447cee39fa.sol#732-735)
StakingRewardsFactory.notifyRewardAmount(address) (../../sc/dataset/mainnet/0xd858e1c791d24239deb3dc20a3d379447cee39fa.sol#722-738) has external calls inside a loop: StakingRewards(info.stakingRewards).notifyRewardAmount(rewardAmount) (../../sc/dataset/mainnet/0xd858e1c791d24239deb3dc20a3d379447cee39fa.sol#736)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation/#calls-inside-a-loop
INFO:Detectors:
Reentrancy in StakingRewards.exit() (../../sc/dataset/mainnet/0xd858e1c791d24239deb3dc20a3d379447cee39fa.sol#618-621):
	External calls:
	- withdraw(_balances[msg.sender]) (../../sc/dataset/mainnet/0xd858e1c791d24239deb3dc20a3d379447cee39fa.sol#619)
		- (success,returndata) = address(token).call(data) (../../sc/dataset/mainnet/0xd858e1c791d24239deb3dc20a3d379447cee39fa.sol#431)
		- stakingToken.safeTransfer(msg.sender,amount) (../../sc/dataset/mainnet/0xd858e1c791d24239deb3dc20a3d379447cee39fa.sol#605)
	- getReward() (../../sc/dataset/mainnet/0xd858e1c791d24239deb3dc20a3d379447cee39fa.sol#620)
		- rewardsToken.safeTransfer(msg.sender,reward) (../../sc/dataset/mainnet/0xd858e1c791d24239deb3dc20a3d379447cee39fa.sol#613)
		- (success,returndata) = address(token).call(data) (../../sc/dataset/mainnet/0xd858e1c791d24239deb3dc20a3d379447cee39fa.sol#431)
	Event emitted after the call(s):
	- RewardPaid(msg.sender,reward) (../../sc/dataset/mainnet/0xd858e1c791d24239deb3dc20a3d379447cee39fa.sol#614)
		- getReward() (../../sc/dataset/mainnet/0xd858e1c791d24239deb3dc20a3d379447cee39fa.sol#620)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3
INFO:Detectors:
StakingRewards.getReward() (../../sc/dataset/mainnet/0xd858e1c791d24239deb3dc20a3d379447cee39fa.sol#609-616) uses timestamp for comparisons
	Dangerous comparisons:
	- reward > 0 (../../sc/dataset/mainnet/0xd858e1c791d24239deb3dc20a3d379447cee39fa.sol#611)
StakingRewards.notifyRewardAmount(uint256) (../../sc/dataset/mainnet/0xd858e1c791d24239deb3dc20a3d379447cee39fa.sol#625-644) uses timestamp for comparisons
	Dangerous comparisons:
	- block.timestamp >= periodFinish (../../sc/dataset/mainnet/0xd858e1c791d24239deb3dc20a3d379447cee39fa.sol#626)
	- require(bool,string)(rewardRate <= balance.div(rewardsDuration),Provided reward too high) (../../sc/dataset/mainnet/0xd858e1c791d24239deb3dc20a3d379447cee39fa.sol#639)
StakingRewardsFactory.constructor(address,uint256) (../../sc/dataset/mainnet/0xd858e1c791d24239deb3dc20a3d379447cee39fa.sol#687-695) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(_stakingRewardsGenesis >= block.timestamp,StakingRewardsFactory::constructor: genesis too soon) (../../sc/dataset/mainnet/0xd858e1c791d24239deb3dc20a3d379447cee39fa.sol#691)
StakingRewardsFactory.notifyRewardAmount(address) (../../sc/dataset/mainnet/0xd858e1c791d24239deb3dc20a3d379447cee39fa.sol#722-738) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(block.timestamp >= stakingRewardsGenesis,StakingRewardsFactory::notifyRewardAmount: not ready) (../../sc/dataset/mainnet/0xd858e1c791d24239deb3dc20a3d379447cee39fa.sol#723)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp
INFO:Detectors:
Address.isContract(address) (../../sc/dataset/mainnet/0xd858e1c791d24239deb3dc20a3d379447cee39fa.sol#359-368) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0xd858e1c791d24239deb3dc20a3d379447cee39fa.sol#366)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage
INFO:Detectors:
Math.average(uint256,uint256) (../../sc/dataset/mainnet/0xd858e1c791d24239deb3dc20a3d379447cee39fa.sol#182-185) is never used and should be removed
Math.max(uint256,uint256) (../../sc/dataset/mainnet/0xd858e1c791d24239deb3dc20a3d379447cee39fa.sol#167-169) is never used and should be removed
SafeERC20.safeApprove(IERC20,address,uint256) (../../sc/dataset/mainnet/0xd858e1c791d24239deb3dc20a3d379447cee39fa.sol#392-401) is never used and should be removed
SafeERC20.safeDecreaseAllowance(IERC20,address,uint256) (../../sc/dataset/mainnet/0xd858e1c791d24239deb3dc20a3d379447cee39fa.sol#408-411) is never used and should be removed
SafeERC20.safeIncreaseAllowance(IERC20,address,uint256) (../../sc/dataset/mainnet/0xd858e1c791d24239deb3dc20a3d379447cee39fa.sol#403-406) is never used and should be removed
SafeMath.mod(uint256,uint256) (../../sc/dataset/mainnet/0xd858e1c791d24239deb3dc20a3d379447cee39fa.sol#288-291) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code
INFO:Detectors:
Pragma version^0.5.16 (../../sc/dataset/mainnet/0xd858e1c791d24239deb3dc20a3d379447cee39fa.sol#8) allows old versions
solc-0.5.17 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity
INFO:Detectors:
Low level call in SafeERC20.callOptionalReturn(IERC20,bytes) (../../sc/dataset/mainnet/0xd858e1c791d24239deb3dc20a3d379447cee39fa.sol#419-438):
	- (success,returndata) = address(token).call(data) (../../sc/dataset/mainnet/0xd858e1c791d24239deb3dc20a3d379447cee39fa.sol#431)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls
INFO:Detectors:
ERC20Detailed (../../sc/dataset/mainnet/0xd858e1c791d24239deb3dc20a3d379447cee39fa.sol#297-343) does not implement functions:
	- IERC20.allowance(address,address) (../../sc/dataset/mainnet/0xd858e1c791d24239deb3dc20a3d379447cee39fa.sol#42)
	- IERC20.approve(address,uint256) (../../sc/dataset/mainnet/0xd858e1c791d24239deb3dc20a3d379447cee39fa.sol#58)
	- IERC20.balanceOf(address) (../../sc/dataset/mainnet/0xd858e1c791d24239deb3dc20a3d379447cee39fa.sol#24)
	- IERC20.totalSupply() (../../sc/dataset/mainnet/0xd858e1c791d24239deb3dc20a3d379447cee39fa.sol#19)
	- IERC20.transfer(address,uint256) (../../sc/dataset/mainnet/0xd858e1c791d24239deb3dc20a3d379447cee39fa.sol#33)
	- IERC20.transferFrom(address,address,uint256) (../../sc/dataset/mainnet/0xd858e1c791d24239deb3dc20a3d379447cee39fa.sol#69)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unimplemented-functions
INFO:Detectors:
StakingRewards.rewardsDuration (../../sc/dataset/mainnet/0xd858e1c791d24239deb3dc20a3d379447cee39fa.sol#525) should be constant 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant
INFO:Slither:/bdata2/sc/dataset/mainnet/0xd858e1c791d24239deb3dc20a3d379447cee39fa.sol analyzed (13 contracts with 85 detectors), 26 result(s) found
