INFO:Detectors:
YearnRewards.notifyRewardAmount(uint256) (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#732-748) performs a multiplication on the result of a division:
	- rewardRate = reward.div(DURATION) (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#738)
	- leftover = remaining.mul(rewardRate) (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#741)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#divide-before-multiply
INFO:Detectors:
Reentrancy in YearnRewards.checkhalve() (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#716-726):
	External calls:
	- yfi.mint(address(this),initreward) (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#719)
	State variables written after the call(s):
	- periodFinish = block.timestamp.add(DURATION) (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#722)
	YearnRewards.periodFinish (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#641) can be used in cross function reentrancies:
	- YearnRewards.checkhalve() (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#716-726)
	- YearnRewards.lastTimeRewardApplicable() (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#663-665)
	- YearnRewards.notifyRewardAmount(uint256) (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#732-748)
	- YearnRewards.periodFinish (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#641)
Reentrancy in YearnRewards.exit() (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#702-705):
	External calls:
	- withdraw(balanceOf(msg.sender)) (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#703)
		- yfi.mint(address(this),initreward) (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#719)
		- y.safeTransfer(msg.sender,amount) (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#631)
		- (success,returndata) = address(token).call(data) (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#562)
	- getReward() (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#704)
		- yfi.mint(address(this),initreward) (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#719)
		- yfi.safeTransfer(msg.sender,reward) (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#711)
		- (success,returndata) = address(token).call(data) (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#562)
	State variables written after the call(s):
	- getReward() (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#704)
		- initreward = initreward.mul(50).div(100) (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#718)
	YearnRewards.initreward (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#639) can be used in cross function reentrancies:
	- YearnRewards.checkhalve() (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#716-726)
	- YearnRewards.initreward (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#639)
	- getReward() (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#704)
		- lastUpdateTime = lastTimeRewardApplicable() (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#655)
	YearnRewards.lastUpdateTime (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#643) can be used in cross function reentrancies:
	- YearnRewards.lastUpdateTime (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#643)
	- YearnRewards.notifyRewardAmount(uint256) (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#732-748)
	- YearnRewards.rewardPerToken() (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#667-679)
	- YearnRewards.updateReward(address) (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#653-661)
	- getReward() (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#704)
		- periodFinish = block.timestamp.add(DURATION) (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#722)
	YearnRewards.periodFinish (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#641) can be used in cross function reentrancies:
	- YearnRewards.checkhalve() (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#716-726)
	- YearnRewards.lastTimeRewardApplicable() (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#663-665)
	- YearnRewards.notifyRewardAmount(uint256) (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#732-748)
	- YearnRewards.periodFinish (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#641)
	- getReward() (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#704)
		- rewardPerTokenStored = rewardPerToken() (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#654)
	YearnRewards.rewardPerTokenStored (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#644) can be used in cross function reentrancies:
	- YearnRewards.rewardPerToken() (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#667-679)
	- YearnRewards.rewardPerTokenStored (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#644)
	- YearnRewards.updateReward(address) (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#653-661)
	- getReward() (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#704)
		- rewardRate = initreward.div(DURATION) (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#721)
	YearnRewards.rewardRate (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#642) can be used in cross function reentrancies:
	- YearnRewards.checkhalve() (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#716-726)
	- YearnRewards.notifyRewardAmount(uint256) (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#732-748)
	- YearnRewards.rewardPerToken() (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#667-679)
	- YearnRewards.rewardRate (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#642)
	- getReward() (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#704)
		- rewards[msg.sender] = 0 (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#710)
		- rewards[account] = earned(account) (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#657)
	YearnRewards.rewards (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#646) can be used in cross function reentrancies:
	- YearnRewards.earned(address) (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#681-687)
	- YearnRewards.getReward() (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#707-714)
	- YearnRewards.rewards (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#646)
	- YearnRewards.updateReward(address) (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#653-661)
	- getReward() (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#704)
		- userRewardPerTokenPaid[account] = rewardPerTokenStored (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#658)
	YearnRewards.userRewardPerTokenPaid (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#645) can be used in cross function reentrancies:
	- YearnRewards.earned(address) (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#681-687)
	- YearnRewards.updateReward(address) (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#653-661)
	- YearnRewards.userRewardPerTokenPaid (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#645)
Reentrancy in YearnRewards.getReward() (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#707-714):
	External calls:
	- checkhalve() (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#707)
		- yfi.mint(address(this),initreward) (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#719)
	State variables written after the call(s):
	- rewards[msg.sender] = 0 (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#710)
	YearnRewards.rewards (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#646) can be used in cross function reentrancies:
	- YearnRewards.earned(address) (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#681-687)
	- YearnRewards.getReward() (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#707-714)
	- YearnRewards.rewards (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#646)
	- YearnRewards.updateReward(address) (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#653-661)
Reentrancy in YearnRewards.notifyRewardAmount(uint256) (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#732-748):
	External calls:
	- yfi.mint(address(this),reward) (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#744)
	State variables written after the call(s):
	- lastUpdateTime = block.timestamp (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#745)
	YearnRewards.lastUpdateTime (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#643) can be used in cross function reentrancies:
	- YearnRewards.lastUpdateTime (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#643)
	- YearnRewards.notifyRewardAmount(uint256) (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#732-748)
	- YearnRewards.rewardPerToken() (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#667-679)
	- YearnRewards.updateReward(address) (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#653-661)
	- periodFinish = block.timestamp.add(DURATION) (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#746)
	YearnRewards.periodFinish (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#641) can be used in cross function reentrancies:
	- YearnRewards.checkhalve() (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#716-726)
	- YearnRewards.lastTimeRewardApplicable() (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#663-665)
	- YearnRewards.notifyRewardAmount(uint256) (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#732-748)
	- YearnRewards.periodFinish (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#641)
Reentrancy in YearnRewards.stake(uint256) (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#690-694):
	External calls:
	- super.stake(amount) (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#692)
		- y.safeTransferFrom(msg.sender,address(this),amount) (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#625)
		- (success,returndata) = address(token).call(data) (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#562)
	- checkhalve() (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#690)
		- yfi.mint(address(this),initreward) (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#719)
	State variables written after the call(s):
	- super.stake(amount) (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#692)
		- _balances[msg.sender] = _balances[msg.sender].add(amount) (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#624)
	LPTokenWrapper._balances (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#612) can be used in cross function reentrancies:
	- LPTokenWrapper.balanceOf(address) (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#618-620)
	- LPTokenWrapper.stake(uint256) (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#622-626)
	- LPTokenWrapper.withdraw(uint256) (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#628-632)
	- super.stake(amount) (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#692)
		- _totalSupply = _totalSupply.add(amount) (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#623)
	LPTokenWrapper._totalSupply (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#611) can be used in cross function reentrancies:
	- LPTokenWrapper.stake(uint256) (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#622-626)
	- LPTokenWrapper.totalSupply() (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#614-616)
	- LPTokenWrapper.withdraw(uint256) (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#628-632)
Reentrancy in YearnRewards.withdraw(uint256) (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#696-700):
	External calls:
	- super.withdraw(amount) (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#698)
		- y.safeTransfer(msg.sender,amount) (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#631)
		- (success,returndata) = address(token).call(data) (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#562)
	- checkhalve() (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#696)
		- yfi.mint(address(this),initreward) (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#719)
	State variables written after the call(s):
	- super.withdraw(amount) (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#698)
		- _balances[msg.sender] = _balances[msg.sender].sub(amount) (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#630)
	LPTokenWrapper._balances (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#612) can be used in cross function reentrancies:
	- LPTokenWrapper.balanceOf(address) (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#618-620)
	- LPTokenWrapper.stake(uint256) (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#622-626)
	- LPTokenWrapper.withdraw(uint256) (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#628-632)
	- super.withdraw(amount) (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#698)
		- _totalSupply = _totalSupply.sub(amount) (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#629)
	LPTokenWrapper._totalSupply (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#611) can be used in cross function reentrancies:
	- LPTokenWrapper.stake(uint256) (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#622-626)
	- LPTokenWrapper.totalSupply() (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#614-616)
	- LPTokenWrapper.withdraw(uint256) (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#628-632)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1
INFO:Detectors:
IRewardDistributionRecipient.setRewardDistribution(address) (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#588-593) should emit an event for: 
	- rewardDistribution = _rewardDistribution (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#592) 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-access-control
INFO:Detectors:
IRewardDistributionRecipient.setRewardDistribution(address)._rewardDistribution (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#588) lacks a zero-check on :
		- rewardDistribution = _rewardDistribution (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#592)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation
INFO:Detectors:
Reentrancy in YearnRewards.checkhalve() (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#716-726):
	External calls:
	- yfi.mint(address(this),initreward) (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#719)
	State variables written after the call(s):
	- rewardRate = initreward.div(DURATION) (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#721)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2
INFO:Detectors:
Reentrancy in YearnRewards.checkhalve() (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#716-726):
	External calls:
	- yfi.mint(address(this),initreward) (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#719)
	Event emitted after the call(s):
	- RewardAdded(initreward) (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#723)
Reentrancy in YearnRewards.exit() (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#702-705):
	External calls:
	- withdraw(balanceOf(msg.sender)) (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#703)
		- yfi.mint(address(this),initreward) (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#719)
		- y.safeTransfer(msg.sender,amount) (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#631)
		- (success,returndata) = address(token).call(data) (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#562)
	- getReward() (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#704)
		- yfi.mint(address(this),initreward) (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#719)
		- yfi.safeTransfer(msg.sender,reward) (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#711)
		- (success,returndata) = address(token).call(data) (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#562)
	Event emitted after the call(s):
	- RewardAdded(initreward) (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#723)
		- getReward() (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#704)
	- RewardPaid(msg.sender,reward) (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#712)
		- getReward() (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#704)
Reentrancy in YearnRewards.getReward() (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#707-714):
	External calls:
	- yfi.safeTransfer(msg.sender,reward) (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#711)
	- checkhalve() (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#707)
		- yfi.mint(address(this),initreward) (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#719)
	Event emitted after the call(s):
	- RewardPaid(msg.sender,reward) (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#712)
Reentrancy in YearnRewards.notifyRewardAmount(uint256) (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#732-748):
	External calls:
	- yfi.mint(address(this),reward) (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#744)
	Event emitted after the call(s):
	- RewardAdded(reward) (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#747)
Reentrancy in YearnRewards.stake(uint256) (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#690-694):
	External calls:
	- super.stake(amount) (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#692)
		- y.safeTransferFrom(msg.sender,address(this),amount) (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#625)
		- (success,returndata) = address(token).call(data) (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#562)
	- checkhalve() (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#690)
		- yfi.mint(address(this),initreward) (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#719)
	Event emitted after the call(s):
	- Staked(msg.sender,amount) (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#693)
Reentrancy in YearnRewards.withdraw(uint256) (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#696-700):
	External calls:
	- super.withdraw(amount) (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#698)
		- y.safeTransfer(msg.sender,amount) (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#631)
		- (success,returndata) = address(token).call(data) (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#562)
	- checkhalve() (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#696)
		- yfi.mint(address(this),initreward) (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#719)
	Event emitted after the call(s):
	- Withdrawn(msg.sender,amount) (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#699)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3
INFO:Detectors:
YearnRewards.getReward() (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#707-714) uses timestamp for comparisons
	Dangerous comparisons:
	- reward > 0 (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#709)
YearnRewards.notifyRewardAmount(uint256) (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#732-748) uses timestamp for comparisons
	Dangerous comparisons:
	- block.timestamp >= periodFinish (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#737)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp
INFO:Detectors:
Address.isContract(address) (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#443-456) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#454)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage
INFO:Detectors:
Different versions of Solidity are used:
	- Version used: ['^0.5.0', '^0.5.5']
	- ^0.5.0 (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#47)
	- ^0.5.0 (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#79)
	- ^0.5.0 (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#238)
	- ^0.5.0 (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#268)
	- ^0.5.0 (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#346)
	- ^0.5.0 (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#497)
	- ^0.5.0 (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#574)
	- ^0.5.0 (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#598)
	- ^0.5.5 (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#426)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#different-pragma-directives-are-used
INFO:Detectors:
Address.sendValue(address,uint256) (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#486-492) is never used and should be removed
Address.toPayable(address) (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#464-466) is never used and should be removed
Context._msgData() (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#260-263) is never used and should be removed
Math.average(uint256,uint256) (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#71-74) is never used and should be removed
Math.max(uint256,uint256) (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#56-58) is never used and should be removed
SafeERC20.safeApprove(IERC20,address,uint256) (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#523-532) is never used and should be removed
SafeERC20.safeDecreaseAllowance(IERC20,address,uint256) (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#539-542) is never used and should be removed
SafeERC20.safeIncreaseAllowance(IERC20,address,uint256) (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#534-537) is never used and should be removed
SafeMath.mod(uint256,uint256) (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#213-215) is never used and should be removed
SafeMath.mod(uint256,uint256,string) (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#230-233) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code
INFO:Detectors:
Pragma version^0.5.0 (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#47) allows old versions
Pragma version^0.5.0 (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#79) allows old versions
Pragma version^0.5.0 (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#238) allows old versions
Pragma version^0.5.0 (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#268) allows old versions
Pragma version^0.5.0 (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#346) allows old versions
Pragma version^0.5.5 (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#426) is known to contain severe issues (https://solidity.readthedocs.io/en/latest/bugs.html)
Pragma version^0.5.0 (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#497) allows old versions
Pragma version^0.5.0 (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#574) allows old versions
Pragma version^0.5.0 (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#598) allows old versions
solc-0.5.17 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity
INFO:Detectors:
Low level call in Address.sendValue(address,uint256) (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#486-492):
	- (success) = recipient.call.value(amount)() (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#490)
Low level call in SafeERC20.callOptionalReturn(IERC20,bytes) (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#550-569):
	- (success,returndata) = address(token).call(data) (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#562)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls
INFO:Detectors:
Parameter IRewardDistributionRecipient.setRewardDistribution(address)._rewardDistribution (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#588) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions
INFO:Detectors:
Redundant expression "this (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#261)" inContext (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#250-264)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#redundant-statements
INFO:Detectors:
LPTokenWrapper.y (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#609) should be constant 
YearnRewards.starttime (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#640) should be constant 
YearnRewards.yfi (../../sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol#636) should be constant 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant
INFO:Slither:/bdata2/sc/dataset/mainnet/0xedeffa2877c4e6047b7b4044b1fa8e0ba3bc38dd.sol analyzed (10 contracts with 85 detectors), 47 result(s) found
