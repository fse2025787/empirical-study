INFO:Detectors:
StakingRewards.notifyRewardAmount(uint256) (../../sc/dataset/mainnet/0x5bc49183cb5de71d9ea9d6163e114e87f74c03c5.sol#560-579) performs a multiplication on the result of a division:
	- rewardRate = reward.div(rewardsDuration) (../../sc/dataset/mainnet/0x5bc49183cb5de71d9ea9d6163e114e87f74c03c5.sol#562)
	- leftover = remaining.mul(rewardRate) (../../sc/dataset/mainnet/0x5bc49183cb5de71d9ea9d6163e114e87f74c03c5.sol#565)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#divide-before-multiply
INFO:Detectors:
Reentrancy in StakingRewards.exit() (../../sc/dataset/mainnet/0x5bc49183cb5de71d9ea9d6163e114e87f74c03c5.sol#553-556):
	External calls:
	- withdraw(_balances[msg.sender]) (../../sc/dataset/mainnet/0x5bc49183cb5de71d9ea9d6163e114e87f74c03c5.sol#554)
		- stakingToken.safeTransfer(msg.sender,amount) (../../sc/dataset/mainnet/0x5bc49183cb5de71d9ea9d6163e114e87f74c03c5.sol#540)
		- (success,returndata) = address(token).call(data) (../../sc/dataset/mainnet/0x5bc49183cb5de71d9ea9d6163e114e87f74c03c5.sol#450)
	- getReward() (../../sc/dataset/mainnet/0x5bc49183cb5de71d9ea9d6163e114e87f74c03c5.sol#555)
		- rewardsToken.safeTransfer(msg.sender,reward) (../../sc/dataset/mainnet/0x5bc49183cb5de71d9ea9d6163e114e87f74c03c5.sol#548)
		- (success,returndata) = address(token).call(data) (../../sc/dataset/mainnet/0x5bc49183cb5de71d9ea9d6163e114e87f74c03c5.sol#450)
	State variables written after the call(s):
	- getReward() (../../sc/dataset/mainnet/0x5bc49183cb5de71d9ea9d6163e114e87f74c03c5.sol#555)
		- _guardCounter += 1 (../../sc/dataset/mainnet/0x5bc49183cb5de71d9ea9d6163e114e87f74c03c5.sol#347)
	ReentrancyGuard._guardCounter (../../sc/dataset/mainnet/0x5bc49183cb5de71d9ea9d6163e114e87f74c03c5.sol#331) can be used in cross function reentrancies:
	- ReentrancyGuard.nonReentrant() (../../sc/dataset/mainnet/0x5bc49183cb5de71d9ea9d6163e114e87f74c03c5.sol#346-351)
	- getReward() (../../sc/dataset/mainnet/0x5bc49183cb5de71d9ea9d6163e114e87f74c03c5.sol#555)
		- lastUpdateTime = lastTimeRewardApplicable() (../../sc/dataset/mainnet/0x5bc49183cb5de71d9ea9d6163e114e87f74c03c5.sol#601)
	StakingRewards.lastUpdateTime (../../sc/dataset/mainnet/0x5bc49183cb5de71d9ea9d6163e114e87f74c03c5.sol#472) can be used in cross function reentrancies:
	- StakingRewards.lastUpdateTime (../../sc/dataset/mainnet/0x5bc49183cb5de71d9ea9d6163e114e87f74c03c5.sol#472)
	- StakingRewards.notifyRewardAmount(uint256) (../../sc/dataset/mainnet/0x5bc49183cb5de71d9ea9d6163e114e87f74c03c5.sol#560-579)
	- StakingRewards.rewardPerToken() (../../sc/dataset/mainnet/0x5bc49183cb5de71d9ea9d6163e114e87f74c03c5.sol#508-516)
	- StakingRewards.updateReward(address) (../../sc/dataset/mainnet/0x5bc49183cb5de71d9ea9d6163e114e87f74c03c5.sol#599-607)
	- getReward() (../../sc/dataset/mainnet/0x5bc49183cb5de71d9ea9d6163e114e87f74c03c5.sol#555)
		- rewardPerTokenStored = rewardPerToken() (../../sc/dataset/mainnet/0x5bc49183cb5de71d9ea9d6163e114e87f74c03c5.sol#600)
	StakingRewards.rewardPerTokenStored (../../sc/dataset/mainnet/0x5bc49183cb5de71d9ea9d6163e114e87f74c03c5.sol#473) can be used in cross function reentrancies:
	- StakingRewards.rewardPerToken() (../../sc/dataset/mainnet/0x5bc49183cb5de71d9ea9d6163e114e87f74c03c5.sol#508-516)
	- StakingRewards.rewardPerTokenStored (../../sc/dataset/mainnet/0x5bc49183cb5de71d9ea9d6163e114e87f74c03c5.sol#473)
	- StakingRewards.updateReward(address) (../../sc/dataset/mainnet/0x5bc49183cb5de71d9ea9d6163e114e87f74c03c5.sol#599-607)
	- getReward() (../../sc/dataset/mainnet/0x5bc49183cb5de71d9ea9d6163e114e87f74c03c5.sol#555)
		- rewards[msg.sender] = 0 (../../sc/dataset/mainnet/0x5bc49183cb5de71d9ea9d6163e114e87f74c03c5.sol#547)
		- rewards[account] = earned(account) (../../sc/dataset/mainnet/0x5bc49183cb5de71d9ea9d6163e114e87f74c03c5.sol#603)
	StakingRewards.rewards (../../sc/dataset/mainnet/0x5bc49183cb5de71d9ea9d6163e114e87f74c03c5.sol#476) can be used in cross function reentrancies:
	- StakingRewards.earned(address) (../../sc/dataset/mainnet/0x5bc49183cb5de71d9ea9d6163e114e87f74c03c5.sol#518-520)
	- StakingRewards.getReward() (../../sc/dataset/mainnet/0x5bc49183cb5de71d9ea9d6163e114e87f74c03c5.sol#544-551)
	- StakingRewards.rewards (../../sc/dataset/mainnet/0x5bc49183cb5de71d9ea9d6163e114e87f74c03c5.sol#476)
	- StakingRewards.updateReward(address) (../../sc/dataset/mainnet/0x5bc49183cb5de71d9ea9d6163e114e87f74c03c5.sol#599-607)
	- getReward() (../../sc/dataset/mainnet/0x5bc49183cb5de71d9ea9d6163e114e87f74c03c5.sol#555)
		- userRewardPerTokenPaid[account] = rewardPerTokenStored (../../sc/dataset/mainnet/0x5bc49183cb5de71d9ea9d6163e114e87f74c03c5.sol#604)
	StakingRewards.userRewardPerTokenPaid (../../sc/dataset/mainnet/0x5bc49183cb5de71d9ea9d6163e114e87f74c03c5.sol#475) can be used in cross function reentrancies:
	- StakingRewards.earned(address) (../../sc/dataset/mainnet/0x5bc49183cb5de71d9ea9d6163e114e87f74c03c5.sol#518-520)
	- StakingRewards.updateReward(address) (../../sc/dataset/mainnet/0x5bc49183cb5de71d9ea9d6163e114e87f74c03c5.sol#599-607)
	- StakingRewards.userRewardPerTokenPaid (../../sc/dataset/mainnet/0x5bc49183cb5de71d9ea9d6163e114e87f74c03c5.sol#475)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1
INFO:Detectors:
RewardsDistributionRecipient.setRewardsDistribution(address) (../../sc/dataset/mainnet/0x5bc49183cb5de71d9ea9d6163e114e87f74c03c5.sol#55-57) should emit an event for: 
	- rewardsDistribution = _rewardsDistribution (../../sc/dataset/mainnet/0x5bc49183cb5de71d9ea9d6163e114e87f74c03c5.sol#56) 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-access-control
INFO:Detectors:
Owned.nominateNewOwner(address)._owner (../../sc/dataset/mainnet/0x5bc49183cb5de71d9ea9d6163e114e87f74c03c5.sol#19) lacks a zero-check on :
		- nominatedOwner = _owner (../../sc/dataset/mainnet/0x5bc49183cb5de71d9ea9d6163e114e87f74c03c5.sol#20)
RewardsDistributionRecipient.setRewardsDistribution(address)._rewardsDistribution (../../sc/dataset/mainnet/0x5bc49183cb5de71d9ea9d6163e114e87f74c03c5.sol#55) lacks a zero-check on :
		- rewardsDistribution = _rewardsDistribution (../../sc/dataset/mainnet/0x5bc49183cb5de71d9ea9d6163e114e87f74c03c5.sol#56)
StakingRewards.constructor(address,address,address,address)._rewardsDistribution (../../sc/dataset/mainnet/0x5bc49183cb5de71d9ea9d6163e114e87f74c03c5.sol#485) lacks a zero-check on :
		- rewardsDistribution = _rewardsDistribution (../../sc/dataset/mainnet/0x5bc49183cb5de71d9ea9d6163e114e87f74c03c5.sol#491)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation
INFO:Detectors:
Reentrancy in StakingRewards.exit() (../../sc/dataset/mainnet/0x5bc49183cb5de71d9ea9d6163e114e87f74c03c5.sol#553-556):
	External calls:
	- withdraw(_balances[msg.sender]) (../../sc/dataset/mainnet/0x5bc49183cb5de71d9ea9d6163e114e87f74c03c5.sol#554)
		- stakingToken.safeTransfer(msg.sender,amount) (../../sc/dataset/mainnet/0x5bc49183cb5de71d9ea9d6163e114e87f74c03c5.sol#540)
		- (success,returndata) = address(token).call(data) (../../sc/dataset/mainnet/0x5bc49183cb5de71d9ea9d6163e114e87f74c03c5.sol#450)
	- getReward() (../../sc/dataset/mainnet/0x5bc49183cb5de71d9ea9d6163e114e87f74c03c5.sol#555)
		- rewardsToken.safeTransfer(msg.sender,reward) (../../sc/dataset/mainnet/0x5bc49183cb5de71d9ea9d6163e114e87f74c03c5.sol#548)
		- (success,returndata) = address(token).call(data) (../../sc/dataset/mainnet/0x5bc49183cb5de71d9ea9d6163e114e87f74c03c5.sol#450)
	Event emitted after the call(s):
	- RewardPaid(msg.sender,reward) (../../sc/dataset/mainnet/0x5bc49183cb5de71d9ea9d6163e114e87f74c03c5.sol#549)
		- getReward() (../../sc/dataset/mainnet/0x5bc49183cb5de71d9ea9d6163e114e87f74c03c5.sol#555)
Reentrancy in StakingRewards.recoverERC20(address,uint256) (../../sc/dataset/mainnet/0x5bc49183cb5de71d9ea9d6163e114e87f74c03c5.sol#582-586):
	External calls:
	- IERC20(tokenAddress).safeTransfer(owner,tokenAmount) (../../sc/dataset/mainnet/0x5bc49183cb5de71d9ea9d6163e114e87f74c03c5.sol#584)
	Event emitted after the call(s):
	- Recovered(tokenAddress,tokenAmount) (../../sc/dataset/mainnet/0x5bc49183cb5de71d9ea9d6163e114e87f74c03c5.sol#585)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3
INFO:Detectors:
StakingRewards.lastTimeRewardApplicable() (../../sc/dataset/mainnet/0x5bc49183cb5de71d9ea9d6163e114e87f74c03c5.sol#504-506) uses timestamp for comparisons
	Dangerous comparisons:
	- block.timestamp < periodFinish (../../sc/dataset/mainnet/0x5bc49183cb5de71d9ea9d6163e114e87f74c03c5.sol#505)
StakingRewards.getReward() (../../sc/dataset/mainnet/0x5bc49183cb5de71d9ea9d6163e114e87f74c03c5.sol#544-551) uses timestamp for comparisons
	Dangerous comparisons:
	- reward > 0 (../../sc/dataset/mainnet/0x5bc49183cb5de71d9ea9d6163e114e87f74c03c5.sol#546)
StakingRewards.notifyRewardAmount(uint256) (../../sc/dataset/mainnet/0x5bc49183cb5de71d9ea9d6163e114e87f74c03c5.sol#560-579) uses timestamp for comparisons
	Dangerous comparisons:
	- block.timestamp >= periodFinish (../../sc/dataset/mainnet/0x5bc49183cb5de71d9ea9d6163e114e87f74c03c5.sol#561)
	- require(bool,string)(rewardRate <= balance.div(rewardsDuration),Provided reward too high) (../../sc/dataset/mainnet/0x5bc49183cb5de71d9ea9d6163e114e87f74c03c5.sol#574)
StakingRewards.setRewardsDuration(uint256) (../../sc/dataset/mainnet/0x5bc49183cb5de71d9ea9d6163e114e87f74c03c5.sol#588-595) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(block.timestamp > periodFinish,Previous rewards period must be complete before changing the duration for the new period) (../../sc/dataset/mainnet/0x5bc49183cb5de71d9ea9d6163e114e87f74c03c5.sol#589-592)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp
INFO:Detectors:
Address.isContract(address) (../../sc/dataset/mainnet/0x5bc49183cb5de71d9ea9d6163e114e87f74c03c5.sol#369-378) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0x5bc49183cb5de71d9ea9d6163e114e87f74c03c5.sol#376)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage
INFO:Detectors:
Address.toPayable(address) (../../sc/dataset/mainnet/0x5bc49183cb5de71d9ea9d6163e114e87f74c03c5.sol#384-386) is never used and should be removed
SafeERC20.safeApprove(IERC20,address,uint256) (../../sc/dataset/mainnet/0x5bc49183cb5de71d9ea9d6163e114e87f74c03c5.sol#411-420) is never used and should be removed
SafeERC20.safeDecreaseAllowance(IERC20,address,uint256) (../../sc/dataset/mainnet/0x5bc49183cb5de71d9ea9d6163e114e87f74c03c5.sol#427-430) is never used and should be removed
SafeERC20.safeIncreaseAllowance(IERC20,address,uint256) (../../sc/dataset/mainnet/0x5bc49183cb5de71d9ea9d6163e114e87f74c03c5.sol#422-425) is never used and should be removed
SafeMath.mod(uint256,uint256) (../../sc/dataset/mainnet/0x5bc49183cb5de71d9ea9d6163e114e87f74c03c5.sol#235-238) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code
INFO:Detectors:
Pragma version^0.5.16 (../../sc/dataset/mainnet/0x5bc49183cb5de71d9ea9d6163e114e87f74c03c5.sol#6) allows old versions
solc-0.5.17 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity
INFO:Detectors:
Low level call in SafeERC20.callOptionalReturn(IERC20,bytes) (../../sc/dataset/mainnet/0x5bc49183cb5de71d9ea9d6163e114e87f74c03c5.sol#438-457):
	- (success,returndata) = address(token).call(data) (../../sc/dataset/mainnet/0x5bc49183cb5de71d9ea9d6163e114e87f74c03c5.sol#450)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls
INFO:Detectors:
Parameter Owned.nominateNewOwner(address)._owner (../../sc/dataset/mainnet/0x5bc49183cb5de71d9ea9d6163e114e87f74c03c5.sol#19) is not in mixedCase
Parameter RewardsDistributionRecipient.setRewardsDistribution(address)._rewardsDistribution (../../sc/dataset/mainnet/0x5bc49183cb5de71d9ea9d6163e114e87f74c03c5.sol#55) is not in mixedCase
Parameter Pausable.setPaused(bool)._paused (../../sc/dataset/mainnet/0x5bc49183cb5de71d9ea9d6163e114e87f74c03c5.sol#76) is not in mixedCase
Parameter StakingRewards.setRewardsDuration(uint256)._rewardsDuration (../../sc/dataset/mainnet/0x5bc49183cb5de71d9ea9d6163e114e87f74c03c5.sol#588) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions
INFO:Slither:/bdata2/sc/dataset/mainnet/0x5bc49183cb5de71d9ea9d6163e114e87f74c03c5.sol analyzed (10 contracts with 85 detectors), 25 result(s) found
