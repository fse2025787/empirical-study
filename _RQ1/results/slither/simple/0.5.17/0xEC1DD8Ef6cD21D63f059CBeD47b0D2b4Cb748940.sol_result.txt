Compilation warnings/errors on /bdata2/sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol:
/bdata2/sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol:1:1: Warning: Experimental features are turned on. Do not use experimental features on live deployments.
pragma experimental ABIEncoderV2;
^-------------------------------^

INFO:Detectors:
EIP20NonStandardInterface (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#3198-3263) has incorrect ERC20 function interface:EIP20NonStandardInterface.transfer(address,uint256) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#3223)
EIP20NonStandardInterface (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#3198-3263) has incorrect ERC20 function interface:EIP20NonStandardInterface.transferFrom(address,address,uint256) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#3237-3241)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-erc20-interface
INFO:Detectors:
CErc20._addReserves(uint256) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#2341-2343) uses a dangerous strict equality:
	- require(bool,string)(_addReservesInternal(addAmount,false) == 0,add reserves failed) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#2342)
CToken.accrueInterest() (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#1322-1378) uses a dangerous strict equality:
	- accrualBlockNumberPrior == currentBlockNumber (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#1328)
CToken.borrowFresh(address,uint256,bool) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#1444-1493) uses a dangerous strict equality:
	- require(bool,string)(accrualBlockNumber == getBlockNumber(),market is stale) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#1453)
CToken.exchangeRateStoredInternal() (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#1289-1307) uses a dangerous strict equality:
	- _totalSupply == 0 (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#1291)
CToken.initialize(ComptrollerInterface,InterestRateModel,uint256,string,string,uint8) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#1025-1058) uses a dangerous strict equality:
	- require(bool,string)(accrualBlockNumber == 0 && borrowIndex == 0,initialized) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#1034)
CErc20.liquidateBorrow(address,uint256,CTokenInterface) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#2327-2334) uses a dangerous strict equality:
	- require(bool,string)(err == 0,liquidate borrow failed) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#2333)
CToken.liquidateBorrowFresh(address,address,uint256,CTokenInterface,bool) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#1644-1721) uses a dangerous strict equality:
	- require(bool,string)(accrualBlockNumber == getBlockNumber(),market is stale) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#1664)
CToken.liquidateBorrowFresh(address,address,uint256,CTokenInterface,bool) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#1644-1721) uses a dangerous strict equality:
	- require(bool,string)(cTokenCollateral.accrualBlockNumber() == getBlockNumber(),market is stale) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#1667)
CToken.liquidateBorrowFresh(address,address,uint256,CTokenInterface,bool) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#1644-1721) uses a dangerous strict equality:
	- require(bool,string)(vars.repayBorrowError == uint256(Error.NO_ERROR),repay borrow failed) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#1679)
CToken.liquidateBorrowFresh(address,address,uint256,CTokenInterface,bool) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#1644-1721) uses a dangerous strict equality:
	- require(bool,string)(vars.amountSeizeError == uint256(Error.NO_ERROR),calculate seize amount failed) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#1691)
CToken.liquidateBorrowFresh(address,address,uint256,CTokenInterface,bool) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#1644-1721) uses a dangerous strict equality:
	- require(bool,string)(seizeError == uint256(Error.NO_ERROR),token seizure failed) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#1705)
CErc20.mint(uint256) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#2264-2267) uses a dangerous strict equality:
	- require(bool,string)(err == 0,mint failed) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#2266)
CErc20.mintFresh(address,uint256,bool) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#2508-2567) uses a dangerous strict equality:
	- require(bool,string)(accrualBlockNumber == getBlockNumber(),market is stale) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#2525)
Exponential.mulExp(Exponential.Exp,Exponential.Exp) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#736-755) uses a dangerous strict equality:
	- assert(bool)(err2 == MathError.NO_ERROR) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#752)
Exponential.mul_(uint256,uint256,string) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#899-910) uses a dangerous strict equality:
	- a == 0 || b == 0 (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#904)
Exponential.mul_(uint256,uint256,string) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#899-910) uses a dangerous strict equality:
	- require(bool,string)(c / a == b,errorMessage) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#908)
CErc20.redeemFresh(address,uint256,uint256,bool) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#2586-2667) uses a dangerous strict equality:
	- require(bool,string)(comptroller.redeemAllowed(address(this),redeemer,vars.redeemTokens) == 0,rejected) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#2619)
CErc20.redeemFresh(address,uint256,uint256,bool) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#2586-2667) uses a dangerous strict equality:
	- require(bool,string)(accrualBlockNumber == getBlockNumber(),market is stale) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#2630)
CErc20.repayBorrow(uint256) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#2303-2306) uses a dangerous strict equality:
	- require(bool,string)(err == 0,repay failed) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#2305)
CErc20.repayBorrowBehalf(address,uint256) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#2314-2317) uses a dangerous strict equality:
	- require(bool,string)(err == 0,repay behalf failed) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#2316)
CToken.repayBorrowFresh(address,address,uint256,bool) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#1543-1603) uses a dangerous strict equality:
	- require(bool,string)(accrualBlockNumber == getBlockNumber(),market is stale) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#1553)
CErc20.seizeInternal(address,address,address,uint256) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#2679-2717) uses a dangerous strict equality:
	- require(bool,string)(comptroller.seizeAllowed(address(this),seizerToken,liquidator,borrower,seizeTokens) == 0,rejected) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#2686-2689)
CErc20.seizeInternal(address,address,address,uint256) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#2679-2717) uses a dangerous strict equality:
	- seizeTokens == 0 (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#2695)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dangerous-strict-equalities
INFO:Detectors:
Reentrancy in CToken.liquidateBorrowInternal(address,uint256,CTokenInterface,bool) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#1614-1625):
	External calls:
	- require(bool,string)(cTokenCollateral.accrueInterest() == uint256(Error.NO_ERROR),accrue interest failed) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#1621)
	- liquidateBorrowFresh(msg.sender,borrower,repayAmount,cTokenCollateral,isNative) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#1624)
		- require(bool,string)(comptroller.liquidateBorrowAllowed(address(this),address(cTokenCollateral),liquidator,borrower,repayAmount) == 0,rejected) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#1652-1661)
		- require(bool,string)(comptroller.repayBorrowAllowed(address(this),payer,borrower,repayAmount) == 0,rejected) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#1550)
		- seizeError = cTokenCollateral.seize(liquidator,borrower,vars.seizeTokens) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#1701)
		- comptroller.repayBorrowVerify(address(this),payer,borrower,vars.actualRepayAmount,vars.borrowerIndex) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#1600)
		- comptroller.liquidateBorrowVerify(address(this),address(cTokenCollateral),liquidator,borrower,vars.actualRepayAmount,vars.seizeTokens) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#1711-1718)
	State variables written after the call(s):
	- liquidateBorrowFresh(msg.sender,borrower,repayAmount,cTokenCollateral,isNative) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#1624)
		- totalBorrows = vars.totalBorrowsNew (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#1594)
	CTokenStorage.totalBorrows (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#97) can be used in cross function reentrancies:
	- CToken.accrueInterest() (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#1322-1378)
	- CToken.borrowRatePerBlock() (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#1165-1167)
	- CToken.estimateBorrowRatePerBlockAfterChange(uint256,bool) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#1181-1193)
	- CToken.estimateSupplyRatePerBlockAfterChange(uint256,bool) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#1199-1212)
	- CToken.exchangeRateStoredInternal() (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#1289-1307)
	- CToken.supplyRatePerBlock() (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#1173-1175)
	- CTokenStorage.totalBorrows (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#97)
Reentrancy in CErc20.mintFresh(address,uint256,bool) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#2508-2567):
	External calls:
	- require(bool,string)(comptroller.mintAllowed(address(this),minter,mintAmount) == 0,rejected) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#2514)
	- vars.actualMintAmount = doTransferIn(minter,mintAmount,isNative) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#2543)
		- token.transferFrom(from,address(this),amount) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#2375)
	State variables written after the call(s):
	- totalSupply = add_(totalSupply,vars.mintTokens) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#2556)
	CTokenStorage.totalSupply (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#107) can be used in cross function reentrancies:
	- CToken.exchangeRateStoredInternal() (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#1289-1307)
	- CErc20.mintFresh(address,uint256,bool) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#2508-2567)
	- CErc20.redeemFresh(address,uint256,uint256,bool) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#2586-2667)
	- CTokenStorage.totalSupply (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#107)
Reentrancy in CErc20.redeemFresh(address,uint256,uint256,bool) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#2586-2667):
	External calls:
	- require(bool,string)(comptroller.redeemAllowed(address(this),redeemer,vars.redeemTokens) == 0,rejected) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#2619)
	State variables written after the call(s):
	- totalSupply = vars.totalSupplyNew (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#2648)
	CTokenStorage.totalSupply (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#107) can be used in cross function reentrancies:
	- CToken.exchangeRateStoredInternal() (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#1289-1307)
	- CErc20.mintFresh(address,uint256,bool) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#2508-2567)
	- CErc20.redeemFresh(address,uint256,uint256,bool) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#2586-2667)
	- CTokenStorage.totalSupply (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#107)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1
INFO:Detectors:
CToken.repayBorrowFresh(address,address,uint256,bool).vars (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#1555) is a local variable never initialized
PriceOracleProxyIB._setAggregators(address[],address[],address[]).isUsed (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#3577) is a local variable never initialized
CErc20.mintFresh(address,uint256,bool).vars (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#2527) is a local variable never initialized
CToken.borrowFresh(address,uint256,bool).vars (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#1458) is a local variable never initialized
CToken.liquidateBorrowFresh(address,address,uint256,CTokenInterface,bool).vars (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#1675) is a local variable never initialized
CToken._addReservesFresh(uint256,bool).actualAddAmount (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#1880) is a local variable never initialized
PriceOracleProxyIB._setReferences(address[],string[]).isUsed (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#3638) is a local variable never initialized
CErc20.redeemFresh(address,uint256,uint256,bool).vars (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#2594) is a local variable never initialized
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#uninitialized-local-variables
INFO:Detectors:
CErc20.initialize(address,ComptrollerInterface,InterestRateModel,uint256,string,string,uint8) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#2239-2254) ignores return value by EIP20Interface(underlying).totalSupply() (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#2253)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return
INFO:Detectors:
Exponential.divScalarByExpTruncate(uint256,Exponential.Exp).fraction (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#700) shadows:
	- Exponential.fraction(uint256,uint256) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#949-951) (function)
Exponential.div_ScalarByExpTruncate(uint256,Exponential.Exp).fraction (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#729) shadows:
	- Exponential.fraction(uint256,uint256) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#949-951) (function)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing
INFO:Detectors:
CToken._setPendingAdmin(address).newPendingAdmin (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#1748) lacks a zero-check on :
		- pendingAdmin = newPendingAdmin (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#1758)
CErc20.initialize(address,ComptrollerInterface,InterestRateModel,uint256,string,string,uint8).underlying_ (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#2240) lacks a zero-check on :
		- underlying = underlying_ (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#2252)
PriceOracleProxyIB.constructor(address,address,address).admin_ (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#3457) lacks a zero-check on :
		- admin = admin_ (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#3461)
PriceOracleProxyIB._setGuardian(address)._guardian (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#3547) lacks a zero-check on :
		- guardian = _guardian (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#3549)
PriceOracleProxyIB._setAdmin(address)._admin (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#3557) lacks a zero-check on :
		- admin = _admin (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#3559)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation
INFO:Detectors:
PriceOracleProxyIB._setAggregators(address[],address[],address[]) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#3569-3592) has external calls inside a loop: aggregator = reg.getFeed(bases[i],quotes[i]) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#3583)
PriceOracleProxyIB._setAggregators(address[],address[],address[]) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#3569-3592) has external calls inside a loop: require(bool,string)(reg.isFeedEnabled(aggregator),aggregator not enabled) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#3584)
PriceOracleProxyIB._setAggregators(address[],address[],address[]) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#3569-3592) has external calls inside a loop: (price) = reg.latestRoundData(bases[i],quotes[i]) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#3586)
PriceOracleProxyIB._setReferences(address[],string[]) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#3634-3650) has external calls inside a loop: data = ref.getReferenceData(symbols[i],QUOTE_SYMBOL) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#3643)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation/#calls-inside-a-loop
INFO:Detectors:
Reentrancy in CToken.borrowFresh(address,uint256,bool) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#1444-1493):
	External calls:
	- require(bool,string)(comptroller.borrowAllowed(address(this),borrower,borrowAmount) == 0,rejected) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#1450)
	State variables written after the call(s):
	- accountBorrows[borrower].principal = vars.accountBorrowsNew (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#1474)
	- accountBorrows[borrower].interestIndex = borrowIndex (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#1475)
	- totalBorrows = vars.totalBorrowsNew (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#1476)
Reentrancy in CErc20.mintFresh(address,uint256,bool) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#2508-2567):
	External calls:
	- require(bool,string)(comptroller.mintAllowed(address(this),minter,mintAmount) == 0,rejected) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#2514)
	- vars.actualMintAmount = doTransferIn(minter,mintAmount,isNative) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#2543)
		- token.transferFrom(from,address(this),amount) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#2375)
	State variables written after the call(s):
	- accountTokens[minter] = add_(accountTokens[minter],vars.mintTokens) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#2557)
Reentrancy in CErc20.redeemFresh(address,uint256,uint256,bool) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#2586-2667):
	External calls:
	- require(bool,string)(comptroller.redeemAllowed(address(this),redeemer,vars.redeemTokens) == 0,rejected) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#2619)
	State variables written after the call(s):
	- accountTokens[redeemer] = vars.accountTokensNew (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#2649)
Reentrancy in CToken.repayBorrowFresh(address,address,uint256,bool) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#1543-1603):
	External calls:
	- require(bool,string)(comptroller.repayBorrowAllowed(address(this),payer,borrower,repayAmount) == 0,rejected) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#1550)
	State variables written after the call(s):
	- accountBorrows[borrower].principal = vars.accountBorrowsNew (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#1592)
	- accountBorrows[borrower].interestIndex = borrowIndex (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#1593)
	- totalBorrows = vars.totalBorrowsNew (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#1594)
Reentrancy in CErc20.seizeInternal(address,address,address,uint256) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#2679-2717):
	External calls:
	- require(bool,string)(comptroller.seizeAllowed(address(this),seizerToken,liquidator,borrower,seizeTokens) == 0,rejected) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#2686-2689)
	State variables written after the call(s):
	- accountTokens[borrower] = sub_(accountTokens[borrower],seizeTokens) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#2707)
	- accountTokens[liquidator] = add_(accountTokens[liquidator],seizeTokens) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#2708)
Reentrancy in CErc20.transferTokens(address,address,address,uint256) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#2449-2484):
	External calls:
	- require(bool,string)(comptroller.transferAllowed(address(this),src,dst,tokens) == 0,rejected) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#2456)
	State variables written after the call(s):
	- accountTokens[src] = sub_(accountTokens[src],tokens) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#2470)
	- accountTokens[dst] = add_(accountTokens[dst],tokens) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#2471)
	- transferAllowances[src][spender] = sub_(startingAllowance,tokens) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#2475)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2
INFO:Detectors:
Reentrancy in CToken.borrowFresh(address,uint256,bool) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#1444-1493):
	External calls:
	- require(bool,string)(comptroller.borrowAllowed(address(this),borrower,borrowAmount) == 0,rejected) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#1450)
	Event emitted after the call(s):
	- Borrow(borrower,borrowAmount,vars.accountBorrowsNew,vars.totalBorrowsNew) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#1487)
Reentrancy in CToken.liquidateBorrowFresh(address,address,uint256,CTokenInterface,bool) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#1644-1721):
	External calls:
	- require(bool,string)(comptroller.liquidateBorrowAllowed(address(this),address(cTokenCollateral),liquidator,borrower,repayAmount) == 0,rejected) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#1652-1661)
	- (vars.repayBorrowError,vars.actualRepayAmount) = repayBorrowFresh(liquidator,borrower,repayAmount,isNative) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#1678)
		- require(bool,string)(comptroller.repayBorrowAllowed(address(this),payer,borrower,repayAmount) == 0,rejected) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#1550)
		- comptroller.repayBorrowVerify(address(this),payer,borrower,vars.actualRepayAmount,vars.borrowerIndex) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#1600)
	Event emitted after the call(s):
	- RepayBorrow(payer,borrower,vars.actualRepayAmount,vars.accountBorrowsNew,vars.totalBorrowsNew) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#1597)
		- (vars.repayBorrowError,vars.actualRepayAmount) = repayBorrowFresh(liquidator,borrower,repayAmount,isNative) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#1678)
Reentrancy in CToken.liquidateBorrowFresh(address,address,uint256,CTokenInterface,bool) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#1644-1721):
	External calls:
	- require(bool,string)(comptroller.liquidateBorrowAllowed(address(this),address(cTokenCollateral),liquidator,borrower,repayAmount) == 0,rejected) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#1652-1661)
	- (vars.repayBorrowError,vars.actualRepayAmount) = repayBorrowFresh(liquidator,borrower,repayAmount,isNative) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#1678)
		- require(bool,string)(comptroller.repayBorrowAllowed(address(this),payer,borrower,repayAmount) == 0,rejected) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#1550)
		- comptroller.repayBorrowVerify(address(this),payer,borrower,vars.actualRepayAmount,vars.borrowerIndex) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#1600)
	- seizeError = cTokenCollateral.seize(liquidator,borrower,vars.seizeTokens) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#1701)
	Event emitted after the call(s):
	- LiquidateBorrow(liquidator,borrower,vars.actualRepayAmount,address(cTokenCollateral),vars.seizeTokens) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#1708)
Reentrancy in CErc20.mintFresh(address,uint256,bool) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#2508-2567):
	External calls:
	- require(bool,string)(comptroller.mintAllowed(address(this),minter,mintAmount) == 0,rejected) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#2514)
	- vars.actualMintAmount = doTransferIn(minter,mintAmount,isNative) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#2543)
		- token.transferFrom(from,address(this),amount) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#2375)
	Event emitted after the call(s):
	- Mint(minter,vars.actualMintAmount,vars.mintTokens) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#2560)
	- Transfer(address(this),minter,vars.mintTokens) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#2561)
Reentrancy in CErc20.redeemFresh(address,uint256,uint256,bool) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#2586-2667):
	External calls:
	- require(bool,string)(comptroller.redeemAllowed(address(this),redeemer,vars.redeemTokens) == 0,rejected) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#2619)
	- doTransferOut(redeemer,vars.redeemAmount,isNative) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#2657)
		- token.transfer(to,amount) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#2418)
	Event emitted after the call(s):
	- Redeem(redeemer,vars.redeemAmount,vars.redeemTokens) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#2661)
	- Transfer(redeemer,address(this),vars.redeemTokens) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#2660)
Reentrancy in CToken.repayBorrowFresh(address,address,uint256,bool) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#1543-1603):
	External calls:
	- require(bool,string)(comptroller.repayBorrowAllowed(address(this),payer,borrower,repayAmount) == 0,rejected) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#1550)
	Event emitted after the call(s):
	- RepayBorrow(payer,borrower,vars.actualRepayAmount,vars.accountBorrowsNew,vars.totalBorrowsNew) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#1597)
Reentrancy in CErc20.seizeInternal(address,address,address,uint256) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#2679-2717):
	External calls:
	- require(bool,string)(comptroller.seizeAllowed(address(this),seizerToken,liquidator,borrower,seizeTokens) == 0,rejected) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#2686-2689)
	Event emitted after the call(s):
	- Transfer(borrower,liquidator,seizeTokens) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#2711)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3
INFO:Detectors:
CErc20.doTransferIn(address,uint256,bool) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#2366-2399) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#2378-2393)
CErc20.doTransferOut(address,uint256,bool) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#2410-2438) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#2421-2436)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage
INFO:Detectors:
CarefulMath.addThenSubUInt(uint256,uint256,uint256) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#240-252) is never used and should be removed
CarefulMath.addUInt(uint256,uint256) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#227-235) is never used and should be removed
CarefulMath.divUInt(uint256,uint256) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#205-211) is never used and should be removed
CarefulMath.mulUInt(uint256,uint256) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#188-200) is never used and should be removed
CarefulMath.subUInt(uint256,uint256) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#216-222) is never used and should be removed
ComptrollerErrorReporter.fail(ComptrollerErrorReporter.Error,ComptrollerErrorReporter.FailureInfo) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#3342-3346) is never used and should be removed
ComptrollerErrorReporter.failOpaque(ComptrollerErrorReporter.Error,ComptrollerErrorReporter.FailureInfo,uint256) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#3351-3359) is never used and should be removed
Exponential.addExp(Exponential.Exp,Exponential.Exp) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#589-593) is never used and should be removed
Exponential.add_(Exponential.Double,Exponential.Double) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#832-834) is never used and should be removed
Exponential.add_(Exponential.Exp,Exponential.Exp) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#828-830) is never used and should be removed
Exponential.divExp(Exponential.Exp,Exponential.Exp) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#784-786) is never used and should be removed
Exponential.divScalar(Exponential.Exp,uint256) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#667-674) is never used and should be removed
Exponential.divScalarByExp(uint256,Exponential.Exp) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#679-694) is never used and should be removed
Exponential.divScalarByExpTruncate(uint256,Exponential.Exp) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#699-706) is never used and should be removed
Exponential.div_(Exponential.Double,Exponential.Double) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#924-926) is never used and should be removed
Exponential.div_(Exponential.Double,uint256) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#928-930) is never used and should be removed
Exponential.div_(Exponential.Exp,Exponential.Exp) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#912-914) is never used and should be removed
Exponential.div_(Exponential.Exp,uint256) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#916-918) is never used and should be removed
Exponential.div_(uint256,Exponential.Double) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#932-934) is never used and should be removed
Exponential.fraction(uint256,uint256) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#949-951) is never used and should be removed
Exponential.getExp(uint256,uint256) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#572-584) is never used and should be removed
Exponential.isZeroExp(Exponential.Exp) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#814-816) is never used and should be removed
Exponential.lessThanExp(Exponential.Exp,Exponential.Exp) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#800-802) is never used and should be removed
Exponential.lessThanOrEqualExp(Exponential.Exp,Exponential.Exp) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#807-809) is never used and should be removed
Exponential.mulExp(Exponential.Exp,Exponential.Exp) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#736-755) is never used and should be removed
Exponential.mulExp(uint256,uint256) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#760-762) is never used and should be removed
Exponential.mulExp3(Exponential.Exp,Exponential.Exp,Exponential.Exp) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#767-777) is never used and should be removed
Exponential.mulScalar(Exponential.Exp,uint256) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#607-614) is never used and should be removed
Exponential.mulScalarTruncate(Exponential.Exp,uint256) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#619-626) is never used and should be removed
Exponential.mulScalarTruncateAddUInt(Exponential.Exp,uint256,uint256) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#631-642) is never used and should be removed
Exponential.mul_(Exponential.Double,Exponential.Double) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#883-885) is never used and should be removed
Exponential.mul_(Exponential.Double,uint256) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#887-889) is never used and should be removed
Exponential.mul_(Exponential.Exp,Exponential.Exp) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#871-873) is never used and should be removed
Exponential.mul_(uint256,Exponential.Double) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#891-893) is never used and should be removed
Exponential.safe224(uint256,string) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#818-821) is never used and should be removed
Exponential.safe32(uint256,string) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#823-826) is never used and should be removed
Exponential.sqrt(uint256) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#955-997) is never used and should be removed
Exponential.subExp(Exponential.Exp,Exponential.Exp) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#598-602) is never used and should be removed
Exponential.sub_(Exponential.Double,Exponential.Double) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#854-856) is never used and should be removed
Exponential.sub_(Exponential.Exp,Exponential.Exp) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#850-852) is never used and should be removed
TokenErrorReporter.failOpaque(TokenErrorReporter.Error,TokenErrorReporter.FailureInfo,uint256) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#531-539) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code
INFO:Detectors:
Pragma version^0.5.16 (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#16) allows old versions
Pragma version^0.5.16 (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#166) allows old versions
Pragma version^0.5.16 (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#542) allows old versions
Pragma version^0.5.16 (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#1000) allows old versions
Pragma version^0.5.16 (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#2152) allows old versions
Pragma version^0.5.16 (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#2179) allows old versions
Pragma version^0.5.16 (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#2206) allows old versions
Pragma version^0.5.16 (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#2219) allows old versions
Pragma version^0.5.16 (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#2845) allows old versions
Pragma version^0.5.16 (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#3122) allows old versions
Pragma version^0.5.16 (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#3191) allows old versions
Pragma version^0.5.16 (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#3265) allows old versions
Pragma version^0.5.16 (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#3286) allows old versions
Pragma version^0.5.16 (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#3362) allows old versions
Pragma version^0.5.16 (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#3401) allows old versions
Pragma version^0.5.16 (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#3685) allows old versions
Pragma version^0.5.16 (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#3709) allows old versions
solc-0.5.17 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity
INFO:Detectors:
Variable CTokenStorage._notEntered (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#26) is not in mixedCase
Constant CTokenStorage.borrowRateMaxMantissa (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#47) is not in UPPER_CASE_WITH_UNDERSCORES
Constant CTokenStorage.reserveFactorMaxMantissa (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#52) is not in UPPER_CASE_WITH_UNDERSCORES
Function CErc20Interface._addReserves(uint256) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#163) is not in mixedCase
Function CTokenInterface._setPendingAdmin(address) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#413) is not in mixedCase
Function CTokenInterface._acceptAdmin() (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#415) is not in mixedCase
Function CTokenInterface._setComptroller(ComptrollerInterface) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#417) is not in mixedCase
Function CTokenInterface._setReserveFactor(uint256) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#419) is not in mixedCase
Function CTokenInterface._reduceReserves(uint256) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#421) is not in mixedCase
Function CTokenInterface._setInterestRateModel(InterestRateModel) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#423) is not in mixedCase
Function Exponential.mul_ScalarTruncate(Exponential.Exp,uint256) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#647-650) is not in mixedCase
Function Exponential.mul_ScalarTruncateAddUInt(Exponential.Exp,uint256,uint256) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#655-662) is not in mixedCase
Function Exponential.div_ScalarByExp(uint256,Exponential.Exp) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#711-723) is not in mixedCase
Function Exponential.div_ScalarByExpTruncate(uint256,Exponential.Exp) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#728-731) is not in mixedCase
Constant Exponential.expScale (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#554) is not in UPPER_CASE_WITH_UNDERSCORES
Constant Exponential.doubleScale (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#555) is not in UPPER_CASE_WITH_UNDERSCORES
Constant Exponential.halfExpScale (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#556) is not in UPPER_CASE_WITH_UNDERSCORES
Constant Exponential.mantissaOne (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#557) is not in UPPER_CASE_WITH_UNDERSCORES
Function CToken._setPendingAdmin(address) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#1748-1764) is not in mixedCase
Function CToken._acceptAdmin() (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#1771-1791) is not in mixedCase
Function CToken._setComptroller(ComptrollerInterface) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#1798-1815) is not in mixedCase
Function CToken._setReserveFactor(uint256) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#1822-1826) is not in mixedCase
Function CToken._reduceReserves(uint256) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#1918-1922) is not in mixedCase
Function CToken._setInterestRateModel(InterestRateModel) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#1978-1982) is not in mixedCase
Function CErc20._addReserves(uint256) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#2341-2343) is not in mixedCase
Function CWrappedNativeInterface._addReservesNative() (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#2759) is not in mixedCase
Function CCollateralCapErc20Interface._setCollateralCap(uint256) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#2794) is not in mixedCase
Function CDelegatorInterface._setImplementation(address,bool,bytes) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#2809-2813) is not in mixedCase
Function CDelegateInterface._becomeImplementation(bytes) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#2822) is not in mixedCase
Function CDelegateInterface._resignImplementation() (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#2827) is not in mixedCase
Variable ComptrollerV1Storage._mintGuardianPaused (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#3049) is not in mixedCase
Variable ComptrollerV1Storage._borrowGuardianPaused (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#3050) is not in mixedCase
Variable ComptrollerV1Storage._oldCreditLimits (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#3104) is not in mixedCase
Variable ComptrollerV1Storage._creditLimits (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#3113) is not in mixedCase
Function PriceOracleProxyIB._setGuardian(address) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#3547-3551) is not in mixedCase
Parameter PriceOracleProxyIB._setGuardian(address)._guardian (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#3547) is not in mixedCase
Function PriceOracleProxyIB._setAdmin(address) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#3557-3561) is not in mixedCase
Parameter PriceOracleProxyIB._setAdmin(address)._admin (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#3557) is not in mixedCase
Function PriceOracleProxyIB._setAggregators(address[],address[],address[]) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#3569-3592) is not in mixedCase
Function PriceOracleProxyIB._disableAggregator(address) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#3598-3606) is not in mixedCase
Function PriceOracleProxyIB._enableAggregator(address) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#3612-3627) is not in mixedCase
Function PriceOracleProxyIB._setReferences(address[],string[]) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#3634-3650) is not in mixedCase
Function PriceOracleProxyIB._disableReference(address) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#3656-3664) is not in mixedCase
Function PriceOracleProxyIB._enableReference(address) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#3670-3682) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions
INFO:Detectors:
Redundant expression "isNative (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#2371)" inCErc20 (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#2228-2718)
Redundant expression "isNative (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#2415)" inCErc20 (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#2228-2718)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#redundant-statements
INFO:Detectors:
Variable CToken.seizeInternal(address,address,address,uint256).seizeTokens (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#2095) is too similar to CToken.seizeInternal(address,address,address,uint256).seizerToken (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#2092)
Variable CToken.seize(address,address,uint256).seizeTokens (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#1735) is too similar to CToken.seizeInternal(address,address,address,uint256).seizerToken (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#2092)
Variable CTokenInterface.seize(address,address,uint256).seizeTokens (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#408) is too similar to CToken.seizeInternal(address,address,address,uint256).seizerToken (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#2092)
Variable CToken.seizeInternal(address,address,address,uint256).seizeTokens (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#2095) is too similar to CErc20.seizeInternal(address,address,address,uint256).seizerToken (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#2680)
Variable CErc20.seizeInternal(address,address,address,uint256).seizeTokens (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#2683) is too similar to CToken.seizeInternal(address,address,address,uint256).seizerToken (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#2092)
Variable CErc20.seizeInternal(address,address,address,uint256).seizeTokens (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#2683) is too similar to CErc20.seizeInternal(address,address,address,uint256).seizerToken (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#2680)
Variable CToken.seize(address,address,uint256).seizeTokens (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#1735) is too similar to CErc20.seizeInternal(address,address,address,uint256).seizerToken (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#2680)
Variable CTokenInterface.seize(address,address,uint256).seizeTokens (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#408) is too similar to CErc20.seizeInternal(address,address,address,uint256).seizerToken (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#2680)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#variable-names-too-similar
INFO:Detectors:
Exponential.sqrt(uint256) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#955-997) uses literals with too many digits:
	- xx >= 0x100000000000000000000000000000000 (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#960)
Exponential.sqrt(uint256) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#955-997) uses literals with too many digits:
	- xx >= 0x10000000000000000 (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#964)
Exponential.sqrt(uint256) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#955-997) uses literals with too many digits:
	- xx >= 0x100000000 (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#968)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits
INFO:Detectors:
Exponential.mantissaOne (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#557) is never used in PriceOracleProxyIB (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#3413-3683)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-state-variable
INFO:Detectors:
CCollateralCapStorage.collateralCap (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#2131) should be constant 
CCollateralCapStorage.totalCollateralTokens (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#2115) should be constant 
CErc20Storage.implementation (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#13) should be constant 
CErc20Storage.underlying (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#8) should be constant 
CSupplyCapStorage.internalCash (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#139) should be constant 
ComptrollerV1Storage._borrowGuardianPaused (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#3050) should be constant 
ComptrollerV1Storage._mintGuardianPaused (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#3049) should be constant 
ComptrollerV1Storage.borrowCapGuardian (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#3091) should be constant 
ComptrollerV1Storage.closeFactorMantissa (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#3004) should be constant 
ComptrollerV1Storage.creditLimitManager (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#3119) should be constant 
ComptrollerV1Storage.liquidationIncentiveMantissa (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#3009) should be constant 
ComptrollerV1Storage.liquidityMining (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#3110) should be constant 
ComptrollerV1Storage.oracle (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#2999) should be constant 
ComptrollerV1Storage.pauseGuardian (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#3048) should be constant 
ComptrollerV1Storage.seizeGuardianPaused (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#3052) should be constant 
ComptrollerV1Storage.supplyCapGuardian (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#3097) should be constant 
ComptrollerV1Storage.transferGuardianPaused (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#3051) should be constant 
UnitrollerAdminStorage.admin (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#2161) should be constant 
UnitrollerAdminStorage.comptrollerImplementation (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#2171) should be constant 
UnitrollerAdminStorage.pendingAdmin (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#2166) should be constant 
UnitrollerAdminStorage.pendingComptrollerImplementation (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#2176) should be constant 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant
INFO:Detectors:
initialize(address,ComptrollerInterface,InterestRateModel,uint256,string,string,uint8) should be declared external:
	- CErc20.initialize(address,ComptrollerInterface,InterestRateModel,uint256,string,string,uint8) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#2239-2254)
Moreover, the following function parameters should change its data location:
name_ location should be calldata
symbol_ location should be calldata
_setImplementation(address,bool,bytes) should be declared external:
	- CDelegatorInterface._setImplementation(address,bool,bytes) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#2809-2813)
Moreover, the following function parameters should change its data location:
becomeImplementationData location should be calldata
_becomeImplementation(bytes) should be declared external:
	- CDelegateInterface._becomeImplementation(bytes) (../../sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol#2822)
Moreover, the following function parameters should change its data location:
data location should be calldata
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external
INFO:Slither:/bdata2/sc/dataset/mainnet/0xEC1DD8Ef6cD21D63f059CBeD47b0D2b4Cb748940.sol analyzed (31 contracts with 85 detectors), 204 result(s) found
