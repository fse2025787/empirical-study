INFO:Detectors:
IERC1820Registry.setInterfaceImplementer(address,bytes32,address).interfaceHash (../../sc/dataset/mainnet/0x9F801c1F02AF03cC240546DadEf8e56Cd46EA2E9.sol#667) shadows:
	- IERC1820Registry.interfaceHash(string) (../../sc/dataset/mainnet/0x9F801c1F02AF03cC240546DadEf8e56Cd46EA2E9.sol#685) (function)
IERC1820Registry.getInterfaceImplementer(address,bytes32).interfaceHash (../../sc/dataset/mainnet/0x9F801c1F02AF03cC240546DadEf8e56Cd46EA2E9.sol#678) shadows:
	- IERC1820Registry.interfaceHash(string) (../../sc/dataset/mainnet/0x9F801c1F02AF03cC240546DadEf8e56Cd46EA2E9.sol#685) (function)
ERC777.constructor(string,string,address[]).name (../../sc/dataset/mainnet/0x9F801c1F02AF03cC240546DadEf8e56Cd46EA2E9.sol#786) shadows:
	- ERC777.name() (../../sc/dataset/mainnet/0x9F801c1F02AF03cC240546DadEf8e56Cd46EA2E9.sol#806-808) (function)
	- IERC777.name() (../../sc/dataset/mainnet/0x9F801c1F02AF03cC240546DadEf8e56Cd46EA2E9.sol#53) (function)
ERC777.constructor(string,string,address[]).symbol (../../sc/dataset/mainnet/0x9F801c1F02AF03cC240546DadEf8e56Cd46EA2E9.sol#787) shadows:
	- ERC777.symbol() (../../sc/dataset/mainnet/0x9F801c1F02AF03cC240546DadEf8e56Cd46EA2E9.sol#813-815) (function)
	- IERC777.symbol() (../../sc/dataset/mainnet/0x9F801c1F02AF03cC240546DadEf8e56Cd46EA2E9.sol#59) (function)
ERC777.constructor(string,string,address[]).defaultOperators (../../sc/dataset/mainnet/0x9F801c1F02AF03cC240546DadEf8e56Cd46EA2E9.sol#788) shadows:
	- ERC777.defaultOperators() (../../sc/dataset/mainnet/0x9F801c1F02AF03cC240546DadEf8e56Cd46EA2E9.sol#935-937) (function)
	- IERC777.defaultOperators() (../../sc/dataset/mainnet/0x9F801c1F02AF03cC240546DadEf8e56Cd46EA2E9.sol#156) (function)
VAIToken.constructor(string,string,uint256,address)._name (../../sc/dataset/mainnet/0x9F801c1F02AF03cC240546DadEf8e56Cd46EA2E9.sol#1943) shadows:
	- ERC777._name (../../sc/dataset/mainnet/0x9F801c1F02AF03cC240546DadEf8e56Cd46EA2E9.sol#755) (state variable)
VAIToken.constructor(string,string,uint256,address)._symbol (../../sc/dataset/mainnet/0x9F801c1F02AF03cC240546DadEf8e56Cd46EA2E9.sol#1944) shadows:
	- ERC777._symbol (../../sc/dataset/mainnet/0x9F801c1F02AF03cC240546DadEf8e56Cd46EA2E9.sol#756) (state variable)
VAIToken.constructor(string,string,uint256,address)._totalSupply (../../sc/dataset/mainnet/0x9F801c1F02AF03cC240546DadEf8e56Cd46EA2E9.sol#1945) shadows:
	- ERC777._totalSupply (../../sc/dataset/mainnet/0x9F801c1F02AF03cC240546DadEf8e56Cd46EA2E9.sol#753) (state variable)
VAIToken.constructor(string,string,uint256,address)._trustedSigner (../../sc/dataset/mainnet/0x9F801c1F02AF03cC240546DadEf8e56Cd46EA2E9.sol#1946) shadows:
	- GSNRecipientSignature._trustedSigner (../../sc/dataset/mainnet/0x9F801c1F02AF03cC240546DadEf8e56Cd46EA2E9.sol#1875) (state variable)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing
INFO:Detectors:
Reentrancy in ERC777._burn(address,address,uint256,bytes,bytes) (../../sc/dataset/mainnet/0x9F801c1F02AF03cC240546DadEf8e56Cd46EA2E9.sol#1092-1111):
	External calls:
	- _callTokensToSend(operator,from,address(0),amount,data,operatorData) (../../sc/dataset/mainnet/0x9F801c1F02AF03cC240546DadEf8e56Cd46EA2E9.sol#1103)
		- IERC777Sender(implementer).tokensToSend(operator,from,to,amount,userData,operatorData) (../../sc/dataset/mainnet/0x9F801c1F02AF03cC240546DadEf8e56Cd46EA2E9.sol#1164)
	State variables written after the call(s):
	- _balances[from] = _balances[from].sub(amount,ERC777: burn amount exceeds balance) (../../sc/dataset/mainnet/0x9F801c1F02AF03cC240546DadEf8e56Cd46EA2E9.sol#1106)
	- _totalSupply = _totalSupply.sub(amount) (../../sc/dataset/mainnet/0x9F801c1F02AF03cC240546DadEf8e56Cd46EA2E9.sol#1107)
Reentrancy in ERC777._send(address,address,address,uint256,bytes,bytes,bool) (../../sc/dataset/mainnet/0x9F801c1F02AF03cC240546DadEf8e56Cd46EA2E9.sol#1062-1082):
	External calls:
	- _callTokensToSend(operator,from,to,amount,userData,operatorData) (../../sc/dataset/mainnet/0x9F801c1F02AF03cC240546DadEf8e56Cd46EA2E9.sol#1077)
		- IERC777Sender(implementer).tokensToSend(operator,from,to,amount,userData,operatorData) (../../sc/dataset/mainnet/0x9F801c1F02AF03cC240546DadEf8e56Cd46EA2E9.sol#1164)
	State variables written after the call(s):
	- _move(operator,from,to,amount,userData,operatorData) (../../sc/dataset/mainnet/0x9F801c1F02AF03cC240546DadEf8e56Cd46EA2E9.sol#1079)
		- _balances[from] = _balances[from].sub(amount,ERC777: transfer amount exceeds balance) (../../sc/dataset/mainnet/0x9F801c1F02AF03cC240546DadEf8e56Cd46EA2E9.sol#1123)
		- _balances[to] = _balances[to].add(amount) (../../sc/dataset/mainnet/0x9F801c1F02AF03cC240546DadEf8e56Cd46EA2E9.sol#1124)
Reentrancy in ERC777.transfer(address,uint256) (../../sc/dataset/mainnet/0x9F801c1F02AF03cC240546DadEf8e56Cd46EA2E9.sol#867-879):
	External calls:
	- _callTokensToSend(from,from,recipient,amount,,) (../../sc/dataset/mainnet/0x9F801c1F02AF03cC240546DadEf8e56Cd46EA2E9.sol#872)
		- IERC777Sender(implementer).tokensToSend(operator,from,to,amount,userData,operatorData) (../../sc/dataset/mainnet/0x9F801c1F02AF03cC240546DadEf8e56Cd46EA2E9.sol#1164)
	State variables written after the call(s):
	- _move(from,from,recipient,amount,,) (../../sc/dataset/mainnet/0x9F801c1F02AF03cC240546DadEf8e56Cd46EA2E9.sol#874)
		- _balances[from] = _balances[from].sub(amount,ERC777: transfer amount exceeds balance) (../../sc/dataset/mainnet/0x9F801c1F02AF03cC240546DadEf8e56Cd46EA2E9.sol#1123)
		- _balances[to] = _balances[to].add(amount) (../../sc/dataset/mainnet/0x9F801c1F02AF03cC240546DadEf8e56Cd46EA2E9.sol#1124)
Reentrancy in ERC777.transferFrom(address,address,uint256) (../../sc/dataset/mainnet/0x9F801c1F02AF03cC240546DadEf8e56Cd46EA2E9.sol#998-1012):
	External calls:
	- _callTokensToSend(spender,holder,recipient,amount,,) (../../sc/dataset/mainnet/0x9F801c1F02AF03cC240546DadEf8e56Cd46EA2E9.sol#1004)
		- IERC777Sender(implementer).tokensToSend(operator,from,to,amount,userData,operatorData) (../../sc/dataset/mainnet/0x9F801c1F02AF03cC240546DadEf8e56Cd46EA2E9.sol#1164)
	State variables written after the call(s):
	- _approve(holder,spender,_allowances[holder][spender].sub(amount,ERC777: transfer amount exceeds allowance)) (../../sc/dataset/mainnet/0x9F801c1F02AF03cC240546DadEf8e56Cd46EA2E9.sol#1007)
		- _allowances[holder][spender] = value (../../sc/dataset/mainnet/0x9F801c1F02AF03cC240546DadEf8e56Cd46EA2E9.sol#1139)
	- _move(spender,holder,recipient,amount,,) (../../sc/dataset/mainnet/0x9F801c1F02AF03cC240546DadEf8e56Cd46EA2E9.sol#1006)
		- _balances[from] = _balances[from].sub(amount,ERC777: transfer amount exceeds balance) (../../sc/dataset/mainnet/0x9F801c1F02AF03cC240546DadEf8e56Cd46EA2E9.sol#1123)
		- _balances[to] = _balances[to].add(amount) (../../sc/dataset/mainnet/0x9F801c1F02AF03cC240546DadEf8e56Cd46EA2E9.sol#1124)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2
INFO:Detectors:
Reentrancy in ERC777._burn(address,address,uint256,bytes,bytes) (../../sc/dataset/mainnet/0x9F801c1F02AF03cC240546DadEf8e56Cd46EA2E9.sol#1092-1111):
	External calls:
	- _callTokensToSend(operator,from,address(0),amount,data,operatorData) (../../sc/dataset/mainnet/0x9F801c1F02AF03cC240546DadEf8e56Cd46EA2E9.sol#1103)
		- IERC777Sender(implementer).tokensToSend(operator,from,to,amount,userData,operatorData) (../../sc/dataset/mainnet/0x9F801c1F02AF03cC240546DadEf8e56Cd46EA2E9.sol#1164)
	Event emitted after the call(s):
	- Burned(operator,from,amount,data,operatorData) (../../sc/dataset/mainnet/0x9F801c1F02AF03cC240546DadEf8e56Cd46EA2E9.sol#1109)
	- Transfer(from,address(0),amount) (../../sc/dataset/mainnet/0x9F801c1F02AF03cC240546DadEf8e56Cd46EA2E9.sol#1110)
Reentrancy in ERC777._mint(address,address,uint256,bytes,bytes) (../../sc/dataset/mainnet/0x9F801c1F02AF03cC240546DadEf8e56Cd46EA2E9.sol#1031-1050):
	External calls:
	- _callTokensReceived(operator,address(0),account,amount,userData,operatorData,true) (../../sc/dataset/mainnet/0x9F801c1F02AF03cC240546DadEf8e56Cd46EA2E9.sol#1046)
		- IERC777Recipient(implementer).tokensReceived(operator,from,to,amount,userData,operatorData) (../../sc/dataset/mainnet/0x9F801c1F02AF03cC240546DadEf8e56Cd46EA2E9.sol#1192)
	Event emitted after the call(s):
	- Minted(operator,account,amount,userData,operatorData) (../../sc/dataset/mainnet/0x9F801c1F02AF03cC240546DadEf8e56Cd46EA2E9.sol#1048)
	- Transfer(address(0),account,amount) (../../sc/dataset/mainnet/0x9F801c1F02AF03cC240546DadEf8e56Cd46EA2E9.sol#1049)
Reentrancy in ERC777._send(address,address,address,uint256,bytes,bytes,bool) (../../sc/dataset/mainnet/0x9F801c1F02AF03cC240546DadEf8e56Cd46EA2E9.sol#1062-1082):
	External calls:
	- _callTokensToSend(operator,from,to,amount,userData,operatorData) (../../sc/dataset/mainnet/0x9F801c1F02AF03cC240546DadEf8e56Cd46EA2E9.sol#1077)
		- IERC777Sender(implementer).tokensToSend(operator,from,to,amount,userData,operatorData) (../../sc/dataset/mainnet/0x9F801c1F02AF03cC240546DadEf8e56Cd46EA2E9.sol#1164)
	Event emitted after the call(s):
	- Sent(operator,from,to,amount,userData,operatorData) (../../sc/dataset/mainnet/0x9F801c1F02AF03cC240546DadEf8e56Cd46EA2E9.sol#1126)
		- _move(operator,from,to,amount,userData,operatorData) (../../sc/dataset/mainnet/0x9F801c1F02AF03cC240546DadEf8e56Cd46EA2E9.sol#1079)
	- Transfer(from,to,amount) (../../sc/dataset/mainnet/0x9F801c1F02AF03cC240546DadEf8e56Cd46EA2E9.sol#1127)
		- _move(operator,from,to,amount,userData,operatorData) (../../sc/dataset/mainnet/0x9F801c1F02AF03cC240546DadEf8e56Cd46EA2E9.sol#1079)
Reentrancy in ERC777.transfer(address,uint256) (../../sc/dataset/mainnet/0x9F801c1F02AF03cC240546DadEf8e56Cd46EA2E9.sol#867-879):
	External calls:
	- _callTokensToSend(from,from,recipient,amount,,) (../../sc/dataset/mainnet/0x9F801c1F02AF03cC240546DadEf8e56Cd46EA2E9.sol#872)
		- IERC777Sender(implementer).tokensToSend(operator,from,to,amount,userData,operatorData) (../../sc/dataset/mainnet/0x9F801c1F02AF03cC240546DadEf8e56Cd46EA2E9.sol#1164)
	Event emitted after the call(s):
	- Sent(operator,from,to,amount,userData,operatorData) (../../sc/dataset/mainnet/0x9F801c1F02AF03cC240546DadEf8e56Cd46EA2E9.sol#1126)
		- _move(from,from,recipient,amount,,) (../../sc/dataset/mainnet/0x9F801c1F02AF03cC240546DadEf8e56Cd46EA2E9.sol#874)
	- Transfer(from,to,amount) (../../sc/dataset/mainnet/0x9F801c1F02AF03cC240546DadEf8e56Cd46EA2E9.sol#1127)
		- _move(from,from,recipient,amount,,) (../../sc/dataset/mainnet/0x9F801c1F02AF03cC240546DadEf8e56Cd46EA2E9.sol#874)
Reentrancy in ERC777.transferFrom(address,address,uint256) (../../sc/dataset/mainnet/0x9F801c1F02AF03cC240546DadEf8e56Cd46EA2E9.sol#998-1012):
	External calls:
	- _callTokensToSend(spender,holder,recipient,amount,,) (../../sc/dataset/mainnet/0x9F801c1F02AF03cC240546DadEf8e56Cd46EA2E9.sol#1004)
		- IERC777Sender(implementer).tokensToSend(operator,from,to,amount,userData,operatorData) (../../sc/dataset/mainnet/0x9F801c1F02AF03cC240546DadEf8e56Cd46EA2E9.sol#1164)
	Event emitted after the call(s):
	- Approval(holder,spender,value) (../../sc/dataset/mainnet/0x9F801c1F02AF03cC240546DadEf8e56Cd46EA2E9.sol#1140)
		- _approve(holder,spender,_allowances[holder][spender].sub(amount,ERC777: transfer amount exceeds allowance)) (../../sc/dataset/mainnet/0x9F801c1F02AF03cC240546DadEf8e56Cd46EA2E9.sol#1007)
	- Sent(operator,from,to,amount,userData,operatorData) (../../sc/dataset/mainnet/0x9F801c1F02AF03cC240546DadEf8e56Cd46EA2E9.sol#1126)
		- _move(spender,holder,recipient,amount,,) (../../sc/dataset/mainnet/0x9F801c1F02AF03cC240546DadEf8e56Cd46EA2E9.sol#1006)
	- Transfer(from,to,amount) (../../sc/dataset/mainnet/0x9F801c1F02AF03cC240546DadEf8e56Cd46EA2E9.sol#1127)
		- _move(spender,holder,recipient,amount,,) (../../sc/dataset/mainnet/0x9F801c1F02AF03cC240546DadEf8e56Cd46EA2E9.sol#1006)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3
INFO:Detectors:
Address.isContract(address) (../../sc/dataset/mainnet/0x9F801c1F02AF03cC240546DadEf8e56Cd46EA2E9.sol#558-567) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0x9F801c1F02AF03cC240546DadEf8e56Cd46EA2E9.sol#565)
GSNRecipient._getRelayedCallSender() (../../sc/dataset/mainnet/0x9F801c1F02AF03cC240546DadEf8e56Cd46EA2E9.sol#1738-1758) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0x9F801c1F02AF03cC240546DadEf8e56Cd46EA2E9.sol#1753-1756)
ECDSA.recover(bytes32,bytes) (../../sc/dataset/mainnet/0x9F801c1F02AF03cC240546DadEf8e56Cd46EA2E9.sol#1804-1843) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0x9F801c1F02AF03cC240546DadEf8e56Cd46EA2E9.sol#1818-1822)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage
INFO:Detectors:
Different versions of Solidity are used:
	- Version used: ['^0.5.0', '^0.5.5']
	- ^0.5.0 (../../sc/dataset/mainnet/0x9F801c1F02AF03cC240546DadEf8e56Cd46EA2E9.sol#8)
	- ^0.5.0 (../../sc/dataset/mainnet/0x9F801c1F02AF03cC240546DadEf8e56Cd46EA2E9.sol#38)
	- ^0.5.0 (../../sc/dataset/mainnet/0x9F801c1F02AF03cC240546DadEf8e56Cd46EA2E9.sol#227)
	- ^0.5.0 (../../sc/dataset/mainnet/0x9F801c1F02AF03cC240546DadEf8e56Cd46EA2E9.sol#262)
	- ^0.5.0 (../../sc/dataset/mainnet/0x9F801c1F02AF03cC240546DadEf8e56Cd46EA2E9.sol#297)
	- ^0.5.0 (../../sc/dataset/mainnet/0x9F801c1F02AF03cC240546DadEf8e56Cd46EA2E9.sol#376)
	- ^0.5.0 (../../sc/dataset/mainnet/0x9F801c1F02AF03cC240546DadEf8e56Cd46EA2E9.sol#608)
	- ^0.5.0 (../../sc/dataset/mainnet/0x9F801c1F02AF03cC240546DadEf8e56Cd46EA2E9.sol#720)
	- ^0.5.0 (../../sc/dataset/mainnet/0x9F801c1F02AF03cC240546DadEf8e56Cd46EA2E9.sol#1201)
	- ^0.5.0 (../../sc/dataset/mainnet/0x9F801c1F02AF03cC240546DadEf8e56Cd46EA2E9.sol#1278)
	- ^0.5.0 (../../sc/dataset/mainnet/0x9F801c1F02AF03cC240546DadEf8e56Cd46EA2E9.sol#1547)
	- ^0.5.0 (../../sc/dataset/mainnet/0x9F801c1F02AF03cC240546DadEf8e56Cd46EA2E9.sol#1777)
	- ^0.5.0 (../../sc/dataset/mainnet/0x9F801c1F02AF03cC240546DadEf8e56Cd46EA2E9.sol#1862)
	- ^0.5.0 (../../sc/dataset/mainnet/0x9F801c1F02AF03cC240546DadEf8e56Cd46EA2E9.sol#1936)
	- ^0.5.5 (../../sc/dataset/mainnet/0x9F801c1F02AF03cC240546DadEf8e56Cd46EA2E9.sol#535)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#different-pragma-directives-are-used
INFO:Detectors:
Address.sendValue(address,uint256) (../../sc/dataset/mainnet/0x9F801c1F02AF03cC240546DadEf8e56Cd46EA2E9.sol#597-603) is never used and should be removed
Address.toPayable(address) (../../sc/dataset/mainnet/0x9F801c1F02AF03cC240546DadEf8e56Cd46EA2E9.sol#575-577) is never used and should be removed
Context._msgData() (../../sc/dataset/mainnet/0x9F801c1F02AF03cC240546DadEf8e56Cd46EA2E9.sol#30-33) is never used and should be removed
Context._msgSender() (../../sc/dataset/mainnet/0x9F801c1F02AF03cC240546DadEf8e56Cd46EA2E9.sol#26-28) is never used and should be removed
GSNRecipient._computeCharge(uint256,uint256,uint256) (../../sc/dataset/mainnet/0x9F801c1F02AF03cC240546DadEf8e56Cd46EA2E9.sol#1732-1736) is never used and should be removed
GSNRecipient._getRelayedCallData() (../../sc/dataset/mainnet/0x9F801c1F02AF03cC240546DadEf8e56Cd46EA2E9.sol#1760-1772) is never used and should be removed
GSNRecipient._msgData() (../../sc/dataset/mainnet/0x9F801c1F02AF03cC240546DadEf8e56Cd46EA2E9.sol#1647-1653) is never used and should be removed
GSNRecipient._upgradeRelayHub(address) (../../sc/dataset/mainnet/0x9F801c1F02AF03cC240546DadEf8e56Cd46EA2E9.sol#1592-1600) is never used and should be removed
GSNRecipient._withdrawDeposits(uint256,address) (../../sc/dataset/mainnet/0x9F801c1F02AF03cC240546DadEf8e56Cd46EA2E9.sol#1618-1620) is never used and should be removed
SafeMath.div(uint256,uint256) (../../sc/dataset/mainnet/0x9F801c1F02AF03cC240546DadEf8e56Cd46EA2E9.sol#473-475) is never used and should be removed
SafeMath.div(uint256,uint256,string) (../../sc/dataset/mainnet/0x9F801c1F02AF03cC240546DadEf8e56Cd46EA2E9.sol#490-497) is never used and should be removed
SafeMath.mod(uint256,uint256) (../../sc/dataset/mainnet/0x9F801c1F02AF03cC240546DadEf8e56Cd46EA2E9.sol#510-512) is never used and should be removed
SafeMath.mod(uint256,uint256,string) (../../sc/dataset/mainnet/0x9F801c1F02AF03cC240546DadEf8e56Cd46EA2E9.sol#527-530) is never used and should be removed
SafeMath.mul(uint256,uint256) (../../sc/dataset/mainnet/0x9F801c1F02AF03cC240546DadEf8e56Cd46EA2E9.sol#448-460) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code
INFO:Detectors:
Pragma version^0.5.0 (../../sc/dataset/mainnet/0x9F801c1F02AF03cC240546DadEf8e56Cd46EA2E9.sol#8) allows old versions
Pragma version^0.5.0 (../../sc/dataset/mainnet/0x9F801c1F02AF03cC240546DadEf8e56Cd46EA2E9.sol#38) allows old versions
Pragma version^0.5.0 (../../sc/dataset/mainnet/0x9F801c1F02AF03cC240546DadEf8e56Cd46EA2E9.sol#227) allows old versions
Pragma version^0.5.0 (../../sc/dataset/mainnet/0x9F801c1F02AF03cC240546DadEf8e56Cd46EA2E9.sol#262) allows old versions
Pragma version^0.5.0 (../../sc/dataset/mainnet/0x9F801c1F02AF03cC240546DadEf8e56Cd46EA2E9.sol#297) allows old versions
Pragma version^0.5.0 (../../sc/dataset/mainnet/0x9F801c1F02AF03cC240546DadEf8e56Cd46EA2E9.sol#376) allows old versions
Pragma version^0.5.5 (../../sc/dataset/mainnet/0x9F801c1F02AF03cC240546DadEf8e56Cd46EA2E9.sol#535) is known to contain severe issues (https://solidity.readthedocs.io/en/latest/bugs.html)
Pragma version^0.5.0 (../../sc/dataset/mainnet/0x9F801c1F02AF03cC240546DadEf8e56Cd46EA2E9.sol#608) allows old versions
Pragma version^0.5.0 (../../sc/dataset/mainnet/0x9F801c1F02AF03cC240546DadEf8e56Cd46EA2E9.sol#720) allows old versions
Pragma version^0.5.0 (../../sc/dataset/mainnet/0x9F801c1F02AF03cC240546DadEf8e56Cd46EA2E9.sol#1201) allows old versions
Pragma version^0.5.0 (../../sc/dataset/mainnet/0x9F801c1F02AF03cC240546DadEf8e56Cd46EA2E9.sol#1278) allows old versions
Pragma version^0.5.0 (../../sc/dataset/mainnet/0x9F801c1F02AF03cC240546DadEf8e56Cd46EA2E9.sol#1547) allows old versions
Pragma version^0.5.0 (../../sc/dataset/mainnet/0x9F801c1F02AF03cC240546DadEf8e56Cd46EA2E9.sol#1777) allows old versions
Pragma version^0.5.0 (../../sc/dataset/mainnet/0x9F801c1F02AF03cC240546DadEf8e56Cd46EA2E9.sol#1862) allows old versions
Pragma version^0.5.0 (../../sc/dataset/mainnet/0x9F801c1F02AF03cC240546DadEf8e56Cd46EA2E9.sol#1936) allows old versions
solc-0.5.17 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity
INFO:Detectors:
Low level call in Address.sendValue(address,uint256) (../../sc/dataset/mainnet/0x9F801c1F02AF03cC240546DadEf8e56Cd46EA2E9.sol#597-603):
	- (success) = recipient.call.value(amount)() (../../sc/dataset/mainnet/0x9F801c1F02AF03cC240546DadEf8e56Cd46EA2E9.sol#601)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls
INFO:Detectors:
Redundant expression "this (../../sc/dataset/mainnet/0x9F801c1F02AF03cC240546DadEf8e56Cd46EA2E9.sol#31)" inContext (../../sc/dataset/mainnet/0x9F801c1F02AF03cC240546DadEf8e56Cd46EA2E9.sol#20-34)
Redundant expression "this (../../sc/dataset/mainnet/0x9F801c1F02AF03cC240546DadEf8e56Cd46EA2E9.sol#1609)" inGSNRecipient (../../sc/dataset/mainnet/0x9F801c1F02AF03cC240546DadEf8e56Cd46EA2E9.sol#1563-1773)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#redundant-statements
INFO:Detectors:
Variable IRelayHub.penalizeRepeatedNonce(bytes,bytes,bytes,bytes).unsignedTx1 (../../sc/dataset/mainnet/0x9F801c1F02AF03cC240546DadEf8e56Cd46EA2E9.sol#1527) is too similar to IRelayHub.penalizeRepeatedNonce(bytes,bytes,bytes,bytes).unsignedTx2 (../../sc/dataset/mainnet/0x9F801c1F02AF03cC240546DadEf8e56Cd46EA2E9.sol#1527)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#variable-names-too-similar
INFO:Detectors:
VAIToken.slitherConstructorConstantVariables() (../../sc/dataset/mainnet/0x9F801c1F02AF03cC240546DadEf8e56Cd46EA2E9.sol#1940-1955) uses literals with too many digits:
	- POST_RELAYED_CALL_MAX_GAS = 100000 (../../sc/dataset/mainnet/0x9F801c1F02AF03cC240546DadEf8e56Cd46EA2E9.sol#1571)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits
INFO:Detectors:
GSNRecipient.POST_RELAYED_CALL_MAX_GAS (../../sc/dataset/mainnet/0x9F801c1F02AF03cC240546DadEf8e56Cd46EA2E9.sol#1571) is never used in VAIToken (../../sc/dataset/mainnet/0x9F801c1F02AF03cC240546DadEf8e56Cd46EA2E9.sol#1940-1955)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-state-variable
INFO:Detectors:
send(address,uint256,bytes) should be declared external:
	- ERC777.send(address,uint256,bytes) (../../sc/dataset/mainnet/0x9F801c1F02AF03cC240546DadEf8e56Cd46EA2E9.sol#855-857)
Moreover, the following function parameters should change its data location:
data location should be calldata
burn(uint256,bytes) should be declared external:
	- ERC777.burn(uint256,bytes) (../../sc/dataset/mainnet/0x9F801c1F02AF03cC240546DadEf8e56Cd46EA2E9.sol#886-888)
Moreover, the following function parameters should change its data location:
data location should be calldata
operatorSend(address,address,uint256,bytes,bytes) should be declared external:
	- ERC777.operatorSend(address,address,uint256,bytes,bytes) (../../sc/dataset/mainnet/0x9F801c1F02AF03cC240546DadEf8e56Cd46EA2E9.sol#944-955)
Moreover, the following function parameters should change its data location:
data location should be calldata
operatorData location should be calldata
operatorBurn(address,uint256,bytes,bytes) should be declared external:
	- ERC777.operatorBurn(address,uint256,bytes,bytes) (../../sc/dataset/mainnet/0x9F801c1F02AF03cC240546DadEf8e56Cd46EA2E9.sol#962-965)
Moreover, the following function parameters should change its data location:
data location should be calldata
operatorData location should be calldata
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external
INFO:Slither:/bdata2/sc/dataset/mainnet/0x9F801c1F02AF03cC240546DadEf8e56Cd46EA2E9.sol analyzed (15 contracts with 85 detectors), 62 result(s) found
