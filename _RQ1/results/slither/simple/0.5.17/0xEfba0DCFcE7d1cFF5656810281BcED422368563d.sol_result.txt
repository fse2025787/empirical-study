INFO:Detectors:
WhitelistedStakingRewards.notifyRewardAmount(uint256) (../../sc/dataset/mainnet/0xEfba0DCFcE7d1cFF5656810281BcED422368563d.sol#722-741) performs a multiplication on the result of a division:
	- rewardRate = reward.div(rewardsDuration) (../../sc/dataset/mainnet/0xEfba0DCFcE7d1cFF5656810281BcED422368563d.sol#724)
	- leftover = remaining.mul(rewardRate) (../../sc/dataset/mainnet/0xEfba0DCFcE7d1cFF5656810281BcED422368563d.sol#727)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#divide-before-multiply
INFO:Detectors:
Reentrancy in WhitelistedStakingRewards.exit() (../../sc/dataset/mainnet/0xEfba0DCFcE7d1cFF5656810281BcED422368563d.sol#715-718):
	External calls:
	- withdraw(_balances[msg.sender]) (../../sc/dataset/mainnet/0xEfba0DCFcE7d1cFF5656810281BcED422368563d.sol#716)
		- stakingToken.safeTransfer(msg.sender,amount) (../../sc/dataset/mainnet/0xEfba0DCFcE7d1cFF5656810281BcED422368563d.sol#702)
		- (success,returndata) = address(token).call(data) (../../sc/dataset/mainnet/0xEfba0DCFcE7d1cFF5656810281BcED422368563d.sol#385)
	- getReward() (../../sc/dataset/mainnet/0xEfba0DCFcE7d1cFF5656810281BcED422368563d.sol#717)
		- rewardsToken.safeTransfer(msg.sender,reward) (../../sc/dataset/mainnet/0xEfba0DCFcE7d1cFF5656810281BcED422368563d.sol#710)
		- (success,returndata) = address(token).call(data) (../../sc/dataset/mainnet/0xEfba0DCFcE7d1cFF5656810281BcED422368563d.sol#385)
	State variables written after the call(s):
	- getReward() (../../sc/dataset/mainnet/0xEfba0DCFcE7d1cFF5656810281BcED422368563d.sol#717)
		- _guardCounter += 1 (../../sc/dataset/mainnet/0xEfba0DCFcE7d1cFF5656810281BcED422368563d.sol#426)
	ReentrancyGuard._guardCounter (../../sc/dataset/mainnet/0xEfba0DCFcE7d1cFF5656810281BcED422368563d.sol#410) can be used in cross function reentrancies:
	- ReentrancyGuard.nonReentrant() (../../sc/dataset/mainnet/0xEfba0DCFcE7d1cFF5656810281BcED422368563d.sol#425-430)
	- getReward() (../../sc/dataset/mainnet/0xEfba0DCFcE7d1cFF5656810281BcED422368563d.sol#717)
		- lastUpdateTime = lastTimeRewardApplicable() (../../sc/dataset/mainnet/0xEfba0DCFcE7d1cFF5656810281BcED422368563d.sol#775)
	WhitelistedStakingRewards.lastUpdateTime (../../sc/dataset/mainnet/0xEfba0DCFcE7d1cFF5656810281BcED422368563d.sol#632) can be used in cross function reentrancies:
	- WhitelistedStakingRewards.lastUpdateTime (../../sc/dataset/mainnet/0xEfba0DCFcE7d1cFF5656810281BcED422368563d.sol#632)
	- WhitelistedStakingRewards.notifyRewardAmount(uint256) (../../sc/dataset/mainnet/0xEfba0DCFcE7d1cFF5656810281BcED422368563d.sol#722-741)
	- WhitelistedStakingRewards.rewardPerToken() (../../sc/dataset/mainnet/0xEfba0DCFcE7d1cFF5656810281BcED422368563d.sol#670-678)
	- WhitelistedStakingRewards.stopRewardEmission() (../../sc/dataset/mainnet/0xEfba0DCFcE7d1cFF5656810281BcED422368563d.sol#763-769)
	- WhitelistedStakingRewards.updateReward(address) (../../sc/dataset/mainnet/0xEfba0DCFcE7d1cFF5656810281BcED422368563d.sol#773-781)
	- getReward() (../../sc/dataset/mainnet/0xEfba0DCFcE7d1cFF5656810281BcED422368563d.sol#717)
		- rewardPerTokenStored = rewardPerToken() (../../sc/dataset/mainnet/0xEfba0DCFcE7d1cFF5656810281BcED422368563d.sol#774)
	WhitelistedStakingRewards.rewardPerTokenStored (../../sc/dataset/mainnet/0xEfba0DCFcE7d1cFF5656810281BcED422368563d.sol#633) can be used in cross function reentrancies:
	- WhitelistedStakingRewards.rewardPerToken() (../../sc/dataset/mainnet/0xEfba0DCFcE7d1cFF5656810281BcED422368563d.sol#670-678)
	- WhitelistedStakingRewards.rewardPerTokenStored (../../sc/dataset/mainnet/0xEfba0DCFcE7d1cFF5656810281BcED422368563d.sol#633)
	- WhitelistedStakingRewards.stopRewardEmission() (../../sc/dataset/mainnet/0xEfba0DCFcE7d1cFF5656810281BcED422368563d.sol#763-769)
	- WhitelistedStakingRewards.updateReward(address) (../../sc/dataset/mainnet/0xEfba0DCFcE7d1cFF5656810281BcED422368563d.sol#773-781)
	- getReward() (../../sc/dataset/mainnet/0xEfba0DCFcE7d1cFF5656810281BcED422368563d.sol#717)
		- rewards[msg.sender] = 0 (../../sc/dataset/mainnet/0xEfba0DCFcE7d1cFF5656810281BcED422368563d.sol#709)
		- rewards[account] = earned(account) (../../sc/dataset/mainnet/0xEfba0DCFcE7d1cFF5656810281BcED422368563d.sol#777)
	WhitelistedStakingRewards.rewards (../../sc/dataset/mainnet/0xEfba0DCFcE7d1cFF5656810281BcED422368563d.sol#636) can be used in cross function reentrancies:
	- WhitelistedStakingRewards.earned(address) (../../sc/dataset/mainnet/0xEfba0DCFcE7d1cFF5656810281BcED422368563d.sol#680-682)
	- WhitelistedStakingRewards.getReward() (../../sc/dataset/mainnet/0xEfba0DCFcE7d1cFF5656810281BcED422368563d.sol#706-713)
	- WhitelistedStakingRewards.rewards (../../sc/dataset/mainnet/0xEfba0DCFcE7d1cFF5656810281BcED422368563d.sol#636)
	- WhitelistedStakingRewards.updateReward(address) (../../sc/dataset/mainnet/0xEfba0DCFcE7d1cFF5656810281BcED422368563d.sol#773-781)
	- getReward() (../../sc/dataset/mainnet/0xEfba0DCFcE7d1cFF5656810281BcED422368563d.sol#717)
		- userRewardPerTokenPaid[account] = rewardPerTokenStored (../../sc/dataset/mainnet/0xEfba0DCFcE7d1cFF5656810281BcED422368563d.sol#778)
	WhitelistedStakingRewards.userRewardPerTokenPaid (../../sc/dataset/mainnet/0xEfba0DCFcE7d1cFF5656810281BcED422368563d.sol#635) can be used in cross function reentrancies:
	- WhitelistedStakingRewards.earned(address) (../../sc/dataset/mainnet/0xEfba0DCFcE7d1cFF5656810281BcED422368563d.sol#680-682)
	- WhitelistedStakingRewards.updateReward(address) (../../sc/dataset/mainnet/0xEfba0DCFcE7d1cFF5656810281BcED422368563d.sol#773-781)
	- WhitelistedStakingRewards.userRewardPerTokenPaid (../../sc/dataset/mainnet/0xEfba0DCFcE7d1cFF5656810281BcED422368563d.sol#635)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1
INFO:Detectors:
ERC20Detailed.constructor(string,string,uint8).name (../../sc/dataset/mainnet/0xEfba0DCFcE7d1cFF5656810281BcED422368563d.sol#259) shadows:
	- ERC20Detailed.name() (../../sc/dataset/mainnet/0xEfba0DCFcE7d1cFF5656810281BcED422368563d.sol#268-270) (function)
ERC20Detailed.constructor(string,string,uint8).symbol (../../sc/dataset/mainnet/0xEfba0DCFcE7d1cFF5656810281BcED422368563d.sol#259) shadows:
	- ERC20Detailed.symbol() (../../sc/dataset/mainnet/0xEfba0DCFcE7d1cFF5656810281BcED422368563d.sol#276-278) (function)
ERC20Detailed.constructor(string,string,uint8).decimals (../../sc/dataset/mainnet/0xEfba0DCFcE7d1cFF5656810281BcED422368563d.sol#259) shadows:
	- ERC20Detailed.decimals() (../../sc/dataset/mainnet/0xEfba0DCFcE7d1cFF5656810281BcED422368563d.sol#292-294) (function)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing
INFO:Detectors:
WhitelistedStakingRewards.setRewardsDistribution(address) (../../sc/dataset/mainnet/0xEfba0DCFcE7d1cFF5656810281BcED422368563d.sol#759-761) should emit an event for: 
	- rewardsDistribution = _rewardsDistribution (../../sc/dataset/mainnet/0xEfba0DCFcE7d1cFF5656810281BcED422368563d.sol#760) 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-access-control
INFO:Detectors:
Owned.nominateNewOwner(address)._owner (../../sc/dataset/mainnet/0xEfba0DCFcE7d1cFF5656810281BcED422368563d.sol#470) lacks a zero-check on :
		- nominatedOwner = _owner (../../sc/dataset/mainnet/0xEfba0DCFcE7d1cFF5656810281BcED422368563d.sol#471)
WhitelistedStakingRewards.constructor(address,address,address,address)._rewardsDistribution (../../sc/dataset/mainnet/0xEfba0DCFcE7d1cFF5656810281BcED422368563d.sol#647) lacks a zero-check on :
		- rewardsDistribution = _rewardsDistribution (../../sc/dataset/mainnet/0xEfba0DCFcE7d1cFF5656810281BcED422368563d.sol#653)
WhitelistedStakingRewards.setRewardsDistribution(address)._rewardsDistribution (../../sc/dataset/mainnet/0xEfba0DCFcE7d1cFF5656810281BcED422368563d.sol#759) lacks a zero-check on :
		- rewardsDistribution = _rewardsDistribution (../../sc/dataset/mainnet/0xEfba0DCFcE7d1cFF5656810281BcED422368563d.sol#760)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation
INFO:Detectors:
Reentrancy in WhitelistedStakingRewards.exit() (../../sc/dataset/mainnet/0xEfba0DCFcE7d1cFF5656810281BcED422368563d.sol#715-718):
	External calls:
	- withdraw(_balances[msg.sender]) (../../sc/dataset/mainnet/0xEfba0DCFcE7d1cFF5656810281BcED422368563d.sol#716)
		- stakingToken.safeTransfer(msg.sender,amount) (../../sc/dataset/mainnet/0xEfba0DCFcE7d1cFF5656810281BcED422368563d.sol#702)
		- (success,returndata) = address(token).call(data) (../../sc/dataset/mainnet/0xEfba0DCFcE7d1cFF5656810281BcED422368563d.sol#385)
	- getReward() (../../sc/dataset/mainnet/0xEfba0DCFcE7d1cFF5656810281BcED422368563d.sol#717)
		- rewardsToken.safeTransfer(msg.sender,reward) (../../sc/dataset/mainnet/0xEfba0DCFcE7d1cFF5656810281BcED422368563d.sol#710)
		- (success,returndata) = address(token).call(data) (../../sc/dataset/mainnet/0xEfba0DCFcE7d1cFF5656810281BcED422368563d.sol#385)
	Event emitted after the call(s):
	- RewardPaid(msg.sender,reward) (../../sc/dataset/mainnet/0xEfba0DCFcE7d1cFF5656810281BcED422368563d.sol#711)
		- getReward() (../../sc/dataset/mainnet/0xEfba0DCFcE7d1cFF5656810281BcED422368563d.sol#717)
Reentrancy in WhitelistedStakingRewards.recoverERC20(address,uint256) (../../sc/dataset/mainnet/0xEfba0DCFcE7d1cFF5656810281BcED422368563d.sol#744-748):
	External calls:
	- IERC20(tokenAddress).safeTransfer(owner,tokenAmount) (../../sc/dataset/mainnet/0xEfba0DCFcE7d1cFF5656810281BcED422368563d.sol#746)
	Event emitted after the call(s):
	- Recovered(tokenAddress,tokenAmount) (../../sc/dataset/mainnet/0xEfba0DCFcE7d1cFF5656810281BcED422368563d.sol#747)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3
INFO:Detectors:
WhitelistedStakingRewards.getReward() (../../sc/dataset/mainnet/0xEfba0DCFcE7d1cFF5656810281BcED422368563d.sol#706-713) uses timestamp for comparisons
	Dangerous comparisons:
	- reward > 0 (../../sc/dataset/mainnet/0xEfba0DCFcE7d1cFF5656810281BcED422368563d.sol#708)
WhitelistedStakingRewards.notifyRewardAmount(uint256) (../../sc/dataset/mainnet/0xEfba0DCFcE7d1cFF5656810281BcED422368563d.sol#722-741) uses timestamp for comparisons
	Dangerous comparisons:
	- block.timestamp >= periodFinish (../../sc/dataset/mainnet/0xEfba0DCFcE7d1cFF5656810281BcED422368563d.sol#723)
	- require(bool,string)(rewardRate <= balance.div(rewardsDuration),Provided reward too high) (../../sc/dataset/mainnet/0xEfba0DCFcE7d1cFF5656810281BcED422368563d.sol#736)
WhitelistedStakingRewards.setRewardsDuration(uint256) (../../sc/dataset/mainnet/0xEfba0DCFcE7d1cFF5656810281BcED422368563d.sol#750-757) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(block.timestamp > periodFinish,Previous rewards period must be complete before changing the duration for the new period) (../../sc/dataset/mainnet/0xEfba0DCFcE7d1cFF5656810281BcED422368563d.sol#751-754)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp
INFO:Detectors:
Address.isContract(address) (../../sc/dataset/mainnet/0xEfba0DCFcE7d1cFF5656810281BcED422368563d.sol#312-321) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0xEfba0DCFcE7d1cFF5656810281BcED422368563d.sol#319)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage
INFO:Detectors:
Math.average(uint256,uint256) (../../sc/dataset/mainnet/0xEfba0DCFcE7d1cFF5656810281BcED422368563d.sol#56-59) is never used and should be removed
Math.max(uint256,uint256) (../../sc/dataset/mainnet/0xEfba0DCFcE7d1cFF5656810281BcED422368563d.sol#41-43) is never used and should be removed
SafeERC20.safeApprove(IERC20,address,uint256) (../../sc/dataset/mainnet/0xEfba0DCFcE7d1cFF5656810281BcED422368563d.sol#346-355) is never used and should be removed
SafeERC20.safeDecreaseAllowance(IERC20,address,uint256) (../../sc/dataset/mainnet/0xEfba0DCFcE7d1cFF5656810281BcED422368563d.sol#362-365) is never used and should be removed
SafeERC20.safeIncreaseAllowance(IERC20,address,uint256) (../../sc/dataset/mainnet/0xEfba0DCFcE7d1cFF5656810281BcED422368563d.sol#357-360) is never used and should be removed
SafeMath.mod(uint256,uint256) (../../sc/dataset/mainnet/0xEfba0DCFcE7d1cFF5656810281BcED422368563d.sol#163-166) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code
INFO:Detectors:
Pragma version^0.5.0 (../../sc/dataset/mainnet/0xEfba0DCFcE7d1cFF5656810281BcED422368563d.sol#32) allows old versions
solc-0.5.17 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity
INFO:Detectors:
Low level call in SafeERC20.callOptionalReturn(IERC20,bytes) (../../sc/dataset/mainnet/0xEfba0DCFcE7d1cFF5656810281BcED422368563d.sol#373-392):
	- (success,returndata) = address(token).call(data) (../../sc/dataset/mainnet/0xEfba0DCFcE7d1cFF5656810281BcED422368563d.sol#385)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls
INFO:Detectors:
Parameter Owned.nominateNewOwner(address)._owner (../../sc/dataset/mainnet/0xEfba0DCFcE7d1cFF5656810281BcED422368563d.sol#470) is not in mixedCase
Parameter Pausable.setPaused(bool)._paused (../../sc/dataset/mainnet/0xEfba0DCFcE7d1cFF5656810281BcED422368563d.sol#512) is not in mixedCase
Parameter WhitelistedStakingRewards.setRewardsDuration(uint256)._rewardsDuration (../../sc/dataset/mainnet/0xEfba0DCFcE7d1cFF5656810281BcED422368563d.sol#750) is not in mixedCase
Parameter WhitelistedStakingRewards.setRewardsDistribution(address)._rewardsDistribution (../../sc/dataset/mainnet/0xEfba0DCFcE7d1cFF5656810281BcED422368563d.sol#759) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions
INFO:Detectors:
ERC20Detailed (../../sc/dataset/mainnet/0xEfba0DCFcE7d1cFF5656810281BcED422368563d.sol#249-295) does not implement functions:
	- IERC20.allowance(address,address) (../../sc/dataset/mainnet/0xEfba0DCFcE7d1cFF5656810281BcED422368563d.sol#201)
	- IERC20.approve(address,uint256) (../../sc/dataset/mainnet/0xEfba0DCFcE7d1cFF5656810281BcED422368563d.sol#217)
	- IERC20.balanceOf(address) (../../sc/dataset/mainnet/0xEfba0DCFcE7d1cFF5656810281BcED422368563d.sol#183)
	- IERC20.totalSupply() (../../sc/dataset/mainnet/0xEfba0DCFcE7d1cFF5656810281BcED422368563d.sol#178)
	- IERC20.transfer(address,uint256) (../../sc/dataset/mainnet/0xEfba0DCFcE7d1cFF5656810281BcED422368563d.sol#192)
	- IERC20.transferFrom(address,address,uint256) (../../sc/dataset/mainnet/0xEfba0DCFcE7d1cFF5656810281BcED422368563d.sol#228)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unimplemented-functions
INFO:Detectors:
addAddressesToWhitelist(address[]) should be declared external:
	- Whitelist.addAddressesToWhitelist(address[]) (../../sc/dataset/mainnet/0xEfba0DCFcE7d1cFF5656810281BcED422368563d.sol#580-586)
Moreover, the following function parameters should change its data location:
addrs location should be calldata
removeAddressesFromWhitelist(address[]) should be declared external:
	- Whitelist.removeAddressesFromWhitelist(address[]) (../../sc/dataset/mainnet/0xEfba0DCFcE7d1cFF5656810281BcED422368563d.sol#608-614)
Moreover, the following function parameters should change its data location:
addrs location should be calldata
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external
INFO:Slither:/bdata2/sc/dataset/mainnet/0xEfba0DCFcE7d1cFF5656810281BcED422368563d.sol analyzed (12 contracts with 85 detectors), 31 result(s) found
