INFO:Detectors:
StrategyTUSDypool.harvest() (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#239-256) performs a multiplication on the result of a division:
	- v = _want.mul(1e18).div(ICurveFi(ypool).get_virtual_price()) (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#249)
	- ICurveFi(ypool).add_liquidity((0,0,0,_y),v.mul(DENOMINATOR.sub(slip)).div(DENOMINATOR)) (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#250)
StrategyTUSDypool._withdrawSome(uint256) (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#293-302) performs a multiplication on the result of a division:
	- _amnt = _amount.mul(1e18).div(ICurveFi(ypool).get_virtual_price()) (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#294)
	- _amt = _amnt.mul(1e18).div(yvERC20(yycrv).getPricePerFullShare()) (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#295)
StrategyTUSDypool._withdrawOne(uint256) (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#304-336) performs a multiplication on the result of a division:
	- _aux = _amnt.mul(DENOMINATOR.sub(slip)).div(DENOMINATOR) (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#305)
	- ICurveFi(ypool).remove_liquidity(_amnt,(ICurveFi(ypool).balances(0).mul(_aux).div(_t),ICurveFi(ypool).balances(1).mul(_aux).div(_t),ICurveFi(ypool).balances(2).mul(_aux).div(_t),ICurveFi(ypool).balances(3).mul(_aux).div(_t))) (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#307-311)
StrategyTUSDypool.lick() (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#382-389) performs a multiplication on the result of a division:
	- l = (_p.sub(p)).mul(balanceOfYYCRV()).div(1e18) (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#386)
	- l = l.mul(treasuryFee.add(strategistReward)).div(DENOMINATOR) (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#387)
StrategyTUSDypool.forceD(uint256) (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#403-416) performs a multiplication on the result of a division:
	- v = _amount.mul(1e18).div(ICurveFi(ypool).get_virtual_price()) (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#408)
	- ICurveFi(ypool).add_liquidity((0,0,0,_y),v.mul(DENOMINATOR.sub(slip)).div(DENOMINATOR)) (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#409)
StrategyTUSDypool.drip() (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#431-441) performs a multiplication on the result of a division:
	- _r = (_p.sub(p)).mul(balanceOfYYCRV()).div(1e18) (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#435)
	- _s = _r.mul(strategistReward).div(DENOMINATOR) (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#436)
StrategyTUSDypool.drip() (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#431-441) performs a multiplication on the result of a division:
	- _s = _r.mul(strategistReward).div(DENOMINATOR) (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#436)
	- IERC20(yycrv).safeTransfer(strategist,_s.mul(1e18).div(_p)) (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#437)
StrategyTUSDypool.drip() (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#431-441) performs a multiplication on the result of a division:
	- _r = (_p.sub(p)).mul(balanceOfYYCRV()).div(1e18) (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#435)
	- _t = _r.mul(treasuryFee).div(DENOMINATOR) (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#438)
StrategyTUSDypool.drip() (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#431-441) performs a multiplication on the result of a division:
	- _t = _r.mul(treasuryFee).div(DENOMINATOR) (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#438)
	- IERC20(yycrv).safeTransfer(Controller(controller).rewards(),_t.mul(1e18).div(_p)) (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#439)
StrategyTUSDypool.tick() (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#443-448) performs a multiplication on the result of a division:
	- _t = ICurveFi(ypool).balances(3).mul(yvERC20(ytusd).getPricePerFullShare()).div(1e18).mul(threshold).div(DENOMINATOR) (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#444-446)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#divide-before-multiply
INFO:Detectors:
Reentrancy in StrategyTUSDypool.drip() (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#431-441):
	External calls:
	- IERC20(yycrv).safeTransfer(strategist,_s.mul(1e18).div(_p)) (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#437)
	- IERC20(yycrv).safeTransfer(Controller(controller).rewards(),_t.mul(1e18).div(_p)) (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#439)
	State variables written after the call(s):
	- p = _p (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#440)
	StrategyTUSDypool.p (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#206) can be used in cross function reentrancies:
	- StrategyTUSDypool.drip() (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#431-441)
	- StrategyTUSDypool.lick() (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#382-389)
	- StrategyTUSDypool.p (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#206)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1
INFO:Detectors:
StrategyTUSDypool.approveAll() (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#225-233) ignores return value by IERC20(want).approve(ytusd,uint256(- 1)) (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#226)
StrategyTUSDypool.approveAll() (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#225-233) ignores return value by IERC20(ytusd).approve(ypool,uint256(- 1)) (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#227)
StrategyTUSDypool.approveAll() (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#225-233) ignores return value by IERC20(ycrv).approve(yycrv,uint256(- 1)) (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#228)
StrategyTUSDypool.approveAll() (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#225-233) ignores return value by IERC20(ycrv).approve(ypool,uint256(- 1)) (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#229)
StrategyTUSDypool.approveAll() (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#225-233) ignores return value by IERC20(ydai).approve(ypool,uint256(- 1)) (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#230)
StrategyTUSDypool.approveAll() (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#225-233) ignores return value by IERC20(yusdc).approve(ypool,uint256(- 1)) (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#231)
StrategyTUSDypool.approveAll() (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#225-233) ignores return value by IERC20(yusdt).approve(ypool,uint256(- 1)) (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#232)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return
INFO:Detectors:
StrategyTUSDypool.setGovernance(address) (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#459-462) should emit an event for: 
	- governance = _governance (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#461) 
StrategyTUSDypool.setController(address) (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#464-467) should emit an event for: 
	- controller = _controller (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#466) 
StrategyTUSDypool.setStrategist(address) (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#469-472) should emit an event for: 
	- strategist = _strategist (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#471) 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-access-control
INFO:Detectors:
StrategyTUSDypool.setTreasuryFee(uint256) (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#484-487) should emit an event for: 
	- treasuryFee = _treasuryFee (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#486) 
StrategyTUSDypool.setStrategistReward(uint256) (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#489-492) should emit an event for: 
	- strategistReward = _strategistReward (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#491) 
StrategyTUSDypool.setThreshold(uint256) (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#494-497) should emit an event for: 
	- threshold = _threshold (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#496) 
StrategyTUSDypool.setSlip(uint256) (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#499-502) should emit an event for: 
	- slip = _slip (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#501) 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-arithmetic
INFO:Detectors:
StrategyTUSDypool.constructor(address)._controller (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#217) lacks a zero-check on :
		- controller = _controller (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#221)
StrategyTUSDypool.setGovernance(address)._governance (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#459) lacks a zero-check on :
		- governance = _governance (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#461)
StrategyTUSDypool.setController(address)._controller (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#464) lacks a zero-check on :
		- controller = _controller (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#466)
StrategyTUSDypool.setStrategist(address)._strategist (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#469) lacks a zero-check on :
		- strategist = _strategist (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#471)
StrategyTUSDypool.setKeeper(address)._keeper (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#474) lacks a zero-check on :
		- keeper = _keeper (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#476)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation
INFO:Detectors:
Reentrancy in StrategyTUSDypool.forceD(uint256) (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#403-416):
	External calls:
	- drip() (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#404)
		- (success,returndata) = address(token).call(data) (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#110)
		- IERC20(yycrv).safeTransfer(strategist,_s.mul(1e18).div(_p)) (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#437)
		- IERC20(yycrv).safeTransfer(Controller(controller).rewards(),_t.mul(1e18).div(_p)) (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#439)
	- yvERC20(ytusd).deposit(_amount) (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#405)
	- ICurveFi(ypool).add_liquidity((0,0,0,_y),v.mul(DENOMINATOR.sub(slip)).div(DENOMINATOR)) (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#409)
	- yvERC20(yycrv).deposit(_bal) (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#412)
	State variables written after the call(s):
	- tank = tank.sub(_amount) (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#414)
	- tank = 0 (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#415)
Reentrancy in StrategyTUSDypool.forceW(uint256) (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#418-429):
	External calls:
	- drip() (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#419)
		- (success,returndata) = address(token).call(data) (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#110)
		- IERC20(yycrv).safeTransfer(strategist,_s.mul(1e18).div(_p)) (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#437)
		- IERC20(yycrv).safeTransfer(Controller(controller).rewards(),_t.mul(1e18).div(_p)) (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#439)
	- yvERC20(yycrv).withdraw(_amt) (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#421)
	- _withdrawOne(_amt) (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#426)
		- ICurveFi(ypool).remove_liquidity(_amnt,(ICurveFi(ypool).balances(0).mul(_aux).div(_t),ICurveFi(ypool).balances(1).mul(_aux).div(_t),ICurveFi(ypool).balances(2).mul(_aux).div(_t),ICurveFi(ypool).balances(3).mul(_aux).div(_t))) (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#307-311)
		- ICurveFi(ypool).exchange(0,3,_ydai,tmp.mul(DENOMINATOR.sub(slip)).div(DENOMINATOR)) (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#320)
		- ICurveFi(ypool).exchange(1,3,_yusdc,tmp.mul(DENOMINATOR.sub(slip)).div(DENOMINATOR)) (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#324)
		- ICurveFi(ypool).exchange(2,3,_yusdt,tmp.mul(DENOMINATOR.sub(slip)).div(DENOMINATOR)) (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#328)
		- yvERC20(ytusd).withdraw(IERC20(ytusd).balanceOf(address(this))) (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#332)
	State variables written after the call(s):
	- tank = tank.add(_after.sub(_before)) (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#428)
Reentrancy in StrategyTUSDypool.rebalance() (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#450-457):
	External calls:
	- drip() (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#451)
		- (success,returndata) = address(token).call(data) (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#110)
		- IERC20(yycrv).safeTransfer(strategist,_s.mul(1e18).div(_p)) (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#437)
		- IERC20(yycrv).safeTransfer(Controller(controller).rewards(),_t.mul(1e18).div(_p)) (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#439)
	- _withdrawSome(_c.sub(_t)) (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#454)
		- ICurveFi(ypool).remove_liquidity(_amnt,(ICurveFi(ypool).balances(0).mul(_aux).div(_t),ICurveFi(ypool).balances(1).mul(_aux).div(_t),ICurveFi(ypool).balances(2).mul(_aux).div(_t),ICurveFi(ypool).balances(3).mul(_aux).div(_t))) (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#307-311)
		- yvERC20(yycrv).withdraw(_amt) (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#299)
		- ICurveFi(ypool).exchange(0,3,_ydai,tmp.mul(DENOMINATOR.sub(slip)).div(DENOMINATOR)) (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#320)
		- ICurveFi(ypool).exchange(1,3,_yusdc,tmp.mul(DENOMINATOR.sub(slip)).div(DENOMINATOR)) (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#324)
		- ICurveFi(ypool).exchange(2,3,_yusdt,tmp.mul(DENOMINATOR.sub(slip)).div(DENOMINATOR)) (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#328)
		- yvERC20(ytusd).withdraw(IERC20(ytusd).balanceOf(address(this))) (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#332)
	State variables written after the call(s):
	- tank = IERC20(want).balanceOf(address(this)) (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#455)
Reentrancy in StrategyTUSDypool.withdraw(uint256) (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#271-291):
	External calls:
	- rebalance() (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#274)
		- ICurveFi(ypool).remove_liquidity(_amnt,(ICurveFi(ypool).balances(0).mul(_aux).div(_t),ICurveFi(ypool).balances(1).mul(_aux).div(_t),ICurveFi(ypool).balances(2).mul(_aux).div(_t),ICurveFi(ypool).balances(3).mul(_aux).div(_t))) (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#307-311)
		- (success,returndata) = address(token).call(data) (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#110)
		- IERC20(yycrv).safeTransfer(strategist,_s.mul(1e18).div(_p)) (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#437)
		- IERC20(yycrv).safeTransfer(Controller(controller).rewards(),_t.mul(1e18).div(_p)) (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#439)
		- yvERC20(yycrv).withdraw(_amt) (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#299)
		- ICurveFi(ypool).exchange(0,3,_ydai,tmp.mul(DENOMINATOR.sub(slip)).div(DENOMINATOR)) (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#320)
		- ICurveFi(ypool).exchange(1,3,_yusdc,tmp.mul(DENOMINATOR.sub(slip)).div(DENOMINATOR)) (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#324)
		- ICurveFi(ypool).exchange(2,3,_yusdt,tmp.mul(DENOMINATOR.sub(slip)).div(DENOMINATOR)) (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#328)
		- yvERC20(ytusd).withdraw(IERC20(ytusd).balanceOf(address(this))) (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#332)
	- _amount = _withdrawSome(_amount.sub(_balance)) (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#277)
		- ICurveFi(ypool).remove_liquidity(_amnt,(ICurveFi(ypool).balances(0).mul(_aux).div(_t),ICurveFi(ypool).balances(1).mul(_aux).div(_t),ICurveFi(ypool).balances(2).mul(_aux).div(_t),ICurveFi(ypool).balances(3).mul(_aux).div(_t))) (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#307-311)
		- yvERC20(yycrv).withdraw(_amt) (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#299)
		- ICurveFi(ypool).exchange(0,3,_ydai,tmp.mul(DENOMINATOR.sub(slip)).div(DENOMINATOR)) (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#320)
		- ICurveFi(ypool).exchange(1,3,_yusdc,tmp.mul(DENOMINATOR.sub(slip)).div(DENOMINATOR)) (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#324)
		- ICurveFi(ypool).exchange(2,3,_yusdt,tmp.mul(DENOMINATOR.sub(slip)).div(DENOMINATOR)) (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#328)
		- yvERC20(ytusd).withdraw(IERC20(ytusd).balanceOf(address(this))) (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#332)
	State variables written after the call(s):
	- tank = 0 (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#279)
Reentrancy in StrategyTUSDypool.withdraw(uint256) (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#271-291):
	External calls:
	- rebalance() (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#274)
		- ICurveFi(ypool).remove_liquidity(_amnt,(ICurveFi(ypool).balances(0).mul(_aux).div(_t),ICurveFi(ypool).balances(1).mul(_aux).div(_t),ICurveFi(ypool).balances(2).mul(_aux).div(_t),ICurveFi(ypool).balances(3).mul(_aux).div(_t))) (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#307-311)
		- (success,returndata) = address(token).call(data) (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#110)
		- IERC20(yycrv).safeTransfer(strategist,_s.mul(1e18).div(_p)) (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#437)
		- IERC20(yycrv).safeTransfer(Controller(controller).rewards(),_t.mul(1e18).div(_p)) (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#439)
		- yvERC20(yycrv).withdraw(_amt) (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#299)
		- ICurveFi(ypool).exchange(0,3,_ydai,tmp.mul(DENOMINATOR.sub(slip)).div(DENOMINATOR)) (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#320)
		- ICurveFi(ypool).exchange(1,3,_yusdc,tmp.mul(DENOMINATOR.sub(slip)).div(DENOMINATOR)) (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#324)
		- ICurveFi(ypool).exchange(2,3,_yusdt,tmp.mul(DENOMINATOR.sub(slip)).div(DENOMINATOR)) (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#328)
		- yvERC20(ytusd).withdraw(IERC20(ytusd).balanceOf(address(this))) (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#332)
	State variables written after the call(s):
	- tank = tank.sub(_amount) (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#282)
	- tank = 0 (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#283)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2
INFO:Detectors:
Address.isContract(address) (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#69-75) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#73)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage
INFO:Detectors:
Address.sendValue(address,uint256) (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#79-85) is never used and should be removed
Address.toPayable(address) (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#76-78) is never used and should be removed
SafeERC20.safeApprove(IERC20,address,uint256) (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#100-105) is never used and should be removed
SafeERC20.safeTransferFrom(IERC20,address,address,uint256) (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#96-98) is never used and should be removed
SafeMath.mod(uint256,uint256) (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#59-61) is never used and should be removed
SafeMath.mod(uint256,uint256,string) (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#62-65) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code
INFO:Detectors:
Pragma version^0.5.17 (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#9) allows old versions
solc-0.5.17 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity
INFO:Detectors:
Low level call in Address.sendValue(address,uint256) (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#79-85):
	- (success) = recipient.call.value(amount)() (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#83)
Low level call in SafeERC20.callOptionalReturn(IERC20,bytes) (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#106-117):
	- (success,returndata) = address(token).call(data) (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#110)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls
INFO:Detectors:
Contract yvERC20 (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#131-135) is not in CapWords
Function ICurveFi.get_virtual_price() (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#138) is not in mixedCase
Function ICurveFi.add_liquidity(uint256[4],uint256) (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#140-143) is not in mixedCase
Parameter ICurveFi.add_liquidity(uint256[4],uint256).min_mint_amount (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#142) is not in mixedCase
Function ICurveFi.remove_liquidity(uint256,uint256[4]) (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#144-147) is not in mixedCase
Parameter ICurveFi.remove_liquidity(uint256,uint256[4]).min_amounts (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#146) is not in mixedCase
Function ICurveFi.remove_liquidity_imbalance(uint256[4],uint256) (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#148-151) is not in mixedCase
Parameter ICurveFi.remove_liquidity_imbalance(uint256[4],uint256).max_burn_amount (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#150) is not in mixedCase
Parameter ICurveFi.exchange(int128,int128,uint256,uint256)._from_amount (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#153) is not in mixedCase
Parameter ICurveFi.exchange(int128,int128,uint256,uint256)._min_to_amount (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#153) is not in mixedCase
Function ICurveFi.get_dy(int128,int128,uint256) (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#155-157) is not in mixedCase
Parameter ICurveFi.get_dy(int128,int128,uint256)._from_amount (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#156) is not in mixedCase
Parameter StrategyTUSDypool.withdraw(IERC20)._asset (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#261) is not in mixedCase
Parameter StrategyTUSDypool.withdraw(uint256)._amount (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#271) is not in mixedCase
Parameter StrategyTUSDypool.migrate(address)._strategy (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#395) is not in mixedCase
Parameter StrategyTUSDypool.forceD(uint256)._amount (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#403) is not in mixedCase
Parameter StrategyTUSDypool.forceW(uint256)._amt (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#418) is not in mixedCase
Parameter StrategyTUSDypool.setGovernance(address)._governance (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#459) is not in mixedCase
Parameter StrategyTUSDypool.setController(address)._controller (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#464) is not in mixedCase
Parameter StrategyTUSDypool.setStrategist(address)._strategist (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#469) is not in mixedCase
Parameter StrategyTUSDypool.setKeeper(address)._keeper (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#474) is not in mixedCase
Parameter StrategyTUSDypool.setWithdrawalFee(uint256)._withdrawalFee (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#479) is not in mixedCase
Parameter StrategyTUSDypool.setTreasuryFee(uint256)._treasuryFee (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#484) is not in mixedCase
Parameter StrategyTUSDypool.setStrategistReward(uint256)._strategistReward (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#489) is not in mixedCase
Parameter StrategyTUSDypool.setThreshold(uint256)._threshold (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#494) is not in mixedCase
Parameter StrategyTUSDypool.setSlip(uint256)._slip (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#499) is not in mixedCase
Parameter StrategyTUSDypool.setMaxAmount(uint256)._maxAmount (../../sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol#504) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions
INFO:Slither:/bdata2/sc/dataset/mainnet/0x4ba03330338172febeb0050be6940c6e7f9c91b0.sol analyzed (8 contracts with 85 detectors), 73 result(s) found
