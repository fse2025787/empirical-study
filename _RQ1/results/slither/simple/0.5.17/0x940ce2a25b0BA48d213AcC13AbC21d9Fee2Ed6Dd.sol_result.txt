INFO:Detectors:
EIP20NonStandardInterface (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#2614-2676) has incorrect ERC20 function interface:EIP20NonStandardInterface.transfer(address,uint256) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#2640)
EIP20NonStandardInterface (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#2614-2676) has incorrect ERC20 function interface:EIP20NonStandardInterface.transferFrom(address,address,uint256) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#2654)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-erc20-interface
INFO:Detectors:
CToken.accrueInterest() (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#1212-1264) uses a dangerous strict equality:
	- accrualBlockNumberPrior == currentBlockNumber (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#1218)
CToken.exchangeRateStoredInternal() (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#1179-1197) uses a dangerous strict equality:
	- _totalSupply == 0 (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#1181)
CToken.initialize(ComptrollerInterface,InterestRateModel,uint256,string,string,uint8) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#913-944) uses a dangerous strict equality:
	- require(bool,string)(accrualBlockNumber == 0 && borrowIndex == 0,market may only be initialized once) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#920)
CToken.initialize(ComptrollerInterface,InterestRateModel,uint256,string,string,uint8) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#913-944) uses a dangerous strict equality:
	- require(bool,string)(err == uint256(Error.NO_ERROR),setting comptroller failed) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#928)
CToken.initialize(ComptrollerInterface,InterestRateModel,uint256,string,string,uint8) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#913-944) uses a dangerous strict equality:
	- require(bool,string)(err == uint256(Error.NO_ERROR),setting interest rate model failed) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#936)
CToken.liquidateBorrowFresh(address,address,uint256,CTokenInterface) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#1711-1779) uses a dangerous strict equality:
	- require(bool,string)(amountSeizeError == uint256(Error.NO_ERROR),LIQUIDATE_COMPTROLLER_CALCULATE_AMOUNT_SEIZE_FAILED) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#1756)
CToken.liquidateBorrowFresh(address,address,uint256,CTokenInterface) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#1711-1779) uses a dangerous strict equality:
	- require(bool,string)(seizeError == uint256(Error.NO_ERROR),token seizure failed) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#1770)
Exponential.mulExp(Exponential.Exp,Exponential.Exp) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#643-663) uses a dangerous strict equality:
	- assert(bool)(err2 == MathError.NO_ERROR) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#660)
Exponential.mul_(uint256,uint256,string) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#795-802) uses a dangerous strict equality:
	- a == 0 || b == 0 (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#796)
Exponential.mul_(uint256,uint256,string) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#795-802) uses a dangerous strict equality:
	- require(bool,string)(c / a == b,errorMessage) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#800)
CToken.transfer(address,uint256) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#1006-1008) uses a dangerous strict equality:
	- transferTokens(msg.sender,msg.sender,dst,amount) == uint256(Error.NO_ERROR) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#1007)
CToken.transferFrom(address,address,uint256) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#1017-1019) uses a dangerous strict equality:
	- transferTokens(msg.sender,src,dst,amount) == uint256(Error.NO_ERROR) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#1018)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dangerous-strict-equalities
INFO:Detectors:
Reentrancy in CToken.liquidateBorrowInternal(address,uint256,CTokenInterface) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#1685-1700):
	External calls:
	- error = cTokenCollateral.accrueInterest() (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#1692)
	- liquidateBorrowFresh(msg.sender,borrower,repayAmount,cTokenCollateral) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#1699)
		- allowed = comptroller.liquidateBorrowAllowed(address(this),address(cTokenCollateral),liquidator,borrower,repayAmount) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#1713)
		- allowed = comptroller.seizeAllowed(address(this),seizerToken,liquidator,borrower,seizeTokens) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#1806)
		- allowed = comptroller.repayBorrowAllowed(address(this),payer,borrower,repayAmount) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#1617)
		- comptroller.seizeVerify(address(this),seizerToken,liquidator,borrower,seizeTokens) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#1836)
		- comptroller.repayBorrowVerify(address(this),payer,borrower,vars.actualRepayAmount,vars.borrowerIndex) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#1672)
		- seizeError = cTokenCollateral.seize(liquidator,borrower,seizeTokens) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#1766)
		- comptroller.liquidateBorrowVerify(address(this),address(cTokenCollateral),liquidator,borrower,actualRepayAmount,seizeTokens) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#1776)
	State variables written after the call(s):
	- liquidateBorrowFresh(msg.sender,borrower,repayAmount,cTokenCollateral) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#1699)
		- totalBorrows = vars.totalBorrowsNew (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#1666)
	CTokenStorage.totalBorrows (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#83) can be used in cross function reentrancies:
	- CToken.accrueInterest() (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#1212-1264)
	- CToken.borrowRatePerBlock() (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#1092-1094)
	- CToken.exchangeRateStoredInternal() (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#1179-1197)
	- CToken.supplyRatePerBlock() (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#1100-1102)
	- CTokenStorage.totalBorrows (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#83)
Reentrancy in CToken.redeemFresh(address,uint256,uint256) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#1408-1483):
	External calls:
	- allowed = comptroller.redeemAllowed(address(this),redeemer,vars.redeemTokens) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#1436)
	State variables written after the call(s):
	- totalSupply = vars.totalSupplyNew (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#1472)
	CTokenStorage.totalSupply (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#93) can be used in cross function reentrancies:
	- CToken.exchangeRateStoredInternal() (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#1179-1197)
	- CTokenStorage.totalSupply (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#93)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1
INFO:Detectors:
PriceOracleProxy.isPriceOracle (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#2931) shadows:
	- PriceOracle.isPriceOracle (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#2203)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variable-shadowing-from-abstract-contracts
INFO:Detectors:
CToken.repayBorrowFresh(address,address,uint256).vars (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#1627) is a local variable never initialized
CToken.redeemFresh(address,uint256,uint256).vars (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#1411) is a local variable never initialized
CToken.mintFresh(address,uint256).vars (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#1311) is a local variable never initialized
CToken._addReservesFresh(uint256).actualAddAmount (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#1989) is a local variable never initialized
CToken.borrowFresh(address,uint256).vars (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#1529) is a local variable never initialized
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#uninitialized-local-variables
INFO:Detectors:
CErc20.initialize(address,ComptrollerInterface,InterestRateModel,uint256,string,string,uint8) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#2233-2246) ignores return value by EIP20Interface(underlying).totalSupply() (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#2245)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return
INFO:Detectors:
Exponential.divScalarByExpTruncate(uint256,Exponential.Exp).fraction (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#607) shadows:
	- Exponential.fraction(uint256,uint256) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#837-839) (function)
Exponential.div_ScalarByExpTruncate(uint256,Exponential.Exp).fraction (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#636) shadows:
	- Exponential.fraction(uint256,uint256) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#837-839) (function)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing
INFO:Detectors:
CToken._setPendingAdmin(address).newPendingAdmin (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#1850) lacks a zero-check on :
		- pendingAdmin = newPendingAdmin (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#1860)
CErc20.initialize(address,ComptrollerInterface,InterestRateModel,uint256,string,string,uint8).underlying_ (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#2233) lacks a zero-check on :
		- underlying = underlying_ (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#2244)
PriceOracleProxy.constructor(address,address,address,address,address,address,address).admin_ (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#2962) lacks a zero-check on :
		- admin = admin_ (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#2969)
PriceOracleProxy.constructor(address,address,address,address,address,address,address).cEthAddress_ (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#2964) lacks a zero-check on :
		- cEthAddress = cEthAddress_ (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#2971)
PriceOracleProxy.constructor(address,address,address,address,address,address,address).cYcrvAddress_ (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#2965) lacks a zero-check on :
		- cYcrvAddress = cYcrvAddress_ (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#2972)
PriceOracleProxy.constructor(address,address,address,address,address,address,address).cYusdAddress_ (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#2966) lacks a zero-check on :
		- cYusdAddress = cYusdAddress_ (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#2973)
PriceOracleProxy.constructor(address,address,address,address,address,address,address).cYethAddress_ (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#2967) lacks a zero-check on :
		- cYethAddress = cYethAddress_ (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#2974)
PriceOracleProxy.constructor(address,address,address,address,address,address,address).cXSushiAddress_ (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#2968) lacks a zero-check on :
		- cXSushiAddress = cXSushiAddress_ (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#2975)
PriceOracleProxy._setAdmin(address)._admin (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#3110) lacks a zero-check on :
		- admin = _admin (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#3112)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation
INFO:Detectors:
Reentrancy in CToken.borrowFresh(address,uint256) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#1512-1564):
	External calls:
	- allowed = comptroller.borrowAllowed(address(this),borrower,borrowAmount) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#1514)
	State variables written after the call(s):
	- accountBorrows[borrower].principal = vars.accountBorrowsNew (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#1553)
	- accountBorrows[borrower].interestIndex = borrowIndex (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#1554)
	- totalBorrows = vars.totalBorrowsNew (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#1555)
Reentrancy in CToken.mintFresh(address,uint256) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#1299-1356):
	External calls:
	- allowed = comptroller.mintAllowed(address(this),minter,mintAmount) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#1301)
	State variables written after the call(s):
	- accountTokens[minter] = vars.accountTokensNew (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#1346)
	- totalSupply = vars.totalSupplyNew (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#1345)
Reentrancy in CToken.redeemFresh(address,uint256,uint256) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#1408-1483):
	External calls:
	- allowed = comptroller.redeemAllowed(address(this),redeemer,vars.redeemTokens) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#1436)
	State variables written after the call(s):
	- accountTokens[redeemer] = vars.accountTokensNew (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#1473)
Reentrancy in CToken.repayBorrowFresh(address,address,uint256) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#1615-1675):
	External calls:
	- allowed = comptroller.repayBorrowAllowed(address(this),payer,borrower,repayAmount) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#1617)
	State variables written after the call(s):
	- accountBorrows[borrower].principal = vars.accountBorrowsNew (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#1664)
	- accountBorrows[borrower].interestIndex = borrowIndex (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#1665)
	- totalBorrows = vars.totalBorrowsNew (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#1666)
Reentrancy in CToken.seizeInternal(address,address,address,uint256) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#1804-1839):
	External calls:
	- allowed = comptroller.seizeAllowed(address(this),seizerToken,liquidator,borrower,seizeTokens) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#1806)
	State variables written after the call(s):
	- accountTokens[borrower] = borrowerTokensNew (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#1829)
	- accountTokens[liquidator] = liquidatorTokensNew (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#1830)
Reentrancy in CToken.transferTokens(address,address,address,uint256) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#955-998):
	External calls:
	- allowed = comptroller.transferAllowed(address(this),src,dst,tokens) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#957)
	State variables written after the call(s):
	- accountTokens[src] = srcTokensNew (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#984)
	- accountTokens[dst] = dstTokensNew (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#985)
	- transferAllowances[src][spender] = allowanceNew (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#989)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2
INFO:Detectors:
Reentrancy in CToken.borrowFresh(address,uint256) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#1512-1564):
	External calls:
	- allowed = comptroller.borrowAllowed(address(this),borrower,borrowAmount) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#1514)
	Event emitted after the call(s):
	- Borrow(borrower,borrowAmount,vars.accountBorrowsNew,vars.totalBorrowsNew) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#1558)
	- Failure(uint256(err),uint256(info),0) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#442)
		- fail(Error.TOKEN_INSUFFICIENT_CASH,FailureInfo.BORROW_CASH_NOT_AVAILABLE) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#1526)
	- Failure(uint256(err),uint256(info),opaqueError) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#451)
		- failOpaque(Error.COMPTROLLER_REJECTION,FailureInfo.BORROW_COMPTROLLER_REJECTION,allowed) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#1516)
	- Failure(uint256(err),uint256(info),0) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#442)
		- fail(Error.MARKET_NOT_FRESH,FailureInfo.BORROW_FRESHNESS_CHECK) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#1521)
Reentrancy in CToken.liquidateBorrowFresh(address,address,uint256,CTokenInterface) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#1711-1779):
	External calls:
	- allowed = comptroller.liquidateBorrowAllowed(address(this),address(cTokenCollateral),liquidator,borrower,repayAmount) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#1713)
	Event emitted after the call(s):
	- Failure(uint256(err),uint256(info),0) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#442)
		- (fail(Error.INVALID_ACCOUNT_PAIR,FailureInfo.LIQUIDATE_LIQUIDATOR_IS_BORROWER),0) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#1730)
	- Failure(uint256(err),uint256(info),0) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#442)
		- (fail(Error.INVALID_CLOSE_AMOUNT_REQUESTED,FailureInfo.LIQUIDATE_CLOSE_AMOUNT_IS_UINT_MAX),0) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#1740)
	- Failure(uint256(err),uint256(info),opaqueError) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#451)
		- (failOpaque(Error.COMPTROLLER_REJECTION,FailureInfo.LIQUIDATE_COMPTROLLER_REJECTION,allowed),0) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#1715)
	- Failure(uint256(err),uint256(info),0) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#442)
		- (fail(Error.INVALID_CLOSE_AMOUNT_REQUESTED,FailureInfo.LIQUIDATE_CLOSE_AMOUNT_IS_ZERO),0) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#1735)
	- Failure(uint256(err),uint256(info),0) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#442)
		- (fail(Error.MARKET_NOT_FRESH,FailureInfo.LIQUIDATE_FRESHNESS_CHECK),0) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#1720)
	- Failure(uint256(err),uint256(info),0) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#442)
		- (fail(Error.MARKET_NOT_FRESH,FailureInfo.LIQUIDATE_COLLATERAL_FRESHNESS_CHECK),0) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#1725)
Reentrancy in CToken.liquidateBorrowFresh(address,address,uint256,CTokenInterface) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#1711-1779):
	External calls:
	- allowed = comptroller.liquidateBorrowAllowed(address(this),address(cTokenCollateral),liquidator,borrower,repayAmount) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#1713)
	- (repayBorrowError,actualRepayAmount) = repayBorrowFresh(liquidator,borrower,repayAmount) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#1745)
		- allowed = comptroller.repayBorrowAllowed(address(this),payer,borrower,repayAmount) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#1617)
		- comptroller.repayBorrowVerify(address(this),payer,borrower,vars.actualRepayAmount,vars.borrowerIndex) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#1672)
	Event emitted after the call(s):
	- Failure(uint256(err),uint256(info),opaqueError) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#451)
		- (repayBorrowError,actualRepayAmount) = repayBorrowFresh(liquidator,borrower,repayAmount) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#1745)
	- Failure(uint256(err),uint256(info),0) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#442)
		- (repayBorrowError,actualRepayAmount) = repayBorrowFresh(liquidator,borrower,repayAmount) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#1745)
	- Failure(uint256(err),uint256(info),0) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#442)
		- (fail(TokenErrorReporter.Error(repayBorrowError),FailureInfo.LIQUIDATE_REPAY_BORROW_FRESH_FAILED),0) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#1747)
	- RepayBorrow(payer,borrower,vars.actualRepayAmount,vars.accountBorrowsNew,vars.totalBorrowsNew) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#1669)
		- (repayBorrowError,actualRepayAmount) = repayBorrowFresh(liquidator,borrower,repayAmount) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#1745)
Reentrancy in CToken.liquidateBorrowFresh(address,address,uint256,CTokenInterface) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#1711-1779):
	External calls:
	- allowed = comptroller.liquidateBorrowAllowed(address(this),address(cTokenCollateral),liquidator,borrower,repayAmount) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#1713)
	- (repayBorrowError,actualRepayAmount) = repayBorrowFresh(liquidator,borrower,repayAmount) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#1745)
		- allowed = comptroller.repayBorrowAllowed(address(this),payer,borrower,repayAmount) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#1617)
		- comptroller.repayBorrowVerify(address(this),payer,borrower,vars.actualRepayAmount,vars.borrowerIndex) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#1672)
	- seizeError = seizeInternal(address(this),liquidator,borrower,seizeTokens) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#1764)
		- allowed = comptroller.seizeAllowed(address(this),seizerToken,liquidator,borrower,seizeTokens) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#1806)
		- comptroller.seizeVerify(address(this),seizerToken,liquidator,borrower,seizeTokens) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#1836)
	Event emitted after the call(s):
	- Failure(uint256(err),uint256(info),opaqueError) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#451)
		- seizeError = seizeInternal(address(this),liquidator,borrower,seizeTokens) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#1764)
	- Failure(uint256(err),uint256(info),0) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#442)
		- seizeError = seizeInternal(address(this),liquidator,borrower,seizeTokens) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#1764)
	- Transfer(borrower,liquidator,seizeTokens) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#1833)
		- seizeError = seizeInternal(address(this),liquidator,borrower,seizeTokens) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#1764)
Reentrancy in CToken.liquidateBorrowFresh(address,address,uint256,CTokenInterface) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#1711-1779):
	External calls:
	- allowed = comptroller.liquidateBorrowAllowed(address(this),address(cTokenCollateral),liquidator,borrower,repayAmount) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#1713)
	- (repayBorrowError,actualRepayAmount) = repayBorrowFresh(liquidator,borrower,repayAmount) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#1745)
		- allowed = comptroller.repayBorrowAllowed(address(this),payer,borrower,repayAmount) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#1617)
		- comptroller.repayBorrowVerify(address(this),payer,borrower,vars.actualRepayAmount,vars.borrowerIndex) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#1672)
	- seizeError = seizeInternal(address(this),liquidator,borrower,seizeTokens) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#1764)
		- allowed = comptroller.seizeAllowed(address(this),seizerToken,liquidator,borrower,seizeTokens) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#1806)
		- comptroller.seizeVerify(address(this),seizerToken,liquidator,borrower,seizeTokens) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#1836)
	- seizeError = cTokenCollateral.seize(liquidator,borrower,seizeTokens) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#1766)
	Event emitted after the call(s):
	- LiquidateBorrow(liquidator,borrower,actualRepayAmount,address(cTokenCollateral),seizeTokens) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#1773)
Reentrancy in CToken.mintFresh(address,uint256) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#1299-1356):
	External calls:
	- allowed = comptroller.mintAllowed(address(this),minter,mintAmount) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#1301)
	Event emitted after the call(s):
	- Failure(uint256(err),uint256(info),0) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#442)
		- (fail(Error.MARKET_NOT_FRESH,FailureInfo.MINT_FRESHNESS_CHECK),0) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#1308)
	- Failure(uint256(err),uint256(info),opaqueError) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#451)
		- (failOpaque(Error.COMPTROLLER_REJECTION,FailureInfo.MINT_COMPTROLLER_REJECTION,allowed),0) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#1303)
	- Mint(minter,vars.actualMintAmount,vars.mintTokens) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#1349)
	- Transfer(address(this),minter,vars.mintTokens) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#1350)
Reentrancy in CToken.redeemFresh(address,uint256,uint256) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#1408-1483):
	External calls:
	- allowed = comptroller.redeemAllowed(address(this),redeemer,vars.redeemTokens) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#1436)
	Event emitted after the call(s):
	- Failure(uint256(err),uint256(info),0) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#442)
		- fail(Error.MARKET_NOT_FRESH,FailureInfo.REDEEM_FRESHNESS_CHECK) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#1443)
	- Failure(uint256(err),uint256(info),0) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#442)
		- fail(Error.TOKEN_INSUFFICIENT_CASH,FailureInfo.REDEEM_TRANSFER_OUT_NOT_POSSIBLE) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#1456)
	- Failure(uint256(err),uint256(info),opaqueError) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#451)
		- failOpaque(Error.COMPTROLLER_REJECTION,FailureInfo.REDEEM_COMPTROLLER_REJECTION,allowed) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#1438)
	- Redeem(redeemer,vars.redeemAmount,vars.redeemTokens) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#1477)
	- Transfer(redeemer,address(this),vars.redeemTokens) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#1476)
Reentrancy in CToken.repayBorrowFresh(address,address,uint256) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#1615-1675):
	External calls:
	- allowed = comptroller.repayBorrowAllowed(address(this),payer,borrower,repayAmount) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#1617)
	Event emitted after the call(s):
	- Failure(uint256(err),uint256(info),opaqueError) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#451)
		- (failOpaque(Error.COMPTROLLER_REJECTION,FailureInfo.REPAY_BORROW_COMPTROLLER_REJECTION,allowed),0) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#1619)
	- Failure(uint256(err),uint256(info),0) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#442)
		- (fail(Error.MARKET_NOT_FRESH,FailureInfo.REPAY_BORROW_FRESHNESS_CHECK),0) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#1624)
	- RepayBorrow(payer,borrower,vars.actualRepayAmount,vars.accountBorrowsNew,vars.totalBorrowsNew) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#1669)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3
INFO:Detectors:
CErc20.doTransferIn(address,uint256) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#2354-2378) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#2360-2372)
CErc20.doTransferOut(address,uint256) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#2389-2408) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#2394-2406)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage
INFO:Detectors:
CarefulMath.addThenSubUInt(uint256,uint256,uint256) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#203-211) is never used and should be removed
CarefulMath.addUInt(uint256,uint256) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#190-198) is never used and should be removed
CarefulMath.divUInt(uint256,uint256) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#168-174) is never used and should be removed
CarefulMath.mulUInt(uint256,uint256) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#151-163) is never used and should be removed
CarefulMath.subUInt(uint256,uint256) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#179-185) is never used and should be removed
ComptrollerErrorReporter.fail(ComptrollerErrorReporter.Error,ComptrollerErrorReporter.FailureInfo) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#2734-2738) is never used and should be removed
ComptrollerErrorReporter.failOpaque(ComptrollerErrorReporter.Error,ComptrollerErrorReporter.FailureInfo,uint256) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#2743-2747) is never used and should be removed
Exponential.addExp(Exponential.Exp,Exponential.Exp) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#504-508) is never used and should be removed
Exponential.add_(Exponential.Double,Exponential.Double) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#736-738) is never used and should be removed
Exponential.add_(Exponential.Exp,Exponential.Exp) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#732-734) is never used and should be removed
Exponential.divExp(Exponential.Exp,Exponential.Exp) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#688-690) is never used and should be removed
Exponential.divScalar(Exponential.Exp,uint256) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#574-581) is never used and should be removed
Exponential.divScalarByExp(uint256,Exponential.Exp) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#586-601) is never used and should be removed
Exponential.divScalarByExpTruncate(uint256,Exponential.Exp) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#606-613) is never used and should be removed
Exponential.div_(Exponential.Double,Exponential.Double) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#816-818) is never used and should be removed
Exponential.div_(Exponential.Double,uint256) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#820-822) is never used and should be removed
Exponential.div_(Exponential.Exp,Exponential.Exp) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#804-806) is never used and should be removed
Exponential.div_(Exponential.Exp,uint256) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#808-810) is never used and should be removed
Exponential.div_(uint256,Exponential.Double) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#824-826) is never used and should be removed
Exponential.fraction(uint256,uint256) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#837-839) is never used and should be removed
Exponential.getExp(uint256,uint256) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#487-499) is never used and should be removed
Exponential.isZeroExp(Exponential.Exp) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#718-720) is never used and should be removed
Exponential.lessThanExp(Exponential.Exp,Exponential.Exp) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#704-706) is never used and should be removed
Exponential.lessThanOrEqualExp(Exponential.Exp,Exponential.Exp) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#711-713) is never used and should be removed
Exponential.mulExp(Exponential.Exp,Exponential.Exp) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#643-663) is never used and should be removed
Exponential.mulExp(uint256,uint256) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#668-670) is never used and should be removed
Exponential.mulExp3(Exponential.Exp,Exponential.Exp,Exponential.Exp) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#675-681) is never used and should be removed
Exponential.mulScalar(Exponential.Exp,uint256) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#522-529) is never used and should be removed
Exponential.mulScalarTruncate(Exponential.Exp,uint256) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#534-541) is never used and should be removed
Exponential.mulScalarTruncateAddUInt(Exponential.Exp,uint256,uint256) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#546-553) is never used and should be removed
Exponential.mul_(Exponential.Double,Exponential.Double) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#779-781) is never used and should be removed
Exponential.mul_(Exponential.Double,uint256) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#783-785) is never used and should be removed
Exponential.mul_(Exponential.Exp,Exponential.Exp) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#767-769) is never used and should be removed
Exponential.mul_(uint256,Exponential.Double) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#787-789) is never used and should be removed
Exponential.safe224(uint256,string) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#722-725) is never used and should be removed
Exponential.safe32(uint256,string) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#727-730) is never used and should be removed
Exponential.subExp(Exponential.Exp,Exponential.Exp) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#513-517) is never used and should be removed
Exponential.sub_(Exponential.Double,Exponential.Double) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#754-756) is never used and should be removed
Exponential.sub_(Exponential.Exp,Exponential.Exp) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#750-752) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code
INFO:Detectors:
Pragma version^0.5.16 (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#3) allows old versions
Pragma version^0.5.16 (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#128) allows old versions
Pragma version^0.5.16 (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#457) allows old versions
Pragma version^0.5.16 (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#888) allows old versions
Pragma version^0.5.16 (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#2197) allows old versions
Pragma version^0.5.16 (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#2213) allows old versions
Pragma version^0.5.16 (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#2472) allows old versions
Pragma version^0.5.16 (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#2544) allows old versions
Pragma version^0.5.16 (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#2607) allows old versions
Pragma version^0.5.16 (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#2678) allows old versions
Pragma version^0.5.16 (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#2750) allows old versions
Pragma version^0.5.16 (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#2781) allows old versions
solc-0.5.17 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity
INFO:Detectors:
Variable CTokenStorage._notEntered (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#12) is not in mixedCase
Constant CTokenStorage.borrowRateMaxMantissa (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#33) is not in UPPER_CASE_WITH_UNDERSCORES
Constant CTokenStorage.reserveFactorMaxMantissa (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#38) is not in UPPER_CASE_WITH_UNDERSCORES
Function CTokenInterface._setPendingAdmin(address) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#330) is not in mixedCase
Function CTokenInterface._acceptAdmin() (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#331) is not in mixedCase
Function CTokenInterface._setComptroller(ComptrollerInterface) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#332) is not in mixedCase
Function CTokenInterface._setReserveFactor(uint256) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#333) is not in mixedCase
Function CTokenInterface._reduceReserves(uint256) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#334) is not in mixedCase
Function CTokenInterface._setInterestRateModel(InterestRateModel) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#335) is not in mixedCase
Function Exponential.mul_ScalarTruncate(Exponential.Exp,uint256) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#558-561) is not in mixedCase
Function Exponential.mul_ScalarTruncateAddUInt(Exponential.Exp,uint256,uint256) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#566-569) is not in mixedCase
Function Exponential.div_ScalarByExp(uint256,Exponential.Exp) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#618-630) is not in mixedCase
Function Exponential.div_ScalarByExpTruncate(uint256,Exponential.Exp) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#635-638) is not in mixedCase
Constant Exponential.expScale (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#469) is not in UPPER_CASE_WITH_UNDERSCORES
Constant Exponential.doubleScale (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#470) is not in UPPER_CASE_WITH_UNDERSCORES
Constant Exponential.halfExpScale (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#471) is not in UPPER_CASE_WITH_UNDERSCORES
Constant Exponential.mantissaOne (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#472) is not in UPPER_CASE_WITH_UNDERSCORES
Function CToken._setPendingAdmin(address) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#1850-1866) is not in mixedCase
Function CToken._acceptAdmin() (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#1873-1893) is not in mixedCase
Function CToken._setComptroller(ComptrollerInterface) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#1900-1917) is not in mixedCase
Function CToken._setReserveFactor(uint256) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#1924-1932) is not in mixedCase
Function CToken._reduceReserves(uint256) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#2028-2036) is not in mixedCase
Function CToken._setInterestRateModel(InterestRateModel) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#2091-2099) is not in mixedCase
Function CErc20Interface._addReserves(uint256) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#2187) is not in mixedCase
Function CErc20._addReserves(uint256) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#2329-2331) is not in mixedCase
Function CCapableErc20Interface._addReserves(uint256) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#2426) is not in mixedCase
Function CDelegatorInterface._setImplementation(address,bool,bytes) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#2441) is not in mixedCase
Function CDelegateInterface._becomeImplementation(bytes) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#2450) is not in mixedCase
Function CDelegateInterface._resignImplementation() (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#2455) is not in mixedCase
Function CCapableDelegateInterface._becomeImplementation(bytes) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#2464) is not in mixedCase
Function CCapableDelegateInterface._resignImplementation() (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#2469) is not in mixedCase
Function CurveSwapInterface.get_virtual_price() (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#2794) is not in mixedCase
Function IUniswapV2Pair.DOMAIN_SEPARATOR() (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#2853) is not in mixedCase
Function IUniswapV2Pair.PERMIT_TYPEHASH() (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#2855) is not in mixedCase
Function IUniswapV2Pair.MINIMUM_LIQUIDITY() (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#2881) is not in mixedCase
Function PriceOracleProxy._setAggregators(address[],address[]) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#3092-3099) is not in mixedCase
Function PriceOracleProxy._setLPs(address[],bool[]) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#3101-3108) is not in mixedCase
Function PriceOracleProxy._setAdmin(address) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#3110-3113) is not in mixedCase
Parameter PriceOracleProxy._setAdmin(address)._admin (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#3110) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions
INFO:Detectors:
Variable CToken.seizeInternal(address,address,address,uint256).seizeTokens (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#1804) is too similar to CToken.seizeInternal(address,address,address,uint256).seizerToken (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#1804)
Variable CToken.seize(address,address,uint256).seizeTokens (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#1790) is too similar to CToken.seizeInternal(address,address,address,uint256).seizerToken (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#1804)
Variable CToken.liquidateBorrowFresh(address,address,uint256,CTokenInterface).seizeTokens (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#1755) is too similar to CToken.seizeInternal(address,address,address,uint256).seizerToken (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#1804)
Variable CTokenInterface.seize(address,address,uint256).seizeTokens (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#325) is too similar to CToken.seizeInternal(address,address,address,uint256).seizerToken (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#1804)
Variable PriceOracleProxy.cEthAddress (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#2942) is too similar to PriceOracleProxy.wethAddress (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#2949)
Variable PriceOracleProxy.constructor(address,address,address,address,address,address,address).cEthAddress_ (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#2964) is too similar to PriceOracleProxy.cYethAddress (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#2945)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#variable-names-too-similar
INFO:Detectors:
Exponential.sqrt(uint256) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#843-885) uses literals with too many digits:
	- xx >= 0x100000000000000000000000000000000 (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#848)
Exponential.sqrt(uint256) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#843-885) uses literals with too many digits:
	- xx >= 0x10000000000000000 (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#852)
Exponential.sqrt(uint256) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#843-885) uses literals with too many digits:
	- xx >= 0x100000000 (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#856)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits
INFO:Detectors:
Exponential.mantissaOne (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#472) is never used in PriceOracleProxy (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#2926-3115)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-state-variable
INFO:Detectors:
CDelegationStorage.implementation (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#125) should be constant 
CDelegationStorageExtension.internalCash (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#2194) should be constant 
CErc20Storage.underlying (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#342) should be constant 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant
INFO:Detectors:
initialize(address,ComptrollerInterface,InterestRateModel,uint256,string,string,uint8) should be declared external:
	- CErc20.initialize(address,ComptrollerInterface,InterestRateModel,uint256,string,string,uint8) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#2233-2246)
Moreover, the following function parameters should change its data location:
name_ location should be calldata
symbol_ location should be calldata
_setImplementation(address,bool,bytes) should be declared external:
	- CDelegatorInterface._setImplementation(address,bool,bytes) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#2441)
Moreover, the following function parameters should change its data location:
becomeImplementationData location should be calldata
_becomeImplementation(bytes) should be declared external:
	- CDelegateInterface._becomeImplementation(bytes) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#2450)
Moreover, the following function parameters should change its data location:
data location should be calldata
_becomeImplementation(bytes) should be declared external:
	- CCapableDelegateInterface._becomeImplementation(bytes) (../../sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol#2464)
Moreover, the following function parameters should change its data location:
data location should be calldata
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external
INFO:Slither:/bdata2/sc/dataset/mainnet/0x940ce2a25b0BA48d213AcC13AbC21d9Fee2Ed6Dd.sol analyzed (28 contracts with 85 detectors), 158 result(s) found
