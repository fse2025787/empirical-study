INFO:Detectors:
Reentrancy in ERC1155StakeMiningV1.exit(uint256) (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#1245-1248):
	External calls:
	- mine() (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#1246)
		- returndata = address(token).functionCall(data,SafeERC20: low-level call failed) (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#1764)
		- IERC20(_token).safeTransfer(account,amount) (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#1118)
		- (success,returndata) = target.call{value: value}(data) (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#1890)
	- withdraw(tokenId,_staking[msg.sender][tokenId]) (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#1247)
		- IERC1155(baseToken()).safeTransferFrom(address(this),msg.sender,tokenId,amount,zero) (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#1232-1238)
	External calls sending eth:
	- mine() (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#1246)
		- (success,returndata) = target.call{value: value}(data) (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#1890)
	State variables written after the call(s):
	- withdraw(tokenId,_staking[msg.sender][tokenId]) (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#1247)
		- _dispatchedMiners[account] = _dispatchedMiners[account].sub(miners) (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#1102)
	MiningPool._dispatchedMiners (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#925) can be used in cross function reentrancies:
	- MiningPool._dispatchMiners(address,uint256) (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#1079-1089)
	- MiningPool._withdrawMiners(address,uint256) (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#1095-1104)
	- MiningPool.dispatchedMiners(address) (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#1062-1069)
	- MiningPool.mined(address) (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#1039-1046)
	- withdraw(tokenId,_staking[msg.sender][tokenId]) (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#1247)
		- _lastUpdateTime = lastTimeMiningApplicable() (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#937)
	MiningPool._lastUpdateTime (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#919) can be used in cross function reentrancies:
	- MiningPool.allocate(uint256) (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#970-995)
	- MiningPool.lastUpdateTime() (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#1017-1019)
	- MiningPool.recordMining(address) (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#935-943)
	- MiningPool.tokenPerMiner() (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#1025-1037)
	- withdraw(tokenId,_staking[msg.sender][tokenId]) (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#1247)
		- _mined[account] = mined(account) (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#939)
	MiningPool._mined (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#924) can be used in cross function reentrancies:
	- MiningPool._mine(address) (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#1110-1121)
	- MiningPool.mined(address) (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#1039-1046)
	- MiningPool.recordMining(address) (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#935-943)
	- withdraw(tokenId,_staking[msg.sender][tokenId]) (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#1247)
		- _paidTokenPerMiner[account] = _tokenPerMiner (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#940)
	MiningPool._paidTokenPerMiner (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#923) can be used in cross function reentrancies:
	- MiningPool.mined(address) (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#1039-1046)
	- MiningPool.paidTokenPerMiner(address) (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#1053-1060)
	- MiningPool.recordMining(address) (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#935-943)
	- withdraw(tokenId,_staking[msg.sender][tokenId]) (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#1247)
		- _status = _ENTERED (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#479)
		- _status = _NOT_ENTERED (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#485)
	ReentrancyGuard._status (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#461) can be used in cross function reentrancies:
	- ReentrancyGuard.nonReentrant() (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#474-486)
	- withdraw(tokenId,_staking[msg.sender][tokenId]) (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#1247)
		- _tokenPerMiner = tokenPerMiner() (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#936)
	MiningPool._tokenPerMiner (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#920) can be used in cross function reentrancies:
	- MiningPool.recordMining(address) (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#935-943)
	- MiningPool.tokenPerMiner() (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#1025-1037)
	- withdraw(tokenId,_staking[msg.sender][tokenId]) (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#1247)
		- _totalMiners = _totalMiners.sub(miners) (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#1101)
	MiningPool._totalMiners (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#921) can be used in cross function reentrancies:
	- MiningPool._dispatchMiners(address,uint256) (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#1079-1089)
	- MiningPool._withdrawMiners(address,uint256) (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#1095-1104)
	- MiningPool.tokenPerMiner() (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#1025-1037)
	- MiningPool.totalMiners() (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#1071-1073)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities
INFO:Detectors:
COMMIT._name (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#1321) shadows:
	- ERC20._name (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#621)
COMMIT._symbol (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#1322) shadows:
	- ERC20._symbol (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#622)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variable-shadowing
INFO:Detectors:
MiningPool.allocate(uint256) (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#970-995) performs a multiplication on the result of a division:
	- _miningRate = amount.div(miningPeriod) (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#978)
	- leftover = remaining.mul(_miningRate) (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#981)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#divide-before-multiply
INFO:Detectors:
ERC1155StakeMiningV1.stake(uint256,uint256).zero (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#1215) is a local variable never initialized
ERC1155StakeMiningV1.withdraw(uint256,uint256).zero (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#1231) is a local variable never initialized
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#uninitialized-local-variables
INFO:Detectors:
MiningPool.initialize(address,address).disable (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#960) shadows:
	- ERC20Recoverer.disable(address) (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#394-396) (function)
MiningPool.initialize(address,address)._INTERFACE_ID_ERC165 (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#965) shadows:
	- ERC165._INTERFACE_ID_ERC165 (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#46) (state variable)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing
INFO:Detectors:
ERC20Recoverer.setRecoverer(address) (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#376-378) should emit an event for: 
	- recoverer = _recoverer (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#377) 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-access-control
INFO:Detectors:
ERC20Recoverer.initialize(address,address[])._recoverer (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#366) lacks a zero-check on :
		- recoverer = _recoverer (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#373)
ERC20Recoverer.setRecoverer(address)._recoverer (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#376) lacks a zero-check on :
		- recoverer = _recoverer (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#377)
COMMIT.initialize(string,string,address).minter_ (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#1337) lacks a zero-check on :
		- _minter = minter_ (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#1341)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation
INFO:Detectors:
Reentrancy in ERC1155StakeMiningV1.exit(uint256) (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#1245-1248):
	External calls:
	- mine() (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#1246)
		- returndata = address(token).functionCall(data,SafeERC20: low-level call failed) (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#1764)
		- IERC20(_token).safeTransfer(account,amount) (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#1118)
		- (success,returndata) = target.call{value: value}(data) (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#1890)
	- withdraw(tokenId,_staking[msg.sender][tokenId]) (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#1247)
		- IERC1155(baseToken()).safeTransferFrom(address(this),msg.sender,tokenId,amount,zero) (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#1232-1238)
	External calls sending eth:
	- mine() (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#1246)
		- (success,returndata) = target.call{value: value}(data) (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#1890)
	Event emitted after the call(s):
	- Withdrawn(account,miners) (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#1103)
		- withdraw(tokenId,_staking[msg.sender][tokenId]) (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#1247)
Reentrancy in ERC20Recoverer.recoverERC20(address,uint256) (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#381-392):
	External calls:
	- IERC20(tokenAddress).safeTransfer(recoverer,tokenAmount) (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#390)
	Event emitted after the call(s):
	- Recovered(tokenAddress,tokenAmount) (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#391)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3
INFO:Detectors:
MiningPool.allocate(uint256) (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#970-995) uses timestamp for comparisons
	Dangerous comparisons:
	- block.timestamp >= _miningEnds (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#977)
	- require(bool,string)(_miningRate <= balance.div(miningPeriod),not enough balance) (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#990)
MiningPool._mine(address) (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#1110-1121) uses timestamp for comparisons
	Dangerous comparisons:
	- amount > 0 (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#1116)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp
INFO:Detectors:
Address.isContract(address) (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#1797-1806) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#1804)
Address._verifyCallResult(bool,bytes,string) (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#1942-1959) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#1951-1954)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage
INFO:Detectors:
ERC20Recoverer.recoverERC20(address,uint256) (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#381-392) compares to a boolean constant:
	-require(bool,string)(permanentlyNonRecoverable[tokenAddress] == false,Non-recoverable ERC20) (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#386-389)
ERC20Recoverer.recoverERC20(address,uint256) (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#381-392) compares to a boolean constant:
	-require(bool,string)(nonRecoverable[tokenAddress] == false,Non-recoverable ERC20) (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#385)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#boolean-equality
INFO:Detectors:
Different versions of Solidity are used:
	- Version used: ['>=0.4.24<0.8.0', '>=0.6.0<0.8.0', '>=0.7.0', '^0.7.0']
	- >=0.4.24<0.8.0 (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#88)
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#279)
	- >=0.7.0 (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#303)
	- >=0.7.0 (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#343)
	- >=0.7.0 (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#889)
	- >=0.7.0 (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#1186)
	- >=0.7.0 (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#1303)
	- >=0.7.0 (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#1383)
	- ^0.7.0 (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#7)
	- ^0.7.0 (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#32)
	- ^0.7.0 (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#143)
	- ^0.7.0 (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#221)
	- ^0.7.0 (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#409)
	- ^0.7.0 (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#428)
	- ^0.7.0 (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#491)
	- ^0.7.0 (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#582)
	- ^0.7.0 (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#1126)
	- ^0.7.0 (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#1145)
	- ^0.7.0 (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#1483)
	- ^0.7.0 (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#1698)
	- ^0.7.0 (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#1774)
	- ^0.7.0 (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#1964)
	- ^0.7.0 (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#2068)
	- v2 (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#2)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#different-pragma-directives-are-used
INFO:Detectors:
ReentrancyGuard.nonReentrant() (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#474-486) has costly operations inside a loop:
	- _status = _ENTERED (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#479)
ReentrancyGuard.nonReentrant() (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#474-486) has costly operations inside a loop:
	- _status = _NOT_ENTERED (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#485)
MiningPool.recordMining(address) (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#935-943) has costly operations inside a loop:
	- _tokenPerMiner = tokenPerMiner() (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#936)
MiningPool.recordMining(address) (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#935-943) has costly operations inside a loop:
	- _lastUpdateTime = lastTimeMiningApplicable() (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#937)
MiningPool._dispatchMiners(address,uint256) (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#1079-1089) has costly operations inside a loop:
	- _totalMiners = _totalMiners.add(miners) (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#1086)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#costly-operations-inside-a-loop
INFO:Detectors:
Address.functionCall(address,bytes) (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#1850-1852) is never used and should be removed
Address.functionCallWithValue(address,bytes,uint256) (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#1875-1877) is never used and should be removed
Address.functionDelegateCall(address,bytes) (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#1924-1926) is never used and should be removed
Address.functionDelegateCall(address,bytes,string) (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#1934-1940) is never used and should be removed
Address.functionStaticCall(address,bytes) (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#1900-1902) is never used and should be removed
Address.functionStaticCall(address,bytes,string) (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#1910-1916) is never used and should be removed
Address.sendValue(address,uint256) (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#1824-1830) is never used and should be removed
Context._msgData() (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#296-299) is never used and should be removed
ERC20._setupDecimals(uint8) (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#866-868) is never used and should be removed
Math.average(uint256,uint256) (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#2092-2095) is never used and should be removed
Math.max(uint256,uint256) (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#2077-2079) is never used and should be removed
MiningPool._dispatchMiners(uint256) (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#1075-1077) is never used and should be removed
Pausable._pause() (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#562-565) is never used and should be removed
Pausable._unpause() (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#574-577) is never used and should be removed
SafeERC20.safeApprove(IERC20,address,uint256) (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#1732-1741) is never used and should be removed
SafeERC20.safeDecreaseAllowance(IERC20,address,uint256) (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#1748-1751) is never used and should be removed
SafeERC20.safeIncreaseAllowance(IERC20,address,uint256) (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#1743-1746) is never used and should be removed
SafeERC20.safeTransferFrom(IERC20,address,address,uint256) (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#1721-1723) is never used and should be removed
SafeMath.div(uint256,uint256,string) (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#1670-1673) is never used and should be removed
SafeMath.mod(uint256,uint256) (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#1632-1635) is never used and should be removed
SafeMath.mod(uint256,uint256,string) (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#1690-1693) is never used and should be removed
SafeMath.tryAdd(uint256,uint256) (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#1504-1508) is never used and should be removed
SafeMath.tryDiv(uint256,uint256) (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#1540-1543) is never used and should be removed
SafeMath.tryMod(uint256,uint256) (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#1550-1553) is never used and should be removed
SafeMath.tryMul(uint256,uint256) (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#1525-1533) is never used and should be removed
SafeMath.trySub(uint256,uint256) (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#1515-1518) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code
INFO:Detectors:
Pragma version^0.7.0 (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#7) allows old versions
Pragma version^0.7.0 (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#32) allows old versions
Pragma version>=0.4.24<0.8.0 (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#88) is too complex
Pragma version^0.7.0 (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#143) allows old versions
Pragma version^0.7.0 (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#221) allows old versions
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#279) is too complex
Pragma version>=0.7.0 (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#303) allows old versions
Pragma version>=0.7.0 (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#343) allows old versions
Pragma version^0.7.0 (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#409) allows old versions
Pragma version^0.7.0 (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#428) allows old versions
Pragma version^0.7.0 (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#491) allows old versions
Pragma version^0.7.0 (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#582) allows old versions
Pragma version>=0.7.0 (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#889) allows old versions
Pragma version^0.7.0 (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#1126) allows old versions
Pragma version^0.7.0 (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#1145) allows old versions
Pragma version>=0.7.0 (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#1186) allows old versions
Pragma version>=0.7.0 (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#1303) allows old versions
Pragma version>=0.7.0 (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#1383) allows old versions
Pragma version^0.7.0 (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#1483) allows old versions
Pragma version^0.7.0 (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#1698) allows old versions
Pragma version^0.7.0 (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#1774) allows old versions
Pragma version^0.7.0 (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#1964) allows old versions
Pragma version^0.7.0 (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#2068) allows old versions
solc-0.7.6 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity
INFO:Detectors:
Low level call in Address.sendValue(address,uint256) (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#1824-1830):
	- (success) = recipient.call{value: amount}() (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#1828)
Low level call in Address.functionCallWithValue(address,bytes,uint256,string) (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#1885-1892):
	- (success,returndata) = target.call{value: value}(data) (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#1890)
Low level call in Address.functionStaticCall(address,bytes,string) (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#1910-1916):
	- (success,returndata) = target.staticcall(data) (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#1914)
Low level call in Address.functionDelegateCall(address,bytes,string) (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#1934-1940):
	- (success,returndata) = target.delegatecall(data) (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#1938)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls
INFO:Detectors:
Parameter ERC20Recoverer.initialize(address,address[])._recoverer (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#366) is not in mixedCase
Parameter ERC20Recoverer.setRecoverer(address)._recoverer (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#376) is not in mixedCase
Parameter ERC20Recoverer.disable(address)._contract (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#394) is not in mixedCase
Parameter ERC20Recoverer.disablePermanently(address)._contract (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#398) is not in mixedCase
Parameter ERC20Recoverer.enable(address)._contract (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#402) is not in mixedCase
Function ITokenEmitter.INITIAL_EMISSION() (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#1472) is not in mixedCase
Function ITokenEmitter.FOUNDER_SHARE_DENOMINATOR() (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#1474) is not in mixedCase
Function ITokenEmitter.EMISSION_PERIOD() (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#1476) is not in mixedCase
Function ITokenEmitter.DENOMINATOR() (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#1478) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions
INFO:Detectors:
Redundant expression "this (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#297)" inContext (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#291-300)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#redundant-statements
INFO:Detectors:
Variable IMiningPool.initialize(address,address)._tokenEmitter (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#311) is too similar to MiningPool.initialize(address,address).tokenEmitter_ (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#945)
Variable MiningPool._tokenEmitter (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#915) is too similar to MiningPool.initialize(address,address).tokenEmitter_ (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#945)
Variable IMiningPool.initialize(address,address)._tokenEmitter (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#311) is too similar to ERC1155StakeMiningV1.initialize(address,address).tokenEmitter_ (../../sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol#1199)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#variable-names-too-similar
INFO:Slither:/bdata2/sc/dataset/mainnet/0xd1b187de14a149d126e1e8bb2f1007da3eef9744.sol analyzed (23 contracts with 85 detectors), 93 result(s) found
