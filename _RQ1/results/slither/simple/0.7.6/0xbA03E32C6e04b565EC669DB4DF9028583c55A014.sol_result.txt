INFO:Detectors:
Reentrancy in NutDistributor.distribute() (../../sc/dataset/mainnet/0xbA03E32C6e04b565EC669DB4DF9028583c55A014.sol#288-336):
	External calls:
	- INut(nut).mintSink(sinkAmount) (../../sc/dataset/mainnet/0xbA03E32C6e04b565EC669DB4DF9028583c55A014.sol#309)
	- INut(nut).mint(address(this),amount) (../../sc/dataset/mainnet/0xbA03E32C6e04b565EC669DB4DF9028583c55A014.sol#310)
	State variables written after the call(s):
	- distCompletionMap[prevEpochId] = true (../../sc/dataset/mainnet/0xbA03E32C6e04b565EC669DB4DF9028583c55A014.sol#333)
	NutDistributor.distCompletionMap (../../sc/dataset/mainnet/0xbA03E32C6e04b565EC669DB4DF9028583c55A014.sol#156) can be used in cross function reentrancies:
	- NutDistributor.collect() (../../sc/dataset/mainnet/0xbA03E32C6e04b565EC669DB4DF9028583c55A014.sol#339-365)
	- NutDistributor.distCompletionMap (../../sc/dataset/mainnet/0xbA03E32C6e04b565EC669DB4DF9028583c55A014.sol#156)
	- NutDistributor.distribute() (../../sc/dataset/mainnet/0xbA03E32C6e04b565EC669DB4DF9028583c55A014.sol#288-336)
	- NutDistributor.getCollectionAmount() (../../sc/dataset/mainnet/0xbA03E32C6e04b565EC669DB4DF9028583c55A014.sol#368-392)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1
INFO:Detectors:
NutDistributor.getCollectionAmount().totalAmount (../../sc/dataset/mainnet/0xbA03E32C6e04b565EC669DB4DF9028583c55A014.sol#376) is a local variable never initialized
NutDistributor.collect().totalAmount (../../sc/dataset/mainnet/0xbA03E32C6e04b565EC669DB4DF9028583c55A014.sol#347) is a local variable never initialized
NutDistributor.distribute().actualSumOfNut (../../sc/dataset/mainnet/0xbA03E32C6e04b565EC669DB4DF9028583c55A014.sol#314) is a local variable never initialized
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#uninitialized-local-variables
INFO:Detectors:
Governable.acceptGovernor() (../../sc/dataset/mainnet/0xbA03E32C6e04b565EC669DB4DF9028583c55A014.sol#95-99) should emit an event for: 
	- governor = msg.sender (../../sc/dataset/mainnet/0xbA03E32C6e04b565EC669DB4DF9028583c55A014.sol#98) 
NutDistributor.setNutmegAddress(address) (../../sc/dataset/mainnet/0xbA03E32C6e04b565EC669DB4DF9028583c55A014.sol#177-179) should emit an event for: 
	- nutmeg = addr (../../sc/dataset/mainnet/0xbA03E32C6e04b565EC669DB4DF9028583c55A014.sol#178) 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-access-control
INFO:Detectors:
Governable.setPendingGovernor(address).addr (../../sc/dataset/mainnet/0xbA03E32C6e04b565EC669DB4DF9028583c55A014.sol#90) lacks a zero-check on :
		- pendingGovernor = addr (../../sc/dataset/mainnet/0xbA03E32C6e04b565EC669DB4DF9028583c55A014.sol#91)
NutDistributor.setNutmegAddress(address).addr (../../sc/dataset/mainnet/0xbA03E32C6e04b565EC669DB4DF9028583c55A014.sol#177) lacks a zero-check on :
		- nutmeg = addr (../../sc/dataset/mainnet/0xbA03E32C6e04b565EC669DB4DF9028583c55A014.sol#178)
NutDistributor.setPriceOracle(address).addr (../../sc/dataset/mainnet/0xbA03E32C6e04b565EC669DB4DF9028583c55A014.sol#182) lacks a zero-check on :
		- oracle = addr (../../sc/dataset/mainnet/0xbA03E32C6e04b565EC669DB4DF9028583c55A014.sol#183)
NutDistributor.initialize(address,address,address,uint256).nutAddr (../../sc/dataset/mainnet/0xbA03E32C6e04b565EC669DB4DF9028583c55A014.sol#187) lacks a zero-check on :
		- nut = nutAddr (../../sc/dataset/mainnet/0xbA03E32C6e04b565EC669DB4DF9028583c55A014.sol#191)
NutDistributor.initialize(address,address,address,uint256).oracleAddr (../../sc/dataset/mainnet/0xbA03E32C6e04b565EC669DB4DF9028583c55A014.sol#188) lacks a zero-check on :
		- oracle = oracleAddr (../../sc/dataset/mainnet/0xbA03E32C6e04b565EC669DB4DF9028583c55A014.sol#192)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation
INFO:Detectors:
NutDistributor.distribute() (../../sc/dataset/mainnet/0xbA03E32C6e04b565EC669DB4DF9028583c55A014.sol#288-336) has external calls inside a loop: INut(nut).mintSink(sinkAmount) (../../sc/dataset/mainnet/0xbA03E32C6e04b565EC669DB4DF9028583c55A014.sol#309)
NutDistributor.distribute() (../../sc/dataset/mainnet/0xbA03E32C6e04b565EC669DB4DF9028583c55A014.sol#288-336) has external calls inside a loop: INut(nut).mint(address(this),amount) (../../sc/dataset/mainnet/0xbA03E32C6e04b565EC669DB4DF9028583c55A014.sol#310)
NutDistributor.distribute() (../../sc/dataset/mainnet/0xbA03E32C6e04b565EC669DB4DF9028583c55A014.sol#288-336) has external calls inside a loop: price = IPriceOracle(oracle).getPrice(pools[i]) (../../sc/dataset/mainnet/0xbA03E32C6e04b565EC669DB4DF9028583c55A014.sol#316)
NutDistributor.distribute() (../../sc/dataset/mainnet/0xbA03E32C6e04b565EC669DB4DF9028583c55A014.sol#288-336) has external calls inside a loop: price_scope_1 = IPriceOracle(oracle).getPrice(pools[i_scope_0]) (../../sc/dataset/mainnet/0xbA03E32C6e04b565EC669DB4DF9028583c55A014.sol#323)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation/#calls-inside-a-loop
INFO:Detectors:
Reentrancy in NutDistributor.distribute() (../../sc/dataset/mainnet/0xbA03E32C6e04b565EC669DB4DF9028583c55A014.sol#288-336):
	External calls:
	- INut(nut).mintSink(sinkAmount) (../../sc/dataset/mainnet/0xbA03E32C6e04b565EC669DB4DF9028583c55A014.sol#309)
	- INut(nut).mint(address(this),amount) (../../sc/dataset/mainnet/0xbA03E32C6e04b565EC669DB4DF9028583c55A014.sol#310)
	State variables written after the call(s):
	- totalNutMap[pools[i_scope_0]][prevEpochId] = nutAmount (../../sc/dataset/mainnet/0xbA03E32C6e04b565EC669DB4DF9028583c55A014.sol#327)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2
INFO:Detectors:
AddressUpgradeable.isContract(address) (../../sc/dataset/mainnet/0xbA03E32C6e04b565EC669DB4DF9028583c55A014.sol#821-830) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0xbA03E32C6e04b565EC669DB4DF9028583c55A014.sol#828)
AddressUpgradeable._verifyCallResult(bool,bytes,string) (../../sc/dataset/mainnet/0xbA03E32C6e04b565EC669DB4DF9028583c55A014.sol#942-959) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0xbA03E32C6e04b565EC669DB4DF9028583c55A014.sol#951-954)
Address.isContract(address) (../../sc/dataset/mainnet/0xbA03E32C6e04b565EC669DB4DF9028583c55A014.sol#1234-1243) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0xbA03E32C6e04b565EC669DB4DF9028583c55A014.sol#1241)
Address._verifyCallResult(bool,bytes,string) (../../sc/dataset/mainnet/0xbA03E32C6e04b565EC669DB4DF9028583c55A014.sol#1379-1396) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0xbA03E32C6e04b565EC669DB4DF9028583c55A014.sol#1388-1391)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage
INFO:Detectors:
NutDistributor.distribute() (../../sc/dataset/mainnet/0xbA03E32C6e04b565EC669DB4DF9028583c55A014.sol#288-336) compares to a boolean constant:
	-require(bool,string)(distCompletionMap[NUM_EPOCH.sub(1)] == false,distribute: nut token distribution is over) (../../sc/dataset/mainnet/0xbA03E32C6e04b565EC669DB4DF9028583c55A014.sol#295)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#boolean-equality
INFO:Detectors:
Different versions of Solidity are used:
	- Version used: ['0.7.6', '>=0.4.24<0.8.0', '>=0.6.0<0.8.0', '>=0.6.2<0.8.0']
	- 0.7.6 (../../sc/dataset/mainnet/0xbA03E32C6e04b565EC669DB4DF9028583c55A014.sol#62)
	- 0.7.6 (../../sc/dataset/mainnet/0xbA03E32C6e04b565EC669DB4DF9028583c55A014.sol#71)
	- 0.7.6 (../../sc/dataset/mainnet/0xbA03E32C6e04b565EC669DB4DF9028583c55A014.sol#103)
	- 0.7.6 (../../sc/dataset/mainnet/0xbA03E32C6e04b565EC669DB4DF9028583c55A014.sol#412)
	- 0.7.6 (../../sc/dataset/mainnet/0xbA03E32C6e04b565EC669DB4DF9028583c55A014.sol#421)
	- >=0.4.24<0.8.0 (../../sc/dataset/mainnet/0xbA03E32C6e04b565EC669DB4DF9028583c55A014.sol#7)
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0xbA03E32C6e04b565EC669DB4DF9028583c55A014.sol#429)
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0xbA03E32C6e04b565EC669DB4DF9028583c55A014.sol#507)
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0xbA03E32C6e04b565EC669DB4DF9028583c55A014.sol#583)
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0xbA03E32C6e04b565EC669DB4DF9028583c55A014.sol#964)
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0xbA03E32C6e04b565EC669DB4DF9028583c55A014.sol#1179)
	- >=0.6.2<0.8.0 (../../sc/dataset/mainnet/0xbA03E32C6e04b565EC669DB4DF9028583c55A014.sol#798)
	- >=0.6.2<0.8.0 (../../sc/dataset/mainnet/0xbA03E32C6e04b565EC669DB4DF9028583c55A014.sol#1211)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#different-pragma-directives-are-used
INFO:Detectors:
Address._verifyCallResult(bool,bytes,string) (../../sc/dataset/mainnet/0xbA03E32C6e04b565EC669DB4DF9028583c55A014.sol#1379-1396) is never used and should be removed
Address.functionCall(address,bytes) (../../sc/dataset/mainnet/0xbA03E32C6e04b565EC669DB4DF9028583c55A014.sol#1287-1289) is never used and should be removed
Address.functionCall(address,bytes,string) (../../sc/dataset/mainnet/0xbA03E32C6e04b565EC669DB4DF9028583c55A014.sol#1297-1299) is never used and should be removed
Address.functionCallWithValue(address,bytes,uint256) (../../sc/dataset/mainnet/0xbA03E32C6e04b565EC669DB4DF9028583c55A014.sol#1312-1314) is never used and should be removed
Address.functionCallWithValue(address,bytes,uint256,string) (../../sc/dataset/mainnet/0xbA03E32C6e04b565EC669DB4DF9028583c55A014.sol#1322-1329) is never used and should be removed
Address.functionDelegateCall(address,bytes) (../../sc/dataset/mainnet/0xbA03E32C6e04b565EC669DB4DF9028583c55A014.sol#1361-1363) is never used and should be removed
Address.functionDelegateCall(address,bytes,string) (../../sc/dataset/mainnet/0xbA03E32C6e04b565EC669DB4DF9028583c55A014.sol#1371-1377) is never used and should be removed
Address.functionStaticCall(address,bytes) (../../sc/dataset/mainnet/0xbA03E32C6e04b565EC669DB4DF9028583c55A014.sol#1337-1339) is never used and should be removed
Address.functionStaticCall(address,bytes,string) (../../sc/dataset/mainnet/0xbA03E32C6e04b565EC669DB4DF9028583c55A014.sol#1347-1353) is never used and should be removed
Address.sendValue(address,uint256) (../../sc/dataset/mainnet/0xbA03E32C6e04b565EC669DB4DF9028583c55A014.sol#1261-1267) is never used and should be removed
AddressUpgradeable.functionCall(address,bytes) (../../sc/dataset/mainnet/0xbA03E32C6e04b565EC669DB4DF9028583c55A014.sol#874-876) is never used and should be removed
AddressUpgradeable.functionCallWithValue(address,bytes,uint256) (../../sc/dataset/mainnet/0xbA03E32C6e04b565EC669DB4DF9028583c55A014.sol#899-901) is never used and should be removed
AddressUpgradeable.functionStaticCall(address,bytes) (../../sc/dataset/mainnet/0xbA03E32C6e04b565EC669DB4DF9028583c55A014.sol#924-926) is never used and should be removed
AddressUpgradeable.functionStaticCall(address,bytes,string) (../../sc/dataset/mainnet/0xbA03E32C6e04b565EC669DB4DF9028583c55A014.sol#934-940) is never used and should be removed
AddressUpgradeable.sendValue(address,uint256) (../../sc/dataset/mainnet/0xbA03E32C6e04b565EC669DB4DF9028583c55A014.sol#848-854) is never used and should be removed
Math.average(uint256,uint256) (../../sc/dataset/mainnet/0xbA03E32C6e04b565EC669DB4DF9028583c55A014.sol#1203-1206) is never used and should be removed
Math.max(uint256,uint256) (../../sc/dataset/mainnet/0xbA03E32C6e04b565EC669DB4DF9028583c55A014.sol#1188-1190) is never used and should be removed
SafeERC20Upgradeable.safeApprove(IERC20Upgradeable,address,uint256) (../../sc/dataset/mainnet/0xbA03E32C6e04b565EC669DB4DF9028583c55A014.sol#541-550) is never used and should be removed
SafeERC20Upgradeable.safeDecreaseAllowance(IERC20Upgradeable,address,uint256) (../../sc/dataset/mainnet/0xbA03E32C6e04b565EC669DB4DF9028583c55A014.sol#557-560) is never used and should be removed
SafeERC20Upgradeable.safeIncreaseAllowance(IERC20Upgradeable,address,uint256) (../../sc/dataset/mainnet/0xbA03E32C6e04b565EC669DB4DF9028583c55A014.sol#552-555) is never used and should be removed
SafeERC20Upgradeable.safeTransferFrom(IERC20Upgradeable,address,address,uint256) (../../sc/dataset/mainnet/0xbA03E32C6e04b565EC669DB4DF9028583c55A014.sol#530-532) is never used and should be removed
SafeMath.div(uint256,uint256,string) (../../sc/dataset/mainnet/0xbA03E32C6e04b565EC669DB4DF9028583c55A014.sol#1151-1154) is never used and should be removed
SafeMath.mod(uint256,uint256) (../../sc/dataset/mainnet/0xbA03E32C6e04b565EC669DB4DF9028583c55A014.sol#1113-1116) is never used and should be removed
SafeMath.mod(uint256,uint256,string) (../../sc/dataset/mainnet/0xbA03E32C6e04b565EC669DB4DF9028583c55A014.sol#1171-1174) is never used and should be removed
SafeMath.sub(uint256,uint256,string) (../../sc/dataset/mainnet/0xbA03E32C6e04b565EC669DB4DF9028583c55A014.sol#1131-1134) is never used and should be removed
SafeMath.tryAdd(uint256,uint256) (../../sc/dataset/mainnet/0xbA03E32C6e04b565EC669DB4DF9028583c55A014.sol#985-989) is never used and should be removed
SafeMath.tryDiv(uint256,uint256) (../../sc/dataset/mainnet/0xbA03E32C6e04b565EC669DB4DF9028583c55A014.sol#1021-1024) is never used and should be removed
SafeMath.tryMod(uint256,uint256) (../../sc/dataset/mainnet/0xbA03E32C6e04b565EC669DB4DF9028583c55A014.sol#1031-1034) is never used and should be removed
SafeMath.tryMul(uint256,uint256) (../../sc/dataset/mainnet/0xbA03E32C6e04b565EC669DB4DF9028583c55A014.sol#1006-1014) is never used and should be removed
SafeMath.trySub(uint256,uint256) (../../sc/dataset/mainnet/0xbA03E32C6e04b565EC669DB4DF9028583c55A014.sol#996-999) is never used and should be removed
SafeMathUpgradeable.add(uint256,uint256) (../../sc/dataset/mainnet/0xbA03E32C6e04b565EC669DB4DF9028583c55A014.sol#665-669) is never used and should be removed
SafeMathUpgradeable.div(uint256,uint256) (../../sc/dataset/mainnet/0xbA03E32C6e04b565EC669DB4DF9028583c55A014.sol#715-718) is never used and should be removed
SafeMathUpgradeable.div(uint256,uint256,string) (../../sc/dataset/mainnet/0xbA03E32C6e04b565EC669DB4DF9028583c55A014.sol#770-773) is never used and should be removed
SafeMathUpgradeable.mod(uint256,uint256) (../../sc/dataset/mainnet/0xbA03E32C6e04b565EC669DB4DF9028583c55A014.sol#732-735) is never used and should be removed
SafeMathUpgradeable.mod(uint256,uint256,string) (../../sc/dataset/mainnet/0xbA03E32C6e04b565EC669DB4DF9028583c55A014.sol#790-793) is never used and should be removed
SafeMathUpgradeable.mul(uint256,uint256) (../../sc/dataset/mainnet/0xbA03E32C6e04b565EC669DB4DF9028583c55A014.sol#696-701) is never used and should be removed
SafeMathUpgradeable.sub(uint256,uint256) (../../sc/dataset/mainnet/0xbA03E32C6e04b565EC669DB4DF9028583c55A014.sol#681-684) is never used and should be removed
SafeMathUpgradeable.sub(uint256,uint256,string) (../../sc/dataset/mainnet/0xbA03E32C6e04b565EC669DB4DF9028583c55A014.sol#750-753) is never used and should be removed
SafeMathUpgradeable.tryAdd(uint256,uint256) (../../sc/dataset/mainnet/0xbA03E32C6e04b565EC669DB4DF9028583c55A014.sol#604-608) is never used and should be removed
SafeMathUpgradeable.tryDiv(uint256,uint256) (../../sc/dataset/mainnet/0xbA03E32C6e04b565EC669DB4DF9028583c55A014.sol#640-643) is never used and should be removed
SafeMathUpgradeable.tryMod(uint256,uint256) (../../sc/dataset/mainnet/0xbA03E32C6e04b565EC669DB4DF9028583c55A014.sol#650-653) is never used and should be removed
SafeMathUpgradeable.tryMul(uint256,uint256) (../../sc/dataset/mainnet/0xbA03E32C6e04b565EC669DB4DF9028583c55A014.sol#625-633) is never used and should be removed
SafeMathUpgradeable.trySub(uint256,uint256) (../../sc/dataset/mainnet/0xbA03E32C6e04b565EC669DB4DF9028583c55A014.sol#615-618) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code
INFO:Detectors:
Pragma version>=0.4.24<0.8.0 (../../sc/dataset/mainnet/0xbA03E32C6e04b565EC669DB4DF9028583c55A014.sol#7) is too complex
Pragma version0.7.6 (../../sc/dataset/mainnet/0xbA03E32C6e04b565EC669DB4DF9028583c55A014.sol#62) allows old versions
Pragma version0.7.6 (../../sc/dataset/mainnet/0xbA03E32C6e04b565EC669DB4DF9028583c55A014.sol#71) allows old versions
Pragma version0.7.6 (../../sc/dataset/mainnet/0xbA03E32C6e04b565EC669DB4DF9028583c55A014.sol#103) allows old versions
Pragma version0.7.6 (../../sc/dataset/mainnet/0xbA03E32C6e04b565EC669DB4DF9028583c55A014.sol#412) allows old versions
Pragma version0.7.6 (../../sc/dataset/mainnet/0xbA03E32C6e04b565EC669DB4DF9028583c55A014.sol#421) allows old versions
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0xbA03E32C6e04b565EC669DB4DF9028583c55A014.sol#429) is too complex
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0xbA03E32C6e04b565EC669DB4DF9028583c55A014.sol#507) is too complex
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0xbA03E32C6e04b565EC669DB4DF9028583c55A014.sol#583) is too complex
Pragma version>=0.6.2<0.8.0 (../../sc/dataset/mainnet/0xbA03E32C6e04b565EC669DB4DF9028583c55A014.sol#798) is too complex
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0xbA03E32C6e04b565EC669DB4DF9028583c55A014.sol#964) is too complex
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0xbA03E32C6e04b565EC669DB4DF9028583c55A014.sol#1179) is too complex
Pragma version>=0.6.2<0.8.0 (../../sc/dataset/mainnet/0xbA03E32C6e04b565EC669DB4DF9028583c55A014.sol#1211) is too complex
solc-0.7.6 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity
INFO:Detectors:
Low level call in AddressUpgradeable.sendValue(address,uint256) (../../sc/dataset/mainnet/0xbA03E32C6e04b565EC669DB4DF9028583c55A014.sol#848-854):
	- (success) = recipient.call{value: amount}() (../../sc/dataset/mainnet/0xbA03E32C6e04b565EC669DB4DF9028583c55A014.sol#852)
Low level call in AddressUpgradeable.functionCallWithValue(address,bytes,uint256,string) (../../sc/dataset/mainnet/0xbA03E32C6e04b565EC669DB4DF9028583c55A014.sol#909-916):
	- (success,returndata) = target.call{value: value}(data) (../../sc/dataset/mainnet/0xbA03E32C6e04b565EC669DB4DF9028583c55A014.sol#914)
Low level call in AddressUpgradeable.functionStaticCall(address,bytes,string) (../../sc/dataset/mainnet/0xbA03E32C6e04b565EC669DB4DF9028583c55A014.sol#934-940):
	- (success,returndata) = target.staticcall(data) (../../sc/dataset/mainnet/0xbA03E32C6e04b565EC669DB4DF9028583c55A014.sol#938)
Low level call in Address.sendValue(address,uint256) (../../sc/dataset/mainnet/0xbA03E32C6e04b565EC669DB4DF9028583c55A014.sol#1261-1267):
	- (success) = recipient.call{value: amount}() (../../sc/dataset/mainnet/0xbA03E32C6e04b565EC669DB4DF9028583c55A014.sol#1265)
Low level call in Address.functionCallWithValue(address,bytes,uint256,string) (../../sc/dataset/mainnet/0xbA03E32C6e04b565EC669DB4DF9028583c55A014.sol#1322-1329):
	- (success,returndata) = target.call{value: value}(data) (../../sc/dataset/mainnet/0xbA03E32C6e04b565EC669DB4DF9028583c55A014.sol#1327)
Low level call in Address.functionStaticCall(address,bytes,string) (../../sc/dataset/mainnet/0xbA03E32C6e04b565EC669DB4DF9028583c55A014.sol#1347-1353):
	- (success,returndata) = target.staticcall(data) (../../sc/dataset/mainnet/0xbA03E32C6e04b565EC669DB4DF9028583c55A014.sol#1351)
Low level call in Address.functionDelegateCall(address,bytes,string) (../../sc/dataset/mainnet/0xbA03E32C6e04b565EC669DB4DF9028583c55A014.sol#1371-1377):
	- (success,returndata) = target.delegatecall(data) (../../sc/dataset/mainnet/0xbA03E32C6e04b565EC669DB4DF9028583c55A014.sol#1375)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls
INFO:Detectors:
Function Governable.__Governable__init(address) (../../sc/dataset/mainnet/0xbA03E32C6e04b565EC669DB4DF9028583c55A014.sol#83-86) is not in mixedCase
Parameter Governable.__Governable__init(address)._governor (../../sc/dataset/mainnet/0xbA03E32C6e04b565EC669DB4DF9028583c55A014.sol#83) is not in mixedCase
Parameter NutDistributor.initialize(address,address,address,uint256)._governor (../../sc/dataset/mainnet/0xbA03E32C6e04b565EC669DB4DF9028583c55A014.sol#187) is not in mixedCase
Variable NutDistributor.DIST_START_BLOCK (../../sc/dataset/mainnet/0xbA03E32C6e04b565EC669DB4DF9028583c55A014.sol#146) is not in mixedCase
Variable NutDistributor.BLOCKS_PER_EPOCH (../../sc/dataset/mainnet/0xbA03E32C6e04b565EC669DB4DF9028583c55A014.sol#148) is not in mixedCase
Variable NutDistributor.CURRENT_EPOCH (../../sc/dataset/mainnet/0xbA03E32C6e04b565EC669DB4DF9028583c55A014.sol#152) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions
INFO:Slither:/bdata2/sc/dataset/mainnet/0xbA03E32C6e04b565EC669DB4DF9028583c55A014.sol analyzed (13 contracts with 85 detectors), 92 result(s) found
