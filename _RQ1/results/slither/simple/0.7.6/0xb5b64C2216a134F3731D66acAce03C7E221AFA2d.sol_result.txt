INFO:Detectors:
L2_NovaRegistry.areTokensUnlocked(bytes32) (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#1329-1341) uses a dangerous strict equality:
	- tokenUnlockTimestamp == 0 (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#1332)
L2_NovaRegistry.speedUpRequest(bytes32,uint256) (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#1142-1202) uses a dangerous strict equality:
	- require(bool,string)(getRequestDeathTimestamp[execHash] == 0,ALREADY_SPED_UP) (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#1151)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dangerous-strict-equalities
INFO:Detectors:
Reentrancy in L1_NovaExecutionManager.exec(uint256,address,bytes,uint256,address,uint256) (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#295-386):
	External calls:
	- (success,returnData) = strategy.call{gas: gasLimit.sub(msg.data.length.mul(gasConfig.calldataByteGasEstimate)).sub(gasConfig.strategyCallGasBuffer).sub(gasConfig.missingGasEstimate).sub(startGas - gasleft()())}(l1Calldata) (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#346-352)
	State variables written after the call(s):
	- currentExecHash = DEFAULT_EXECHASH (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#361)
	L1_NovaExecutionManager.currentExecHash (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#283) can be used in cross function reentrancies:
	- L1_NovaExecutionManager.currentExecHash (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#283)
	- L1_NovaExecutionManager.exec(uint256,address,bytes,uint256,address,uint256) (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#295-386)
	- L1_NovaExecutionManager.transferFromRelayer(address,uint256) (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#399-422)
Reentrancy in L2_NovaRegistry.requestExec(address,bytes,uint256,uint256,uint256,L2_NovaRegistry.InputToken[]) (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#962-1006):
	External calls:
	- inputTokens[i].l2Token.safeTransferFrom(msg.sender,address(this),inputTokens[i].amount) (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#1001)
	State variables written after the call(s):
	- requestInputTokens[execHash].push(inputTokens[i]) (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#1004)
	L2_NovaRegistry.requestInputTokens (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#891) can be used in cross function reentrancies:
	- L2_NovaRegistry.claimInputTokens(bytes32) (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#1032-1052)
	- L2_NovaRegistry.getRequestInputTokens(bytes32) (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#895-897)
	- L2_NovaRegistry.requestExec(address,bytes,uint256,uint256,uint256,L2_NovaRegistry.InputToken[]) (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#962-1006)
	- L2_NovaRegistry.withdrawTokens(bytes32) (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#1108-1134)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1
INFO:Detectors:
Auth.setOwner(address).newOwner (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#38) lacks a zero-check on :
		- owner = newOwner (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#39)
L1_NovaExecutionManager.constructor(address,iOVM_CrossDomainMessenger)._L2_NOVA_REGISTRY_ADDRESS (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#158) lacks a zero-check on :
		- L2_NOVA_REGISTRY_ADDRESS = _L2_NOVA_REGISTRY_ADDRESS (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#161)
L2_NovaRegistry.connectExecutionManager(address).newExecutionManagerAddress (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#798) lacks a zero-check on :
		- L1_NovaExecutionManagerAddress = newExecutionManagerAddress (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#799)
L1_NovaApprovalEscrow.transferApprovedToken(address,uint256,address,address).token (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#1364) lacks a zero-check on :
		- (success,returnData) = address(token).call(abi.encodeWithSelector(IERC20(token).transferFrom.selector,sender,recipient,amount)) (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#1373-1384)
L1_NovaApprovalEscrow.transferApprovedToken(address,uint256,address,address).sender (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#1366) lacks a zero-check on :
		- (success,returnData) = address(token).call(abi.encodeWithSelector(IERC20(token).transferFrom.selector,sender,recipient,amount)) (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#1373-1384)
L1_NovaApprovalEscrow.transferApprovedToken(address,uint256,address,address).recipient (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#1367) lacks a zero-check on :
		- (success,returnData) = address(token).call(abi.encodeWithSelector(IERC20(token).transferFrom.selector,sender,recipient,amount)) (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#1373-1384)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation
INFO:Detectors:
Reentrancy in L2_NovaRegistry.requestExecWithTimeout(address,bytes,uint256,uint256,uint256,L2_NovaRegistry.InputToken[],uint256) (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#1010-1024):
	External calls:
	- execHash = requestExec(strategy,l1Calldata,gasLimit,gasPrice,tip,inputTokens) (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#1020)
		- returndata = address(token).functionCall(data,SafeERC20: low-level call failed) (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#1521)
		- (success,returndata) = target.call{value: value}(data) (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#1662)
		- inputTokens[i].l2Token.safeTransferFrom(msg.sender,address(this),inputTokens[i].amount) (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#1001)
	External calls sending eth:
	- execHash = requestExec(strategy,l1Calldata,gasLimit,gasPrice,tip,inputTokens) (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#1020)
		- (success,returndata) = target.call{value: value}(data) (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#1662)
	State variables written after the call(s):
	- unlockTokens(execHash,autoUnlockDelaySeconds) (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#1023)
		- getRequestUnlockTimestamp[execHash] = unlockTimestamp (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#1076)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2
INFO:Detectors:
Reentrancy in L1_NovaExecutionManager.exec(uint256,address,bytes,uint256,address,uint256) (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#295-386):
	External calls:
	- (success,returnData) = strategy.call{gas: gasLimit.sub(msg.data.length.mul(gasConfig.calldataByteGasEstimate)).sub(gasConfig.strategyCallGasBuffer).sub(gasConfig.missingGasEstimate).sub(startGas - gasleft()())}(l1Calldata) (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#346-352)
	- CROSS_DOMAIN_MESSENGER.sendMessage(L2_NOVA_REGISTRY_ADDRESS,abi.encodeWithSelector(L2_NovaRegistry.execCompleted.selector,execHash,l2Recipient,! success,gasUsedEstimate),gasConfig.execCompletedMessageGasLimit) (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#369-383)
	Event emitted after the call(s):
	- Exec(execHash,msg.sender,! success,gasUsedEstimate) (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#385)
Reentrancy in L2_NovaRegistry.requestExecWithTimeout(address,bytes,uint256,uint256,uint256,L2_NovaRegistry.InputToken[],uint256) (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#1010-1024):
	External calls:
	- execHash = requestExec(strategy,l1Calldata,gasLimit,gasPrice,tip,inputTokens) (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#1020)
		- returndata = address(token).functionCall(data,SafeERC20: low-level call failed) (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#1521)
		- (success,returndata) = target.call{value: value}(data) (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#1662)
		- inputTokens[i].l2Token.safeTransferFrom(msg.sender,address(this),inputTokens[i].amount) (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#1001)
	External calls sending eth:
	- execHash = requestExec(strategy,l1Calldata,gasLimit,gasPrice,tip,inputTokens) (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#1020)
		- (success,returndata) = target.call{value: value}(data) (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#1662)
	Event emitted after the call(s):
	- UnlockTokens(execHash,unlockTimestamp) (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#1078)
		- unlockTokens(execHash,autoUnlockDelaySeconds) (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#1023)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3
INFO:Detectors:
L1_NovaExecutionManager.exec(uint256,address,bytes,uint256,address,uint256) (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#295-386) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(block.timestamp <= deadline,PAST_DEADLINE) (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#307)
L2_NovaRegistry.unlockTokens(bytes32,uint256) (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#1060-1079) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(requestHasTokens,REQUEST_HAS_NO_TOKENS) (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#1063)
	- require(bool,string)(getRequestUnlockTimestamp[execHash] == 0,UNLOCK_ALREADY_SCHEDULED) (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#1066)
L2_NovaRegistry.relockTokens(bytes32) (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#1085-1101) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(requestHasTokens,REQUEST_HAS_NO_TOKENS) (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#1088)
L2_NovaRegistry.withdrawTokens(bytes32) (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#1108-1134) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(requestHasTokens,REQUEST_HAS_NO_TOKENS) (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#1115)
L2_NovaRegistry.speedUpRequest(bytes32,uint256) (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#1142-1202) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(requestHasTokens,REQUEST_HAS_NO_TOKENS) (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#1145)
	- require(bool,string)(getRequestDeathTimestamp[execHash] == 0,ALREADY_SPED_UP) (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#1151)
	- require(bool,string)(tokenUnlockTimestamp == 0 || tokenUnlockTimestamp > switchTimestamp,UNLOCK_BEFORE_SWITCH) (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#1165)
L2_NovaRegistry.execCompleted(bytes32,address,bool,uint256) (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#1214-1255) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(requestHasTokens,REQUEST_HAS_NO_TOKENS) (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#1222)
L2_NovaRegistry.hasTokens(bytes32) (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#1270-1321) uses timestamp for comparisons
	Dangerous comparisons:
	- deathTimestamp != 0 (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#1278)
	- block.timestamp >= deathTimestamp (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#1279)
	- uncleDeathTimestamp > block.timestamp (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#1311)
L2_NovaRegistry.areTokensUnlocked(bytes32) (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#1329-1341) uses timestamp for comparisons
	Dangerous comparisons:
	- tokenUnlockTimestamp == 0 (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#1332)
	- unlocked = block.timestamp >= tokenUnlockTimestamp (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#1338)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp
INFO:Detectors:
Address.isContract(address) (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#1569-1578) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#1576)
Address._verifyCallResult(bool,bytes,string) (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#1714-1731) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#1723-1726)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage
INFO:Detectors:
Different versions of Solidity are used:
	- Version used: ['0.7.6', '>0.5.0<0.8.0', '>=0.6.0<0.8.0', '>=0.6.2<0.8.0', '>=0.7.0']
	- 0.7.6 (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#80)
	- 0.7.6 (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#107)
	- 0.7.6 (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#736)
	- 0.7.6 (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#756)
	- 0.7.6 (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#1345)
	- 0.7.6 (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#1530)
	- >0.5.0<0.8.0 (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#1412)
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#444)
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#659)
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#1455)
	- >=0.6.2<0.8.0 (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#1546)
	- >=0.7.0 (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#7)
	- ABIEncoderV2 (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#3)
	- v2 (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#2)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#different-pragma-directives-are-used
INFO:Detectors:
Address.functionCall(address,bytes) (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#1622-1624) is never used and should be removed
Address.functionCallWithValue(address,bytes,uint256) (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#1647-1649) is never used and should be removed
Address.functionDelegateCall(address,bytes) (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#1696-1698) is never used and should be removed
Address.functionDelegateCall(address,bytes,string) (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#1706-1712) is never used and should be removed
Address.functionStaticCall(address,bytes) (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#1672-1674) is never used and should be removed
Address.functionStaticCall(address,bytes,string) (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#1682-1688) is never used and should be removed
Address.sendValue(address,uint256) (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#1596-1602) is never used and should be removed
SafeERC20.safeApprove(IERC20,address,uint256) (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#1489-1498) is never used and should be removed
SafeERC20.safeDecreaseAllowance(IERC20,address,uint256) (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#1505-1508) is never used and should be removed
SafeERC20.safeIncreaseAllowance(IERC20,address,uint256) (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#1500-1503) is never used and should be removed
SafeMath.div(uint256,uint256) (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#576-579) is never used and should be removed
SafeMath.div(uint256,uint256,string) (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#631-634) is never used and should be removed
SafeMath.mod(uint256,uint256) (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#593-596) is never used and should be removed
SafeMath.mod(uint256,uint256,string) (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#651-654) is never used and should be removed
SafeMath.sub(uint256,uint256,string) (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#611-614) is never used and should be removed
SafeMath.tryAdd(uint256,uint256) (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#465-469) is never used and should be removed
SafeMath.tryDiv(uint256,uint256) (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#501-504) is never used and should be removed
SafeMath.tryMod(uint256,uint256) (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#511-514) is never used and should be removed
SafeMath.tryMul(uint256,uint256) (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#486-494) is never used and should be removed
SafeMath.trySub(uint256,uint256) (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#476-479) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code
INFO:Detectors:
Pragma version>=0.7.0 (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#7) allows old versions
Pragma version0.7.6 (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#80) allows old versions
Pragma version0.7.6 (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#107) allows old versions
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#444) is too complex
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#659) is too complex
Pragma version0.7.6 (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#736) allows old versions
Pragma version0.7.6 (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#756) allows old versions
Pragma version0.7.6 (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#1345) allows old versions
Pragma version>0.5.0<0.8.0 (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#1412) is too complex
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#1455) is too complex
Pragma version0.7.6 (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#1530) allows old versions
Pragma version>=0.6.2<0.8.0 (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#1546) is too complex
solc-0.7.6 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity
INFO:Detectors:
Low level call in L1_NovaExecutionManager.exec(uint256,address,bytes,uint256,address,uint256) (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#295-386):
	- (success,returnData) = strategy.call{gas: gasLimit.sub(msg.data.length.mul(gasConfig.calldataByteGasEstimate)).sub(gasConfig.strategyCallGasBuffer).sub(gasConfig.missingGasEstimate).sub(startGas - gasleft()())}(l1Calldata) (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#346-352)
Low level call in L1_NovaApprovalEscrow.transferApprovedToken(address,uint256,address,address) (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#1363-1408):
	- (success,returnData) = address(token).call(abi.encodeWithSelector(IERC20(token).transferFrom.selector,sender,recipient,amount)) (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#1373-1384)
Low level call in SafeTransferLib.safeTransferETH(address,uint256) (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#1538-1541):
	- (success) = to.call{value: value}(new bytes(0)) (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#1539)
Low level call in Address.sendValue(address,uint256) (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#1596-1602):
	- (success) = recipient.call{value: amount}() (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#1600)
Low level call in Address.functionCallWithValue(address,bytes,uint256,string) (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#1657-1664):
	- (success,returndata) = target.call{value: value}(data) (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#1662)
Low level call in Address.functionStaticCall(address,bytes,string) (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#1682-1688):
	- (success,returndata) = target.staticcall(data) (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#1686)
Low level call in Address.functionDelegateCall(address,bytes,string) (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#1706-1712):
	- (success,returndata) = target.delegatecall(data) (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#1710)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls
INFO:Detectors:
Variable CrossDomainEnabled.CROSS_DOMAIN_MESSENGER (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#88) is not in mixedCase
Contract L1_NovaExecutionManager (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#122-431) is not in CapWords
Variable L1_NovaExecutionManager.L2_NOVA_REGISTRY_ADDRESS (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#148) is not in mixedCase
Variable L1_NovaExecutionManager.L1_NOVA_APPROVAL_ESCROW (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#154) is not in mixedCase
Contract L2_NovaRegistry (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#771-1342) is not in CapWords
Variable L2_NovaRegistry.L1_NovaExecutionManagerAddress (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#794) is not in mixedCase
Contract L1_NovaApprovalEscrow (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#1351-1409) is not in CapWords
Variable L1_NovaApprovalEscrow.ESCROW_ADMIN (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#1354) is not in mixedCase
Contract iOVM_CrossDomainMessenger (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#1418-1451) is not in CapWords
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions
INFO:Detectors:
L1_NovaExecutionManager.slitherConstructorVariables() (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#122-431) uses literals with too many digits:
	- gasConfig = GasConfig(13,200000,5000,1500000) (../../sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol#211-217)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits
INFO:Slither:/bdata2/sc/dataset/mainnet/0xb5b64C2216a134F3731D66acAce03C7E221AFA2d.sol analyzed (13 contracts with 85 detectors), 74 result(s) found
