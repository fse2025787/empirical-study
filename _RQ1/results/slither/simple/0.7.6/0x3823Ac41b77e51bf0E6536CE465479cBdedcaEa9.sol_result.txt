INFO:Detectors:
UniswapV2Pair._update(uint256,uint256,uint112,uint112) (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#280-293) uses a weak PRNG: "blockTimestamp = uint32(block.timestamp % 2 ** 32) (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#282)" 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#weak-PRNG
INFO:Detectors:
UniswapV2Pair._safeTransfer(address,address,uint256) (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#246-249) uses a dangerous strict equality:
	- require(bool,string)(success && (data.length == 0 || abi.decode(data,(bool))),UniswapV2: TRANSFER_FAILED) (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#248)
UniswapV2Pair.mint(address) (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#317-345) uses a dangerous strict equality:
	- _totalSupply == 0 (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#326)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dangerous-strict-equalities
INFO:Detectors:
Reentrancy in UniswapV2Pair.burn(address) (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#348-370):
	External calls:
	- _safeTransfer(_token0,to,amount0) (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#362)
		- (success,data) = token.call(abi.encodeWithSelector(SELECTOR,to,value)) (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#247)
	- _safeTransfer(_token1,to,amount1) (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#363)
		- (success,data) = token.call(abi.encodeWithSelector(SELECTOR,to,value)) (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#247)
	State variables written after the call(s):
	- _update(balance0,balance1,_reserve0,_reserve1) (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#367)
		- blockTimestampLast = blockTimestamp (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#291)
	UniswapV2Pair.blockTimestampLast (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#226) can be used in cross function reentrancies:
	- UniswapV2Pair._update(uint256,uint256,uint112,uint112) (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#280-293)
	- UniswapV2Pair.getReserves() (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#240-244)
	- kLast = uint256(reserve0).mul(reserve1) (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#368)
	UniswapV2Pair.kLast (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#230) can be used in cross function reentrancies:
	- UniswapV2Pair._mintFee(uint112,uint112) (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#296-314)
	- UniswapV2Pair.burn(address) (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#348-370)
	- UniswapV2Pair.kLast (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#230)
	- UniswapV2Pair.mint(address) (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#317-345)
	- _update(balance0,balance1,_reserve0,_reserve1) (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#367)
		- reserve0 = uint112(balance0) (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#289)
	UniswapV2Pair.reserve0 (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#224) can be used in cross function reentrancies:
	- UniswapV2Pair._update(uint256,uint256,uint112,uint112) (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#280-293)
	- UniswapV2Pair.burn(address) (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#348-370)
	- UniswapV2Pair.getReserves() (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#240-244)
	- UniswapV2Pair.mint(address) (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#317-345)
	- UniswapV2Pair.skim(address) (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#404-409)
	- UniswapV2Pair.sync() (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#412-414)
	- _update(balance0,balance1,_reserve0,_reserve1) (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#367)
		- reserve1 = uint112(balance1) (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#290)
	UniswapV2Pair.reserve1 (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#225) can be used in cross function reentrancies:
	- UniswapV2Pair._update(uint256,uint256,uint112,uint112) (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#280-293)
	- UniswapV2Pair.burn(address) (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#348-370)
	- UniswapV2Pair.getReserves() (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#240-244)
	- UniswapV2Pair.mint(address) (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#317-345)
	- UniswapV2Pair.skim(address) (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#404-409)
	- UniswapV2Pair.sync() (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#412-414)
Reentrancy in UniswapV2Factory.createPair(address,address,uint256) (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#150-168):
	External calls:
	- UniswapV2Pair(pair).initialize(token0,token1) (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#162)
	State variables written after the call(s):
	- getPair[token0][token1] = pair (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#163)
	UniswapV2Factory.getPair (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#135) can be used in cross function reentrancies:
	- UniswapV2Factory.createPair(address,address,uint256) (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#150-168)
	- UniswapV2Factory.getPair (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#135)
	- UniswapV2Factory.setFee(address,address,uint256) (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#185-192)
	- getPair[token1][token0] = pair (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#164)
	UniswapV2Factory.getPair (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#135) can be used in cross function reentrancies:
	- UniswapV2Factory.createPair(address,address,uint256) (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#150-168)
	- UniswapV2Factory.getPair (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#135)
	- UniswapV2Factory.setFee(address,address,uint256) (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#185-192)
Reentrancy in UniswapV2Pair.swap(uint256,uint256,address,bytes) (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#373-401):
	External calls:
	- _safeTransfer(_token0,to,amount0Out) (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#384)
		- (success,data) = token.call(abi.encodeWithSelector(SELECTOR,to,value)) (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#247)
	- _safeTransfer(_token1,to,amount1Out) (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#385)
		- (success,data) = token.call(abi.encodeWithSelector(SELECTOR,to,value)) (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#247)
	- IUniswapV2Callee(to).uniswapV2Call(msg.sender,amount0Out,amount1Out,data) (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#386)
	State variables written after the call(s):
	- _update(balance0,balance1,_reserve0,_reserve1) (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#399)
		- blockTimestampLast = blockTimestamp (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#291)
	UniswapV2Pair.blockTimestampLast (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#226) can be used in cross function reentrancies:
	- UniswapV2Pair._update(uint256,uint256,uint112,uint112) (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#280-293)
	- UniswapV2Pair.getReserves() (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#240-244)
	- _update(balance0,balance1,_reserve0,_reserve1) (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#399)
		- reserve0 = uint112(balance0) (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#289)
	UniswapV2Pair.reserve0 (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#224) can be used in cross function reentrancies:
	- UniswapV2Pair._update(uint256,uint256,uint112,uint112) (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#280-293)
	- UniswapV2Pair.burn(address) (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#348-370)
	- UniswapV2Pair.getReserves() (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#240-244)
	- UniswapV2Pair.mint(address) (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#317-345)
	- UniswapV2Pair.skim(address) (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#404-409)
	- UniswapV2Pair.sync() (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#412-414)
	- _update(balance0,balance1,_reserve0,_reserve1) (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#399)
		- reserve1 = uint112(balance1) (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#290)
	UniswapV2Pair.reserve1 (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#225) can be used in cross function reentrancies:
	- UniswapV2Pair._update(uint256,uint256,uint112,uint112) (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#280-293)
	- UniswapV2Pair.burn(address) (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#348-370)
	- UniswapV2Pair.getReserves() (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#240-244)
	- UniswapV2Pair.mint(address) (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#317-345)
	- UniswapV2Pair.skim(address) (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#404-409)
	- UniswapV2Pair.sync() (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#412-414)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1
INFO:Detectors:
UniswapV2Pair.setFee(uint256) (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#274-277) should emit an event for: 
	- fee = _fee (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#276) 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-arithmetic
INFO:Detectors:
UniswapV2Factory.constructor(address)._feeToSetter (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#138) lacks a zero-check on :
		- feeToSetter = _feeToSetter (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#139)
UniswapV2Factory.setFeeTo(address)._feeTo (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#170) lacks a zero-check on :
		- feeTo = _feeTo (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#172)
UniswapV2Factory.setMigrator(address)._migrator (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#175) lacks a zero-check on :
		- migrator = _migrator (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#177)
UniswapV2Factory.setFeeToSetter(address)._feeToSetter (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#180) lacks a zero-check on :
		- feeToSetter = _feeToSetter (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#182)
UniswapV2Pair.initialize(address,address)._token0 (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#268) lacks a zero-check on :
		- token0 = _token0 (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#270)
UniswapV2Pair.initialize(address,address)._token1 (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#268) lacks a zero-check on :
		- token1 = _token1 (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#271)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation
INFO:Detectors:
Reentrancy in UniswapV2Pair.burn(address) (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#348-370):
	External calls:
	- _safeTransfer(_token0,to,amount0) (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#362)
		- (success,data) = token.call(abi.encodeWithSelector(SELECTOR,to,value)) (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#247)
	- _safeTransfer(_token1,to,amount1) (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#363)
		- (success,data) = token.call(abi.encodeWithSelector(SELECTOR,to,value)) (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#247)
	State variables written after the call(s):
	- _update(balance0,balance1,_reserve0,_reserve1) (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#367)
		- price0CumulativeLast += uint256(UQ112x112.encode(_reserve1).uqdiv(_reserve0)) * timeElapsed (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#286)
	- _update(balance0,balance1,_reserve0,_reserve1) (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#367)
		- price1CumulativeLast += uint256(UQ112x112.encode(_reserve0).uqdiv(_reserve1)) * timeElapsed (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#287)
Reentrancy in UniswapV2Factory.createPair(address,address,uint256) (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#150-168):
	External calls:
	- UniswapV2Pair(pair).initialize(token0,token1) (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#162)
	State variables written after the call(s):
	- allPairs.push(pair) (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#165)
Reentrancy in UniswapV2Pair.swap(uint256,uint256,address,bytes) (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#373-401):
	External calls:
	- _safeTransfer(_token0,to,amount0Out) (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#384)
		- (success,data) = token.call(abi.encodeWithSelector(SELECTOR,to,value)) (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#247)
	- _safeTransfer(_token1,to,amount1Out) (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#385)
		- (success,data) = token.call(abi.encodeWithSelector(SELECTOR,to,value)) (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#247)
	- IUniswapV2Callee(to).uniswapV2Call(msg.sender,amount0Out,amount1Out,data) (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#386)
	State variables written after the call(s):
	- _update(balance0,balance1,_reserve0,_reserve1) (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#399)
		- price0CumulativeLast += uint256(UQ112x112.encode(_reserve1).uqdiv(_reserve0)) * timeElapsed (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#286)
	- _update(balance0,balance1,_reserve0,_reserve1) (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#399)
		- price1CumulativeLast += uint256(UQ112x112.encode(_reserve0).uqdiv(_reserve1)) * timeElapsed (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#287)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2
INFO:Detectors:
Reentrancy in UniswapV2Pair.burn(address) (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#348-370):
	External calls:
	- _safeTransfer(_token0,to,amount0) (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#362)
		- (success,data) = token.call(abi.encodeWithSelector(SELECTOR,to,value)) (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#247)
	- _safeTransfer(_token1,to,amount1) (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#363)
		- (success,data) = token.call(abi.encodeWithSelector(SELECTOR,to,value)) (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#247)
	Event emitted after the call(s):
	- Burn(msg.sender,amount0,amount1,to) (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#369)
	- Sync(reserve0,reserve1) (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#292)
		- _update(balance0,balance1,_reserve0,_reserve1) (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#367)
Reentrancy in UniswapV2Factory.createPair(address,address,uint256) (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#150-168):
	External calls:
	- UniswapV2Pair(pair).initialize(token0,token1) (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#162)
	- UniswapV2Pair(pair).setFee(fee) (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#166)
	Event emitted after the call(s):
	- PairCreated(token0,token1,pair,allPairs.length) (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#167)
Reentrancy in UniswapV2Pair.swap(uint256,uint256,address,bytes) (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#373-401):
	External calls:
	- _safeTransfer(_token0,to,amount0Out) (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#384)
		- (success,data) = token.call(abi.encodeWithSelector(SELECTOR,to,value)) (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#247)
	- _safeTransfer(_token1,to,amount1Out) (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#385)
		- (success,data) = token.call(abi.encodeWithSelector(SELECTOR,to,value)) (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#247)
	- IUniswapV2Callee(to).uniswapV2Call(msg.sender,amount0Out,amount1Out,data) (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#386)
	Event emitted after the call(s):
	- Swap(msg.sender,amount0In,amount1In,amount0Out,amount1Out,to) (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#400)
	- Sync(reserve0,reserve1) (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#292)
		- _update(balance0,balance1,_reserve0,_reserve1) (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#399)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3
INFO:Detectors:
UniswapV2ERC20.permit(address,address,uint256,uint256,uint8,bytes32,bytes32) (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#84-96) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(deadline >= block.timestamp,UniswapV2: EXPIRED) (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#85)
UniswapV2Pair._update(uint256,uint256,uint112,uint112) (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#280-293) uses timestamp for comparisons
	Dangerous comparisons:
	- timeElapsed > 0 && _reserve0 != 0 && _reserve1 != 0 (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#284)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp
INFO:Detectors:
UniswapV2ERC20.constructor() (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#27-41) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#29-31)
UniswapV2Factory.createPair(address,address,uint256) (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#150-168) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#159-161)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage
INFO:Detectors:
Pragma version^0.7.0 (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#5) allows old versions
Pragma version^0.7.0 (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#101) allows old versions
Pragma version^0.7.0 (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#124) allows old versions
Pragma version^0.7.0 (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#197) allows old versions
Pragma version^0.7.0 (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#419) allows old versions
Pragma version^0.7.0 (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#439) allows old versions
Pragma version^0.7.0 (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#447) allows old versions
Pragma version^0.7.0 (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#473) allows old versions
Pragma version^0.7.0 (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#493) allows old versions
solc-0.7.6 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity
INFO:Detectors:
Low level call in UniswapV2Pair._safeTransfer(address,address,uint256) (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#246-249):
	- (success,data) = token.call(abi.encodeWithSelector(SELECTOR,to,value)) (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#247)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls
INFO:Detectors:
Variable UniswapV2ERC20.DOMAIN_SEPARATOR (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#19) is not in mixedCase
Parameter UniswapV2Factory.setFeeTo(address)._feeTo (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#170) is not in mixedCase
Parameter UniswapV2Factory.setMigrator(address)._migrator (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#175) is not in mixedCase
Parameter UniswapV2Factory.setFeeToSetter(address)._feeToSetter (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#180) is not in mixedCase
Parameter UniswapV2Pair.initialize(address,address)._token0 (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#268) is not in mixedCase
Parameter UniswapV2Pair.initialize(address,address)._token1 (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#268) is not in mixedCase
Parameter UniswapV2Pair.setFee(uint256)._fee (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#274) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions
INFO:Detectors:
Variable UniswapV2Pair.swap(uint256,uint256,address,bytes).balance0Adjusted (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#394) is too similar to UniswapV2Pair.swap(uint256,uint256,address,bytes).balance1Adjusted (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#395)
Variable UniswapV2Pair.price0CumulativeLast (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#228) is too similar to UniswapV2Pair.price1CumulativeLast (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#229)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#variable-names-too-similar
INFO:Detectors:
UniswapV2Factory.pairCodeHash() (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#146-148) uses literals with too many digits:
	- keccak256(bytes)(type()(UniswapV2Pair).creationCode) (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#147)
UniswapV2Factory.createPair(address,address,uint256) (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#150-168) uses literals with too many digits:
	- bytecode = type()(UniswapV2Pair).creationCode (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#157)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits
INFO:Detectors:
UniswapV2ERC20.DOMAIN_SEPARATOR (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#19) should be immutable 
UniswapV2Pair.factory (../../sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol#219) should be immutable 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-immutable
INFO:Slither:/bdata2/sc/dataset/mainnet/0x3823Ac41b77e51bf0E6536CE465479cBdedcaEa9.sol analyzed (10 contracts with 85 detectors), 47 result(s) found
