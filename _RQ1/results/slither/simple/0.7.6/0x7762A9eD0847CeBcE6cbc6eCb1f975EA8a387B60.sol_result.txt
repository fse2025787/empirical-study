INFO:Detectors:
LibMarket.removeLiquidityWithBeanAllocation(uint256,uint256,uint256) (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#936-953) sends eth to arbitrary user
	Dangerous calls:
	- (success) = msg.sender.call{value: ethAmount}() (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#951)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#functions-that-send-ether-to-arbitrary-destinations
INFO:Detectors:
ClaimFacet.claimBeans(uint32[]) (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#220-224) ignores return value by IBean(s.c.bean).transfer(msg.sender,beansClaimed) (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#222)
ClaimFacet.harvest(uint256[]) (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#242-246) ignores return value by IBean(s.c.bean).transfer(msg.sender,beansHarvested) (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#244)
ClaimFacet.unwrapBeans(uint256) (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#252-265) ignores return value by IBean(s.c.bean).transfer(msg.sender,wBeans) (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#257)
ClaimFacet.unwrapBeans(uint256) (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#252-265) ignores return value by IBean(s.c.bean).transfer(msg.sender,amount) (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#261)
ClaimFacet.wrapBeans(uint256) (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#267-271) ignores return value by IBean(s.c.bean).transferFrom(msg.sender,address(this),amount) (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#268)
LibMarket.addAndDepositLiquidity(LibMarket.AddLiquidity) (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#955-961) ignores return value by IBean(ds.bean).transfer(msg.sender,al.beanAmount.sub(beans)) (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#959)
LibMarket.buyBeansAndAddLiquidity(uint256,LibMarket.AddLiquidity) (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#986-1017) ignores return value by IBean(ds.bean).transfer(msg.sender,al.beanAmount.sub(beans)) (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#1009)
LibMarket.buyEthAndAddLiquidity(uint256,LibMarket.AddLiquidity) (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#1021-1052) ignores return value by IBean(ds.bean).transfer(msg.sender,toTransfer) (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#1039-1042)
LibMarket.allocatedBeans(uint256) (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#1152-1168) ignores return value by IBean(s.c.bean).transferFrom(msg.sender,address(this),remainingBeans) (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#1167)
LibClaim.claim(LibClaim.Claim) (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#1210-1230) ignores return value by IBean(s.c.bean).transfer(msg.sender,beansClaimed) (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#1227)
LibClaim.claimLP(uint32[]) (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#1254-1258) ignores return value by IUniswapV2Pair(s.c.pair).transfer(msg.sender,lpClaimed) (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#1257)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unchecked-transfer
INFO:Detectors:
Reentrancy in ClaimFacet.unwrapBeans(uint256) (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#252-265):
	External calls:
	- IBean(s.c.bean).transfer(msg.sender,wBeans) (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#257)
	State variables written after the call(s):
	- s.a[msg.sender].wrappedBeans = 0 (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#259)
	ClaimFacet.s (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#205) can be used in cross function reentrancies:
	- ClaimFacet.claimBeans(uint32[]) (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#220-224)
	- ClaimFacet.harvest(uint256[]) (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#242-246)
	- ClaimFacet.unwrapBeans(uint256) (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#252-265)
	- ClaimFacet.wrapBeans(uint256) (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#267-271)
	- ClaimFacet.wrappedBeans(address) (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#273-275)
Reentrancy in ClaimFacet.unwrapBeans(uint256) (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#252-265):
	External calls:
	- IBean(s.c.bean).transfer(msg.sender,amount) (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#261)
	State variables written after the call(s):
	- s.a[msg.sender].wrappedBeans = wBeans.sub(amount) (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#262)
	ClaimFacet.s (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#205) can be used in cross function reentrancies:
	- ClaimFacet.claimBeans(uint32[]) (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#220-224)
	- ClaimFacet.harvest(uint256[]) (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#242-246)
	- ClaimFacet.unwrapBeans(uint256) (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#252-265)
	- ClaimFacet.wrapBeans(uint256) (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#267-271)
	- ClaimFacet.wrappedBeans(address) (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#273-275)
Reentrancy in ClaimFacet.wrapBeans(uint256) (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#267-271):
	External calls:
	- IBean(s.c.bean).transferFrom(msg.sender,address(this),amount) (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#268)
	State variables written after the call(s):
	- s.a[msg.sender].wrappedBeans = s.a[msg.sender].wrappedBeans.add(amount) (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#269)
	ClaimFacet.s (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#205) can be used in cross function reentrancies:
	- ClaimFacet.claimBeans(uint32[]) (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#220-224)
	- ClaimFacet.harvest(uint256[]) (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#242-246)
	- ClaimFacet.unwrapBeans(uint256) (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#252-265)
	- ClaimFacet.wrapBeans(uint256) (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#267-271)
	- ClaimFacet.wrappedBeans(address) (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#273-275)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1
INFO:Detectors:
ClaimFacet.removeAndClaimLP(uint32[],uint256,uint256) (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#231-240) ignores return value by LibClaim.removeAndClaimLP(withdrawals,minBeanAmount,minEthAmount) (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#238)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return
INFO:Detectors:
Reentrancy in LibMarket.buyBeansAndAddLiquidity(uint256,LibMarket.AddLiquidity) (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#986-1017):
	External calls:
	- IWETH(ds.weth).deposit{value: msg.value}() (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#991)
	- (ethSold,beans) = _buyWithWETH(buyBeanAmount,amounts[0],address(this)) (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#996)
		- amounts = IUniswapV2Router02(ds.router).swapExactTokensForTokens(ethAmount,beanAmount,path,to,block.timestamp.add(1)) (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#1103-1109)
	- allocatedBeans(al.beanAmount.sub(buyBeanAmount)) (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#999)
		- IBean(s.c.bean).transferFrom(msg.sender,address(this),remainingBeans) (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#1167)
	External calls sending eth:
	- IWETH(ds.weth).deposit{value: msg.value}() (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#991)
	Event emitted after the call(s):
	- BeanAllocation(msg.sender,transferBeans.sub(remainingBeans)) (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#1165)
		- allocatedBeans(al.beanAmount.sub(buyBeanAmount)) (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#999)
Reentrancy in LibClaim.claim(LibClaim.Claim) (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#1210-1230):
	External calls:
	- beansClaimed = beansClaimed.add(removeClaimLPAndWrapBeans(c.lpWithdrawals,c.minBeanAmount,c.minEthAmount)) (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#1219)
		- (beanAmount,ethAmount) = IUniswapV2Router02(ds.router).removeLiquidity(ds.bean,ds.weth,liqudity,minBeanAmount,minEthAmount,address(this),block.timestamp.add(1)) (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#941-949)
		- (beans,None) = LibMarket.removeLiquidityWithBeanAllocation(lpClaimd,minBeanAmount,minEthAmount) (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#1281)
		- IWETH(ds.weth).withdraw(ethAmount) (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#950)
		- (success) = msg.sender.call{value: ethAmount}() (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#951)
	- removeAndClaimLP(c.lpWithdrawals,c.minBeanAmount,c.minEthAmount) (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#1220)
		- (beans,None) = LibMarket.removeLiquidity(lpClaimd,minBeanAmount,minEthAmount) (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#1269)
		- IUniswapV2Router02(ds.router).removeLiquidityETH(ds.bean,liqudity,minBeanAmount,minEthAmount,msg.sender,block.timestamp.add(1)) (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#926-933)
	- claimLP(c.lpWithdrawals) (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#1222)
		- IUniswapV2Pair(s.c.pair).transfer(msg.sender,lpClaimed) (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#1257)
	- claimEth() (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#1224)
		- LibInternal.updateSilo(msg.sender) (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#1307)
		- (success) = address(facet).delegatecall(myFunctionCall) (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#803)
		- IWETH(s.c.weth).withdraw(eth) (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#1319)
		- (success) = account.call{value: eth}() (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#1320)
	External calls sending eth:
	- beansClaimed = beansClaimed.add(removeClaimLPAndWrapBeans(c.lpWithdrawals,c.minBeanAmount,c.minEthAmount)) (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#1219)
		- (success) = msg.sender.call{value: ethAmount}() (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#951)
	- claimEth() (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#1224)
		- (success) = account.call{value: eth}() (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#1320)
	Event emitted after the call(s):
	- EtherClaim(msg.sender,eth) (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#1309)
		- claimEth() (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#1224)
Reentrancy in LibClaim.claimEth() (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#1306-1310):
	External calls:
	- LibInternal.updateSilo(msg.sender) (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#1307)
	- eth = claimPlenty(msg.sender) (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#1308)
		- IWETH(s.c.weth).withdraw(eth) (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#1319)
		- (success) = account.call{value: eth}() (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#1320)
	External calls sending eth:
	- eth = claimPlenty(msg.sender) (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#1308)
		- (success) = account.call{value: eth}() (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#1320)
	Event emitted after the call(s):
	- EtherClaim(msg.sender,eth) (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#1309)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3
INFO:Detectors:
LibMarket.buy(uint256) (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#883-888) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(success,Market: Refund failed.) (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#886)
LibMarket.buyAndDeposit(uint256) (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#890-895) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(success,Market: Refund failed.) (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#893)
LibMarket.addLiquidity(LibMarket.AddLiquidity) (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#909-919) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(success,Market: Refund failed.) (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#917)
LibMarket.removeLiquidityWithBeanAllocation(uint256,uint256,uint256) (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#936-953) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(success,WETH: ETH transfer failed) (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#952)
LibMarket.addAndDepositLiquidity(LibMarket.AddLiquidity) (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#955-961) uses timestamp for comparisons
	Dangerous comparisons:
	- al.beanAmount > beans (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#959)
LibMarket.buyBeansAndAddLiquidity(uint256,LibMarket.AddLiquidity) (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#986-1017) uses timestamp for comparisons
	Dangerous comparisons:
	- al.beanAmount > beans (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#1009)
	- msg.value > ethAdded.add(ethSold) (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#1010)
	- require(bool,string)(success,Market: Refund failed.) (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#1014)
LibMarket.buyEthAndAddLiquidity(uint256,LibMarket.AddLiquidity) (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#1021-1052) uses timestamp for comparisons
	Dangerous comparisons:
	- al.beanAmount.add(sellBeans) > beans.add(beansSold) (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#1037)
	- ethAdded < wethBought.add(msg.value) (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#1045)
	- require(bool,string)(success,Market: Ether transfer failed.) (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#1049)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp
INFO:Detectors:
LibInternal.diamondStorage() (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#781-786) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#783-785)
LibInternal.stalkFor(uint32) (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#816-824) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#823)
LibMarket.diamondStorage() (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#865-870) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#867-869)
LibAppStorage.diamondStorage() (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#1452-1456) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#1453-1455)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage
INFO:Detectors:
Different versions of Solidity are used:
	- Version used: ['>=0.5.0', '>=0.6.0<0.8.0', '>=0.6.2', '^0.7.6']
	- >=0.5.0 (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#1384)
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#7)
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#280)
	- >=0.6.2 (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#83)
	- >=0.6.2 (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#1481)
	- ABIEncoderV2 (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#2)
	- ^0.7.6 (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#181)
	- ^0.7.6 (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#497)
	- ^0.7.6 (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#700)
	- ^0.7.6 (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#752)
	- ^0.7.6 (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#831)
	- ^0.7.6 (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#1175)
	- ^0.7.6 (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#1355)
	- ^0.7.6 (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#1441)
	- ^0.7.6 (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#1464)
	- ^0.7.6 (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#1530)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#different-pragma-directives-are-used
INFO:Detectors:
LibInternal.stalkFor(uint32) (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#816-824) is never used and should be removed
LibInternal.updateBip(uint32) (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#807-814) is never used and should be removed
LibMarket._addLiquidity(uint256,uint256,uint256,uint256) (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#1113-1125) is never used and should be removed
LibMarket._addLiquidityWETH(uint256,uint256,uint256,uint256) (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#1127-1141) is never used and should be removed
LibMarket._amountIn(uint256) (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#1143-1150) is never used and should be removed
LibMarket._buy(uint256,uint256,address) (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#1076-1092) is never used and should be removed
LibMarket._buyWithWETH(uint256,uint256,address) (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#1094-1111) is never used and should be removed
LibMarket._sell(uint256,uint256,address) (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#1058-1074) is never used and should be removed
LibMarket.addAndDepositLiquidity(LibMarket.AddLiquidity) (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#955-961) is never used and should be removed
LibMarket.addLiquidity(LibMarket.AddLiquidity) (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#909-919) is never used and should be removed
LibMarket.allocatedBeans(uint256) (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#1152-1168) is never used and should be removed
LibMarket.buy(uint256) (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#883-888) is never used and should be removed
LibMarket.buyAndDeposit(uint256) (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#890-895) is never used and should be removed
LibMarket.buyBeansAndAddLiquidity(uint256,LibMarket.AddLiquidity) (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#986-1017) is never used and should be removed
LibMarket.buyEthAndAddLiquidity(uint256,LibMarket.AddLiquidity) (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#1021-1052) is never used and should be removed
LibMarket.initMarket(address,address,address) (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#872-877) is never used and should be removed
LibMarket.sellToWETH(uint256,uint256) (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#897-903) is never used and should be removed
LibMarket.swapAndAddLiquidity(uint256,uint256,LibMarket.AddLiquidity) (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#963-979) is never used and should be removed
SafeMath.div(uint256,uint256,string) (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#467-470) is never used and should be removed
SafeMath.mod(uint256,uint256) (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#429-432) is never used and should be removed
SafeMath.mod(uint256,uint256,string) (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#487-490) is never used and should be removed
SafeMath.sub(uint256,uint256,string) (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#447-450) is never used and should be removed
SafeMath.tryAdd(uint256,uint256) (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#301-305) is never used and should be removed
SafeMath.tryDiv(uint256,uint256) (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#337-340) is never used and should be removed
SafeMath.tryMod(uint256,uint256) (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#347-350) is never used and should be removed
SafeMath.tryMul(uint256,uint256) (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#322-330) is never used and should be removed
SafeMath.trySub(uint256,uint256) (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#312-315) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code
INFO:Detectors:
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#7) is too complex
Pragma version>=0.6.2 (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#83) allows old versions
Pragma version^0.7.6 (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#181) allows old versions
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#280) is too complex
Pragma version^0.7.6 (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#497) allows old versions
Pragma version^0.7.6 (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#700) allows old versions
Pragma version^0.7.6 (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#752) allows old versions
Pragma version^0.7.6 (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#831) allows old versions
Pragma version^0.7.6 (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#1175) allows old versions
Pragma version^0.7.6 (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#1355) allows old versions
Pragma version>=0.5.0 (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#1384) allows old versions
Pragma version^0.7.6 (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#1441) allows old versions
Pragma version^0.7.6 (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#1464) allows old versions
Pragma version>=0.6.2 (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#1481) allows old versions
Pragma version^0.7.6 (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#1530) allows old versions
solc-0.7.6 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity
INFO:Detectors:
Low level call in LibInternal.updateSilo(address) (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#798-805):
	- (success) = address(facet).delegatecall(myFunctionCall) (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#803)
Low level call in LibInternal.updateBip(uint32) (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#807-814):
	- (success) = address(facet).delegatecall(myFunctionCall) (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#812)
Low level call in LibInternal.stalkFor(uint32) (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#816-824):
	- (success,data) = address(facet).delegatecall(myFunctionCall) (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#821)
Low level call in LibMarket.buy(uint256) (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#883-888):
	- (success) = msg.sender.call{value: msg.value.sub(ethAmount)}() (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#885)
Low level call in LibMarket.buyAndDeposit(uint256) (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#890-895):
	- (success) = msg.sender.call{value: msg.value.sub(ethAmount)}() (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#892)
Low level call in LibMarket.addLiquidity(LibMarket.AddLiquidity) (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#909-919):
	- (success) = msg.sender.call{value: msg.value.sub(ethDeposited)}() (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#916)
Low level call in LibMarket.removeLiquidityWithBeanAllocation(uint256,uint256,uint256) (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#936-953):
	- (success) = msg.sender.call{value: ethAmount}() (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#951)
Low level call in LibMarket.buyBeansAndAddLiquidity(uint256,LibMarket.AddLiquidity) (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#986-1017):
	- (success) = msg.sender.call{value: returnETH}() (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#1013)
Low level call in LibMarket.buyEthAndAddLiquidity(uint256,LibMarket.AddLiquidity) (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#1021-1052):
	- (success) = msg.sender.call{value: eth}() (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#1048)
Low level call in LibClaim.claimPlenty(address) (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#1312-1323):
	- (success) = account.call{value: eth}() (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#1320)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls
INFO:Detectors:
Function IUniswapV2Router01.WETH() (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#87) is not in mixedCase
Parameter LibClaim.claimBeanWithdrawal(address,uint32)._s (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#1243) is not in mixedCase
Parameter LibClaim.claimLPWithdrawal(address,uint32)._s (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#1295) is not in mixedCase
Function IUniswapV2Pair.DOMAIN_SEPARATOR() (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#1401) is not in mixedCase
Function IUniswapV2Pair.PERMIT_TYPEHASH() (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#1402) is not in mixedCase
Function IUniswapV2Pair.MINIMUM_LIQUIDITY() (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#1419) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions
INFO:Detectors:
Variable IUniswapV2Router01.addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256).amountADesired (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#92) is too similar to IUniswapV2Router01.addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256).amountBDesired (../../sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol#93)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#variable-names-too-similar
INFO:Slither:/bdata2/sc/dataset/mainnet/0x7762A9eD0847CeBcE6cbc6eCb1f975EA8a387B60.sol analyzed (16 contracts with 85 detectors), 91 result(s) found
