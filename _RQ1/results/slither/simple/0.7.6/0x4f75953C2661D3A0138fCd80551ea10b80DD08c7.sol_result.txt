Compilation warnings/errors on /bdata2/sc/dataset/mainnet/0x4f75953C2661D3A0138fCd80551ea10b80DD08c7.sol:
Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> /bdata2/sc/dataset/mainnet/0x4f75953C2661D3A0138fCd80551ea10b80DD08c7.sol


INFO:Detectors:
KeeperRegistry.addFunds(uint256,uint96) (../../sc/dataset/mainnet/0x4f75953C2661D3A0138fCd80551ea10b80DD08c7.sol#1005-1016) ignores return value by LINK.transferFrom(msg.sender,address(this),amount) (../../sc/dataset/mainnet/0x4f75953C2661D3A0138fCd80551ea10b80DD08c7.sol#1014)
KeeperRegistry.withdrawFunds(uint256,address) (../../sc/dataset/mainnet/0x4f75953C2661D3A0138fCd80551ea10b80DD08c7.sol#1046-1061) ignores return value by LINK.transfer(to,amount) (../../sc/dataset/mainnet/0x4f75953C2661D3A0138fCd80551ea10b80DD08c7.sol#1060)
KeeperRegistry.recoverFunds() (../../sc/dataset/mainnet/0x4f75953C2661D3A0138fCd80551ea10b80DD08c7.sol#1069-1086) ignores return value by LINK.transfer(msg.sender,total.sub(locked)) (../../sc/dataset/mainnet/0x4f75953C2661D3A0138fCd80551ea10b80DD08c7.sol#1085)
KeeperRegistry.withdrawPayment(address,address) (../../sc/dataset/mainnet/0x4f75953C2661D3A0138fCd80551ea10b80DD08c7.sol#1093-1107) ignores return value by LINK.transfer(to,keeper.balance) (../../sc/dataset/mainnet/0x4f75953C2661D3A0138fCd80551ea10b80DD08c7.sol#1106)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unchecked-transfer
INFO:Detectors:
Reentrancy in KeeperRegistry.checkUpkeep(uint256,address) (../../sc/dataset/mainnet/0x4f75953C2661D3A0138fCd80551ea10b80DD08c7.sol#904-946):
	External calls:
	- (success,result) = upkeep.target.call{gas: s_config.checkGasLimit}(callData) (../../sc/dataset/mainnet/0x4f75953C2661D3A0138fCd80551ea10b80DD08c7.sol#926-929)
	State variables written after the call(s):
	- success = performUpkeepWithParams(PerformParams(from,id,performData)) (../../sc/dataset/mainnet/0x4f75953C2661D3A0138fCd80551ea10b80DD08c7.sol#938-942)
		- s_upkeep[params.id] = upkeep (../../sc/dataset/mainnet/0x4f75953C2661D3A0138fCd80551ea10b80DD08c7.sol#1459)
	KeeperRegistry.s_upkeep (../../sc/dataset/mainnet/0x4f75953C2661D3A0138fCd80551ea10b80DD08c7.sol#717) can be used in cross function reentrancies:
	- KeeperRegistry.addFunds(uint256,uint96) (../../sc/dataset/mainnet/0x4f75953C2661D3A0138fCd80551ea10b80DD08c7.sol#1005-1016)
	- KeeperRegistry.cancelUpkeep(uint256) (../../sc/dataset/mainnet/0x4f75953C2661D3A0138fCd80551ea10b80DD08c7.sol#975-997)
	- KeeperRegistry.checkUpkeep(uint256,address) (../../sc/dataset/mainnet/0x4f75953C2661D3A0138fCd80551ea10b80DD08c7.sol#904-946)
	- KeeperRegistry.getUpkeep(uint256) (../../sc/dataset/mainnet/0x4f75953C2661D3A0138fCd80551ea10b80DD08c7.sol#1228-1254)
	- KeeperRegistry.onTokenTransfer(address,uint256,bytes) (../../sc/dataset/mainnet/0x4f75953C2661D3A0138fCd80551ea10b80DD08c7.sol#1024-1039)
	- KeeperRegistry.performUpkeepWithParams(KeeperRegistry.PerformParams) (../../sc/dataset/mainnet/0x4f75953C2661D3A0138fCd80551ea10b80DD08c7.sol#1430-1471)
	- KeeperRegistry.recoverFunds() (../../sc/dataset/mainnet/0x4f75953C2661D3A0138fCd80551ea10b80DD08c7.sol#1069-1086)
	- KeeperRegistry.registerUpkeep(address,uint32,address,bytes) (../../sc/dataset/mainnet/0x4f75953C2661D3A0138fCd80551ea10b80DD08c7.sol#862-894)
	- KeeperRegistry.validateUpkeep(uint256) (../../sc/dataset/mainnet/0x4f75953C2661D3A0138fCd80551ea10b80DD08c7.sol#1476-1483)
	- KeeperRegistry.withdrawFunds(uint256,address) (../../sc/dataset/mainnet/0x4f75953C2661D3A0138fCd80551ea10b80DD08c7.sol#1046-1061)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1
INFO:Detectors:
KeeperBase.preventExecution() (../../sc/dataset/mainnet/0x4f75953C2661D3A0138fCd80551ea10b80DD08c7.sol#534-539) uses tx.origin for authorization: require(bool,string)(tx.origin == address(0),only for simulated backend) (../../sc/dataset/mainnet/0x4f75953C2661D3A0138fCd80551ea10b80DD08c7.sol#538)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dangerous-usage-of-txorigin
INFO:Detectors:
Owned.transferOwnership(address)._to (../../sc/dataset/mainnet/0x4f75953C2661D3A0138fCd80551ea10b80DD08c7.sol#188) lacks a zero-check on :
		- pendingOwner = _to (../../sc/dataset/mainnet/0x4f75953C2661D3A0138fCd80551ea10b80DD08c7.sol#192)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation
INFO:Detectors:
Reentrancy in KeeperRegistry.checkUpkeep(uint256,address) (../../sc/dataset/mainnet/0x4f75953C2661D3A0138fCd80551ea10b80DD08c7.sol#904-946):
	External calls:
	- (success,result) = upkeep.target.call{gas: s_config.checkGasLimit}(callData) (../../sc/dataset/mainnet/0x4f75953C2661D3A0138fCd80551ea10b80DD08c7.sol#926-929)
	State variables written after the call(s):
	- success = performUpkeepWithParams(PerformParams(from,id,performData)) (../../sc/dataset/mainnet/0x4f75953C2661D3A0138fCd80551ea10b80DD08c7.sol#938-942)
		- _status = _ENTERED (../../sc/dataset/mainnet/0x4f75953C2661D3A0138fCd80551ea10b80DD08c7.sol#409)
		- _status = _NOT_ENTERED (../../sc/dataset/mainnet/0x4f75953C2661D3A0138fCd80551ea10b80DD08c7.sol#415)
	- success = performUpkeepWithParams(PerformParams(from,id,performData)) (../../sc/dataset/mainnet/0x4f75953C2661D3A0138fCd80551ea10b80DD08c7.sol#938-942)
		- s_keeperInfo[params.from].balance = newBalance (../../sc/dataset/mainnet/0x4f75953C2661D3A0138fCd80551ea10b80DD08c7.sol#1461)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2
INFO:Detectors:
Reentrancy in KeeperRegistry.addFunds(uint256,uint96) (../../sc/dataset/mainnet/0x4f75953C2661D3A0138fCd80551ea10b80DD08c7.sol#1005-1016):
	External calls:
	- LINK.transferFrom(msg.sender,address(this),amount) (../../sc/dataset/mainnet/0x4f75953C2661D3A0138fCd80551ea10b80DD08c7.sol#1014)
	Event emitted after the call(s):
	- FundsAdded(id,msg.sender,amount) (../../sc/dataset/mainnet/0x4f75953C2661D3A0138fCd80551ea10b80DD08c7.sol#1015)
Reentrancy in KeeperRegistry.checkUpkeep(uint256,address) (../../sc/dataset/mainnet/0x4f75953C2661D3A0138fCd80551ea10b80DD08c7.sol#904-946):
	External calls:
	- (success,result) = upkeep.target.call{gas: s_config.checkGasLimit}(callData) (../../sc/dataset/mainnet/0x4f75953C2661D3A0138fCd80551ea10b80DD08c7.sol#926-929)
	Event emitted after the call(s):
	- UpkeepPerformed(params.id,success,params.from,payment,params.performData) (../../sc/dataset/mainnet/0x4f75953C2661D3A0138fCd80551ea10b80DD08c7.sol#1463-1469)
		- success = performUpkeepWithParams(PerformParams(from,id,performData)) (../../sc/dataset/mainnet/0x4f75953C2661D3A0138fCd80551ea10b80DD08c7.sol#938-942)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3
INFO:Detectors:
KeeperRegistry.getFeedData() (../../sc/dataset/mainnet/0x4f75953C2661D3A0138fCd80551ea10b80DD08c7.sol#1353-1373) uses timestamp for comparisons
	Dangerous comparisons:
	- staleFallback && stalenessSeconds < block.timestamp - timestamp (../../sc/dataset/mainnet/0x4f75953C2661D3A0138fCd80551ea10b80DD08c7.sol#1365)
	- staleFallback && stalenessSeconds < block.timestamp - timestamp (../../sc/dataset/mainnet/0x4f75953C2661D3A0138fCd80551ea10b80DD08c7.sol#1369)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp
INFO:Detectors:
Address.isContract(address) (../../sc/dataset/mainnet/0x4f75953C2661D3A0138fCd80551ea10b80DD08c7.sol#243-252) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0x4f75953C2661D3A0138fCd80551ea10b80DD08c7.sol#250)
Address._functionCallWithValue(address,bytes,uint256,string) (../../sc/dataset/mainnet/0x4f75953C2661D3A0138fCd80551ea10b80DD08c7.sol#336-357) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0x4f75953C2661D3A0138fCd80551ea10b80DD08c7.sol#349-352)
KeeperRegistry.callWithExactGas(uint256,address,bytes) (../../sc/dataset/mainnet/0x4f75953C2661D3A0138fCd80551ea10b80DD08c7.sol#1400-1424) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0x4f75953C2661D3A0138fCd80551ea10b80DD08c7.sol#1410-1422)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage
INFO:Detectors:
Address._functionCallWithValue(address,bytes,uint256,string) (../../sc/dataset/mainnet/0x4f75953C2661D3A0138fCd80551ea10b80DD08c7.sol#336-357) is never used and should be removed
Address.functionCall(address,bytes) (../../sc/dataset/mainnet/0x4f75953C2661D3A0138fCd80551ea10b80DD08c7.sol#296-298) is never used and should be removed
Address.functionCall(address,bytes,string) (../../sc/dataset/mainnet/0x4f75953C2661D3A0138fCd80551ea10b80DD08c7.sol#306-308) is never used and should be removed
Address.functionCallWithValue(address,bytes,uint256) (../../sc/dataset/mainnet/0x4f75953C2661D3A0138fCd80551ea10b80DD08c7.sol#321-323) is never used and should be removed
Address.functionCallWithValue(address,bytes,uint256,string) (../../sc/dataset/mainnet/0x4f75953C2661D3A0138fCd80551ea10b80DD08c7.sol#331-334) is never used and should be removed
Address.sendValue(address,uint256) (../../sc/dataset/mainnet/0x4f75953C2661D3A0138fCd80551ea10b80DD08c7.sol#270-276) is never used and should be removed
SafeMath96.div(uint96,uint96) (../../sc/dataset/mainnet/0x4f75953C2661D3A0138fCd80551ea10b80DD08c7.sol#502-509) is never used and should be removed
SafeMath96.mod(uint96,uint96) (../../sc/dataset/mainnet/0x4f75953C2661D3A0138fCd80551ea10b80DD08c7.sol#522-525) is never used and should be removed
SafeMath96.mul(uint96,uint96) (../../sc/dataset/mainnet/0x4f75953C2661D3A0138fCd80551ea10b80DD08c7.sol#477-489) is never used and should be removed
SafeMathChainlink.mod(uint256,uint256) (../../sc/dataset/mainnet/0x4f75953C2661D3A0138fCd80551ea10b80DD08c7.sol#156-159) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code
INFO:Detectors:
Pragma version0.7.6 (../../sc/dataset/mainnet/0x4f75953C2661D3A0138fCd80551ea10b80DD08c7.sol#6) allows old versions
solc-0.7.6 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity
INFO:Detectors:
Low level call in Address.sendValue(address,uint256) (../../sc/dataset/mainnet/0x4f75953C2661D3A0138fCd80551ea10b80DD08c7.sol#270-276):
	- (success) = recipient.call{value: amount}() (../../sc/dataset/mainnet/0x4f75953C2661D3A0138fCd80551ea10b80DD08c7.sol#274)
Low level call in Address._functionCallWithValue(address,bytes,uint256,string) (../../sc/dataset/mainnet/0x4f75953C2661D3A0138fCd80551ea10b80DD08c7.sol#336-357):
	- (success,returndata) = target.call{value: weiValue}(data) (../../sc/dataset/mainnet/0x4f75953C2661D3A0138fCd80551ea10b80DD08c7.sol#340)
Low level call in KeeperRegistry.checkUpkeep(uint256,address) (../../sc/dataset/mainnet/0x4f75953C2661D3A0138fCd80551ea10b80DD08c7.sol#904-946):
	- (success,result) = upkeep.target.call{gas: s_config.checkGasLimit}(callData) (../../sc/dataset/mainnet/0x4f75953C2661D3A0138fCd80551ea10b80DD08c7.sol#926-929)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls
INFO:Detectors:
Parameter Owned.transferOwnership(address)._to (../../sc/dataset/mainnet/0x4f75953C2661D3A0138fCd80551ea10b80DD08c7.sol#188) is not in mixedCase
Variable KeeperRegistry.s_upkeepCount (../../sc/dataset/mainnet/0x4f75953C2661D3A0138fCd80551ea10b80DD08c7.sol#714) is not in mixedCase
Variable KeeperRegistry.s_canceledUpkeepList (../../sc/dataset/mainnet/0x4f75953C2661D3A0138fCd80551ea10b80DD08c7.sol#715) is not in mixedCase
Variable KeeperRegistry.s_keeperList (../../sc/dataset/mainnet/0x4f75953C2661D3A0138fCd80551ea10b80DD08c7.sol#716) is not in mixedCase
Variable KeeperRegistry.s_upkeep (../../sc/dataset/mainnet/0x4f75953C2661D3A0138fCd80551ea10b80DD08c7.sol#717) is not in mixedCase
Variable KeeperRegistry.s_keeperInfo (../../sc/dataset/mainnet/0x4f75953C2661D3A0138fCd80551ea10b80DD08c7.sol#718) is not in mixedCase
Variable KeeperRegistry.s_proposedPayee (../../sc/dataset/mainnet/0x4f75953C2661D3A0138fCd80551ea10b80DD08c7.sol#719) is not in mixedCase
Variable KeeperRegistry.s_checkData (../../sc/dataset/mainnet/0x4f75953C2661D3A0138fCd80551ea10b80DD08c7.sol#720) is not in mixedCase
Variable KeeperRegistry.s_config (../../sc/dataset/mainnet/0x4f75953C2661D3A0138fCd80551ea10b80DD08c7.sol#721) is not in mixedCase
Variable KeeperRegistry.s_fallbackGasPrice (../../sc/dataset/mainnet/0x4f75953C2661D3A0138fCd80551ea10b80DD08c7.sol#722) is not in mixedCase
Variable KeeperRegistry.s_fallbackLinkPrice (../../sc/dataset/mainnet/0x4f75953C2661D3A0138fCd80551ea10b80DD08c7.sol#723) is not in mixedCase
Variable KeeperRegistry.LINK (../../sc/dataset/mainnet/0x4f75953C2661D3A0138fCd80551ea10b80DD08c7.sol#725) is not in mixedCase
Variable KeeperRegistry.LINK_ETH_FEED (../../sc/dataset/mainnet/0x4f75953C2661D3A0138fCd80551ea10b80DD08c7.sol#726) is not in mixedCase
Variable KeeperRegistry.FAST_GAS_FEED (../../sc/dataset/mainnet/0x4f75953C2661D3A0138fCd80551ea10b80DD08c7.sol#727) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions
INFO:Detectors:
KeeperRegistry.registerUpkeep(address,uint32,address,bytes) (../../sc/dataset/mainnet/0x4f75953C2661D3A0138fCd80551ea10b80DD08c7.sol#862-894) uses literals with too many digits:
	- require(bool,string)(gasLimit <= CALL_GAS_MAX,max gas is 2500000) (../../sc/dataset/mainnet/0x4f75953C2661D3A0138fCd80551ea10b80DD08c7.sol#877)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits
INFO:Slither:/bdata2/sc/dataset/mainnet/0x4f75953C2661D3A0138fCd80551ea10b80DD08c7.sol analyzed (13 contracts with 85 detectors), 44 result(s) found
