Compilation warnings/errors on /bdata2/sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol:
Warning: Contract code size exceeds 24576 bytes (a limit introduced in Spurious Dragon). This contract may not be deployable on mainnet. Consider enabling the optimizer (with a low "runs" value!), turning off revert strings, or using libraries.
   --> /bdata2/sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol:658:1:
    |
658 | contract CoffinBox is MasterContractManager, BoringBatchable {
    | ^ (Relevant source part starts here and spans across multiple lines).


INFO:Detectors:
CoffinBox.deposit(IERC20,address,address,uint256,uint256) (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#794-849) uses arbitrary from in transferFrom: token.safeTransferFrom(from,address(this),amount) (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#844)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#arbitrary-from-in-transferfrom
INFO:Detectors:
BaseBoringBatchable.batch(bytes[],bool) (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#618-627) has delegatecall inside a loop in a payable function: (success,result) = address(this).delegatecall(calls[i]) (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#622)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation/#payable-functions-using-delegatecall-inside-a-loop
INFO:Detectors:
RebaseLibrary.toBase(Rebase,uint256,bool) (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#240-253) performs a multiplication on the result of a division:
	- base = elastic.mul(total.base) / total.elastic (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#248)
	- roundUp && base.mul(total.elastic) / total.base < elastic (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#249)
RebaseLibrary.toElastic(Rebase,uint256,bool) (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#256-269) performs a multiplication on the result of a division:
	- elastic = base.mul(total.elastic) / total.base (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#264)
	- roundUp && elastic.mul(total.base) / total.elastic < base (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#265)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#divide-before-multiply
INFO:Detectors:
CoffinBox.harvest(IERC20,bool,uint256) (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#1083-1139) uses a dangerous strict equality:
	- balanceChange == 0 && ! balance (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#1091)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dangerous-strict-equalities
INFO:Detectors:
Reentrancy in CoffinBox.harvest(IERC20,bool,uint256) (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#1083-1139):
	External calls:
	- balanceChange = _strategy.harvest(data.balance,msg.sender) (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#1090)
	- token.safeTransfer(address(_strategy),amountOut) (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#1121)
	- _strategy.skim(amountOut) (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#1123)
	- actualAmountIn = _strategy.withdraw(amountIn) (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#1131)
	State variables written after the call(s):
	- strategyData[token] = data (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#1138)
	CoffinBox.strategyData (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#716) can be used in cross function reentrancies:
	- CoffinBox._tokenBalanceOf(IERC20) (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#752-754)
	- CoffinBox.harvest(IERC20,bool,uint256) (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#1083-1139)
	- CoffinBox.setStrategy(IERC20,IStrategy) (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#1039-1072)
	- CoffinBox.setStrategyTargetPercentage(IERC20,uint64) (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#1020-1027)
	- CoffinBox.strategyData (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#716)
Reentrancy in CoffinBox.setStrategy(IERC20,IStrategy) (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#1039-1072):
	External calls:
	- balanceChange = strategy[token].exit(data.balance) (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#1051)
	State variables written after the call(s):
	- pendingStrategy[token] = IStrategy(0) (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#1068)
	CoffinBox.pendingStrategy (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#715) can be used in cross function reentrancies:
	- CoffinBox.pendingStrategy (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#715)
	- CoffinBox.setStrategy(IERC20,IStrategy) (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#1039-1072)
	- strategy[token] = pending (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#1065)
	CoffinBox.strategy (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#714) can be used in cross function reentrancies:
	- CoffinBox.harvest(IERC20,bool,uint256) (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#1083-1139)
	- CoffinBox.setStrategy(IERC20,IStrategy) (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#1039-1072)
	- CoffinBox.strategy (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#714)
	- strategyData[token] = data (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#1071)
	CoffinBox.strategyData (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#716) can be used in cross function reentrancies:
	- CoffinBox._tokenBalanceOf(IERC20) (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#752-754)
	- CoffinBox.harvest(IERC20,bool,uint256) (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#1083-1139)
	- CoffinBox.setStrategy(IERC20,IStrategy) (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#1039-1072)
	- CoffinBox.setStrategyTargetPercentage(IERC20,uint64) (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#1020-1027)
	- CoffinBox.strategyData (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#716)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1
INFO:Detectors:
CoffinBox.setStrategy(IERC20,IStrategy) (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#1039-1072) ignores return value by totals[token].addElastic(add) (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#1055)
CoffinBox.setStrategy(IERC20,IStrategy) (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#1039-1072) ignores return value by totals[token].subElastic(sub) (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#1059)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return
INFO:Detectors:
BoringOwnable.transferOwnership(address,bool,bool).newOwner (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#360) lacks a zero-check on :
		- pendingOwner = newOwner (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#374)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation
INFO:Detectors:
BaseBoringBatchable.batch(bytes[],bool) (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#618-627) has external calls inside a loop: (success,result) = address(this).delegatecall(calls[i]) (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#622)
CoffinBox._tokenBalanceOf(IERC20) (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#752-754) has external calls inside a loop: amount = token.balanceOf(address(this)).add(strategyData[token].balance) (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#753)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation/#calls-inside-a-loop
INFO:Detectors:
Reentrancy in CoffinBox.harvest(IERC20,bool,uint256) (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#1083-1139):
	External calls:
	- balanceChange = _strategy.harvest(data.balance,msg.sender) (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#1090)
	State variables written after the call(s):
	- totals[token].elastic = totalElastic.to128() (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#1100)
	- totals[token].elastic = totalElastic.to128() (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#1108)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2
INFO:Detectors:
Reentrancy in CoffinBox.batchFlashLoan(IBatchFlashBorrower,address[],IERC20[],uint256[],bytes) (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#990-1014):
	External calls:
	- tokens[i].safeTransfer(receivers[i],amounts[i]) (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#1004)
	- borrower.onBatchFlashLoan(msg.sender,tokens,amounts,fees,data) (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#1007)
	Event emitted after the call(s):
	- LogFlashLoan(address(borrower),token,amounts[i_scope_0],fees[i_scope_0],receivers[i_scope_0]) (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#1012)
Reentrancy in BoringFactory.deploy(address,bytes,bool) (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#425-459):
	External calls:
	- IMasterContract(cloneAddress).init{value: msg.value}(data) (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#456)
	Event emitted after the call(s):
	- LogDeploy(masterContract,data,cloneAddress) (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#458)
Reentrancy in CoffinBox.deposit(IERC20,address,address,uint256,uint256) (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#794-849):
	External calls:
	- IWETH(address(wethToken)).deposit{value: amount}() (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#840)
	- token.safeTransferFrom(from,address(this),amount) (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#844)
	External calls sending eth:
	- IWETH(address(wethToken)).deposit{value: amount}() (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#840)
	Event emitted after the call(s):
	- LogDeposit(token,from,to,amount,share) (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#846)
Reentrancy in CoffinBox.flashLoan(IFlashBorrower,address,IERC20,uint256,bytes) (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#964-978):
	External calls:
	- token.safeTransfer(receiver,amount) (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#972)
	- borrower.onFlashLoan(msg.sender,token,amount,fee,data) (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#974)
	Event emitted after the call(s):
	- LogFlashLoan(address(borrower),token,amount,fee,receiver) (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#977)
Reentrancy in CoffinBox.harvest(IERC20,bool,uint256) (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#1083-1139):
	External calls:
	- balanceChange = _strategy.harvest(data.balance,msg.sender) (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#1090)
	Event emitted after the call(s):
	- LogStrategyLoss(token,sub) (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#1110)
	- LogStrategyProfit(token,add) (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#1101)
Reentrancy in CoffinBox.harvest(IERC20,bool,uint256) (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#1083-1139):
	External calls:
	- balanceChange = _strategy.harvest(data.balance,msg.sender) (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#1090)
	- token.safeTransfer(address(_strategy),amountOut) (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#1121)
	- _strategy.skim(amountOut) (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#1123)
	Event emitted after the call(s):
	- LogStrategyInvest(token,amountOut) (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#1124)
Reentrancy in CoffinBox.harvest(IERC20,bool,uint256) (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#1083-1139):
	External calls:
	- balanceChange = _strategy.harvest(data.balance,msg.sender) (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#1090)
	- actualAmountIn = _strategy.withdraw(amountIn) (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#1131)
	Event emitted after the call(s):
	- LogStrategyDivest(token,actualAmountIn) (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#1134)
Reentrancy in CoffinBox.setStrategy(IERC20,IStrategy) (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#1039-1072):
	External calls:
	- balanceChange = strategy[token].exit(data.balance) (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#1051)
	Event emitted after the call(s):
	- LogStrategyDivest(token,data.balance) (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#1063)
	- LogStrategyLoss(token,sub) (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#1060)
	- LogStrategyProfit(token,add) (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#1056)
	- LogStrategySet(token,newStrategy) (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#1069)
Reentrancy in CoffinBox.withdraw(IERC20,address,address,uint256,uint256) (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#857-900):
	External calls:
	- IWETH(address(wethToken)).withdraw(amount) (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#888)
	- (success) = to.call{value: amount}() (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#890)
	- token.safeTransfer(to,amount) (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#895)
	External calls sending eth:
	- (success) = to.call{value: amount}() (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#890)
	Event emitted after the call(s):
	- LogWithdraw(token,from,to,amount,share) (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#897)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3
INFO:Detectors:
CoffinBox.setStrategy(IERC20,IStrategy) (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#1039-1072) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(data.strategyStartDate != 0 && block.timestamp >= data.strategyStartDate,StrategyManager: Too early) (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#1049)
CoffinBox.harvest(IERC20,bool,uint256) (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#1083-1139) uses timestamp for comparisons
	Dangerous comparisons:
	- balanceChange == 0 && ! balance (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#1091)
	- balanceChange > 0 (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#1097)
	- balanceChange < 0 (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#1102)
	- data.balance < targetBalance (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#1116)
	- maxChangeAmount != 0 && amountOut > maxChangeAmount (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#1118)
	- data.balance > targetBalance (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#1125)
	- maxChangeAmount != 0 && amountIn > maxChangeAmount (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#1127)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp
INFO:Detectors:
BoringFactory.deploy(address,bytes,bool) (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#425-459) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#438-444)
	- INLINE ASM (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#446-452)
MasterContractManager.constructor() (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#488-494) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#490-492)
MasterContractManager.DOMAIN_SEPARATOR() (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#501-507) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#503-505)
BaseBoringBatchable._getRevertMsg(bytes) (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#598-607) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#602-605)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage
INFO:Detectors:
BoringMath.to32(uint256) (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#187-190) is never used and should be removed
BoringMath32.add(uint32,uint32) (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#217-219) is never used and should be removed
BoringMath32.sub(uint32,uint32) (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#221-223) is never used and should be removed
BoringMath64.add(uint64,uint64) (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#206-208) is never used and should be removed
BoringMath64.sub(uint64,uint64) (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#210-212) is never used and should be removed
RebaseLibrary.add(Rebase,uint256,bool) (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#274-283) is never used and should be removed
RebaseLibrary.add(Rebase,uint256,uint256) (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#300-308) is never used and should be removed
RebaseLibrary.sub(Rebase,uint256,bool) (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#288-297) is never used and should be removed
RebaseLibrary.sub(Rebase,uint256,uint256) (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#311-319) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code
INFO:Detectors:
Pragma version>=0.6.12 (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#14) allows old versions
solc-0.7.6 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity
INFO:Detectors:
Low level call in BoringERC20.safeTransfer(IERC20,address,uint256) (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#133-140):
	- (success,data) = address(token).call(abi.encodeWithSelector(SIG_TRANSFER,to,amount)) (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#138)
Low level call in BoringERC20.safeTransferFrom(IERC20,address,address,uint256) (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#148-156):
	- (success,data) = address(token).call(abi.encodeWithSelector(SIG_TRANSFER_FROM,from,to,amount)) (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#154)
Low level call in BaseBoringBatchable.batch(bytes[],bool) (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#618-627):
	- (success,result) = address(this).delegatecall(calls[i]) (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#622)
Low level call in CoffinBox.withdraw(IERC20,address,address,uint256,uint256) (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#857-900):
	- (success) = to.call{value: amount}() (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#890)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls
INFO:Detectors:
Function MasterContractManager.DOMAIN_SEPARATOR() (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#501-507) is not in mixedCase
Variable MasterContractManager._DOMAIN_SEPARATOR (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#484) is not in mixedCase
Variable MasterContractManager.DOMAIN_SEPARATOR_CHAIN_ID (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#486) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions
INFO:Detectors:
BoringFactory.deploy(address,bytes,bool) (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#425-459) uses literals with too many digits:
	- mstore(uint256,uint256)(clone_deploy_asm_0,0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000) (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#440)
BoringFactory.deploy(address,bytes,bool) (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#425-459) uses literals with too many digits:
	- mstore(uint256,uint256)(clone_deploy_asm_0 + 0x28,0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000) (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#442)
BoringFactory.deploy(address,bytes,bool) (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#425-459) uses literals with too many digits:
	- mstore(uint256,uint256)(clone_deploy_asm_1,0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000) (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#448)
BoringFactory.deploy(address,bytes,bool) (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#425-459) uses literals with too many digits:
	- mstore(uint256,uint256)(clone_deploy_asm_1 + 0x28,0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000) (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#450)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits
INFO:Detectors:
BoringERC20.SIG_SYMBOL (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#122) is never used in BoringERC20 (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#121-157)
BoringERC20.SIG_NAME (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#123) is never used in BoringERC20 (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#121-157)
BoringERC20.SIG_DECIMALS (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#124) is never used in BoringERC20 (../../sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol#121-157)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-state-variable
INFO:Slither:/bdata2/sc/dataset/mainnet/0xbc321c2e7a7fa48dcf0c09e088950c8172c2ecc9.sol analyzed (19 contracts with 85 detectors), 53 result(s) found
