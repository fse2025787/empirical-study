Compilation warnings/errors on /bdata2/sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol:
Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it "abstract" is sufficient.
   --> /bdata2/sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol:168:5:
    |
168 |     constructor(address _logic, bytes memory _data) public payable {
    |     ^ (Relevant source part starts here and spans across multiple lines).

Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it "abstract" is sufficient.
   --> /bdata2/sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol:289:5:
    |
289 |     constructor(address _logic, address admin_, bytes memory _data) public payable UpgradeableProxy(_logic, _data) {
    |     ^ (Relevant source part starts here and spans across multiple lines).

Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it "abstract" is sufficient.
    --> /bdata2/sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol:1185:5:
     |
1185 |     constructor(address logic, address admin, bytes memory data) TransparentUpgradeableProxy(logic, admin, data) public {
     |     ^ (Relevant source part starts here and spans across multiple lines).

Warning: Contract code size exceeds 24576 bytes (a limit introduced in Spurious Dragon). This contract may not be deployable on mainnet. Consider enabling the optimizer (with a low "runs" value!), turning off revert strings, or using libraries.
   --> /bdata2/sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol:588:1:
    |
588 | contract LPStakingUpgradeable is OwnableUpgradeable, ReentrancyGuardUpgradeable {
    | ^ (Relevant source part starts here and spans across multiple lines).


INFO:Detectors:
LPStakingUpgradeable.fund(address,uint256) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1174-1179) uses arbitrary from in transferFrom: zoneToken.safeTransferFrom(_from,address(this),_amount) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1178)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#arbitrary-from-in-transferfrom
INFO:Detectors:
Reentrancy in LPStakingUpgradeable._reward(uint256,address,uint256) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1099-1138):
	External calls:
	- _safeZONETransfer(_account,_pendingZONE) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1101)
		- returndata = address(token).functionCall(data,SafeERC20: low-level call failed) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1550)
		- zoneToken.safeTransfer(_to,balance) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1167)
		- zoneToken.safeTransfer(_to,_amount) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1169)
		- (success,returndata) = target.call{value: value}(data) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1676)
	- leftCapacity = multiModelNft.doAirdrop(rewardNftModel,addresses) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1117)
	- leftCapacity = baseNft.doAirdrop(addresses_scope_0) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1122)
	External calls sending eth:
	- _safeZONETransfer(_account,_pendingZONE) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1101)
		- (success,returndata) = target.call{value: value}(data) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1676)
	State variables written after the call(s):
	- nftAddresses[index] = nftAddresses[nftAddresses.length - 1] (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1128)
	LPStakingUpgradeable.nftAddresses (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#664) can be used in cross function reentrancies:
	- LPStakingUpgradeable._setRewardNfts(address[],uint256[],uint256[]) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#813-827)
	- LPStakingUpgradeable.getStakeInfo(uint256,address) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#974-997)
	- LPStakingUpgradeable.nftAddresses (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#664)
	- nftAddresses.pop() (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1129)
	LPStakingUpgradeable.nftAddresses (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#664) can be used in cross function reentrancies:
	- LPStakingUpgradeable._setRewardNfts(address[],uint256[],uint256[]) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#813-827)
	- LPStakingUpgradeable.getStakeInfo(uint256,address) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#974-997)
	- LPStakingUpgradeable.nftAddresses (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#664)
	- nftModels[index] = nftModels[nftModels.length - 1] (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1130)
	LPStakingUpgradeable.nftModels (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#666) can be used in cross function reentrancies:
	- LPStakingUpgradeable._setRewardNfts(address[],uint256[],uint256[]) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#813-827)
	- LPStakingUpgradeable.getStakeInfo(uint256,address) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#974-997)
	- LPStakingUpgradeable.nftModels (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#666)
	- nftModels.pop() (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1131)
	LPStakingUpgradeable.nftModels (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#666) can be used in cross function reentrancies:
	- LPStakingUpgradeable._setRewardNfts(address[],uint256[],uint256[]) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#813-827)
	- LPStakingUpgradeable.getStakeInfo(uint256,address) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#974-997)
	- LPStakingUpgradeable.nftModels (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#666)
	- nftPrices[index] = nftPrices[nftPrices.length - 1] (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1132)
	LPStakingUpgradeable.nftPrices (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#668) can be used in cross function reentrancies:
	- LPStakingUpgradeable._chooseRewardNft(uint256) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#968-972)
	- LPStakingUpgradeable._setRewardNfts(address[],uint256[],uint256[]) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#813-827)
	- LPStakingUpgradeable.getStakeInfo(uint256,address) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#974-997)
	- LPStakingUpgradeable.nftPrices (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#668)
	- nftPrices.pop() (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1133)
	LPStakingUpgradeable.nftPrices (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#668) can be used in cross function reentrancies:
	- LPStakingUpgradeable._chooseRewardNft(uint256) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#968-972)
	- LPStakingUpgradeable._setRewardNfts(address[],uint256[],uint256[]) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#813-827)
	- LPStakingUpgradeable.getStakeInfo(uint256,address) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#974-997)
	- LPStakingUpgradeable.nftPrices (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#668)
Reentrancy in LPStakingUpgradeable.claim(uint256) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1081-1097):
	External calls:
	- _reward(_pid,_account,pendingZONE_) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1094)
		- returndata = address(token).functionCall(data,SafeERC20: low-level call failed) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1550)
		- zoneToken.safeTransfer(_to,balance) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1167)
		- zoneToken.safeTransfer(_to,_amount) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1169)
		- (success,returndata) = target.call{value: value}(data) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1676)
		- leftCapacity = multiModelNft.doAirdrop(rewardNftModel,addresses) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1117)
		- leftCapacity = baseNft.doAirdrop(addresses_scope_0) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1122)
	External calls sending eth:
	- _reward(_pid,_account,pendingZONE_) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1094)
		- (success,returndata) = target.call{value: value}(data) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1676)
	State variables written after the call(s):
	- user_.finishedZONE = user_.lpAmount.mul(pool_.accZONEPerLP).div(1000000000000000000) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1096)
	LPStakingUpgradeable.user (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#641) can be used in cross function reentrancies:
	- LPStakingUpgradeable.getStakeInfo(uint256,address) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#974-997)
	- LPStakingUpgradeable.pendingZONE(uint256,address) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#842-859)
	- LPStakingUpgradeable.user (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#641)
Reentrancy in LPStakingUpgradeable.withdraw(uint256,uint256) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1047-1074):
	External calls:
	- _reward(_pid,_account,pendingZONE_) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1058)
		- returndata = address(token).functionCall(data,SafeERC20: low-level call failed) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1550)
		- zoneToken.safeTransfer(_to,balance) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1167)
		- zoneToken.safeTransfer(_to,_amount) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1169)
		- (success,returndata) = target.call{value: value}(data) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1676)
		- leftCapacity = multiModelNft.doAirdrop(rewardNftModel,addresses) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1117)
		- leftCapacity = baseNft.doAirdrop(addresses_scope_0) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1122)
	External calls sending eth:
	- _reward(_pid,_account,pendingZONE_) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1058)
		- (success,returndata) = target.call{value: value}(data) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1676)
	State variables written after the call(s):
	- pool_.lpSupply = pool_.lpSupply.sub(_amount) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1067)
	LPStakingUpgradeable.pool (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#636) can be used in cross function reentrancies:
	- LPStakingUpgradeable._addPool(address,uint256,bool) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#884-908)
	- LPStakingUpgradeable.finish() (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#772-787)
	- LPStakingUpgradeable.initialize(address,address,uint256,uint256,address[],uint256[],uint256[]) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#706-736)
	- LPStakingUpgradeable.pendingZONE(uint256,address) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#842-859)
	- LPStakingUpgradeable.pool (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#636)
	- LPStakingUpgradeable.poolLength() (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#872-874)
	- LPStakingUpgradeable.setPoolWeight(uint256,uint256,bool) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#913-922)
	- LPStakingUpgradeable.updatePool(uint256) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#927-950)
	- user_.lockStartTime = block.timestamp (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1064)
	LPStakingUpgradeable.user (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#641) can be used in cross function reentrancies:
	- LPStakingUpgradeable.getStakeInfo(uint256,address) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#974-997)
	- LPStakingUpgradeable.pendingZONE(uint256,address) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#842-859)
	- LPStakingUpgradeable.user (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#641)
	- user_.lpAmount = user_.lpAmount.sub(_amount) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1068)
	LPStakingUpgradeable.user (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#641) can be used in cross function reentrancies:
	- LPStakingUpgradeable.getStakeInfo(uint256,address) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#974-997)
	- LPStakingUpgradeable.pendingZONE(uint256,address) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#842-859)
	- LPStakingUpgradeable.user (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#641)
Reentrancy in LPStakingUpgradeable.withdraw(uint256,uint256) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1047-1074):
	External calls:
	- _reward(_pid,_account,pendingZONE_) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1058)
		- returndata = address(token).functionCall(data,SafeERC20: low-level call failed) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1550)
		- zoneToken.safeTransfer(_to,balance) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1167)
		- zoneToken.safeTransfer(_to,_amount) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1169)
		- (success,returndata) = target.call{value: value}(data) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1676)
		- leftCapacity = multiModelNft.doAirdrop(rewardNftModel,addresses) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1117)
		- leftCapacity = baseNft.doAirdrop(addresses_scope_0) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1122)
	- IERC20Upgradeable(pool_.lpTokenAddress).safeTransfer(_account,_amount) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1069)
	External calls sending eth:
	- _reward(_pid,_account,pendingZONE_) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1058)
		- (success,returndata) = target.call{value: value}(data) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1676)
	State variables written after the call(s):
	- user_.finishedZONE = user_.lpAmount.mul(pool_.accZONEPerLP).div(1000000000000000000).sub(pendingZONE_) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1072)
	LPStakingUpgradeable.user (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#641) can be used in cross function reentrancies:
	- LPStakingUpgradeable.getStakeInfo(uint256,address) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#974-997)
	- LPStakingUpgradeable.pendingZONE(uint256,address) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#842-859)
	- LPStakingUpgradeable.user (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#641)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities
INFO:Detectors:
LPStakingUpgradeable.pendingZONE(uint256,address) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#842-859) performs a multiplication on the result of a division:
	- rewardToPool = multiplier.mul(zonePerMinute).mul(pool_.poolWeight).div(totalPoolWeight) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#854)
	- accZONEPerLP = accZONEPerLP.add(rewardToPool.mul(1000000000000000000).div(pool_.lpSupply)) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#855)
LPStakingUpgradeable.updatePool(uint256) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#927-950) performs a multiplication on the result of a division:
	- rewardToPool = multiplier.mul(zonePerMinute).mul(pool_.poolWeight).div(totalPoolWeight) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#934)
	- pool_.accZONEPerLP = pool_.accZONEPerLP.add(rewardToPool.mul(1000000000000000000).div(pool_.lpSupply)) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#937)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#divide-before-multiply
INFO:Detectors:
LPStakingUpgradeable._addPool(address,uint256,bool) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#884-908) uses a dangerous strict equality:
	- require(bool,string)(poolMap[_lpTokenAddress].lpTokenAddress == address(0),LP token already added) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#886)
LPStakingUpgradeable._reward(uint256,address,uint256) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1099-1138) uses a dangerous strict equality:
	- found == true (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1107)
LPStakingUpgradeable.claim(uint256) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1081-1097) uses a dangerous strict equality:
	- require(bool,string)(claimIn == 0,The reward not allowed yet. please wait for more) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1092)
LPStakingUpgradeable.getStakeInfo(uint256,address) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#974-997) uses a dangerous strict equality:
	- found == true (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#992)
LPStakingUpgradeable.withdraw(uint256,uint256) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1047-1074) uses a dangerous strict equality:
	- 0 < pendingZONE_ && claimIn == 0 (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1057)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dangerous-strict-equalities
INFO:Detectors:
Reentrancy in LPStakingUpgradeable.deposit(uint256,uint256) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1011-1039):
	External calls:
	- IERC20Upgradeable(pool_.lpTokenAddress).safeTransferFrom(_account,address(this),_amount) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1030)
	State variables written after the call(s):
	- pool_.lpSupply = pool_.lpSupply.add(depositedAmount) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1034)
	LPStakingUpgradeable.pool (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#636) can be used in cross function reentrancies:
	- LPStakingUpgradeable._addPool(address,uint256,bool) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#884-908)
	- LPStakingUpgradeable.finish() (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#772-787)
	- LPStakingUpgradeable.initialize(address,address,uint256,uint256,address[],uint256[],uint256[]) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#706-736)
	- LPStakingUpgradeable.pendingZONE(uint256,address) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#842-859)
	- LPStakingUpgradeable.pool (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#636)
	- LPStakingUpgradeable.poolLength() (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#872-874)
	- LPStakingUpgradeable.setPoolWeight(uint256,uint256,bool) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#913-922)
	- LPStakingUpgradeable.updatePool(uint256) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#927-950)
	- user_.lpAmount = user_.lpAmount.add(depositedAmount) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1033)
	LPStakingUpgradeable.user (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#641) can be used in cross function reentrancies:
	- LPStakingUpgradeable.getStakeInfo(uint256,address) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#974-997)
	- LPStakingUpgradeable.pendingZONE(uint256,address) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#842-859)
	- LPStakingUpgradeable.user (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#641)
	- user_.finishedZONE = user_.lpAmount.mul(pool_.accZONEPerLP).div(1000000000000000000).sub(pendingZONE_) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1037)
	LPStakingUpgradeable.user (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#641) can be used in cross function reentrancies:
	- LPStakingUpgradeable.getStakeInfo(uint256,address) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#974-997)
	- LPStakingUpgradeable.pendingZONE(uint256,address) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#842-859)
	- LPStakingUpgradeable.user (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#641)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1
INFO:Detectors:
ArrayUtil.findLowerBound(uint256[],uint256).mid (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1750) is a local variable never initialized
LPStakingUpgradeable.deposit(uint256,uint256).pendingZONE_ (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1020) is a local variable never initialized
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#uninitialized-local-variables
INFO:Detectors:
UpgradeableProxy.constructor(address,bytes) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#168-174) ignores return value by Address.functionDelegateCall(_logic,_data) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#172)
TransparentUpgradeableProxy.upgradeToAndCall(address,bytes) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#372-375) ignores return value by Address.functionDelegateCall(newImplementation,data) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#374)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return
INFO:Detectors:
LPStakingUpgradeableProxy.constructor(address,address,bytes).admin (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1185) shadows:
	- TransparentUpgradeableProxy.admin() (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#326-328) (function)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing
INFO:Detectors:
LPStakingUpgradeable.setGovernorTimelock(address) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#738-740) should emit an event for: 
	- governorTimelock = _governorTimelock (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#739) 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-access-control
INFO:Detectors:
LPStakingUpgradeable.setGovernorTimelock(address)._governorTimelock (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#738) lacks a zero-check on :
		- governorTimelock = _governorTimelock (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#739)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation
INFO:Detectors:
Modifier TransparentUpgradeableProxy.ifAdmin() (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#309-315) does not always execute _; or revertReference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-modifier
INFO:Detectors:
LPStakingUpgradeable.finish() (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#772-787) uses timestamp for comparisons
	Dangerous comparisons:
	- pid < length (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#777)
	- 0 < pool_.lpSupply (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#779)
LPStakingUpgradeable.pendingZONE(uint256,address) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#842-859) uses timestamp for comparisons
	Dangerous comparisons:
	- pool_.lastRewardTime < block.timestamp (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#852)
LPStakingUpgradeable._addPool(address,uint256,bool) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#884-908) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(poolMap[_lpTokenAddress].lpTokenAddress == address(0),LP token already added) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#886)
	- START_TIME < block.timestamp (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#892)
LPStakingUpgradeable.updatePool(uint256) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#927-950) uses timestamp for comparisons
	Dangerous comparisons:
	- block.timestamp <= pool_.lastRewardTime (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#929)
	- _pid == 0 && _lpUnlockedFromUniswapV2Locker == false && LP_UNLOCK_DATE < block.timestamp (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#942)
LPStakingUpgradeable.massUpdatePools() (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#956-961) uses timestamp for comparisons
	Dangerous comparisons:
	- pid < length (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#958)
LPStakingUpgradeable._getClaimIn(uint256) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#963-966) uses timestamp for comparisons
	Dangerous comparisons:
	- (block.timestamp < endTs) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#965)
LPStakingUpgradeable.getStakeInfo(uint256,address) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#974-997) uses timestamp for comparisons
	Dangerous comparisons:
	- found == true (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#992)
LPStakingUpgradeable.withdraw(uint256,uint256) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1047-1074) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(_amount <= user_.lpAmount,Not enough LP token balance) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1051)
	- 0 < pendingZONE_ && claimIn == 0 (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1057)
LPStakingUpgradeable.claim(uint256) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1081-1097) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(claimIn == 0,The reward not allowed yet. please wait for more) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1092)
LPStakingUpgradeable._reward(uint256,address,uint256) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1099-1138) uses timestamp for comparisons
	Dangerous comparisons:
	- found == true (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1107)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp
INFO:Detectors:
Proxy._delegate(address) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#81-101) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#83-100)
UpgradeableProxy._implementation() (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#191-197) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#194-196)
UpgradeableProxy._setImplementation(address) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#212-221) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#218-220)
TransparentUpgradeableProxy._admin() (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#380-386) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#383-385)
TransparentUpgradeableProxy._setAdmin(address) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#391-398) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#395-397)
AddressUpgradeable.isContract(address) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1583-1592) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1590)
AddressUpgradeable._verifyCallResult(bool,bytes,string) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1704-1721) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1713-1716)
Address.isContract(address) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1845-1854) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1852)
Address._verifyCallResult(bool,bytes,string) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1990-2007) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1999-2002)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage
INFO:Detectors:
LPStakingUpgradeable.updatePool(uint256) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#927-950) compares to a boolean constant:
	-_pid == 0 && _lpUnlockedFromUniswapV2Locker == false && LP_UNLOCK_DATE < block.timestamp (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#942)
LPStakingUpgradeable.getStakeInfo(uint256,address) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#974-997) compares to a boolean constant:
	-found == true (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#992)
LPStakingUpgradeable._reward(uint256,address,uint256) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1099-1138) compares to a boolean constant:
	-found == true (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1107)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#boolean-equality
INFO:Detectors:
Different versions of Solidity are used:
	- Version used: ['0.7.6', '>=0.4.24<0.8.0', '>=0.5.0', '>=0.6.0<0.8.0', '>=0.6.2<0.8.0']
	- 0.7.6 (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#479)
	- 0.7.6 (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#573)
	- 0.7.6 (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1725)
	- 0.7.6 (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1773)
	- 0.7.6 (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1797)
	- 0.7.6 (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1804)
	- >=0.4.24<0.8.0 (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#8)
	- >=0.5.0 (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#2042)
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#63)
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#147)
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#226)
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#259)
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#411)
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1191)
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1406)
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1484)
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#2012)
	- >=0.6.2<0.8.0 (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1560)
	- >=0.6.2<0.8.0 (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1822)
	- v2 (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#2)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#different-pragma-directives-are-used
INFO:Detectors:
LPStakingUpgradeable.updatePool(uint256) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#927-950) has costly operations inside a loop:
	- _lpUnlockedFromUniswapV2Locker = true (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#945)
LPStakingUpgradeable.updatePool(uint256) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#927-950) has costly operations inside a loop:
	- unusedZone = unusedZone.add(rewardToPool) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#939)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#costly-operations-inside-a-loop
INFO:Detectors:
Address.functionCall(address,bytes) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1898-1900) is never used and should be removed
Address.functionCall(address,bytes,string) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1908-1910) is never used and should be removed
Address.functionCallWithValue(address,bytes,uint256) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1923-1925) is never used and should be removed
Address.functionCallWithValue(address,bytes,uint256,string) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1933-1940) is never used and should be removed
Address.functionStaticCall(address,bytes) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1948-1950) is never used and should be removed
Address.functionStaticCall(address,bytes,string) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1958-1964) is never used and should be removed
Address.sendValue(address,uint256) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1872-1878) is never used and should be removed
AddressUpgradeable.functionCall(address,bytes) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1636-1638) is never used and should be removed
AddressUpgradeable.functionCallWithValue(address,bytes,uint256) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1661-1663) is never used and should be removed
AddressUpgradeable.functionStaticCall(address,bytes) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1686-1688) is never used and should be removed
AddressUpgradeable.functionStaticCall(address,bytes,string) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1696-1702) is never used and should be removed
AddressUpgradeable.sendValue(address,uint256) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1610-1616) is never used and should be removed
ContextUpgradeable.__Context_init() (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#240-242) is never used and should be removed
ContextUpgradeable._msgData() (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#250-253) is never used and should be removed
MathUpgradeable.max(uint256,uint256) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#2021-2023) is never used and should be removed
MathUpgradeable.min(uint256,uint256) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#2028-2030) is never used and should be removed
SafeERC20Upgradeable.safeApprove(IERC20Upgradeable,address,uint256) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1518-1527) is never used and should be removed
SafeERC20Upgradeable.safeDecreaseAllowance(IERC20Upgradeable,address,uint256) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1534-1537) is never used and should be removed
SafeERC20Upgradeable.safeIncreaseAllowance(IERC20Upgradeable,address,uint256) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1529-1532) is never used and should be removed
SafeMathUpgradeable.div(uint256,uint256,string) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1378-1381) is never used and should be removed
SafeMathUpgradeable.mod(uint256,uint256) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1340-1343) is never used and should be removed
SafeMathUpgradeable.mod(uint256,uint256,string) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1398-1401) is never used and should be removed
SafeMathUpgradeable.sub(uint256,uint256,string) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1358-1361) is never used and should be removed
SafeMathUpgradeable.tryAdd(uint256,uint256) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1212-1216) is never used and should be removed
SafeMathUpgradeable.tryDiv(uint256,uint256) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1248-1251) is never used and should be removed
SafeMathUpgradeable.tryMod(uint256,uint256) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1258-1261) is never used and should be removed
SafeMathUpgradeable.tryMul(uint256,uint256) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1233-1241) is never used and should be removed
SafeMathUpgradeable.trySub(uint256,uint256) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1223-1226) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code
INFO:Detectors:
Pragma version>=0.4.24<0.8.0 (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#8) is too complex
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#63) is too complex
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#147) is too complex
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#226) is too complex
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#259) is too complex
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#411) is too complex
Pragma version0.7.6 (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#479) allows old versions
Pragma version0.7.6 (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#573) allows old versions
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1191) is too complex
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1406) is too complex
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1484) is too complex
Pragma version>=0.6.2<0.8.0 (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1560) is too complex
Pragma version0.7.6 (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1725) allows old versions
Pragma version0.7.6 (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1773) allows old versions
Pragma version0.7.6 (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1797) allows old versions
Pragma version0.7.6 (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1804) allows old versions
Pragma version>=0.6.2<0.8.0 (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1822) is too complex
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#2012) is too complex
Pragma version>=0.5.0 (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#2042) allows old versions
solc-0.7.6 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity
INFO:Detectors:
Low level call in AddressUpgradeable.sendValue(address,uint256) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1610-1616):
	- (success) = recipient.call{value: amount}() (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1614)
Low level call in AddressUpgradeable.functionCallWithValue(address,bytes,uint256,string) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1671-1678):
	- (success,returndata) = target.call{value: value}(data) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1676)
Low level call in AddressUpgradeable.functionStaticCall(address,bytes,string) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1696-1702):
	- (success,returndata) = target.staticcall(data) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1700)
Low level call in Address.sendValue(address,uint256) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1872-1878):
	- (success) = recipient.call{value: amount}() (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1876)
Low level call in Address.functionCallWithValue(address,bytes,uint256,string) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1933-1940):
	- (success,returndata) = target.call{value: value}(data) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1938)
Low level call in Address.functionStaticCall(address,bytes,string) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1958-1964):
	- (success,returndata) = target.staticcall(data) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1962)
Low level call in Address.functionDelegateCall(address,bytes,string) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1982-1988):
	- (success,returndata) = target.delegatecall(data) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1986)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls
INFO:Detectors:
Function ContextUpgradeable.__Context_init() (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#240-242) is not in mixedCase
Function ContextUpgradeable.__Context_init_unchained() (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#244-245) is not in mixedCase
Variable ContextUpgradeable.__gap (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#254) is not in mixedCase
Function ReentrancyGuardUpgradeable.__ReentrancyGuard_init() (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#447-449) is not in mixedCase
Function ReentrancyGuardUpgradeable.__ReentrancyGuard_init_unchained() (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#451-453) is not in mixedCase
Variable ReentrancyGuardUpgradeable.__gap (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#475) is not in mixedCase
Function OwnableUpgradeable.__Ownable_init(address) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#505-508) is not in mixedCase
Parameter OwnableUpgradeable.__Ownable_init(address)._ownerAddress (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#505) is not in mixedCase
Function OwnableUpgradeable.__Ownable_init_unchained(address) (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#510-513) is not in mixedCase
Parameter OwnableUpgradeable.__Ownable_init_unchained(address)._ownerAddress (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#510) is not in mixedCase
Variable OwnableUpgradeable.__gap (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#570) is not in mixedCase
Parameter LPStakingUpgradeable.initialize(address,address,uint256,uint256,address[],uint256[],uint256[])._ownerAddress (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#707) is not in mixedCase
Parameter LPStakingUpgradeable.initialize(address,address,uint256,uint256,address[],uint256[],uint256[])._priceOracle (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#708) is not in mixedCase
Parameter LPStakingUpgradeable.initialize(address,address,uint256,uint256,address[],uint256[],uint256[])._zonePerMinute (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#709) is not in mixedCase
Parameter LPStakingUpgradeable.initialize(address,address,uint256,uint256,address[],uint256[],uint256[])._minDepositAmountInEth (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#710) is not in mixedCase
Parameter LPStakingUpgradeable.initialize(address,address,uint256,uint256,address[],uint256[],uint256[])._nftAddresses (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#711) is not in mixedCase
Parameter LPStakingUpgradeable.initialize(address,address,uint256,uint256,address[],uint256[],uint256[])._nftModels (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#712) is not in mixedCase
Parameter LPStakingUpgradeable.initialize(address,address,uint256,uint256,address[],uint256[],uint256[])._nftPrices (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#713) is not in mixedCase
Parameter LPStakingUpgradeable.setGovernorTimelock(address)._governorTimelock (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#738) is not in mixedCase
Parameter LPStakingUpgradeable.setLockPeriod(uint256)._lockPeriod (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#743) is not in mixedCase
Parameter LPStakingUpgradeable.setZonePerMinute(uint256)._zonePerMinute (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#750) is not in mixedCase
Parameter LPStakingUpgradeable.setMinDepositAmountInEth(uint256)._minDepositAmountInEth (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#766) is not in mixedCase
Parameter LPStakingUpgradeable.enableRewardInZone(bool)._enable (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#789) is not in mixedCase
Parameter LPStakingUpgradeable.enableRewardInNft(bool)._enable (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#794) is not in mixedCase
Parameter LPStakingUpgradeable.setRewardNfts(address[],uint256[],uint256[])._contractAddresses (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#806) is not in mixedCase
Parameter LPStakingUpgradeable.setRewardNfts(address[],uint256[],uint256[])._modelIds (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#807) is not in mixedCase
Parameter LPStakingUpgradeable.setRewardNfts(address[],uint256[],uint256[])._pricesInEth (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#808) is not in mixedCase
Parameter LPStakingUpgradeable.pendingZONE(uint256,address)._pid (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#842) is not in mixedCase
Parameter LPStakingUpgradeable.pendingZONE(uint256,address)._account (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#842) is not in mixedCase
Parameter LPStakingUpgradeable.addPool(address,uint256,bool)._lpTokenAddress (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#880) is not in mixedCase
Parameter LPStakingUpgradeable.addPool(address,uint256,bool)._poolWeight (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#880) is not in mixedCase
Parameter LPStakingUpgradeable.addPool(address,uint256,bool)._withUpdate (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#880) is not in mixedCase
Parameter LPStakingUpgradeable.setPoolWeight(uint256,uint256,bool)._pid (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#913) is not in mixedCase
Parameter LPStakingUpgradeable.setPoolWeight(uint256,uint256,bool)._poolWeight (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#913) is not in mixedCase
Parameter LPStakingUpgradeable.setPoolWeight(uint256,uint256,bool)._withUpdate (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#913) is not in mixedCase
Parameter LPStakingUpgradeable.updatePool(uint256)._pid (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#927) is not in mixedCase
Parameter LPStakingUpgradeable.getStakeInfo(uint256,address)._pid (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#974) is not in mixedCase
Parameter LPStakingUpgradeable.getStakeInfo(uint256,address)._account (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#974) is not in mixedCase
Parameter LPStakingUpgradeable.deposit(uint256,uint256)._pid (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1011) is not in mixedCase
Parameter LPStakingUpgradeable.deposit(uint256,uint256)._amount (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1011) is not in mixedCase
Parameter LPStakingUpgradeable.withdraw(uint256,uint256)._pid (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1047) is not in mixedCase
Parameter LPStakingUpgradeable.withdraw(uint256,uint256)._amount (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1047) is not in mixedCase
Parameter LPStakingUpgradeable.claim(uint256)._pid (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1081) is not in mixedCase
Parameter LPStakingUpgradeable.emergencyWithdraw(uint256)._pid (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1145) is not in mixedCase
Parameter LPStakingUpgradeable.fund(address,uint256)._from (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1174) is not in mixedCase
Parameter LPStakingUpgradeable.fund(address,uint256)._amount (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1174) is not in mixedCase
Variable LPStakingUpgradeable.START_TIME (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#650) is not in mixedCase
Variable LPStakingUpgradeable.__gap (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1181) is not in mixedCase
Function IUniswapV2Pair.DOMAIN_SEPARATOR() (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#2059) is not in mixedCase
Function IUniswapV2Pair.PERMIT_TYPEHASH() (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#2060) is not in mixedCase
Function IUniswapV2Pair.MINIMUM_LIQUIDITY() (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#2077) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions
INFO:Detectors:
Redundant expression "this (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#251)" inContextUpgradeable (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#239-255)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#redundant-statements
INFO:Detectors:
Variable LPStakingUpgradeable._reward(uint256,address,uint256)._pendingZONE (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1099) is too similar to LPStakingUpgradeable.claim(uint256).pendingZONE_ (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1088)
Variable LPStakingUpgradeable._reward(uint256,address,uint256)._pendingZONE (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1099) is too similar to LPStakingUpgradeable.deposit(uint256,uint256).pendingZONE_ (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1020)
Variable LPStakingUpgradeable._reward(uint256,address,uint256)._pendingZONE (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1099) is too similar to LPStakingUpgradeable.withdraw(uint256,uint256).pendingZONE_ (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1055)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#variable-names-too-similar
INFO:Detectors:
LPStakingUpgradeable.__gap (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#1181) is never used in LPStakingUpgradeable (../../sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol#588-1182)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-state-variable
INFO:Slither:/bdata2/sc/dataset/mainnet/0x6031C257Fb1C855Fe59fC68ee5B2Bfa9433cCE28.sol analyzed (20 contracts with 85 detectors), 157 result(s) found
