INFO:Detectors:
TokenDistributor._distributeTokenWithAmount(IERC20,uint256) (../../sc/dataset/mainnet/0x7d2c5D44Ed797848Ad13E28f869729CEFacEB06E.sol#214-235) sends eth to arbitrary user
	Dangerous calls:
	- (_success) = _distribution.receivers[j].call{value: _amount}() (../../sc/dataset/mainnet/0x7d2c5D44Ed797848Ad13E28f869729CEFacEB06E.sol#230)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#functions-that-send-ether-to-arbitrary-destinations
INFO:Detectors:
TokenDistributor._distributeTokenWithAmount(IERC20,uint256) (../../sc/dataset/mainnet/0x7d2c5D44Ed797848Ad13E28f869729CEFacEB06E.sol#214-235) uses a dangerous strict equality:
	- _amount == 0 (../../sc/dataset/mainnet/0x7d2c5D44Ed797848Ad13E28f869729CEFacEB06E.sol#222)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dangerous-strict-equalities
INFO:Detectors:
TokenDistributor.distribute(IERC20[]) (../../sc/dataset/mainnet/0x7d2c5D44Ed797848Ad13E28f869729CEFacEB06E.sol#149-161) has external calls inside a loop: _balanceToDistribute = _tokens[i].balanceOf(address(this)) (../../sc/dataset/mainnet/0x7d2c5D44Ed797848Ad13E28f869729CEFacEB06E.sol#151-154)
TokenDistributor._distributeTokenWithAmount(IERC20,uint256) (../../sc/dataset/mainnet/0x7d2c5D44Ed797848Ad13E28f869729CEFacEB06E.sol#214-235) has external calls inside a loop: (_success) = _distribution.receivers[j].call{value: _amount}() (../../sc/dataset/mainnet/0x7d2c5D44Ed797848Ad13E28f869729CEFacEB06E.sol#230)
SafeERC20.callOptionalReturn(IERC20,bytes) (../../sc/dataset/mainnet/0x7d2c5D44Ed797848Ad13E28f869729CEFacEB06E.sol#532-552) has external calls inside a loop: (success,returndata) = address(token).call(data) (../../sc/dataset/mainnet/0x7d2c5D44Ed797848Ad13E28f869729CEFacEB06E.sol#544)
TokenDistributor.distributeWithPercentages(IERC20[],uint256[]) (../../sc/dataset/mainnet/0x7d2c5D44Ed797848Ad13E28f869729CEFacEB06E.sol#175-189) has external calls inside a loop: _amountToDistribute = _tokens[i].balanceOf(address(this)).mul(_percentages[i]).div(100) (../../sc/dataset/mainnet/0x7d2c5D44Ed797848Ad13E28f869729CEFacEB06E.sol#179-182)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation/#calls-inside-a-loop
INFO:Detectors:
Reentrancy in TokenDistributor._distributeTokenWithAmount(IERC20,uint256) (../../sc/dataset/mainnet/0x7d2c5D44Ed797848Ad13E28f869729CEFacEB06E.sol#214-235):
	External calls:
	- _token.safeTransfer(_distribution.receivers[j],_amount) (../../sc/dataset/mainnet/0x7d2c5D44Ed797848Ad13E28f869729CEFacEB06E.sol#227)
	- (_success) = _distribution.receivers[j].call{value: _amount}() (../../sc/dataset/mainnet/0x7d2c5D44Ed797848Ad13E28f869729CEFacEB06E.sol#230)
	External calls sending eth:
	- (_success) = _distribution.receivers[j].call{value: _amount}() (../../sc/dataset/mainnet/0x7d2c5D44Ed797848Ad13E28f869729CEFacEB06E.sol#230)
	Event emitted after the call(s):
	- Distributed(_distribution.receivers[j],_distribution.percentages[j],_amount) (../../sc/dataset/mainnet/0x7d2c5D44Ed797848Ad13E28f869729CEFacEB06E.sol#233)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3
INFO:Detectors:
Address.isContract(address) (../../sc/dataset/mainnet/0x7d2c5D44Ed797848Ad13E28f869729CEFacEB06E.sol#574-585) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0x7d2c5D44Ed797848Ad13E28f869729CEFacEB06E.sol#581-583)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage
INFO:Detectors:
Context._msgData() (../../sc/dataset/mainnet/0x7d2c5D44Ed797848Ad13E28f869729CEFacEB06E.sol#25-28) is never used and should be removed
SafeERC20.safeApprove(IERC20,address,uint256) (../../sc/dataset/mainnet/0x7d2c5D44Ed797848Ad13E28f869729CEFacEB06E.sol#486-500) is never used and should be removed
SafeERC20.safeDecreaseAllowance(IERC20,address,uint256) (../../sc/dataset/mainnet/0x7d2c5D44Ed797848Ad13E28f869729CEFacEB06E.sol#514-524) is never used and should be removed
SafeERC20.safeIncreaseAllowance(IERC20,address,uint256) (../../sc/dataset/mainnet/0x7d2c5D44Ed797848Ad13E28f869729CEFacEB06E.sol#502-512) is never used and should be removed
SafeERC20.safeTransferFrom(IERC20,address,address,uint256) (../../sc/dataset/mainnet/0x7d2c5D44Ed797848Ad13E28f869729CEFacEB06E.sol#477-484) is never used and should be removed
SafeMath.add(uint256,uint256) (../../sc/dataset/mainnet/0x7d2c5D44Ed797848Ad13E28f869729CEFacEB06E.sol#364-369) is never used and should be removed
SafeMath.mod(uint256,uint256) (../../sc/dataset/mainnet/0x7d2c5D44Ed797848Ad13E28f869729CEFacEB06E.sol#441-444) is never used and should be removed
SafeMath.sub(uint256,uint256) (../../sc/dataset/mainnet/0x7d2c5D44Ed797848Ad13E28f869729CEFacEB06E.sol#380-385) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code
INFO:Detectors:
Pragma version^0.7.0 (../../sc/dataset/mainnet/0x7d2c5D44Ed797848Ad13E28f869729CEFacEB06E.sol#8) allows old versions
Pragma version^0.7.0 (../../sc/dataset/mainnet/0x7d2c5D44Ed797848Ad13E28f869729CEFacEB06E.sol#34) allows old versions
Pragma version^0.7.0 (../../sc/dataset/mainnet/0x7d2c5D44Ed797848Ad13E28f869729CEFacEB06E.sol#102) allows old versions
Pragma version^0.7.0 (../../sc/dataset/mainnet/0x7d2c5D44Ed797848Ad13E28f869729CEFacEB06E.sol#241) allows old versions
Pragma version^0.7.0 (../../sc/dataset/mainnet/0x7d2c5D44Ed797848Ad13E28f869729CEFacEB06E.sol#324) allows old versions
Pragma version^0.7.0 (../../sc/dataset/mainnet/0x7d2c5D44Ed797848Ad13E28f869729CEFacEB06E.sol#339) allows old versions
Pragma version^0.7.0 (../../sc/dataset/mainnet/0x7d2c5D44Ed797848Ad13E28f869729CEFacEB06E.sol#450) allows old versions
Pragma version^0.7.0 (../../sc/dataset/mainnet/0x7d2c5D44Ed797848Ad13E28f869729CEFacEB06E.sol#558) allows old versions
solc-0.7.6 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity
INFO:Detectors:
Low level call in TokenDistributor._distributeTokenWithAmount(IERC20,uint256) (../../sc/dataset/mainnet/0x7d2c5D44Ed797848Ad13E28f869729CEFacEB06E.sol#214-235):
	- (_success) = _distribution.receivers[j].call{value: _amount}() (../../sc/dataset/mainnet/0x7d2c5D44Ed797848Ad13E28f869729CEFacEB06E.sol#230)
Low level call in SafeERC20.callOptionalReturn(IERC20,bytes) (../../sc/dataset/mainnet/0x7d2c5D44Ed797848Ad13E28f869729CEFacEB06E.sol#532-552):
	- (success,returndata) = address(token).call(data) (../../sc/dataset/mainnet/0x7d2c5D44Ed797848Ad13E28f869729CEFacEB06E.sol#544)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls
INFO:Detectors:
Parameter TokenDistributor.setTokenDistribution(address[],uint256[])._receivers (../../sc/dataset/mainnet/0x7d2c5D44Ed797848Ad13E28f869729CEFacEB06E.sol#140) is not in mixedCase
Parameter TokenDistributor.setTokenDistribution(address[],uint256[])._percentages (../../sc/dataset/mainnet/0x7d2c5D44Ed797848Ad13E28f869729CEFacEB06E.sol#140) is not in mixedCase
Parameter TokenDistributor.distribute(IERC20[])._tokens (../../sc/dataset/mainnet/0x7d2c5D44Ed797848Ad13E28f869729CEFacEB06E.sol#149) is not in mixedCase
Parameter TokenDistributor.distributeWithAmounts(IERC20[],uint256[])._tokens (../../sc/dataset/mainnet/0x7d2c5D44Ed797848Ad13E28f869729CEFacEB06E.sol#166) is not in mixedCase
Parameter TokenDistributor.distributeWithAmounts(IERC20[],uint256[])._amounts (../../sc/dataset/mainnet/0x7d2c5D44Ed797848Ad13E28f869729CEFacEB06E.sol#166) is not in mixedCase
Parameter TokenDistributor.distributeWithPercentages(IERC20[],uint256[])._tokens (../../sc/dataset/mainnet/0x7d2c5D44Ed797848Ad13E28f869729CEFacEB06E.sol#175) is not in mixedCase
Parameter TokenDistributor.distributeWithPercentages(IERC20[],uint256[])._percentages (../../sc/dataset/mainnet/0x7d2c5D44Ed797848Ad13E28f869729CEFacEB06E.sol#175) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions
INFO:Detectors:
Redundant expression "this (../../sc/dataset/mainnet/0x7d2c5D44Ed797848Ad13E28f869729CEFacEB06E.sol#26)" inContext (../../sc/dataset/mainnet/0x7d2c5D44Ed797848Ad13E28f869729CEFacEB06E.sol#20-29)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#redundant-statements
INFO:Slither:/bdata2/sc/dataset/mainnet/0x7d2c5D44Ed797848Ad13E28f869729CEFacEB06E.sol analyzed (8 contracts with 85 detectors), 35 result(s) found
