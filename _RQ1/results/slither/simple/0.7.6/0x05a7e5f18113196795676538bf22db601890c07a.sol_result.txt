Compilation warnings/errors on /bdata2/sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol:
Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it "abstract" is sufficient.
   --> /bdata2/sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol:323:5:
    |
323 |     constructor () internal {
    |     ^ (Relevant source part starts here and spans across multiple lines).

Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it "abstract" is sufficient.
   --> /bdata2/sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol:616:5:
    |
616 |     constructor() internal {
    |     ^ (Relevant source part starts here and spans across multiple lines).


INFO:Detectors:
UniswapV2Pair._update(uint256,uint256,uint112,uint112) (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#475-488) uses a weak PRNG: "blockTimestamp = uint32(block.timestamp % 2 ** 32) (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#477)" 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#weak-PRNG
INFO:Detectors:
UniswapV2Pair._safeTransfer(address,address,uint256) (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#451-454) uses a dangerous strict equality:
	- require(bool,string)(success && (data.length == 0 || abi.decode(data,(bool))),UniswapV2: TRANSFER_FAILED) (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#453)
UniswapV2Pair.mint(address) (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#512-533) uses a dangerous strict equality:
	- totalSupply_ == 0 (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#521)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dangerous-strict-equalities
INFO:Detectors:
Reentrancy in UniswapV2Pair.burn(address) (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#536-558):
	External calls:
	- _safeTransfer(token0_,to,amount0) (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#550)
		- (success,data) = token.call(abi.encodeWithSelector(SELECTOR,to,value)) (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#452)
	- _safeTransfer(token1_,to,amount1) (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#551)
		- (success,data) = token.call(abi.encodeWithSelector(SELECTOR,to,value)) (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#452)
	State variables written after the call(s):
	- _kLast = uint256(reserve0).mul(reserve1) (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#556)
	UniswapV2Pair._kLast (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#404) can be used in cross function reentrancies:
	- UniswapV2Pair._mintFee(uint112,uint112) (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#491-509)
	- UniswapV2Pair.burn(address) (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#536-558)
	- UniswapV2Pair.kLast() (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#441-443)
	- UniswapV2Pair.mint(address) (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#512-533)
	- _update(balance0,balance1,_reserve0,_reserve1) (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#555)
		- blockTimestampLast = blockTimestamp (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#486)
	UniswapV2Pair.blockTimestampLast (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#400) can be used in cross function reentrancies:
	- UniswapV2Pair._update(uint256,uint256,uint112,uint112) (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#475-488)
	- UniswapV2Pair.getReserves() (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#445-449)
	- _update(balance0,balance1,_reserve0,_reserve1) (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#555)
		- reserve0 = uint112(balance0) (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#484)
	UniswapV2Pair.reserve0 (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#398) can be used in cross function reentrancies:
	- UniswapV2Pair._update(uint256,uint256,uint112,uint112) (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#475-488)
	- UniswapV2Pair.burn(address) (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#536-558)
	- UniswapV2Pair.getReserves() (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#445-449)
	- UniswapV2Pair.mint(address) (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#512-533)
	- UniswapV2Pair.skim(address) (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#592-597)
	- UniswapV2Pair.sync() (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#600-602)
	- _update(balance0,balance1,_reserve0,_reserve1) (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#555)
		- reserve1 = uint112(balance1) (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#485)
	UniswapV2Pair.reserve1 (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#399) can be used in cross function reentrancies:
	- UniswapV2Pair._update(uint256,uint256,uint112,uint112) (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#475-488)
	- UniswapV2Pair.burn(address) (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#536-558)
	- UniswapV2Pair.getReserves() (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#445-449)
	- UniswapV2Pair.mint(address) (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#512-533)
	- UniswapV2Pair.skim(address) (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#592-597)
	- UniswapV2Pair.sync() (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#600-602)
Reentrancy in RenaswapV1Factory.createPair(address,address) (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#663-679):
	External calls:
	- IUniswapV2Pair(pair).initialize(tokenA,address(wrapper)) (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#673)
	State variables written after the call(s):
	- getPair[tokenA][tokenB] = pair (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#674)
	RenaswapV1Factory.getPair (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#642) can be used in cross function reentrancies:
	- RenaswapV1Factory.createPair(address,address) (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#663-679)
	- RenaswapV1Factory.getPair (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#642)
Reentrancy in UniswapV2Pair.swap(uint256,uint256,address,bytes) (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#561-589):
	External calls:
	- _safeTransfer(token0_,to,amount0Out) (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#572)
		- (success,data) = token.call(abi.encodeWithSelector(SELECTOR,to,value)) (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#452)
	- _safeTransfer(token1_,to,amount1Out) (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#573)
		- (success,data) = token.call(abi.encodeWithSelector(SELECTOR,to,value)) (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#452)
	- IUniswapV2Callee(to).uniswapV2Call(msg.sender,amount0Out,amount1Out,data) (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#574)
	State variables written after the call(s):
	- _update(balance0,balance1,_reserve0,_reserve1) (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#587)
		- blockTimestampLast = blockTimestamp (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#486)
	UniswapV2Pair.blockTimestampLast (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#400) can be used in cross function reentrancies:
	- UniswapV2Pair._update(uint256,uint256,uint112,uint112) (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#475-488)
	- UniswapV2Pair.getReserves() (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#445-449)
	- _update(balance0,balance1,_reserve0,_reserve1) (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#587)
		- reserve0 = uint112(balance0) (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#484)
	UniswapV2Pair.reserve0 (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#398) can be used in cross function reentrancies:
	- UniswapV2Pair._update(uint256,uint256,uint112,uint112) (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#475-488)
	- UniswapV2Pair.burn(address) (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#536-558)
	- UniswapV2Pair.getReserves() (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#445-449)
	- UniswapV2Pair.mint(address) (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#512-533)
	- UniswapV2Pair.skim(address) (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#592-597)
	- UniswapV2Pair.sync() (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#600-602)
	- _update(balance0,balance1,_reserve0,_reserve1) (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#587)
		- reserve1 = uint112(balance1) (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#485)
	UniswapV2Pair.reserve1 (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#399) can be used in cross function reentrancies:
	- UniswapV2Pair._update(uint256,uint256,uint112,uint112) (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#475-488)
	- UniswapV2Pair.burn(address) (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#536-558)
	- UniswapV2Pair.getReserves() (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#445-449)
	- UniswapV2Pair.mint(address) (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#512-533)
	- UniswapV2Pair.skim(address) (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#592-597)
	- UniswapV2Pair.sync() (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#600-602)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1
INFO:Detectors:
RenaswapV1Factory.createPair(address,address) (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#663-679) uses tx.origin for authorization: require(bool,string)(tx.origin == feeToSetter,RenaswapV1: FORBIDDEN) (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#664)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dangerous-usage-of-txorigin
INFO:Detectors:
UniswapV2ERC20.constructor().chainId (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#135) is a local variable never initialized
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#uninitialized-local-variables
INFO:Detectors:
RenaswapV1Factory.createPair(address,address) (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#663-679) ignores return value by wrapper.addWrappedToken(tokenB,pair) (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#677)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return
INFO:Detectors:
RenaswapV1Factory.constructor(address,IRenaswapV1Wrapper)._feeToSetter (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#652) lacks a zero-check on :
		- feeToSetter = _feeToSetter (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#654)
RenaswapV1Factory.setFeeTo(address)._feeTo (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#681) lacks a zero-check on :
		- feeTo = _feeTo (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#683)
RenaswapV1Factory.setFeeToSetter(address)._feeToSetter (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#686) lacks a zero-check on :
		- feeToSetter = _feeToSetter (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#688)
UniswapV2Pair.initialize(address,address).token0_ (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#468) lacks a zero-check on :
		- _token0 = token0_ (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#470)
UniswapV2Pair.initialize(address,address).token1_ (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#468) lacks a zero-check on :
		- _token1 = token1_ (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#471)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation
INFO:Detectors:
Reentrancy in UniswapV2Pair.burn(address) (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#536-558):
	External calls:
	- _safeTransfer(token0_,to,amount0) (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#550)
		- (success,data) = token.call(abi.encodeWithSelector(SELECTOR,to,value)) (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#452)
	- _safeTransfer(token1_,to,amount1) (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#551)
		- (success,data) = token.call(abi.encodeWithSelector(SELECTOR,to,value)) (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#452)
	State variables written after the call(s):
	- _update(balance0,balance1,_reserve0,_reserve1) (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#555)
		- _price0CumulativeLast += uint256(UQ112x112.encode(_reserve1).uqdiv(_reserve0)) * timeElapsed (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#481)
	- _update(balance0,balance1,_reserve0,_reserve1) (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#555)
		- _price1CumulativeLast += uint256(UQ112x112.encode(_reserve0).uqdiv(_reserve1)) * timeElapsed (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#482)
Reentrancy in RenaswapV1Factory.createPair(address,address) (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#663-679):
	External calls:
	- IUniswapV2Pair(pair).initialize(tokenA,address(wrapper)) (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#673)
	State variables written after the call(s):
	- allPairs.push(pair) (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#675)
Reentrancy in UniswapV2Pair.swap(uint256,uint256,address,bytes) (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#561-589):
	External calls:
	- _safeTransfer(token0_,to,amount0Out) (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#572)
		- (success,data) = token.call(abi.encodeWithSelector(SELECTOR,to,value)) (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#452)
	- _safeTransfer(token1_,to,amount1Out) (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#573)
		- (success,data) = token.call(abi.encodeWithSelector(SELECTOR,to,value)) (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#452)
	- IUniswapV2Callee(to).uniswapV2Call(msg.sender,amount0Out,amount1Out,data) (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#574)
	State variables written after the call(s):
	- _update(balance0,balance1,_reserve0,_reserve1) (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#587)
		- _price0CumulativeLast += uint256(UQ112x112.encode(_reserve1).uqdiv(_reserve0)) * timeElapsed (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#481)
	- _update(balance0,balance1,_reserve0,_reserve1) (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#587)
		- _price1CumulativeLast += uint256(UQ112x112.encode(_reserve0).uqdiv(_reserve1)) * timeElapsed (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#482)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2
INFO:Detectors:
Reentrancy in UniswapV2Pair.burn(address) (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#536-558):
	External calls:
	- _safeTransfer(token0_,to,amount0) (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#550)
		- (success,data) = token.call(abi.encodeWithSelector(SELECTOR,to,value)) (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#452)
	- _safeTransfer(token1_,to,amount1) (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#551)
		- (success,data) = token.call(abi.encodeWithSelector(SELECTOR,to,value)) (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#452)
	Event emitted after the call(s):
	- Burn(msg.sender,amount0,amount1,to) (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#557)
	- Sync(reserve0,reserve1) (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#487)
		- _update(balance0,balance1,_reserve0,_reserve1) (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#555)
Reentrancy in RenaswapV1Factory.createPair(address,address) (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#663-679):
	External calls:
	- IUniswapV2Pair(pair).initialize(tokenA,address(wrapper)) (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#673)
	- wrapper.addWrappedToken(tokenB,pair) (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#677)
	Event emitted after the call(s):
	- PairCreated(tokenA,tokenB,pair,allPairs.length) (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#678)
Reentrancy in UniswapV2Pair.swap(uint256,uint256,address,bytes) (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#561-589):
	External calls:
	- _safeTransfer(token0_,to,amount0Out) (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#572)
		- (success,data) = token.call(abi.encodeWithSelector(SELECTOR,to,value)) (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#452)
	- _safeTransfer(token1_,to,amount1Out) (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#573)
		- (success,data) = token.call(abi.encodeWithSelector(SELECTOR,to,value)) (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#452)
	- IUniswapV2Callee(to).uniswapV2Call(msg.sender,amount0Out,amount1Out,data) (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#574)
	Event emitted after the call(s):
	- Swap(msg.sender,amount0In,amount1In,amount0Out,amount1Out,to) (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#588)
	- Sync(reserve0,reserve1) (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#487)
		- _update(balance0,balance1,_reserve0,_reserve1) (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#587)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3
INFO:Detectors:
UniswapV2ERC20.permit(address,address,uint256,uint256,uint8,bytes32,bytes32) (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#227-239) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(deadline >= block.timestamp,UniswapV2: EXPIRED) (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#228)
UniswapV2Pair._update(uint256,uint256,uint112,uint112) (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#475-488) uses timestamp for comparisons
	Dangerous comparisons:
	- timeElapsed > 0 && _reserve0 != 0 && _reserve1 != 0 (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#479)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp
INFO:Detectors:
RenaswapV1Factory.createPair(address,address) (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#663-679) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#670-672)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage
INFO:Detectors:
Different versions of Solidity are used:
	- Version used: ['>=0.6.0<0.8.0', '^0.7.6']
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#31)
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#244)
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#302)
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#607)
	- ^0.7.6 (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#5)
	- ^0.7.6 (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#55)
	- ^0.7.6 (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#111)
	- ^0.7.6 (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#356)
	- ^0.7.6 (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#375)
	- ^0.7.6 (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#624)
	- ^0.7.6 (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#697)
	- ^0.7.6 (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#706)
	- ^0.7.6 (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#745)
	- ^0.7.6 (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#770)
	- ^0.7.6 (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#792)
	- ^0.7.6 (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#811)
	- ^0.7.6 (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#818)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#different-pragma-directives-are-used
INFO:Detectors:
Pragma version^0.7.6 (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#5) allows old versions
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#31) is too complex
Pragma version^0.7.6 (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#55) allows old versions
Pragma version^0.7.6 (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#111) allows old versions
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#244) is too complex
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#302) is too complex
Pragma version^0.7.6 (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#356) allows old versions
Pragma version^0.7.6 (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#375) allows old versions
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#607) is too complex
Pragma version^0.7.6 (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#624) allows old versions
Pragma version^0.7.6 (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#697) allows old versions
Pragma version^0.7.6 (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#706) allows old versions
Pragma version^0.7.6 (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#745) allows old versions
Pragma version^0.7.6 (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#770) allows old versions
Pragma version^0.7.6 (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#792) allows old versions
Pragma version^0.7.6 (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#811) allows old versions
Pragma version^0.7.6 (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#818) allows old versions
solc-0.7.6 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity
INFO:Detectors:
Low level call in UniswapV2Pair._safeTransfer(address,address,uint256) (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#451-454):
	- (success,data) = token.call(abi.encodeWithSelector(SELECTOR,to,value)) (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#452)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls
INFO:Detectors:
Function IUniswapV2ERC20.DOMAIN_SEPARATOR() (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#22) is not in mixedCase
Function IUniswapV2ERC20.PERMIT_TYPEHASH() (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#23) is not in mixedCase
Function IUniswapV2Pair.MINIMUM_LIQUIDITY() (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#92) is not in mixedCase
Function UniswapV2ERC20.DOMAIN_SEPARATOR() (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#150-152) is not in mixedCase
Function UniswapV2ERC20.PERMIT_TYPEHASH() (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#154-156) is not in mixedCase
Constant UniswapV2ERC20._name (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#119) is not in UPPER_CASE_WITH_UNDERSCORES
Constant UniswapV2ERC20._symbol (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#120) is not in UPPER_CASE_WITH_UNDERSCORES
Constant UniswapV2ERC20._decimals (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#121) is not in UPPER_CASE_WITH_UNDERSCORES
Variable UniswapV2ERC20._totalSupply (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#122) is not in mixedCase
Variable UniswapV2ERC20._balanceOf (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#123) is not in mixedCase
Variable UniswapV2ERC20._allowance (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#124) is not in mixedCase
Variable UniswapV2ERC20._DOMAIN_SEPARATOR (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#126) is not in mixedCase
Variable UniswapV2ERC20._nonces (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#129) is not in mixedCase
Function UniswapV2Pair.MINIMUM_LIQUIDITY() (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#418-420) is not in mixedCase
Variable UniswapV2Pair._factory (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#394) is not in mixedCase
Variable UniswapV2Pair._token0 (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#395) is not in mixedCase
Variable UniswapV2Pair._token1 (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#396) is not in mixedCase
Variable UniswapV2Pair._price0CumulativeLast (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#402) is not in mixedCase
Variable UniswapV2Pair._price1CumulativeLast (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#403) is not in mixedCase
Variable UniswapV2Pair._kLast (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#404) is not in mixedCase
Parameter RenaswapV1Factory.setFeeTo(address)._feeTo (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#681) is not in mixedCase
Parameter RenaswapV1Factory.setFeeToSetter(address)._feeToSetter (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#686) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions
INFO:Detectors:
Variable UniswapV2Pair._price0CumulativeLast (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#402) is too similar to UniswapV2Pair._price1CumulativeLast (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#403)
Variable UniswapV2ERC20._totalSupply (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#122) is too similar to UniswapV2Pair.mint(address).totalSupply_ (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#520)
Variable UniswapV2Pair.swap(uint256,uint256,address,bytes).balance0Adjusted (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#582) is too similar to UniswapV2Pair.swap(uint256,uint256,address,bytes).balance1Adjusted (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#583)
Variable UniswapV2ERC20._totalSupply (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#122) is too similar to UniswapV2Pair.burn(address).totalSupply_ (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#545)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#variable-names-too-similar
INFO:Detectors:
RenaswapV1Factory.createPair(address,address) (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#663-679) uses literals with too many digits:
	- bytecode = type()(RenaswapV1Pair).creationCode (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#668)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits
INFO:Detectors:
RenaswapV1Factory.wrapper (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#646) should be immutable 
UniswapV2ERC20._DOMAIN_SEPARATOR (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#126) should be immutable 
UniswapV2Pair._factory (../../sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol#394) should be immutable 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-immutable
INFO:Slither:/bdata2/sc/dataset/mainnet/0x05a7e5f18113196795676538bf22db601890c07a.sol analyzed (17 contracts with 85 detectors), 73 result(s) found
