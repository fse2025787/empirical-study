Compilation warnings/errors on /bdata2/sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol:
Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it "abstract" is sufficient.
   --> /bdata2/sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol:162:5:
    |
162 |     constructor (string memory name_, string memory symbol_) public {
    |     ^ (Relevant source part starts here and spans across multiple lines).

Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it "abstract" is sufficient.
   --> /bdata2/sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol:452:5:
    |
452 |     constructor () internal {
    |     ^ (Relevant source part starts here and spans across multiple lines).

Warning: Contract code size exceeds 24576 bytes (a limit introduced in Spurious Dragon). This contract may not be deployable on mainnet. Consider enabling the optimizer (with a low "runs" value!), turning off revert strings, or using libraries.
    --> /bdata2/sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol:1030:1:
     |
1030 | contract Hypervisor is IVault, IUniswapV3MintCallback, IUniswapV3SwapCallback, ERC20, ReentrancyGuard {
     | ^ (Relevant source part starts here and spans across multiple lines).


INFO:Detectors:
Hypervisor.uniswapV3MintCallback(uint256,uint256,bytes) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1349-1364) uses arbitrary from in transferFrom: token0.safeTransferFrom(payer,msg.sender,amount0) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1361)
Hypervisor.uniswapV3MintCallback(uint256,uint256,bytes) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1349-1364) uses arbitrary from in transferFrom: token1.safeTransferFrom(payer,msg.sender,amount1) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1362)
Hypervisor.uniswapV3SwapCallback(int256,int256,bytes) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1367-1392) uses arbitrary from in transferFrom: token0.safeTransferFrom(payer,msg.sender,uint256(amount0Delta)) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1381)
Hypervisor.uniswapV3SwapCallback(int256,int256,bytes) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1367-1392) uses arbitrary from in transferFrom: token1.safeTransferFrom(payer,msg.sender,uint256(amount1Delta)) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1389)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#arbitrary-from-in-transferfrom
INFO:Detectors:
Reentrancy in Hypervisor.deposit(uint256,uint256,address) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1086-1165):
	External calls:
	- token0.safeTransferFrom(msg.sender,address(this),deposit0) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1121)
	- token1.safeTransferFrom(msg.sender,address(this),deposit1) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1124)
	- (base0,base1) = _mintLiquidity(baseLower,baseUpper,baseLiquidity,address(this)) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1146-1147)
		- (amount0,amount1) = pool.mint(address(this),tickLower,tickUpper,liquidity,abi.encode(payer)) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1260-1266)
	- (limit0,limit1) = _mintLiquidity(limitLower,limitUpper,limitLiquidity,address(this)) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1148-1149)
		- (amount0,amount1) = pool.mint(address(this),tickLower,tickUpper,liquidity,abi.encode(payer)) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1260-1266)
	- unused0 = _depositUnused(token0,shares_scope_0) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1152)
		- returndata = address(token).functionCall(data,SafeERC20: low-level call failed) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1891)
		- token.safeTransferFrom(msg.sender,address(this),amount) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1299)
		- (success,returndata) = target.call{value: value}(data) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2595)
	- unused1 = _depositUnused(token1,shares_scope_0) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1153)
		- returndata = address(token).functionCall(data,SafeERC20: low-level call failed) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1891)
		- token.safeTransferFrom(msg.sender,address(this),amount) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1299)
		- (success,returndata) = target.call{value: value}(data) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2595)
	- (amount0Delta,amount1Delta) = pool.swap(address(this),zeroForOneTerm > 0,int256(token1Exchanged).mul(- 1),TickMath.MIN_SQRT_RATIO + 1,abi.encode(address(this))) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1128-1134)
	- (amount0Delta,amount1Delta) = pool.swap(address(this),zeroForOneTerm > 0,int256(token1Exchanged),TickMath.MAX_SQRT_RATIO - 1,abi.encode(address(this))) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1128-1134)
	External calls sending eth:
	- unused0 = _depositUnused(token0,shares_scope_0) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1152)
		- (success,returndata) = target.call{value: value}(data) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2595)
	- unused1 = _depositUnused(token1,shares_scope_0) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1153)
		- (success,returndata) = target.call{value: value}(data) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2595)
	State variables written after the call(s):
	- _mint(to,shares_scope_0) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1160)
		- _totalSupply = _totalSupply.add(amount) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#340)
	ERC20._totalSupply (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#147) can be used in cross function reentrancies:
	- ERC20.totalSupply() (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#203-205)
Reentrancy in Hypervisor.withdraw(uint256,address,address) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1174-1206):
	External calls:
	- (base0,base1) = _burnLiquidity(baseLower,baseUpper,baseLiquidity,to,false) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1188-1189)
		- (owed0,owed1) = pool.burn(tickLower,tickUpper,liquidity) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1280)
		- (amount0,amount1) = pool.collect(to,tickLower,tickUpper,collect0,collect1) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1286)
	- (limit0,limit1) = _burnLiquidity(limitLower,limitUpper,limitLiquidity,to,false) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1190-1191)
		- (owed0,owed1) = pool.burn(tickLower,tickUpper,liquidity) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1280)
		- (amount0,amount1) = pool.collect(to,tickLower,tickUpper,collect0,collect1) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1286)
	- unused0 = _withdrawUnused(token0,shares,to) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1194)
		- returndata = address(token).functionCall(data,SafeERC20: low-level call failed) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1891)
		- token.safeTransfer(to,amount) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1314)
		- (success,returndata) = target.call{value: value}(data) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2595)
	- unused1 = _withdrawUnused(token1,shares,to) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1195)
		- returndata = address(token).functionCall(data,SafeERC20: low-level call failed) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1891)
		- token.safeTransfer(to,amount) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1314)
		- (success,returndata) = target.call{value: value}(data) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2595)
	External calls sending eth:
	- unused0 = _withdrawUnused(token0,shares,to) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1194)
		- (success,returndata) = target.call{value: value}(data) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2595)
	- unused1 = _withdrawUnused(token1,shares,to) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1195)
		- (success,returndata) = target.call{value: value}(data) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2595)
	State variables written after the call(s):
	- _burn(from,shares) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1203)
		- _totalSupply = _totalSupply.sub(amount) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#362)
	ERC20._totalSupply (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#147) can be used in cross function reentrancies:
	- ERC20.totalSupply() (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#203-205)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities
INFO:Detectors:
Hypervisor.rebalance(int24,int24,int24,int24,address) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1211-1251) ignores return value by token0.transfer(feeRecipient,fees0.div(10)) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1230)
Hypervisor.rebalance(int24,int24,int24,int24,address) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1211-1251) ignores return value by token1.transfer(feeRecipient,fees1.div(10)) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1231)
Hypervisor.uniswapV3SwapCallback(int256,int256,bytes) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1367-1392) ignores return value by token0.transfer(msg.sender,uint256(amount0Delta)) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1378)
Hypervisor.uniswapV3SwapCallback(int256,int256,bytes) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1367-1392) ignores return value by token1.transfer(msg.sender,uint256(amount1Delta)) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1386)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unchecked-transfer
INFO:Detectors:
FullMath.mulDiv(uint256,uint256,uint256) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2143-2235) performs a multiplication on the result of a division:
	- denominator = denominator / twos (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2196)
	- inv = (3 * denominator) ^ 2 (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2216)
FullMath.mulDiv(uint256,uint256,uint256) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2143-2235) performs a multiplication on the result of a division:
	- denominator = denominator / twos (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2196)
	- inv *= 2 - denominator * inv (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2220)
FullMath.mulDiv(uint256,uint256,uint256) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2143-2235) performs a multiplication on the result of a division:
	- denominator = denominator / twos (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2196)
	- inv *= 2 - denominator * inv (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2221)
FullMath.mulDiv(uint256,uint256,uint256) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2143-2235) performs a multiplication on the result of a division:
	- denominator = denominator / twos (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2196)
	- inv *= 2 - denominator * inv (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2222)
FullMath.mulDiv(uint256,uint256,uint256) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2143-2235) performs a multiplication on the result of a division:
	- denominator = denominator / twos (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2196)
	- inv *= 2 - denominator * inv (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2223)
FullMath.mulDiv(uint256,uint256,uint256) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2143-2235) performs a multiplication on the result of a division:
	- denominator = denominator / twos (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2196)
	- inv *= 2 - denominator * inv (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2224)
FullMath.mulDiv(uint256,uint256,uint256) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2143-2235) performs a multiplication on the result of a division:
	- denominator = denominator / twos (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2196)
	- inv *= 2 - denominator * inv (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2225)
FullMath.mulDiv(uint256,uint256,uint256) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2143-2235) performs a multiplication on the result of a division:
	- prod0 = prod0 / twos (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2201)
	- result = prod0 * inv (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2233)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#divide-before-multiply
INFO:Detectors:
Hypervisor.deposit(uint256,uint256,address) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1086-1165) uses a dangerous strict equality:
	- totalSupply() == 0 (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1093)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dangerous-strict-equalities
INFO:Detectors:
Reentrancy in Hypervisor.deposit(uint256,uint256,address) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1086-1165):
	External calls:
	- (amount0,amount1) = _mintLiquidity(baseLower,baseUpper,_uint128Safe(shares),msg.sender) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1097-1102)
		- (amount0,amount1) = pool.mint(address(this),tickLower,tickUpper,liquidity,abi.encode(payer)) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1260-1266)
	State variables written after the call(s):
	- _mint(to,shares) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1104)
		- _totalSupply = _totalSupply.add(amount) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#340)
	ERC20._totalSupply (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#147) can be used in cross function reentrancies:
	- ERC20.totalSupply() (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#203-205)
Reentrancy in Hypervisor.rebalance(int24,int24,int24,int24,address) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1211-1251):
	External calls:
	- _burnLiquidity(baseLower,baseUpper,basePosition,address(this),true) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1226)
		- (owed0,owed1) = pool.burn(tickLower,tickUpper,liquidity) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1280)
		- (amount0,amount1) = pool.collect(to,tickLower,tickUpper,collect0,collect1) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1286)
	- _burnLiquidity(limitLower,limitUpper,limitPosition,address(this),true) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1227)
		- (owed0,owed1) = pool.burn(tickLower,tickUpper,liquidity) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1280)
		- (amount0,amount1) = pool.collect(to,tickLower,tickUpper,collect0,collect1) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1286)
	- token0.transfer(feeRecipient,fees0.div(10)) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1230)
	- token1.transfer(feeRecipient,fees1.div(10)) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1231)
	State variables written after the call(s):
	- baseLower = _baseLower (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1241)
	Hypervisor.baseLower (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1043) can be used in cross function reentrancies:
	- Hypervisor.baseLower (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1043)
	- Hypervisor.constructor(address,address,int24,int24,int24,int24) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1055-1076)
	- Hypervisor.getBaseFees() (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1421-1431)
	- Hypervisor.getBasePosition() (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1408-1419)
	- baseUpper = _baseUpper (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1242)
	Hypervisor.baseUpper (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1044) can be used in cross function reentrancies:
	- Hypervisor.baseUpper (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1044)
	- Hypervisor.constructor(address,address,int24,int24,int24,int24) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1055-1076)
	- Hypervisor.getBaseFees() (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1421-1431)
	- Hypervisor.getBasePosition() (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1408-1419)
Reentrancy in Hypervisor.rebalance(int24,int24,int24,int24,address) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1211-1251):
	External calls:
	- _burnLiquidity(baseLower,baseUpper,basePosition,address(this),true) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1226)
		- (owed0,owed1) = pool.burn(tickLower,tickUpper,liquidity) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1280)
		- (amount0,amount1) = pool.collect(to,tickLower,tickUpper,collect0,collect1) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1286)
	- _burnLiquidity(limitLower,limitUpper,limitPosition,address(this),true) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1227)
		- (owed0,owed1) = pool.burn(tickLower,tickUpper,liquidity) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1280)
		- (amount0,amount1) = pool.collect(to,tickLower,tickUpper,collect0,collect1) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1286)
	- token0.transfer(feeRecipient,fees0.div(10)) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1230)
	- token1.transfer(feeRecipient,fees1.div(10)) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1231)
	- _mintLiquidity(baseLower,baseUpper,baseLiquidity,address(this)) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1244)
		- (amount0,amount1) = pool.mint(address(this),tickLower,tickUpper,liquidity,abi.encode(payer)) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1260-1266)
	State variables written after the call(s):
	- limitLower = _limitLower (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1247)
	Hypervisor.limitLower (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1045) can be used in cross function reentrancies:
	- Hypervisor.constructor(address,address,int24,int24,int24,int24) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1055-1076)
	- Hypervisor.getLimitFees() (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1433-1443)
	- Hypervisor.getLimitPosition() (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1448-1459)
	- Hypervisor.limitLower (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1045)
	- limitUpper = _limitUpper (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1248)
	Hypervisor.limitUpper (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1046) can be used in cross function reentrancies:
	- Hypervisor.constructor(address,address,int24,int24,int24,int24) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1055-1076)
	- Hypervisor.getLimitFees() (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1433-1443)
	- Hypervisor.getLimitPosition() (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1448-1459)
	- Hypervisor.limitUpper (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1046)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1
INFO:Detectors:
Hypervisor.constructor(address,address,int24,int24,int24,int24)._owner (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1057) lacks a zero-check on :
		- owner = _owner (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1069)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation
INFO:Detectors:
Reentrancy in Hypervisor.deposit(uint256,uint256,address) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1086-1165):
	External calls:
	- (amount0,amount1) = _mintLiquidity(baseLower,baseUpper,_uint128Safe(shares),msg.sender) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1097-1102)
		- (amount0,amount1) = pool.mint(address(this),tickLower,tickUpper,liquidity,abi.encode(payer)) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1260-1266)
	State variables written after the call(s):
	- _mint(to,shares) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1104)
		- _balances[account] = _balances[account].add(amount) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#341)
Reentrancy in Hypervisor.deposit(uint256,uint256,address) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1086-1165):
	External calls:
	- token0.safeTransferFrom(msg.sender,address(this),deposit0) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1121)
	- token1.safeTransferFrom(msg.sender,address(this),deposit1) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1124)
	- (base0,base1) = _mintLiquidity(baseLower,baseUpper,baseLiquidity,address(this)) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1146-1147)
		- (amount0,amount1) = pool.mint(address(this),tickLower,tickUpper,liquidity,abi.encode(payer)) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1260-1266)
	- (limit0,limit1) = _mintLiquidity(limitLower,limitUpper,limitLiquidity,address(this)) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1148-1149)
		- (amount0,amount1) = pool.mint(address(this),tickLower,tickUpper,liquidity,abi.encode(payer)) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1260-1266)
	- unused0 = _depositUnused(token0,shares_scope_0) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1152)
		- returndata = address(token).functionCall(data,SafeERC20: low-level call failed) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1891)
		- token.safeTransferFrom(msg.sender,address(this),amount) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1299)
		- (success,returndata) = target.call{value: value}(data) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2595)
	- unused1 = _depositUnused(token1,shares_scope_0) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1153)
		- returndata = address(token).functionCall(data,SafeERC20: low-level call failed) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1891)
		- token.safeTransferFrom(msg.sender,address(this),amount) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1299)
		- (success,returndata) = target.call{value: value}(data) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2595)
	- (amount0Delta,amount1Delta) = pool.swap(address(this),zeroForOneTerm > 0,int256(token1Exchanged).mul(- 1),TickMath.MIN_SQRT_RATIO + 1,abi.encode(address(this))) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1128-1134)
	- (amount0Delta,amount1Delta) = pool.swap(address(this),zeroForOneTerm > 0,int256(token1Exchanged),TickMath.MAX_SQRT_RATIO - 1,abi.encode(address(this))) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1128-1134)
	External calls sending eth:
	- unused0 = _depositUnused(token0,shares_scope_0) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1152)
		- (success,returndata) = target.call{value: value}(data) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2595)
	- unused1 = _depositUnused(token1,shares_scope_0) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1153)
		- (success,returndata) = target.call{value: value}(data) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2595)
	State variables written after the call(s):
	- _mint(to,shares_scope_0) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1160)
		- _balances[account] = _balances[account].add(amount) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#341)
Reentrancy in Hypervisor.withdraw(uint256,address,address) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1174-1206):
	External calls:
	- (base0,base1) = _burnLiquidity(baseLower,baseUpper,baseLiquidity,to,false) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1188-1189)
		- (owed0,owed1) = pool.burn(tickLower,tickUpper,liquidity) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1280)
		- (amount0,amount1) = pool.collect(to,tickLower,tickUpper,collect0,collect1) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1286)
	- (limit0,limit1) = _burnLiquidity(limitLower,limitUpper,limitLiquidity,to,false) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1190-1191)
		- (owed0,owed1) = pool.burn(tickLower,tickUpper,liquidity) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1280)
		- (amount0,amount1) = pool.collect(to,tickLower,tickUpper,collect0,collect1) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1286)
	- unused0 = _withdrawUnused(token0,shares,to) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1194)
		- returndata = address(token).functionCall(data,SafeERC20: low-level call failed) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1891)
		- token.safeTransfer(to,amount) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1314)
		- (success,returndata) = target.call{value: value}(data) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2595)
	- unused1 = _withdrawUnused(token1,shares,to) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1195)
		- returndata = address(token).functionCall(data,SafeERC20: low-level call failed) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1891)
		- token.safeTransfer(to,amount) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1314)
		- (success,returndata) = target.call{value: value}(data) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2595)
	External calls sending eth:
	- unused0 = _withdrawUnused(token0,shares,to) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1194)
		- (success,returndata) = target.call{value: value}(data) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2595)
	- unused1 = _withdrawUnused(token1,shares,to) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1195)
		- (success,returndata) = target.call{value: value}(data) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2595)
	State variables written after the call(s):
	- _burn(from,shares) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1203)
		- _balances[account] = _balances[account].sub(amount,ERC20: burn amount exceeds balance) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#361)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2
INFO:Detectors:
TickMath.getTickAtSqrtRatio(uint160) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1984-2127) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1992-1996)
	- INLINE ASM (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1997-2001)
	- INLINE ASM (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2002-2006)
	- INLINE ASM (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2007-2011)
	- INLINE ASM (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2012-2016)
	- INLINE ASM (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2017-2021)
	- INLINE ASM (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2022-2026)
	- INLINE ASM (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2027-2030)
	- INLINE ASM (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2037-2042)
	- INLINE ASM (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2043-2048)
	- INLINE ASM (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2049-2054)
	- INLINE ASM (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2055-2060)
	- INLINE ASM (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2061-2066)
	- INLINE ASM (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2067-2072)
	- INLINE ASM (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2073-2078)
	- INLINE ASM (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2079-2084)
	- INLINE ASM (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2085-2090)
	- INLINE ASM (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2091-2096)
	- INLINE ASM (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2097-2102)
	- INLINE ASM (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2103-2108)
	- INLINE ASM (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2109-2114)
	- INLINE ASM (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2115-2119)
FullMath.mulDiv(uint256,uint256,uint256) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2143-2235) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2155-2159)
	- INLINE ASM (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2164-2166)
	- INLINE ASM (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2181-2183)
	- INLINE ASM (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2185-2188)
	- INLINE ASM (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2195-2197)
	- INLINE ASM (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2200-2202)
	- INLINE ASM (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2206-2208)
Address.isContract(address) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2502-2511) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2509)
Address._verifyCallResult(bool,bytes,string) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2647-2664) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2656-2659)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage
INFO:Detectors:
Different versions of Solidity are used:
	- Version used: ['0.7.6', '>=0.4.0', '>=0.5.0', '>=0.6.0<0.8.0', '>=0.6.2<0.8.0']
	- 0.7.6 (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#521)
	- 0.7.6 (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1011)
	- 0.7.6 (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2394)
	- >=0.4.0 (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2131)
	- >=0.4.0 (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2668)
	- >=0.5.0 (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#479)
	- >=0.5.0 (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#498)
	- >=0.5.0 (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#567)
	- >=0.5.0 (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#603)
	- >=0.5.0 (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#720)
	- >=0.5.0 (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#761)
	- >=0.5.0 (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#865)
	- >=0.5.0 (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#889)
	- >=0.5.0 (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1900)
	- >=0.5.0 (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1925)
	- >=0.5.0 (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2256)
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#7)
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#85)
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#110)
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#417)
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1517)
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1732)
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1825)
	- >=0.6.2<0.8.0 (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2479)
	- v2 (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#different-pragma-directives-are-used
INFO:Detectors:
TickMath.getSqrtRatioAtTick(int24) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1946-1977) has a high cyclomatic complexity (24).
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#cyclomatic-complexity
INFO:Detectors:
Address.functionCall(address,bytes) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2555-2557) is never used and should be removed
Address.functionCallWithValue(address,bytes,uint256) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2580-2582) is never used and should be removed
Address.functionDelegateCall(address,bytes) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2629-2631) is never used and should be removed
Address.functionDelegateCall(address,bytes,string) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2639-2645) is never used and should be removed
Address.functionStaticCall(address,bytes) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2605-2607) is never used and should be removed
Address.functionStaticCall(address,bytes,string) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2615-2621) is never used and should be removed
Address.sendValue(address,uint256) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2529-2535) is never used and should be removed
Context._msgData() (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#102-105) is never used and should be removed
ERC20._setupDecimals(uint8) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#394-396) is never used and should be removed
FullMath.mulDivRoundingUp(uint256,uint256,uint256) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2242-2252) is never used and should be removed
SafeERC20.safeApprove(IERC20,address,uint256) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1859-1868) is never used and should be removed
SafeERC20.safeDecreaseAllowance(IERC20,address,uint256) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1875-1878) is never used and should be removed
SafeERC20.safeIncreaseAllowance(IERC20,address,uint256) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1870-1873) is never used and should be removed
SafeMath.div(uint256,uint256,string) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1704-1707) is never used and should be removed
SafeMath.mod(uint256,uint256) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1666-1669) is never used and should be removed
SafeMath.mod(uint256,uint256,string) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1724-1727) is never used and should be removed
SafeMath.tryAdd(uint256,uint256) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1538-1542) is never used and should be removed
SafeMath.tryDiv(uint256,uint256) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1574-1577) is never used and should be removed
SafeMath.tryMod(uint256,uint256) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1584-1587) is never used and should be removed
SafeMath.tryMul(uint256,uint256) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1559-1567) is never used and should be removed
SafeMath.trySub(uint256,uint256) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1549-1552) is never used and should be removed
SignedSafeMath.add(int256,int256) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1815-1820) is never used and should be removed
SignedSafeMath.div(int256,int256) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1779-1786) is never used and should be removed
TickMath.getTickAtSqrtRatio(uint160) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1984-2127) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code
INFO:Detectors:
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#7) is too complex
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#85) is too complex
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#110) is too complex
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#417) is too complex
Pragma version>=0.5.0 (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#479) allows old versions
Pragma version>=0.5.0 (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#498) allows old versions
Pragma version0.7.6 (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#521) allows old versions
Pragma version>=0.5.0 (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#567) allows old versions
Pragma version>=0.5.0 (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#603) allows old versions
Pragma version>=0.5.0 (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#720) allows old versions
Pragma version>=0.5.0 (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#761) allows old versions
Pragma version>=0.5.0 (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#865) allows old versions
Pragma version>=0.5.0 (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#889) allows old versions
Pragma version0.7.6 (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1011) allows old versions
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1517) is too complex
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1732) is too complex
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1825) is too complex
Pragma version>=0.5.0 (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1900) allows old versions
Pragma version>=0.5.0 (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1925) allows old versions
Pragma version>=0.4.0 (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2131) allows old versions
Pragma version>=0.5.0 (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2256) allows old versions
Pragma version0.7.6 (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2394) allows old versions
Pragma version>=0.6.2<0.8.0 (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2479) is too complex
Pragma version>=0.4.0 (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2668) allows old versions
solc-0.7.6 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity
INFO:Detectors:
Low level call in Address.sendValue(address,uint256) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2529-2535):
	- (success) = recipient.call{value: amount}() (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2533)
Low level call in Address.functionCallWithValue(address,bytes,uint256,string) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2590-2597):
	- (success,returndata) = target.call{value: value}(data) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2595)
Low level call in Address.functionStaticCall(address,bytes,string) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2615-2621):
	- (success,returndata) = target.staticcall(data) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2619)
Low level call in Address.functionDelegateCall(address,bytes,string) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2639-2645):
	- (success,returndata) = target.delegatecall(data) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2643)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls
INFO:Detectors:
Parameter Hypervisor.rebalance(int24,int24,int24,int24,address)._baseLower (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1211) is not in mixedCase
Parameter Hypervisor.rebalance(int24,int24,int24,int24,address)._baseUpper (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1211) is not in mixedCase
Parameter Hypervisor.rebalance(int24,int24,int24,int24,address)._limitLower (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1211) is not in mixedCase
Parameter Hypervisor.rebalance(int24,int24,int24,int24,address)._limitUpper (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1211) is not in mixedCase
Parameter Hypervisor.setMaxTotalSupply(uint256)._maxTotalSupply (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1505) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions
INFO:Detectors:
Redundant expression "this (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#103)" inContext (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#97-106)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#redundant-statements
INFO:Detectors:
Variable IUniswapV3MintCallback.uniswapV3MintCallback(uint256,uint256,bytes).amount0Owed (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#491) is too similar to IUniswapV3MintCallback.uniswapV3MintCallback(uint256,uint256,bytes).amount1Owed (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#492)
Variable IUniswapV3SwapCallback.uniswapV3SwapCallback(int256,int256,bytes).amount0Delta (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#513) is too similar to IUniswapV3SwapCallback.uniswapV3SwapCallback(int256,int256,bytes).amount1Delta (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#514)
Variable IUniswapV3PoolState.positions(bytes32).feeGrowthInside0LastX128 (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#694) is too similar to IUniswapV3PoolState.positions(bytes32).feeGrowthInside1LastX128 (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#695)
Variable IUniswapV3PoolState.ticks(int24).feeGrowthOutside0X128 (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#671) is too similar to IUniswapV3PoolState.ticks(int24).feeGrowthOutside1X128 (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#672)
Variable IUniswapV3PoolState.positions(bytes32).tokensOwed0 (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#696) is too similar to IUniswapV3PoolState.positions(bytes32).tokensOwed1 (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#697)
Variable IUniswapV3PoolActions.collect(address,int24,int24,uint128,uint128).amount0Requested (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#806) is too similar to IUniswapV3PoolActions.collect(address,int24,int24,uint128,uint128).amount1Requested (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#807)
Variable IUniswapV3PoolOwnerActions.collectProtocol(address,uint128,uint128).amount0Requested (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#883) is too similar to IUniswapV3PoolOwnerActions.collectProtocol(address,uint128,uint128).amount1Requested (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#884)
Variable IUniswapV3PoolOwnerActions.setFeeProtocol(uint8,uint8).feeProtocol0 (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#873) is too similar to IUniswapV3PoolOwnerActions.setFeeProtocol(uint8,uint8).feeProtocol1 (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#873)
Variable Hypervisor.uniswapV3SwapCallback(int256,int256,bytes).amount0Delta (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1368) is too similar to Hypervisor.uniswapV3SwapCallback(int256,int256,bytes).amount1Delta (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1369)
Variable Hypervisor.deposit(uint256,uint256,address).amount0Delta (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1128) is too similar to Hypervisor.deposit(uint256,uint256,address).amount1Delta (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1128)
Variable IUniswapV3SwapCallback.uniswapV3SwapCallback(int256,int256,bytes).amount0Delta (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#513) is too similar to Hypervisor.uniswapV3SwapCallback(int256,int256,bytes).amount1Delta (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1369)
Variable Hypervisor.deposit(uint256,uint256,address).amount0Delta (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1128) is too similar to IUniswapV3SwapCallback.uniswapV3SwapCallback(int256,int256,bytes).amount1Delta (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#514)
Variable Hypervisor.deposit(uint256,uint256,address).amount0Delta (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1128) is too similar to Hypervisor.uniswapV3SwapCallback(int256,int256,bytes).amount1Delta (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1369)
Variable Hypervisor.uniswapV3SwapCallback(int256,int256,bytes).amount0Delta (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1368) is too similar to IUniswapV3SwapCallback.uniswapV3SwapCallback(int256,int256,bytes).amount1Delta (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#514)
Variable IUniswapV3SwapCallback.uniswapV3SwapCallback(int256,int256,bytes).amount0Delta (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#513) is too similar to Hypervisor.deposit(uint256,uint256,address).amount1Delta (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1128)
Variable Hypervisor.uniswapV3SwapCallback(int256,int256,bytes).amount0Delta (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1368) is too similar to Hypervisor.deposit(uint256,uint256,address).amount1Delta (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1128)
Variable Hypervisor.deposit(uint256,uint256,address).finalDeposit0 (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1107) is too similar to Hypervisor.deposit(uint256,uint256,address).finalDeposit1 (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1108)
Variable IUniswapV3PoolActions.collect(address,int24,int24,uint128,uint128).amount0Requested (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#806) is too similar to IUniswapV3PoolOwnerActions.collectProtocol(address,uint128,uint128).amount1Requested (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#884)
Variable IUniswapV3PoolOwnerActions.collectProtocol(address,uint128,uint128).amount0Requested (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#883) is too similar to IUniswapV3PoolActions.collect(address,int24,int24,uint128,uint128).amount1Requested (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#807)
Variable LiquidityAmounts.getLiquidityForAmount1(uint160,uint160,uint256).sqrtRatioAX96 (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2294) is too similar to LiquidityAmounts.getAmount0ForLiquidity(uint160,uint160,uint128).sqrtRatioBX96 (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2338)
Variable LiquidityAmounts.getAmount0ForLiquidity(uint160,uint160,uint128).sqrtRatioAX96 (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2337) is too similar to LiquidityAmounts.getAmount0ForLiquidity(uint160,uint160,uint128).sqrtRatioBX96 (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2338)
Variable LiquidityAmounts.getLiquidityForAmounts(uint160,uint160,uint160,uint256,uint256).sqrtRatioAX96 (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2312) is too similar to LiquidityAmounts.getAmountsForLiquidity(uint160,uint160,uint160,uint128).sqrtRatioBX96 (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2377)
Variable LiquidityAmounts.getLiquidityForAmount1(uint160,uint160,uint256).sqrtRatioAX96 (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2294) is too similar to LiquidityAmounts.getLiquidityForAmount1(uint160,uint160,uint256).sqrtRatioBX96 (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2295)
Variable LiquidityAmounts.getAmount1ForLiquidity(uint160,uint160,uint128).sqrtRatioAX96 (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2357) is too similar to LiquidityAmounts.getAmount1ForLiquidity(uint160,uint160,uint128).sqrtRatioBX96 (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2358)
Variable LiquidityAmounts.getLiquidityForAmounts(uint160,uint160,uint160,uint256,uint256).sqrtRatioAX96 (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2312) is too similar to LiquidityAmounts.getLiquidityForAmounts(uint160,uint160,uint160,uint256,uint256).sqrtRatioBX96 (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2313)
Variable LiquidityAmounts.getAmount1ForLiquidity(uint160,uint160,uint128).sqrtRatioAX96 (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2357) is too similar to LiquidityAmounts.getAmount0ForLiquidity(uint160,uint160,uint128).sqrtRatioBX96 (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2338)
Variable LiquidityAmounts.getAmount1ForLiquidity(uint160,uint160,uint128).sqrtRatioAX96 (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2357) is too similar to LiquidityAmounts.getLiquidityForAmount1(uint160,uint160,uint256).sqrtRatioBX96 (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2295)
Variable LiquidityAmounts.getLiquidityForAmounts(uint160,uint160,uint160,uint256,uint256).sqrtRatioAX96 (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2312) is too similar to LiquidityAmounts.getAmount1ForLiquidity(uint160,uint160,uint128).sqrtRatioBX96 (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2358)
Variable LiquidityAmounts.getLiquidityForAmounts(uint160,uint160,uint160,uint256,uint256).sqrtRatioAX96 (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2312) is too similar to LiquidityAmounts.getAmount0ForLiquidity(uint160,uint160,uint128).sqrtRatioBX96 (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2338)
Variable LiquidityAmounts.getLiquidityForAmounts(uint160,uint160,uint160,uint256,uint256).sqrtRatioAX96 (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2312) is too similar to LiquidityAmounts.getLiquidityForAmount1(uint160,uint160,uint256).sqrtRatioBX96 (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2295)
Variable LiquidityAmounts.getAmount0ForLiquidity(uint160,uint160,uint128).sqrtRatioAX96 (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2337) is too similar to LiquidityAmounts.getAmountsForLiquidity(uint160,uint160,uint160,uint128).sqrtRatioBX96 (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2377)
Variable LiquidityAmounts.getAmount1ForLiquidity(uint160,uint160,uint128).sqrtRatioAX96 (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2357) is too similar to LiquidityAmounts.getLiquidityForAmounts(uint160,uint160,uint160,uint256,uint256).sqrtRatioBX96 (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2313)
Variable LiquidityAmounts.getAmountsForLiquidity(uint160,uint160,uint160,uint128).sqrtRatioAX96 (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2376) is too similar to LiquidityAmounts.getAmount0ForLiquidity(uint160,uint160,uint128).sqrtRatioBX96 (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2338)
Variable LiquidityAmounts.getAmountsForLiquidity(uint160,uint160,uint160,uint128).sqrtRatioAX96 (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2376) is too similar to LiquidityAmounts.getLiquidityForAmount1(uint160,uint160,uint256).sqrtRatioBX96 (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2295)
Variable LiquidityAmounts.getLiquidityForAmount0(uint160,uint160,uint256).sqrtRatioAX96 (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2278) is too similar to LiquidityAmounts.getLiquidityForAmounts(uint160,uint160,uint160,uint256,uint256).sqrtRatioBX96 (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2313)
Variable LiquidityAmounts.getLiquidityForAmount0(uint160,uint160,uint256).sqrtRatioAX96 (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2278) is too similar to LiquidityAmounts.getAmount1ForLiquidity(uint160,uint160,uint128).sqrtRatioBX96 (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2358)
Variable LiquidityAmounts.getLiquidityForAmount1(uint160,uint160,uint256).sqrtRatioAX96 (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2294) is too similar to LiquidityAmounts.getAmountsForLiquidity(uint160,uint160,uint160,uint128).sqrtRatioBX96 (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2377)
Variable LiquidityAmounts.getAmount0ForLiquidity(uint160,uint160,uint128).sqrtRatioAX96 (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2337) is too similar to LiquidityAmounts.getLiquidityForAmount0(uint160,uint160,uint256).sqrtRatioBX96 (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2279)
Variable LiquidityAmounts.getAmount0ForLiquidity(uint160,uint160,uint128).sqrtRatioAX96 (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2337) is too similar to LiquidityAmounts.getLiquidityForAmounts(uint160,uint160,uint160,uint256,uint256).sqrtRatioBX96 (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2313)
Variable LiquidityAmounts.getLiquidityForAmount1(uint160,uint160,uint256).sqrtRatioAX96 (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2294) is too similar to LiquidityAmounts.getLiquidityForAmount0(uint160,uint160,uint256).sqrtRatioBX96 (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2279)
Variable LiquidityAmounts.getAmount0ForLiquidity(uint160,uint160,uint128).sqrtRatioAX96 (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2337) is too similar to LiquidityAmounts.getAmount1ForLiquidity(uint160,uint160,uint128).sqrtRatioBX96 (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2358)
Variable LiquidityAmounts.getAmountsForLiquidity(uint160,uint160,uint160,uint128).sqrtRatioAX96 (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2376) is too similar to LiquidityAmounts.getAmountsForLiquidity(uint160,uint160,uint160,uint128).sqrtRatioBX96 (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2377)
Variable LiquidityAmounts.getLiquidityForAmount1(uint160,uint160,uint256).sqrtRatioAX96 (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2294) is too similar to LiquidityAmounts.getLiquidityForAmounts(uint160,uint160,uint160,uint256,uint256).sqrtRatioBX96 (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2313)
Variable LiquidityAmounts.getLiquidityForAmount1(uint160,uint160,uint256).sqrtRatioAX96 (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2294) is too similar to LiquidityAmounts.getAmount1ForLiquidity(uint160,uint160,uint128).sqrtRatioBX96 (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2358)
Variable LiquidityAmounts.getAmountsForLiquidity(uint160,uint160,uint160,uint128).sqrtRatioAX96 (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2376) is too similar to LiquidityAmounts.getLiquidityForAmount0(uint160,uint160,uint256).sqrtRatioBX96 (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2279)
Variable LiquidityAmounts.getAmountsForLiquidity(uint160,uint160,uint160,uint128).sqrtRatioAX96 (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2376) is too similar to LiquidityAmounts.getLiquidityForAmounts(uint160,uint160,uint160,uint256,uint256).sqrtRatioBX96 (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2313)
Variable LiquidityAmounts.getAmountsForLiquidity(uint160,uint160,uint160,uint128).sqrtRatioAX96 (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2376) is too similar to LiquidityAmounts.getAmount1ForLiquidity(uint160,uint160,uint128).sqrtRatioBX96 (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2358)
Variable LiquidityAmounts.getLiquidityForAmount0(uint160,uint160,uint256).sqrtRatioAX96 (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2278) is too similar to LiquidityAmounts.getLiquidityForAmount0(uint160,uint160,uint256).sqrtRatioBX96 (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2279)
Variable LiquidityAmounts.getLiquidityForAmounts(uint160,uint160,uint160,uint256,uint256).sqrtRatioAX96 (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2312) is too similar to LiquidityAmounts.getLiquidityForAmount0(uint160,uint160,uint256).sqrtRatioBX96 (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2279)
Variable LiquidityAmounts.getLiquidityForAmount0(uint160,uint160,uint256).sqrtRatioAX96 (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2278) is too similar to LiquidityAmounts.getAmount0ForLiquidity(uint160,uint160,uint128).sqrtRatioBX96 (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2338)
Variable LiquidityAmounts.getLiquidityForAmount0(uint160,uint160,uint256).sqrtRatioAX96 (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2278) is too similar to LiquidityAmounts.getLiquidityForAmount1(uint160,uint160,uint256).sqrtRatioBX96 (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2295)
Variable LiquidityAmounts.getAmount1ForLiquidity(uint160,uint160,uint128).sqrtRatioAX96 (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2357) is too similar to LiquidityAmounts.getAmountsForLiquidity(uint160,uint160,uint160,uint128).sqrtRatioBX96 (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2377)
Variable LiquidityAmounts.getAmount0ForLiquidity(uint160,uint160,uint128).sqrtRatioAX96 (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2337) is too similar to LiquidityAmounts.getLiquidityForAmount1(uint160,uint160,uint256).sqrtRatioBX96 (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2295)
Variable LiquidityAmounts.getLiquidityForAmount0(uint160,uint160,uint256).sqrtRatioAX96 (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2278) is too similar to LiquidityAmounts.getAmountsForLiquidity(uint160,uint160,uint160,uint128).sqrtRatioBX96 (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2377)
Variable LiquidityAmounts.getAmount1ForLiquidity(uint160,uint160,uint128).sqrtRatioAX96 (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2357) is too similar to LiquidityAmounts.getLiquidityForAmount0(uint160,uint160,uint256).sqrtRatioBX96 (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2279)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#variable-names-too-similar
INFO:Detectors:
TickMath.getSqrtRatioAtTick(int24) (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1946-1977) uses literals with too many digits:
	- ratio = 0x100000000000000000000000000000000 (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1950)
FixedPoint96.slitherConstructorConstantVariables() (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2673-2676) uses literals with too many digits:
	- Q96 = 0x1000000000000000000000000 (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#2675)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits
INFO:Detectors:
Hypervisor.fee (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1040) should be immutable 
Hypervisor.owner (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1048) should be immutable 
Hypervisor.pool (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1037) should be immutable 
Hypervisor.tickSpacing (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1041) should be immutable 
Hypervisor.token0 (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1038) should be immutable 
Hypervisor.token1 (../../sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol#1039) should be immutable 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-immutable
INFO:Slither:/bdata2/sc/dataset/mainnet/0xD6b5B0A117758a3008414aA6037074d4D9D843fd.sol analyzed (24 contracts with 85 detectors), 154 result(s) found
