Compilation warnings/errors on /bdata2/sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol:
Warning: Contract code size exceeds 24576 bytes (a limit introduced in Spurious Dragon). This contract may not be deployable on mainnet. Consider enabling the optimizer (with a low "runs" value!), turning off revert strings, or using libraries.
    --> /bdata2/sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol:1597:1:
     |
1597 | contract yTokenFutureVault is HybridFutureVault {
     | ^ (Relevant source part starts here and spans across multiple lines).


INFO:Detectors:
Reentrancy in RateFutureVault.startNewPeriod() (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#1313-1317):
	External calls:
	- _switchPeriod() (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#1315)
		- newToken = IFutureYieldToken(ITokensFactory(registry.getTokensFactoryAddress()).deployNextFutureYieldToken(newPeriodIndex)) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#927-929)
		- returndata = address(token).functionCall(data,SafeERC20: low-level call failed) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#1900)
		- (success,returndata) = target.call{value: value}(data) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#2846)
		- futureWallet.registerExpiredFuture(collectedYield) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#635)
		- ibt.safeTransfer(registry.getTreasuryAddress(),performanceFee) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#637)
		- ibt.safeTransfer(address(futureWallet),collectedYield) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#638)
		- futureWallet.registerExpiredFuture(0) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#640)
	External calls sending eth:
	- _switchPeriod() (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#1315)
		- (success,returndata) = target.call{value: value}(data) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#2846)
	State variables written after the call(s):
	- IBTRates[getCurrentPeriodIndex()] = getIBTRate() (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#1316)
	RateFutureVault.IBTRates (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#1288) can be used in cross function reentrancies:
	- RateFutureVault.getPTPerAmountDeposited(uint256) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#1368-1370)
	- RateFutureVault.getUnrealisedYieldPerPT() (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#1348-1355)
	- RateFutureVault.initialize(IController,IERC20,uint256,string,address) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#1298-1307)
Reentrancy in FutureVault.withdraw(address,uint256) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#720-740):
	External calls:
	- _withdraw(_user,_amount) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#723)
		- returndata = address(token).functionCall(data,SafeERC20: low-level call failed) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#1900)
		- pt.mint(_user,_preparePTClaim(_user)) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#666)
		- (success,returndata) = target.call{value: value}(data) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#2846)
		- ibt.safeTransfer(_user,fundsToBeUnlocked.add(yieldToBeRedeemed).add(premiumToBeUnlocked)) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#762)
		- ibt.safeTransfer(registry.getTreasuryAddress(),treasuryFee) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#765)
		- pt.burnFrom(_user,_amount) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#768)
	External calls sending eth:
	- _withdraw(_user,_amount) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#723)
		- (success,returndata) = target.call{value: value}(data) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#2846)
	State variables written after the call(s):
	- claimableFYTByUser[_user] = claimableFYTByUser[_user].sub(ClaimableFYTsToBurn,FutureVault: ERR_AMOUNT) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#731)
	FutureVault.claimableFYTByUser (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#497) can be used in cross function reentrancies:
	- FutureVault._deposit(address,uint256) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#696-712)
	- FutureVault._preparePTClaim(address) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#671-682)
	- FutureVault.getClaimableFYTForPeriod(address,uint256) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#975-985)
	- FutureVault.getClaimablePT(address) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#940-958)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities
INFO:Detectors:
FutureVault._switchPeriod() (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#618-654) performs a multiplication on the result of a division:
	- yield = getUnrealisedYieldPerPT().mul(totalUnderlyingDeposited) / IBT_UNIT (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#620)
	- performanceFee = (yield.mul(performanceFeeFactor) / UNIT).sub(premiums) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#626)
FutureVault._withdraw(address,uint256) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#748-769) performs a multiplication on the result of a division:
	- yieldToBeUnlocked = _amount.mul(getUnrealisedYieldPerPT()) / IBT_UNIT (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#751)
	- treasuryFee = (yieldToBeUnlocked.mul(performanceFeeFactor) / UNIT).sub(premiumToBeUnlocked) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#760)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#divide-before-multiply
INFO:Detectors:
FutureVault.getPremiumPerUnderlyingDeposited(uint256) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#1005-1012) uses a dangerous strict equality:
	- totalUnderlyingDeposited == 0 (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#1006)
HybridFutureVault.getUnrealisedYieldPerPT() (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#1503-1509) uses a dangerous strict equality:
	- totalUnderlyingAtStart == 0 (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#1505)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dangerous-strict-equalities
INFO:Detectors:
Reentrancy in FutureVault._switchPeriod() (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#618-654):
	External calls:
	- futureWallet.registerExpiredFuture(collectedYield) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#635)
	- ibt.safeTransfer(registry.getTreasuryAddress(),performanceFee) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#637)
	- ibt.safeTransfer(address(futureWallet),collectedYield) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#638)
	- futureWallet.registerExpiredFuture(0) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#640)
	State variables written after the call(s):
	- terminated = true (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#649)
	FutureVault.terminated (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#501) can be used in cross function reentrancies:
	- FutureVault.isTerminated() (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#1108-1110)
	- FutureVault.periodsActive() (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#550-553)
	- totalUnderlyingDeposited = totalUnderlyingDeposited.add(convertIBTToUnderlying(reinvestedYield)) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#644)
	FutureVault.totalUnderlyingDeposited (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#499) can be used in cross function reentrancies:
	- FutureVault._deposit(address,uint256) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#696-712)
	- FutureVault.getPremiumPerUnderlyingDeposited(uint256) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#1005-1012)
	- FutureVault.getTotalUnderlyingDeposited() (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#1059-1061)
Reentrancy in FutureVault._switchPeriod() (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#618-654):
	External calls:
	- futureWallet.registerExpiredFuture(collectedYield) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#635)
	- ibt.safeTransfer(registry.getTreasuryAddress(),performanceFee) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#637)
	- ibt.safeTransfer(address(futureWallet),collectedYield) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#638)
	- futureWallet.registerExpiredFuture(0) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#640)
	- _deployNewFutureYieldToken(nextPeriodID) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#646)
		- newToken = IFutureYieldToken(ITokensFactory(registry.getTokensFactoryAddress()).deployNextFutureYieldToken(newPeriodIndex)) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#927-929)
	State variables written after the call(s):
	- _deployNewFutureYieldToken(nextPeriodID) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#646)
		- fyts.push(newToken) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#930)
	FutureVault.fyts (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#504) can be used in cross function reentrancies:
	- FutureVault.getCurrentPeriodIndex() (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#1051-1053)
	- FutureVault.getFYTofPeriod(uint256) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#1100-1102)
	- FutureVault.getNextPeriodIndex() (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#1042-1044)
	- FutureVault.initialize(IController,IERC20,uint256,string,address) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#577-608)
	- performanceFeeFactor = nextPerformanceFeeFactor (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#653)
	FutureVault.performanceFeeFactor (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#502) can be used in cross function reentrancies:
	- FutureVault.getPerformanceFeeFactor() (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#1116-1118)
	- FutureVault.getPremiumPerUnderlyingDeposited(uint256) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#1005-1012)
Reentrancy in FutureVault._withdraw(address,uint256) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#748-769):
	External calls:
	- updateUserState(_user) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#749)
		- pt.mint(_user,_preparePTClaim(_user)) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#666)
	State variables written after the call(s):
	- premiumToBeUnlocked = _prepareUserEarlyPremiumUnlock(_user,_amount) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#753)
		- delete FYTsOfUserPremium[_user] (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#781)
		- FYTsOfUserPremium[_user] = userFYTsInPremium - _ptShares (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#786)
	FutureVault.FYTsOfUserPremium (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#495) can be used in cross function reentrancies:
	- FutureVault._deposit(address,uint256) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#696-712)
	- FutureVault._preparePTClaim(address) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#671-682)
	- FutureVault.getUserEarlyUnlockablePremium(address) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#797-804)
	- premiumToBeUnlocked = _prepareUserEarlyPremiumUnlock(_user,_amount) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#753)
		- delete premiumToBeRedeemed[_user] (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#780)
		- premiumToBeRedeemed[_user] = unlockablePremium - premiumForAmount (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#785)
	FutureVault.premiumToBeRedeemed (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#494) can be used in cross function reentrancies:
	- FutureVault._deposit(address,uint256) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#696-712)
	- FutureVault._preparePTClaim(address) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#671-682)
	- FutureVault.getClaimablePT(address) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#940-958)
	- FutureVault.getUnlockablePremium(address) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#1019-1025)
	- FutureVault.getUserEarlyUnlockablePremium(address) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#797-804)
Reentrancy in FutureVault.claimFYT(address,uint256) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#892-896):
	External calls:
	- updateUserState(_user) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#894)
		- pt.mint(_user,_preparePTClaim(_user)) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#666)
	- _claimFYT(_user,_amount) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#895)
		- fyts[currentPeriodIndex].mint(_user,_amount) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#901)
	State variables written after the call(s):
	- _claimFYT(_user,_amount) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#895)
		- claimableFYTByUser[_user] = claimableFYTByUser[_user].sub(_amount,ERR_CLAIMED_FYT_AMOUNT) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#900)
	FutureVault.claimableFYTByUser (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#497) can be used in cross function reentrancies:
	- FutureVault._deposit(address,uint256) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#696-712)
	- FutureVault._preparePTClaim(address) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#671-682)
	- FutureVault.getClaimableFYTForPeriod(address,uint256) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#975-985)
	- FutureVault.getClaimablePT(address) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#940-958)
Reentrancy in FutureVault.createFYTDelegationTo(address,address,uint256) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#814-841):
	External calls:
	- updateUserState(_delegator) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#820)
		- pt.mint(_user,_preparePTClaim(_user)) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#666)
	- updateUserState(_receiver) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#821)
		- pt.mint(_user,_preparePTClaim(_user)) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#666)
	State variables written after the call(s):
	- updateUserState(_receiver) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#821)
		- delete FYTsOfUserPremium[_user] (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#676)
	FutureVault.FYTsOfUserPremium (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#495) can be used in cross function reentrancies:
	- FutureVault._deposit(address,uint256) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#696-712)
	- FutureVault._preparePTClaim(address) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#671-682)
	- FutureVault.getUserEarlyUnlockablePremium(address) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#797-804)
	- updateUserState(_receiver) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#821)
		- claimableFYTByUser[_user] = pt.balanceOf(_user).add(totalDelegationsReceived[_user]).sub(getTotalDelegated(_user)) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#677-679)
	FutureVault.claimableFYTByUser (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#497) can be used in cross function reentrancies:
	- FutureVault._deposit(address,uint256) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#696-712)
	- FutureVault._preparePTClaim(address) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#671-682)
	- FutureVault.getClaimableFYTForPeriod(address,uint256) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#975-985)
	- FutureVault.getClaimablePT(address) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#940-958)
	- delegationsByDelegator[_delegator][i].delegatedAmount = delegationsByDelegator[_delegator][i].delegatedAmount.add(_amount) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#829-831)
	FutureVault.delegationsByDelegator (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#511) can be used in cross function reentrancies:
	- FutureVault.getTotalDelegated(address) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#879-884)
	- FutureVault.withdrawFYTDelegationFrom(address,address,uint256) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#849-872)
	- delegationsByDelegator[_delegator].push(Delegation(_receiver,_amount)) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#837)
	FutureVault.delegationsByDelegator (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#511) can be used in cross function reentrancies:
	- FutureVault.getTotalDelegated(address) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#879-884)
	- FutureVault.withdrawFYTDelegationFrom(address,address,uint256) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#849-872)
	- updateUserState(_receiver) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#821)
		- lastPeriodClaimed[_user] = currentPeriodIndex (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#668)
		- lastPeriodClaimed[_user] = currentPeriodIndex (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#680)
	FutureVault.lastPeriodClaimed (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#493) can be used in cross function reentrancies:
	- FutureVault._preparePTClaim(address) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#671-682)
	- FutureVault.getClaimableFYTForPeriod(address,uint256) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#975-985)
	- FutureVault.getClaimablePT(address) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#940-958)
	- FutureVault.getUnlockablePremium(address) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#1019-1025)
	- FutureVault.updateUserState(address) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#662-669)
	- updateUserState(_receiver) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#821)
		- delete premiumToBeRedeemed[_user] (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#675)
	FutureVault.premiumToBeRedeemed (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#494) can be used in cross function reentrancies:
	- FutureVault._deposit(address,uint256) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#696-712)
	- FutureVault._preparePTClaim(address) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#671-682)
	- FutureVault.getClaimablePT(address) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#940-958)
	- FutureVault.getUnlockablePremium(address) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#1019-1025)
	- FutureVault.getUserEarlyUnlockablePremium(address) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#797-804)
	- totalDelegationsReceived[_receiver] = totalDelegationsReceived[_receiver].add(_amount) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#839)
	FutureVault.totalDelegationsReceived (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#512) can be used in cross function reentrancies:
	- FutureVault._preparePTClaim(address) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#671-682)
	- FutureVault.getClaimableFYTForPeriod(address,uint256) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#975-985)
	- FutureVault.getClaimablePT(address) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#940-958)
	- FutureVault.withdrawFYTDelegationFrom(address,address,uint256) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#849-872)
Reentrancy in FutureVault.updateUserState(address) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#662-669):
	External calls:
	- pt.mint(_user,_preparePTClaim(_user)) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#666)
	State variables written after the call(s):
	- lastPeriodClaimed[_user] = currentPeriodIndex (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#668)
	FutureVault.lastPeriodClaimed (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#493) can be used in cross function reentrancies:
	- FutureVault._preparePTClaim(address) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#671-682)
	- FutureVault.getClaimableFYTForPeriod(address,uint256) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#975-985)
	- FutureVault.getClaimablePT(address) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#940-958)
	- FutureVault.getUnlockablePremium(address) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#1019-1025)
	- FutureVault.updateUserState(address) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#662-669)
Reentrancy in FutureVault.withdrawFYTDelegationFrom(address,address,uint256) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#849-872):
	External calls:
	- updateUserState(_delegator) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#855)
		- pt.mint(_user,_preparePTClaim(_user)) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#666)
	- updateUserState(_receiver) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#856)
		- pt.mint(_user,_preparePTClaim(_user)) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#666)
	State variables written after the call(s):
	- updateUserState(_receiver) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#856)
		- delete FYTsOfUserPremium[_user] (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#676)
	FutureVault.FYTsOfUserPremium (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#495) can be used in cross function reentrancies:
	- FutureVault._deposit(address,uint256) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#696-712)
	- FutureVault._preparePTClaim(address) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#671-682)
	- FutureVault.getUserEarlyUnlockablePremium(address) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#797-804)
	- updateUserState(_receiver) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#856)
		- claimableFYTByUser[_user] = pt.balanceOf(_user).add(totalDelegationsReceived[_user]).sub(getTotalDelegated(_user)) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#677-679)
	FutureVault.claimableFYTByUser (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#497) can be used in cross function reentrancies:
	- FutureVault._deposit(address,uint256) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#696-712)
	- FutureVault._preparePTClaim(address) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#671-682)
	- FutureVault.getClaimableFYTForPeriod(address,uint256) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#975-985)
	- FutureVault.getClaimablePT(address) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#940-958)
	- delegationsByDelegator[_delegator][i].delegatedAmount = delegationsByDelegator[_delegator][i].delegatedAmount.sub(_amount,ERR_AMOUNT) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#862-864)
	FutureVault.delegationsByDelegator (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#511) can be used in cross function reentrancies:
	- FutureVault.getTotalDelegated(address) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#879-884)
	- FutureVault.withdrawFYTDelegationFrom(address,address,uint256) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#849-872)
	- updateUserState(_receiver) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#856)
		- lastPeriodClaimed[_user] = currentPeriodIndex (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#668)
		- lastPeriodClaimed[_user] = currentPeriodIndex (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#680)
	FutureVault.lastPeriodClaimed (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#493) can be used in cross function reentrancies:
	- FutureVault._preparePTClaim(address) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#671-682)
	- FutureVault.getClaimableFYTForPeriod(address,uint256) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#975-985)
	- FutureVault.getClaimablePT(address) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#940-958)
	- FutureVault.getUnlockablePremium(address) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#1019-1025)
	- FutureVault.updateUserState(address) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#662-669)
	- updateUserState(_receiver) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#856)
		- delete premiumToBeRedeemed[_user] (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#675)
	FutureVault.premiumToBeRedeemed (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#494) can be used in cross function reentrancies:
	- FutureVault._deposit(address,uint256) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#696-712)
	- FutureVault._preparePTClaim(address) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#671-682)
	- FutureVault.getClaimablePT(address) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#940-958)
	- FutureVault.getUnlockablePremium(address) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#1019-1025)
	- FutureVault.getUserEarlyUnlockablePremium(address) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#797-804)
	- totalDelegationsReceived[_receiver] = totalDelegationsReceived[_receiver].sub(_amount) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#870)
	FutureVault.totalDelegationsReceived (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#512) can be used in cross function reentrancies:
	- FutureVault._preparePTClaim(address) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#671-682)
	- FutureVault.getClaimableFYTForPeriod(address,uint256) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#975-985)
	- FutureVault.getClaimablePT(address) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#940-958)
	- FutureVault.withdrawFYTDelegationFrom(address,address,uint256) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#849-872)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1
INFO:Detectors:
RewardsFutureVault.redeemAllVaultRewards().i (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#1199) is a local variable never initialized
FutureVault.createFYTDelegationTo(address,address,uint256).delegated (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#826) is a local variable never initialized
FutureVault.withdrawFYTDelegationFrom(address,address,uint256).removed (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#859) is a local variable never initialized
FutureVault._switchPeriod().reinvestedYield (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#622) is a local variable never initialized
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#uninitialized-local-variables
INFO:Detectors:
RewardsFutureVault.addRewardsToken(address) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#1224-1228) ignores return value by rewardTokens.add(_token) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#1226)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return
INFO:Detectors:
RewardsFutureVault.setRewardRecipient(address)._recipient (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#1233) lacks a zero-check on :
		- rewardsRecipient = _recipient (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#1235)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation
INFO:Detectors:
RewardsFutureVault.redeemAllVaultRewards() (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#1196-1205) has external calls inside a loop: rewardTokenBalance = rewardToken.balanceOf(address(this)) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#1201)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation/#calls-inside-a-loop
INFO:Detectors:
Reentrancy in FutureVault._claimFYT(address,uint256) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#898-903):
	External calls:
	- fyts[currentPeriodIndex].mint(_user,_amount) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#901)
	State variables written after the call(s):
	- collectedFYTSByPeriod[currentPeriodIndex] = collectedFYTSByPeriod[currentPeriodIndex].add(_amount) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#902)
Reentrancy in FutureVault._deployNewFutureYieldToken(uint256) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#926-931):
	External calls:
	- newToken = IFutureYieldToken(ITokensFactory(registry.getTokensFactoryAddress()).deployNextFutureYieldToken(newPeriodIndex)) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#927-929)
	State variables written after the call(s):
	- fyts.push(newToken) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#930)
Reentrancy in FutureVault._withdraw(address,uint256) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#748-769):
	External calls:
	- updateUserState(_user) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#749)
		- pt.mint(_user,_preparePTClaim(_user)) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#666)
	State variables written after the call(s):
	- premiumToBeUnlocked = _prepareUserEarlyPremiumUnlock(_user,_amount) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#753)
		- premiumsTotal[getCurrentPeriodIndex()] = premiumsTotal[getCurrentPeriodIndex()].sub(premiumToBeUnlocked) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#788)
Reentrancy in FutureVault._withdraw(address,uint256) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#748-769):
	External calls:
	- updateUserState(_user) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#749)
		- pt.mint(_user,_preparePTClaim(_user)) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#666)
	- ibt.safeTransfer(_user,fundsToBeUnlocked.add(yieldToBeRedeemed).add(premiumToBeUnlocked)) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#762)
	- ibt.safeTransfer(registry.getTreasuryAddress(),treasuryFee) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#765)
	State variables written after the call(s):
	- totalUnderlyingDeposited = totalUnderlyingDeposited.sub(_amount) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#767)
Reentrancy in RateFutureVault.initialize(IController,IERC20,uint256,string,address) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#1298-1307):
	External calls:
	- super.initialize(_controller,_ibt,_periodDuration,_platformName,_admin) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#1305)
		- pt = IPT(ITokensFactory(IRegistry(controller.getRegistryAddress()).getTokensFactoryAddress()).deployPT(ibt.symbol(),ibt.decimals(),PLATFORM_NAME,PERIOD_DURATION)) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#598-605)
	State variables written after the call(s):
	- IBTRates[getCurrentPeriodIndex()] = getIBTRate() (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#1306)
Reentrancy in HybridFutureVault.startNewPeriod() (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#1493-1497):
	External calls:
	- _switchPeriod() (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#1495)
		- newToken = IFutureYieldToken(ITokensFactory(registry.getTokensFactoryAddress()).deployNextFutureYieldToken(newPeriodIndex)) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#927-929)
		- returndata = address(token).functionCall(data,SafeERC20: low-level call failed) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#1900)
		- (success,returndata) = target.call{value: value}(data) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#2846)
		- futureWallet.registerExpiredFuture(collectedYield) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#635)
		- ibt.safeTransfer(registry.getTreasuryAddress(),performanceFee) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#637)
		- ibt.safeTransfer(address(futureWallet),collectedYield) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#638)
		- futureWallet.registerExpiredFuture(0) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#640)
	External calls sending eth:
	- _switchPeriod() (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#1495)
		- (success,returndata) = target.call{value: value}(data) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#2846)
	State variables written after the call(s):
	- IBTRates[getCurrentPeriodIndex()] = getIBTRate() (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#1496)
Reentrancy in FutureVault.withdraw(address,uint256) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#720-740):
	External calls:
	- _withdraw(_user,_amount) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#723)
		- returndata = address(token).functionCall(data,SafeERC20: low-level call failed) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#1900)
		- pt.mint(_user,_preparePTClaim(_user)) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#666)
		- (success,returndata) = target.call{value: value}(data) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#2846)
		- ibt.safeTransfer(_user,fundsToBeUnlocked.add(yieldToBeRedeemed).add(premiumToBeUnlocked)) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#762)
		- ibt.safeTransfer(registry.getTreasuryAddress(),treasuryFee) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#765)
		- pt.burnFrom(_user,_amount) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#768)
	External calls sending eth:
	- _withdraw(_user,_amount) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#723)
		- (success,returndata) = target.call{value: value}(data) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#2846)
	State variables written after the call(s):
	- collectedFYTSByPeriod[currentPeriodIndex] = collectedFYTSByPeriod[currentPeriodIndex].add(ClaimableFYTsToBurn) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#732)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2
INFO:Detectors:
Reentrancy in FutureVault._switchPeriod() (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#618-654):
	External calls:
	- futureWallet.registerExpiredFuture(collectedYield) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#635)
	- ibt.safeTransfer(registry.getTreasuryAddress(),performanceFee) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#637)
	- ibt.safeTransfer(address(futureWallet),collectedYield) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#638)
	- futureWallet.registerExpiredFuture(0) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#640)
	- _deployNewFutureYieldToken(nextPeriodID) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#646)
		- newToken = IFutureYieldToken(ITokensFactory(registry.getTokensFactoryAddress()).deployNextFutureYieldToken(newPeriodIndex)) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#927-929)
	Event emitted after the call(s):
	- NewPeriodStarted(nextPeriodID) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#647)
Reentrancy in FutureVault.deposit(address,uint256) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#690-694):
	External calls:
	- _deposit(_user,_amount) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#692)
		- pt.mint(_user,ptToMint) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#711)
	Event emitted after the call(s):
	- FundsDeposited(_user,_amount) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#693)
Reentrancy in HybridFutureVault.deposit(address,uint256) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#1473-1477):
	External calls:
	- _deposit(_user,_amount) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#1475)
		- pt.mint(_user,ptToMint) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#711)
	Event emitted after the call(s):
	- FundsDeposited(_user,_amount) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#1476)
Reentrancy in FutureVault.initialize(IController,IERC20,uint256,string,address) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#577-608):
	External calls:
	- pt = IPT(ITokensFactory(IRegistry(controller.getRegistryAddress()).getTokensFactoryAddress()).deployPT(ibt.symbol(),ibt.decimals(),PLATFORM_NAME,PERIOD_DURATION)) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#598-605)
	Event emitted after the call(s):
	- PTSet(pt) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#607)
Reentrancy in FutureVault.pauseLiquidityTransfers() (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#1134-1138):
	External calls:
	- pt.pause() (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#1136)
	Event emitted after the call(s):
	- LiquidityTransfersPaused() (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#1137)
Reentrancy in RewardsFutureVault.redeemAllVaultRewards() (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#1196-1205):
	External calls:
	- rewardToken.safeTransfer(rewardsRecipient,rewardTokenBalance) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#1202)
	Event emitted after the call(s):
	- RewardTokenRedeemed(rewardToken,rewardTokenBalance) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#1203)
Reentrancy in RewardsFutureVault.redeemVaultRewards(IERC20) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#1211-1217):
	External calls:
	- _rewardToken.safeTransfer(rewardsRecipient,rewardTokenBalance) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#1215)
	Event emitted after the call(s):
	- RewardTokenRedeemed(_rewardToken,rewardTokenBalance) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#1216)
Reentrancy in FutureVault.resumeLiquidityTransfers() (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#1143-1147):
	External calls:
	- pt.unpause() (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#1145)
	Event emitted after the call(s):
	- LiquidityTransfersResumed() (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#1146)
Reentrancy in FutureVault.withdrawFYTDelegationFrom(address,address,uint256) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#849-872):
	External calls:
	- updateUserState(_delegator) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#855)
		- pt.mint(_user,_preparePTClaim(_user)) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#666)
	- updateUserState(_receiver) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#856)
		- pt.mint(_user,_preparePTClaim(_user)) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#666)
	Event emitted after the call(s):
	- DelegationRemoved(_delegator,_receiver,_amount) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#871)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3
INFO:Detectors:
AddressUpgradeable.isContract(address) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#2753-2762) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#2760)
AddressUpgradeable._verifyCallResult(bool,bytes,string) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#2874-2891) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#2883-2886)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage
INFO:Detectors:
Different versions of Solidity are used:
	- Version used: ['0.7.6', '>=0.4.24<0.8.0', '>=0.6.0<0.8.0', '>=0.6.2<0.8.0']
	- 0.7.6 (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#323)
	- 0.7.6 (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#434)
	- 0.7.6 (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#459)
	- 0.7.6 (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#1152)
	- 0.7.6 (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#1276)
	- 0.7.6 (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#1453)
	- 0.7.6 (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#1525)
	- 0.7.6 (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#1588)
	- 0.7.6 (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#1609)
	- 0.7.6 (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#1910)
	- 0.7.6 (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#1975)
	- 0.7.6 (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#2056)
	- 0.7.6 (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#2129)
	- 0.7.6 (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#2282)
	- 0.7.6 (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#2377)
	- 0.7.6 (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#2392)
	- 0.7.6 (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#2896)
	- >=0.4.24<0.8.0 (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#8)
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#63)
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#96)
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#365)
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#1375)
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#1619)
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#1834)
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#2432)
	- >=0.6.2<0.8.0 (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#2730)
	- ABIEncoderV2 (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#2)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#different-pragma-directives-are-used
INFO:Detectors:
APWineMaths.getActualOutput(uint256,uint256,uint256) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#2420-2427) is never used and should be removed
APWineMaths.getScaledInput(uint256,uint256,uint256) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#2405-2412) is never used and should be removed
AccessControlUpgradeable.__AccessControl_init() (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#139-142) is never used and should be removed
AccessControlUpgradeable.__AccessControl_init_unchained() (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#144-145) is never used and should be removed
AccessControlUpgradeable._setRoleAdmin(bytes32,bytes32) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#302-305) is never used and should be removed
AddressUpgradeable.functionCall(address,bytes) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#2806-2808) is never used and should be removed
AddressUpgradeable.functionCallWithValue(address,bytes,uint256) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#2831-2833) is never used and should be removed
AddressUpgradeable.functionStaticCall(address,bytes) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#2856-2858) is never used and should be removed
AddressUpgradeable.functionStaticCall(address,bytes,string) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#2866-2872) is never used and should be removed
AddressUpgradeable.sendValue(address,uint256) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#2780-2786) is never used and should be removed
ContextUpgradeable.__Context_init() (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#77-79) is never used and should be removed
ContextUpgradeable.__Context_init_unchained() (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#81-82) is never used and should be removed
ContextUpgradeable._msgData() (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#87-90) is never used and should be removed
EnumerableSetUpgradeable.add(EnumerableSetUpgradeable.Bytes32Set,bytes32) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#2576-2578) is never used and should be removed
EnumerableSetUpgradeable.add(EnumerableSetUpgradeable.UintSet,uint256) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#2685-2687) is never used and should be removed
EnumerableSetUpgradeable.at(EnumerableSetUpgradeable.Bytes32Set,uint256) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#2614-2616) is never used and should be removed
EnumerableSetUpgradeable.at(EnumerableSetUpgradeable.UintSet,uint256) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#2723-2725) is never used and should be removed
EnumerableSetUpgradeable.contains(EnumerableSetUpgradeable.Bytes32Set,bytes32) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#2593-2595) is never used and should be removed
EnumerableSetUpgradeable.contains(EnumerableSetUpgradeable.UintSet,uint256) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#2702-2704) is never used and should be removed
EnumerableSetUpgradeable.length(EnumerableSetUpgradeable.Bytes32Set) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#2600-2602) is never used and should be removed
EnumerableSetUpgradeable.length(EnumerableSetUpgradeable.UintSet) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#2709-2711) is never used and should be removed
EnumerableSetUpgradeable.remove(EnumerableSetUpgradeable.Bytes32Set,bytes32) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#2586-2588) is never used and should be removed
EnumerableSetUpgradeable.remove(EnumerableSetUpgradeable.UintSet,uint256) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#2695-2697) is never used and should be removed
ReentrancyGuardUpgradeable.__ReentrancyGuard_init() (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#401-403) is never used and should be removed
ReentrancyGuardUpgradeable.__ReentrancyGuard_init_unchained() (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#405-407) is never used and should be removed
SafeERC20Upgradeable.safeApprove(IERC20Upgradeable,address,uint256) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#1868-1877) is never used and should be removed
SafeERC20Upgradeable.safeDecreaseAllowance(IERC20Upgradeable,address,uint256) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#1884-1887) is never used and should be removed
SafeERC20Upgradeable.safeIncreaseAllowance(IERC20Upgradeable,address,uint256) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#1879-1882) is never used and should be removed
SafeERC20Upgradeable.safeTransferFrom(IERC20Upgradeable,address,address,uint256) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#1857-1859) is never used and should be removed
SafeMathUpgradeable.div(uint256,uint256,string) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#1806-1809) is never used and should be removed
SafeMathUpgradeable.mod(uint256,uint256) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#1768-1771) is never used and should be removed
SafeMathUpgradeable.mod(uint256,uint256,string) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#1826-1829) is never used and should be removed
SafeMathUpgradeable.tryAdd(uint256,uint256) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#1640-1644) is never used and should be removed
SafeMathUpgradeable.tryDiv(uint256,uint256) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#1676-1679) is never used and should be removed
SafeMathUpgradeable.tryMod(uint256,uint256) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#1686-1689) is never used and should be removed
SafeMathUpgradeable.tryMul(uint256,uint256) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#1661-1669) is never used and should be removed
SafeMathUpgradeable.trySub(uint256,uint256) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#1651-1654) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code
INFO:Detectors:
Pragma version>=0.4.24<0.8.0 (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#8) is too complex
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#63) is too complex
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#96) is too complex
Pragma version0.7.6 (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#323) allows old versions
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#365) is too complex
Pragma version0.7.6 (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#434) allows old versions
Pragma version0.7.6 (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#459) allows old versions
Pragma version0.7.6 (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#1152) allows old versions
Pragma version0.7.6 (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#1276) allows old versions
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#1375) is too complex
Pragma version0.7.6 (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#1453) allows old versions
Pragma version0.7.6 (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#1525) allows old versions
Pragma version0.7.6 (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#1588) allows old versions
Pragma version0.7.6 (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#1609) allows old versions
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#1619) is too complex
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#1834) is too complex
Pragma version0.7.6 (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#1910) allows old versions
Pragma version0.7.6 (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#1975) allows old versions
Pragma version0.7.6 (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#2056) allows old versions
Pragma version0.7.6 (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#2129) allows old versions
Pragma version0.7.6 (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#2282) allows old versions
Pragma version0.7.6 (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#2377) allows old versions
Pragma version0.7.6 (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#2392) allows old versions
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#2432) is too complex
Pragma version>=0.6.2<0.8.0 (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#2730) is too complex
Pragma version0.7.6 (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#2896) allows old versions
solc-0.7.6 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity
INFO:Detectors:
Low level call in AddressUpgradeable.sendValue(address,uint256) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#2780-2786):
	- (success) = recipient.call{value: amount}() (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#2784)
Low level call in AddressUpgradeable.functionCallWithValue(address,bytes,uint256,string) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#2841-2848):
	- (success,returndata) = target.call{value: value}(data) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#2846)
Low level call in AddressUpgradeable.functionStaticCall(address,bytes,string) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#2866-2872):
	- (success,returndata) = target.staticcall(data) (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#2870)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls
INFO:Detectors:
Function ContextUpgradeable.__Context_init() (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#77-79) is not in mixedCase
Function ContextUpgradeable.__Context_init_unchained() (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#81-82) is not in mixedCase
Variable ContextUpgradeable.__gap (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#91) is not in mixedCase
Function AccessControlUpgradeable.__AccessControl_init() (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#139-142) is not in mixedCase
Function AccessControlUpgradeable.__AccessControl_init_unchained() (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#144-145) is not in mixedCase
Variable AccessControlUpgradeable.__gap (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#318) is not in mixedCase
Function ReentrancyGuardUpgradeable.__ReentrancyGuard_init() (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#401-403) is not in mixedCase
Function ReentrancyGuardUpgradeable.__ReentrancyGuard_init_unchained() (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#405-407) is not in mixedCase
Variable ReentrancyGuardUpgradeable.__gap (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#429) is not in mixedCase
Parameter RegistryStorage.setRegistry(IRegistry)._registry (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#451) is not in mixedCase
Parameter FutureVault.initialize(IController,IERC20,uint256,string,address)._controller (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#578) is not in mixedCase
Parameter FutureVault.initialize(IController,IERC20,uint256,string,address)._ibt (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#579) is not in mixedCase
Parameter FutureVault.initialize(IController,IERC20,uint256,string,address)._periodDuration (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#580) is not in mixedCase
Parameter FutureVault.initialize(IController,IERC20,uint256,string,address)._platformName (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#581) is not in mixedCase
Parameter FutureVault.initialize(IController,IERC20,uint256,string,address)._admin (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#582) is not in mixedCase
Parameter FutureVault.updateUserState(address)._user (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#662) is not in mixedCase
Parameter FutureVault.deposit(address,uint256)._user (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#690) is not in mixedCase
Parameter FutureVault.deposit(address,uint256)._amount (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#690) is not in mixedCase
Parameter FutureVault.withdraw(address,uint256)._user (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#720) is not in mixedCase
Parameter FutureVault.withdraw(address,uint256)._amount (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#720) is not in mixedCase
Parameter FutureVault.getUserEarlyUnlockablePremium(address)._user (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#797) is not in mixedCase
Parameter FutureVault.createFYTDelegationTo(address,address,uint256)._delegator (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#815) is not in mixedCase
Parameter FutureVault.createFYTDelegationTo(address,address,uint256)._receiver (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#816) is not in mixedCase
Parameter FutureVault.createFYTDelegationTo(address,address,uint256)._amount (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#817) is not in mixedCase
Parameter FutureVault.withdrawFYTDelegationFrom(address,address,uint256)._delegator (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#850) is not in mixedCase
Parameter FutureVault.withdrawFYTDelegationFrom(address,address,uint256)._receiver (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#851) is not in mixedCase
Parameter FutureVault.withdrawFYTDelegationFrom(address,address,uint256)._amount (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#852) is not in mixedCase
Parameter FutureVault.getTotalDelegated(address)._delegator (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#879) is not in mixedCase
Parameter FutureVault.claimFYT(address,uint256)._user (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#892) is not in mixedCase
Parameter FutureVault.claimFYT(address,uint256)._amount (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#892) is not in mixedCase
Parameter FutureVault.exitTerminatedFuture(address)._user (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#912) is not in mixedCase
Parameter FutureVault.getClaimablePT(address)._user (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#940) is not in mixedCase
Parameter FutureVault.getUnlockableFunds(address)._user (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#965) is not in mixedCase
Parameter FutureVault.getClaimableFYTForPeriod(address,uint256)._user (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#975) is not in mixedCase
Parameter FutureVault.getClaimableFYTForPeriod(address,uint256)._periodIndex (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#975) is not in mixedCase
Parameter FutureVault.getPremiumPerUnderlyingDeposited(uint256)._amount (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#1005) is not in mixedCase
Parameter FutureVault.getUnlockablePremium(address)._user (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#1019) is not in mixedCase
Parameter FutureVault.getYieldOfPeriod(uint256)._periodID (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#1032) is not in mixedCase
Parameter FutureVault.getFYTofPeriod(uint256)._periodIndex (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#1100) is not in mixedCase
Parameter FutureVault.setFutureWallet(IFutureWallet)._futureWallet (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#1126) is not in mixedCase
Variable FutureVault.FYTsOfUserPremium (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#495) is not in mixedCase
Variable FutureVault.PERIOD_DURATION (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#521) is not in mixedCase
Variable FutureVault.PLATFORM_NAME (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#522) is not in mixedCase
Variable FutureVault.IBT_UNIT (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#525) is not in mixedCase
Variable FutureVault.IBT_UNITS_MULTIPLIED_VALUE (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#526) is not in mixedCase
Parameter RewardsFutureVault.redeemVaultRewards(IERC20)._rewardToken (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#1211) is not in mixedCase
Parameter RewardsFutureVault.addRewardsToken(address)._token (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#1224) is not in mixedCase
Parameter RewardsFutureVault.setRewardRecipient(address)._recipient (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#1233) is not in mixedCase
Parameter RewardsFutureVault.isRewardToken(IERC20)._token (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#1244) is not in mixedCase
Parameter RewardsFutureVault.getRewardTokenAt(uint256)._index (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#1253) is not in mixedCase
Parameter RateFutureVault.initialize(IController,IERC20,uint256,string,address)._controller (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#1299) is not in mixedCase
Parameter RateFutureVault.initialize(IController,IERC20,uint256,string,address)._ibt (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#1300) is not in mixedCase
Parameter RateFutureVault.initialize(IController,IERC20,uint256,string,address)._periodDuration (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#1301) is not in mixedCase
Parameter RateFutureVault.initialize(IController,IERC20,uint256,string,address)._platformName (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#1302) is not in mixedCase
Parameter RateFutureVault.initialize(IController,IERC20,uint256,string,address)._admin (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#1303) is not in mixedCase
Parameter RateFutureVault.convertIBTToUnderlying(uint256)._amount (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#1319) is not in mixedCase
Parameter RateFutureVault.convertUnderlyingtoIBT(uint256)._amount (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#1327) is not in mixedCase
Parameter RateFutureVault.getUnlockableFunds(address)._user (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#1340) is not in mixedCase
Parameter RateFutureVault.getPTPerAmountDeposited(uint256)._amount (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#1368) is not in mixedCase
Variable RateFutureVault.IBTRates (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#1288) is not in mixedCase
Parameter HybridFutureVault.deposit(address,uint256)._user (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#1473) is not in mixedCase
Parameter HybridFutureVault.deposit(address,uint256)._amount (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#1473) is not in mixedCase
Parameter HybridFutureVault.getPTPerAmountDeposited(uint256)._amount (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#1516) is not in mixedCase
Contract yTokenFutureVault (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#1597-1605) is not in CapWords
Function IController.STARTING_DELAY() (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#2152) is not in mixedCase
Parameter IRegistry.setPTLogic(address)._PTLogic (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#2303) is not in mixedCase
Parameter IRegistry.setFYTLogic(address)._FYTLogic (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#2309) is not in mixedCase
Parameter APWineMaths.getScaledInput(uint256,uint256,uint256)._actualValue (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#2406) is not in mixedCase
Parameter APWineMaths.getScaledInput(uint256,uint256,uint256)._initialSum (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#2407) is not in mixedCase
Parameter APWineMaths.getScaledInput(uint256,uint256,uint256)._actualSum (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#2408) is not in mixedCase
Parameter APWineMaths.getActualOutput(uint256,uint256,uint256)._scaledOutput (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#2421) is not in mixedCase
Parameter APWineMaths.getActualOutput(uint256,uint256,uint256)._initialSum (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#2422) is not in mixedCase
Parameter APWineMaths.getActualOutput(uint256,uint256,uint256)._actualSum (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#2423) is not in mixedCase
Function IFutureVault.PERIOD_DURATION() (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#2920) is not in mixedCase
Function IFutureVault.PLATFORM_NAME() (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#2926) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions
INFO:Detectors:
Redundant expression "this (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#88)" inContextUpgradeable (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#76-92)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#redundant-statements
INFO:Detectors:
Variable FutureVault.PERIOD_DURATION (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#521) is too similar to FutureVault.initialize(IController,IERC20,uint256,string,address)._periodDuration (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#580)
Variable FutureVault.PLATFORM_NAME (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#522) is too similar to FutureVault.initialize(IController,IERC20,uint256,string,address)._platformName (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#581)
Variable RewardsFutureVault.redeemVaultRewards(IERC20)._rewardToken (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#1211) is too similar to RewardsFutureVault.rewardTokens (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#1166)
Variable FutureVault.PERIOD_DURATION (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#521) is too similar to RateFutureVault.initialize(IController,IERC20,uint256,string,address)._periodDuration (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#1301)
Variable FutureVault.PLATFORM_NAME (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#522) is too similar to RateFutureVault.initialize(IController,IERC20,uint256,string,address)._platformName (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#1302)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#variable-names-too-similar
INFO:Detectors:
RoleCheckable.FUTURE_ROLE (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#337) is never used in yTokenFutureVault (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#1597-1605)
HybridFutureVault.scaledTotals (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#1465) is never used in yTokenFutureVault (../../sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol#1597-1605)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-state-variable
INFO:Slither:/bdata2/sc/dataset/mainnet/0x2506F2d6E49838ed116bcd772C9Fa8738c520284.sol analyzed (26 contracts with 85 detectors), 189 result(s) found
