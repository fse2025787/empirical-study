INFO:Detectors:
FullMath.mulDiv(uint256,uint256,uint256) (../../sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol#762-854) performs a multiplication on the result of a division:
	- denominator = denominator / twos (../../sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol#815)
	- inv = (3 * denominator) ^ 2 (../../sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol#835)
FullMath.mulDiv(uint256,uint256,uint256) (../../sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol#762-854) performs a multiplication on the result of a division:
	- denominator = denominator / twos (../../sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol#815)
	- inv *= 2 - denominator * inv (../../sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol#839)
FullMath.mulDiv(uint256,uint256,uint256) (../../sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol#762-854) performs a multiplication on the result of a division:
	- denominator = denominator / twos (../../sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol#815)
	- inv *= 2 - denominator * inv (../../sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol#840)
FullMath.mulDiv(uint256,uint256,uint256) (../../sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol#762-854) performs a multiplication on the result of a division:
	- denominator = denominator / twos (../../sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol#815)
	- inv *= 2 - denominator * inv (../../sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol#841)
FullMath.mulDiv(uint256,uint256,uint256) (../../sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol#762-854) performs a multiplication on the result of a division:
	- denominator = denominator / twos (../../sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol#815)
	- inv *= 2 - denominator * inv (../../sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol#842)
FullMath.mulDiv(uint256,uint256,uint256) (../../sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol#762-854) performs a multiplication on the result of a division:
	- denominator = denominator / twos (../../sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol#815)
	- inv *= 2 - denominator * inv (../../sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol#843)
FullMath.mulDiv(uint256,uint256,uint256) (../../sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol#762-854) performs a multiplication on the result of a division:
	- denominator = denominator / twos (../../sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol#815)
	- inv *= 2 - denominator * inv (../../sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol#844)
FullMath.mulDiv(uint256,uint256,uint256) (../../sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol#762-854) performs a multiplication on the result of a division:
	- prod0 = prod0 / twos (../../sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol#820)
	- result = prod0 * inv (../../sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol#852)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#divide-before-multiply
INFO:Detectors:
OracleLibrary.getWeightedArithmeticMeanTick(OracleLibrary.WeightedTickData[]).i (../../sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol#738) is a local variable never initialized
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#uninitialized-local-variables
INFO:Detectors:
UniswapV3Helper.changePeriodForAvgPrice(uint32) (../../sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol#533-535) should emit an event for: 
	- periodForAvgPrice = _period (../../sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol#534) 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-arithmetic
INFO:Detectors:
UniswapV3Helper.constructor(address,uint32)._factory (../../sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol#523) lacks a zero-check on :
		- (success) = _factory.staticcall(abi.encode(selector,500)) (../../sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol#525)
		- uniswapV3Factory = _factory (../../sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol#529)
UniswapV3Helper.getPrice(address,address,uint24)._tokenA (../../sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol#556) lacks a zero-check on :
		- (success,data) = _tokenA.staticcall(abi.encode(DECIMALS_SELECTOR)) (../../sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol#559)
UniswapV3Helper.resolvePool(address,address,uint24).token0 (../../sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol#576) lacks a zero-check on :
		- (success,data) = uniswapV3Factory.staticcall(abi.encodeWithSelector(GET_POOL_SELECTOR,token0,token1,_fee)) (../../sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol#578-581)
UniswapV3Helper.resolvePool(address,address,uint24).token1 (../../sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol#576) lacks a zero-check on :
		- (success,data) = uniswapV3Factory.staticcall(abi.encodeWithSelector(GET_POOL_SELECTOR,token0,token1,_fee)) (../../sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol#578-581)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation
INFO:Detectors:
UniswapV3Helper.tokensSymbols(address[]) (../../sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol#537-545) has external calls inside a loop: (success,data) = _tokens[i].staticcall(abi.encode(SYMBOL_SELECTOR)) (../../sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol#542)
UniswapV3Helper.getPrice(address,address,uint24) (../../sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol#556-573) has external calls inside a loop: (success,data) = _tokenA.staticcall(abi.encode(DECIMALS_SELECTOR)) (../../sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol#559)
UniswapV3Helper.resolvePool(address,address,uint24) (../../sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol#575-584) has external calls inside a loop: (success,data) = uniswapV3Factory.staticcall(abi.encodeWithSelector(GET_POOL_SELECTOR,token0,token1,_fee)) (../../sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol#578-581)
OracleLibrary.consult(address,uint32) (../../sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol#602-627) has external calls inside a loop: (tickCumulatives,secondsPerLiquidityCumulativeX128s) = IUniswapV3Pool(pool).observe(secondsAgos) (../../sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol#613-614)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation/#calls-inside-a-loop
INFO:Detectors:
OracleLibrary.getBlockStartingTickAndLiquidity(address) (../../sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol#679-712) uses timestamp for comparisons
	Dangerous comparisons:
	- observationTimestamp != uint32(block.timestamp) (../../sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol#690)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp
INFO:Detectors:
FullMath.mulDiv(uint256,uint256,uint256) (../../sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol#762-854) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol#774-778)
	- INLINE ASM (../../sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol#783-785)
	- INLINE ASM (../../sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol#800-802)
	- INLINE ASM (../../sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol#804-807)
	- INLINE ASM (../../sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol#814-816)
	- INLINE ASM (../../sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol#819-821)
	- INLINE ASM (../../sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol#825-827)
TickMath.getTickAtSqrtRatio(uint160) (../../sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol#934-1077) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol#942-946)
	- INLINE ASM (../../sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol#947-951)
	- INLINE ASM (../../sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol#952-956)
	- INLINE ASM (../../sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol#957-961)
	- INLINE ASM (../../sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol#962-966)
	- INLINE ASM (../../sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol#967-971)
	- INLINE ASM (../../sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol#972-976)
	- INLINE ASM (../../sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol#977-980)
	- INLINE ASM (../../sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol#987-992)
	- INLINE ASM (../../sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol#993-998)
	- INLINE ASM (../../sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol#999-1004)
	- INLINE ASM (../../sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol#1005-1010)
	- INLINE ASM (../../sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol#1011-1016)
	- INLINE ASM (../../sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol#1017-1022)
	- INLINE ASM (../../sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol#1023-1028)
	- INLINE ASM (../../sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol#1029-1034)
	- INLINE ASM (../../sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol#1035-1040)
	- INLINE ASM (../../sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol#1041-1046)
	- INLINE ASM (../../sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol#1047-1052)
	- INLINE ASM (../../sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol#1053-1058)
	- INLINE ASM (../../sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol#1059-1064)
	- INLINE ASM (../../sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol#1065-1069)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage
INFO:Detectors:
Different versions of Solidity are used:
	- Version used: ['0.7.6', '>=0.4.0', '>=0.5.0', '>=0.5.0<0.8.0']
	- 0.7.6 (../../sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol#7)
	- 0.7.6 (../../sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol#498)
	- >=0.4.0 (../../sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol#750)
	- >=0.5.0 (../../sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol#57)
	- >=0.5.0 (../../sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol#93)
	- >=0.5.0 (../../sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol#210)
	- >=0.5.0 (../../sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol#251)
	- >=0.5.0 (../../sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol#355)
	- >=0.5.0 (../../sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol#379)
	- >=0.5.0 (../../sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol#875)
	- >=0.5.0 (../../sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol#1081)
	- >=0.5.0<0.8.0 (../../sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol#588)
	- v2 (../../sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol#2)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#different-pragma-directives-are-used
INFO:Detectors:
TickMath.getSqrtRatioAtTick(int24) (../../sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol#896-927) has a high cyclomatic complexity (24).
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#cyclomatic-complexity
INFO:Detectors:
FullMath.mulDivRoundingUp(uint256,uint256,uint256) (../../sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol#861-871) is never used and should be removed
OracleLibrary.getBlockStartingTickAndLiquidity(address) (../../sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol#679-712) is never used and should be removed
OracleLibrary.getOldestObservationSecondsAgo(address) (../../sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol#660-674) is never used and should be removed
OracleLibrary.getWeightedArithmeticMeanTick(OracleLibrary.WeightedTickData[]) (../../sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol#726-746) is never used and should be removed
TickMath.getTickAtSqrtRatio(uint160) (../../sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol#934-1077) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code
INFO:Detectors:
Pragma version0.7.6 (../../sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol#7) allows old versions
Pragma version>=0.5.0 (../../sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol#57) allows old versions
Pragma version>=0.5.0 (../../sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol#93) allows old versions
Pragma version>=0.5.0 (../../sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol#210) allows old versions
Pragma version>=0.5.0 (../../sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol#251) allows old versions
Pragma version>=0.5.0 (../../sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol#355) allows old versions
Pragma version>=0.5.0 (../../sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol#379) allows old versions
Pragma version0.7.6 (../../sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol#498) allows old versions
Pragma version>=0.5.0<0.8.0 (../../sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol#588) is too complex
Pragma version>=0.4.0 (../../sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol#750) allows old versions
Pragma version>=0.5.0 (../../sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol#875) allows old versions
Pragma version>=0.5.0 (../../sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol#1081) allows old versions
solc-0.7.6 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity
INFO:Detectors:
Low level call in UniswapV3Helper.constructor(address,uint32) (../../sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol#523-531):
	- (success) = _factory.staticcall(abi.encode(selector,500)) (../../sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol#525)
Low level call in UniswapV3Helper.tokensSymbols(address[]) (../../sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol#537-545):
	- (success,data) = _tokens[i].staticcall(abi.encode(SYMBOL_SELECTOR)) (../../sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol#542)
Low level call in UniswapV3Helper.getPrice(address,address,uint24) (../../sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol#556-573):
	- (success,data) = _tokenA.staticcall(abi.encode(DECIMALS_SELECTOR)) (../../sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol#559)
Low level call in UniswapV3Helper.resolvePool(address,address,uint24) (../../sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol#575-584):
	- (success,data) = uniswapV3Factory.staticcall(abi.encodeWithSelector(GET_POOL_SELECTOR,token0,token1,_fee)) (../../sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol#578-581)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls
INFO:Detectors:
Parameter UniswapV3Helper.changePeriodForAvgPrice(uint32)._period (../../sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol#533) is not in mixedCase
Parameter UniswapV3Helper.tokensSymbols(address[])._tokens (../../sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol#537) is not in mixedCase
Parameter UniswapV3Helper.getPrices(UniswapV3Helper.PriceData[])._data (../../sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol#547) is not in mixedCase
Parameter UniswapV3Helper.getPrice(address,address,uint24)._tokenA (../../sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol#556) is not in mixedCase
Parameter UniswapV3Helper.getPrice(address,address,uint24)._tokenB (../../sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol#556) is not in mixedCase
Parameter UniswapV3Helper.getPrice(address,address,uint24)._fee (../../sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol#556) is not in mixedCase
Parameter UniswapV3Helper.resolvePool(address,address,uint24)._tokenA (../../sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol#575) is not in mixedCase
Parameter UniswapV3Helper.resolvePool(address,address,uint24)._tokenB (../../sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol#575) is not in mixedCase
Parameter UniswapV3Helper.resolvePool(address,address,uint24)._fee (../../sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol#575) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions
INFO:Detectors:
Variable IUniswapV3PoolState.positions(bytes32).feeGrowthInside0LastX128 (../../sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol#184) is too similar to IUniswapV3PoolState.positions(bytes32).feeGrowthInside1LastX128 (../../sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol#185)
Variable IUniswapV3PoolState.ticks(int24).feeGrowthOutside0X128 (../../sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol#161) is too similar to IUniswapV3PoolState.ticks(int24).feeGrowthOutside1X128 (../../sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol#162)
Variable IUniswapV3PoolState.positions(bytes32).tokensOwed0 (../../sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol#186) is too similar to IUniswapV3PoolState.positions(bytes32).tokensOwed1 (../../sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol#187)
Variable IUniswapV3PoolActions.collect(address,int24,int24,uint128,uint128).amount0Requested (../../sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol#296) is too similar to IUniswapV3PoolActions.collect(address,int24,int24,uint128,uint128).amount1Requested (../../sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol#297)
Variable IUniswapV3PoolOwnerActions.collectProtocol(address,uint128,uint128).amount0Requested (../../sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol#373) is too similar to IUniswapV3PoolOwnerActions.collectProtocol(address,uint128,uint128).amount1Requested (../../sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol#374)
Variable IUniswapV3PoolOwnerActions.setFeeProtocol(uint8,uint8).feeProtocol0 (../../sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol#363) is too similar to IUniswapV3PoolOwnerActions.setFeeProtocol(uint8,uint8).feeProtocol1 (../../sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol#363)
Variable IUniswapV3PoolActions.collect(address,int24,int24,uint128,uint128).amount0Requested (../../sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol#296) is too similar to IUniswapV3PoolOwnerActions.collectProtocol(address,uint128,uint128).amount1Requested (../../sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol#374)
Variable IUniswapV3PoolOwnerActions.collectProtocol(address,uint128,uint128).amount0Requested (../../sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol#373) is too similar to IUniswapV3PoolActions.collect(address,int24,int24,uint128,uint128).amount1Requested (../../sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol#297)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#variable-names-too-similar
INFO:Detectors:
TickMath.getSqrtRatioAtTick(int24) (../../sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol#896-927) uses literals with too many digits:
	- ratio = 0x100000000000000000000000000000000 (../../sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol#900)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits
INFO:Slither:/bdata2/sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol analyzed (12 contracts with 85 detectors), 63 result(s) found
