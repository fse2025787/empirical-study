Compilation warnings/errors on /bdata2/sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol:
Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it "abstract" is sufficient.
   --> /bdata2/sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol:162:5:
    |
162 |     constructor (string memory name_, string memory symbol_) public {
    |     ^ (Relevant source part starts here and spans across multiple lines).

Warning: Contract code size exceeds 24576 bytes (a limit introduced in Spurious Dragon). This contract may not be deployable on mainnet. Consider enabling the optimizer (with a low "runs" value!), turning off revert strings, or using libraries.
   --> /bdata2/sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol:977:1:
    |
977 | contract Hypervisor is IVault, IUniswapV3MintCallback, IUniswapV3SwapCallback, ERC20 {
    | ^ (Relevant source part starts here and spans across multiple lines).


INFO:Detectors:
Hypervisor.uniswapV3MintCallback(uint256,uint256,bytes) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1250-1265) uses arbitrary from in transferFrom: token0.safeTransferFrom(payer,msg.sender,amount0) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1262)
Hypervisor.uniswapV3MintCallback(uint256,uint256,bytes) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1250-1265) uses arbitrary from in transferFrom: token1.safeTransferFrom(payer,msg.sender,amount1) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1263)
Hypervisor.uniswapV3SwapCallback(int256,int256,bytes) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1267-1288) uses arbitrary from in transferFrom: token0.safeTransferFrom(payer,msg.sender,uint256(amount0Delta)) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1279)
Hypervisor.uniswapV3SwapCallback(int256,int256,bytes) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1267-1288) uses arbitrary from in transferFrom: token1.safeTransferFrom(payer,msg.sender,uint256(amount1Delta)) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1285)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#arbitrary-from-in-transferfrom
INFO:Detectors:
FullMath.mulDiv(uint256,uint256,uint256) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#2056-2148) performs a multiplication on the result of a division:
	- denominator = denominator / twos (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#2109)
	- inv = (3 * denominator) ^ 2 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#2129)
FullMath.mulDiv(uint256,uint256,uint256) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#2056-2148) performs a multiplication on the result of a division:
	- denominator = denominator / twos (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#2109)
	- inv *= 2 - denominator * inv (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#2133)
FullMath.mulDiv(uint256,uint256,uint256) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#2056-2148) performs a multiplication on the result of a division:
	- denominator = denominator / twos (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#2109)
	- inv *= 2 - denominator * inv (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#2134)
FullMath.mulDiv(uint256,uint256,uint256) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#2056-2148) performs a multiplication on the result of a division:
	- denominator = denominator / twos (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#2109)
	- inv *= 2 - denominator * inv (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#2135)
FullMath.mulDiv(uint256,uint256,uint256) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#2056-2148) performs a multiplication on the result of a division:
	- denominator = denominator / twos (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#2109)
	- inv *= 2 - denominator * inv (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#2136)
FullMath.mulDiv(uint256,uint256,uint256) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#2056-2148) performs a multiplication on the result of a division:
	- denominator = denominator / twos (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#2109)
	- inv *= 2 - denominator * inv (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#2137)
FullMath.mulDiv(uint256,uint256,uint256) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#2056-2148) performs a multiplication on the result of a division:
	- denominator = denominator / twos (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#2109)
	- inv *= 2 - denominator * inv (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#2138)
FullMath.mulDiv(uint256,uint256,uint256) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#2056-2148) performs a multiplication on the result of a division:
	- prod0 = prod0 / twos (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#2114)
	- result = prod0 * inv (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#2146)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#divide-before-multiply
INFO:Detectors:
Reentrancy in Hypervisor.rebalance(int24,int24,int24,int24,address,int256) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1118-1193):
	External calls:
	- pool.burn(baseLower,baseUpper,0) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1134)
	- pool.burn(limitLower,limitUpper,0) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1138)
	- _burnLiquidity(baseLower,baseUpper,baseLiquidity,address(this),true) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1147)
		- (owed0,owed1) = pool.burn(tickLower,tickUpper,liquidity) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1221)
		- (amount0,amount1) = pool.collect(to,tickLower,tickUpper,collect0,collect1) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1227)
	- _burnLiquidity(limitLower,limitUpper,limitLiquidity,address(this),true) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1148)
		- (owed0,owed1) = pool.burn(tickLower,tickUpper,liquidity) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1221)
		- (amount0,amount1) = pool.collect(to,tickLower,tickUpper,collect0,collect1) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1227)
	- token0.safeTransfer(feeRecipient,fees0) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1151)
	- token1.safeTransfer(feeRecipient,fees1) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1152)
	- pool.swap(address(this),swapQuantity > 0,swapQuantity,TickMath.MIN_SQRT_RATIO + 1,abi.encode(address(this))) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1165-1171)
	- pool.swap(address(this),swapQuantity > 0,- swapQuantity,TickMath.MAX_SQRT_RATIO - 1,abi.encode(address(this))) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1165-1171)
	State variables written after the call(s):
	- baseLower = _baseLower (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1174)
	Hypervisor.baseLower (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#988) can be used in cross function reentrancies:
	- Hypervisor.baseLower (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#988)
	- Hypervisor.deposit(uint256,uint256,address) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1028-1073)
	- Hypervisor.getBasePosition() (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1304-1318)
	- Hypervisor.rebalance(int24,int24,int24,int24,address,int256) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1118-1193)
	- Hypervisor.withdraw(uint256,address,address) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1080-1108)
	- baseUpper = _baseUpper (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1175)
	Hypervisor.baseUpper (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#989) can be used in cross function reentrancies:
	- Hypervisor.baseUpper (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#989)
	- Hypervisor.deposit(uint256,uint256,address) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1028-1073)
	- Hypervisor.getBasePosition() (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1304-1318)
	- Hypervisor.rebalance(int24,int24,int24,int24,address,int256) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1118-1193)
	- Hypervisor.withdraw(uint256,address,address) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1080-1108)
Reentrancy in Hypervisor.rebalance(int24,int24,int24,int24,address,int256) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1118-1193):
	External calls:
	- pool.burn(baseLower,baseUpper,0) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1134)
	- pool.burn(limitLower,limitUpper,0) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1138)
	- _burnLiquidity(baseLower,baseUpper,baseLiquidity,address(this),true) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1147)
		- (owed0,owed1) = pool.burn(tickLower,tickUpper,liquidity) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1221)
		- (amount0,amount1) = pool.collect(to,tickLower,tickUpper,collect0,collect1) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1227)
	- _burnLiquidity(limitLower,limitUpper,limitLiquidity,address(this),true) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1148)
		- (owed0,owed1) = pool.burn(tickLower,tickUpper,liquidity) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1221)
		- (amount0,amount1) = pool.collect(to,tickLower,tickUpper,collect0,collect1) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1227)
	- token0.safeTransfer(feeRecipient,fees0) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1151)
	- token1.safeTransfer(feeRecipient,fees1) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1152)
	- _mintLiquidity(baseLower,baseUpper,baseLiquidity,address(this)) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1182)
		- (amount0,amount1) = pool.mint(address(this),tickLower,tickUpper,liquidity,abi.encode(payer)) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1202-1208)
	- pool.swap(address(this),swapQuantity > 0,swapQuantity,TickMath.MIN_SQRT_RATIO + 1,abi.encode(address(this))) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1165-1171)
	- pool.swap(address(this),swapQuantity > 0,- swapQuantity,TickMath.MAX_SQRT_RATIO - 1,abi.encode(address(this))) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1165-1171)
	State variables written after the call(s):
	- limitLower = _limitLower (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1184)
	Hypervisor.limitLower (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#990) can be used in cross function reentrancies:
	- Hypervisor.deposit(uint256,uint256,address) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1028-1073)
	- Hypervisor.getLimitPosition() (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1325-1339)
	- Hypervisor.limitLower (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#990)
	- Hypervisor.rebalance(int24,int24,int24,int24,address,int256) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1118-1193)
	- Hypervisor.withdraw(uint256,address,address) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1080-1108)
	- limitUpper = _limitUpper (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1185)
	Hypervisor.limitUpper (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#991) can be used in cross function reentrancies:
	- Hypervisor.deposit(uint256,uint256,address) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1028-1073)
	- Hypervisor.getLimitPosition() (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1325-1339)
	- Hypervisor.limitUpper (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#991)
	- Hypervisor.rebalance(int24,int24,int24,int24,address,int256) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1118-1193)
	- Hypervisor.withdraw(uint256,address,address) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1080-1108)
Reentrancy in Hypervisor.withdraw(uint256,address,address) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1080-1108):
	External calls:
	- (base0,base1) = _burnLiquidity(baseLower,baseUpper,_liquidityForShares(baseLower,baseUpper,shares),to,false) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1089-1090)
		- (owed0,owed1) = pool.burn(tickLower,tickUpper,liquidity) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1221)
		- (amount0,amount1) = pool.collect(to,tickLower,tickUpper,collect0,collect1) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1227)
	- (limit0,limit1) = _burnLiquidity(limitLower,limitUpper,_liquidityForShares(limitLower,limitUpper,shares),to,false) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1091-1092)
		- (owed0,owed1) = pool.burn(tickLower,tickUpper,liquidity) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1221)
		- (amount0,amount1) = pool.collect(to,tickLower,tickUpper,collect0,collect1) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1227)
	- token0.safeTransfer(to,unusedAmount0) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1098)
	- token1.safeTransfer(to,unusedAmount1) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1099)
	State variables written after the call(s):
	- _burn(from,shares) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1105)
		- _totalSupply = _totalSupply.sub(amount) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#362)
	ERC20._totalSupply (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#147) can be used in cross function reentrancies:
	- ERC20._burn(address,uint256) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#356-364)
	- ERC20._mint(address,uint256) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#335-343)
	- ERC20.totalSupply() (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#203-205)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1
INFO:Detectors:
Hypervisor.appendList(address[]).i (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1409) is a local variable never initialized
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#uninitialized-local-variables
INFO:Detectors:
Hypervisor.deposit(uint256,uint256,address) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1028-1073) ignores return value by pool.burn(baseLower,baseUpper,0) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1043)
Hypervisor.deposit(uint256,uint256,address) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1028-1073) ignores return value by pool.burn(limitLower,limitUpper,0) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1047)
Hypervisor.rebalance(int24,int24,int24,int24,address,int256) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1118-1193) ignores return value by pool.burn(baseLower,baseUpper,0) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1134)
Hypervisor.rebalance(int24,int24,int24,int24,address,int256) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1118-1193) ignores return value by pool.burn(limitLower,limitUpper,0) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1138)
Hypervisor.rebalance(int24,int24,int24,int24,address,int256) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1118-1193) ignores return value by pool.swap(address(this),swapQuantity > 0,swapQuantity,TickMath.MIN_SQRT_RATIO + 1,abi.encode(address(this))) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1165-1171)
Hypervisor.rebalance(int24,int24,int24,int24,address,int256) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1118-1193) ignores return value by pool.swap(address(this),swapQuantity > 0,- swapQuantity,TickMath.MAX_SQRT_RATIO - 1,abi.encode(address(this))) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1165-1171)
Hypervisor.emergencyBurn(int24,int24,uint128) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1399-1406) ignores return value by pool.burn(tickLower,tickUpper,liquidity) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1404)
Hypervisor.emergencyBurn(int24,int24,uint128) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1399-1406) ignores return value by pool.collect(msg.sender,tickLower,tickUpper,type()(uint128).max,type()(uint128).max) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1405)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return
INFO:Detectors:
Hypervisor.constructor(address,address,string,string).name (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1007) shadows:
	- ERC20.name() (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#171-173) (function)
Hypervisor.constructor(address,address,string,string).symbol (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1008) shadows:
	- ERC20.symbol() (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#179-181) (function)
Hypervisor.withdraw(uint256,address,address).totalSupply (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1095) shadows:
	- ERC20.totalSupply() (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#203-205) (function)
	- IERC20.totalSupply() (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#16) (function)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing
INFO:Detectors:
Hypervisor.transferOwnership(address) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1418-1420) should emit an event for: 
	- owner = newOwner (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1419) 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-access-control
INFO:Detectors:
Hypervisor.setMaxTotalSupply(uint256) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1384-1386) should emit an event for: 
	- maxTotalSupply = _maxTotalSupply (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1385) 
Hypervisor.setDepositMax(uint256,uint256) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1390-1393) should emit an event for: 
	- deposit0Max = _deposit0Max (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1391) 
	- deposit1Max = _deposit1Max (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1392) 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-arithmetic
INFO:Detectors:
Hypervisor.constructor(address,address,string,string)._owner (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1006) lacks a zero-check on :
		- owner = _owner (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1016)
Hypervisor.transferOwnership(address).newOwner (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1418) lacks a zero-check on :
		- owner = newOwner (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1419)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation
INFO:Detectors:
Reentrancy in Hypervisor.deposit(uint256,uint256,address) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1028-1073):
	External calls:
	- pool.burn(baseLower,baseUpper,0) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1043)
	- pool.burn(limitLower,limitUpper,0) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1047)
	- token0.safeTransferFrom(msg.sender,address(this),deposit0) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1059)
	- token1.safeTransferFrom(msg.sender,address(this),deposit1) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1062)
	State variables written after the call(s):
	- _mint(to,shares) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1069)
		- _balances[account] = _balances[account].add(amount) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#341)
	- _mint(to,shares) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1069)
		- _totalSupply = _totalSupply.add(amount) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#340)
Reentrancy in Hypervisor.withdraw(uint256,address,address) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1080-1108):
	External calls:
	- (base0,base1) = _burnLiquidity(baseLower,baseUpper,_liquidityForShares(baseLower,baseUpper,shares),to,false) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1089-1090)
		- (owed0,owed1) = pool.burn(tickLower,tickUpper,liquidity) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1221)
		- (amount0,amount1) = pool.collect(to,tickLower,tickUpper,collect0,collect1) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1227)
	- (limit0,limit1) = _burnLiquidity(limitLower,limitUpper,_liquidityForShares(limitLower,limitUpper,shares),to,false) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1091-1092)
		- (owed0,owed1) = pool.burn(tickLower,tickUpper,liquidity) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1221)
		- (amount0,amount1) = pool.collect(to,tickLower,tickUpper,collect0,collect1) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1227)
	- token0.safeTransfer(to,unusedAmount0) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1098)
	- token1.safeTransfer(to,unusedAmount1) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1099)
	State variables written after the call(s):
	- _burn(from,shares) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1105)
		- _balances[account] = _balances[account].sub(amount,ERC20: burn amount exceeds balance) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#361)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2
INFO:Detectors:
Reentrancy in Hypervisor.deposit(uint256,uint256,address) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1028-1073):
	External calls:
	- pool.burn(baseLower,baseUpper,0) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1043)
	- pool.burn(limitLower,limitUpper,0) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1047)
	- token0.safeTransferFrom(msg.sender,address(this),deposit0) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1059)
	- token1.safeTransferFrom(msg.sender,address(this),deposit1) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1062)
	Event emitted after the call(s):
	- Deposit(msg.sender,to,shares,deposit0,deposit1) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1070)
	- Transfer(address(0),account,amount) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#342)
		- _mint(to,shares) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1069)
Reentrancy in Hypervisor.rebalance(int24,int24,int24,int24,address,int256) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1118-1193):
	External calls:
	- pool.burn(baseLower,baseUpper,0) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1134)
	- pool.burn(limitLower,limitUpper,0) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1138)
	- _burnLiquidity(baseLower,baseUpper,baseLiquidity,address(this),true) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1147)
		- (owed0,owed1) = pool.burn(tickLower,tickUpper,liquidity) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1221)
		- (amount0,amount1) = pool.collect(to,tickLower,tickUpper,collect0,collect1) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1227)
	- _burnLiquidity(limitLower,limitUpper,limitLiquidity,address(this),true) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1148)
		- (owed0,owed1) = pool.burn(tickLower,tickUpper,liquidity) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1221)
		- (amount0,amount1) = pool.collect(to,tickLower,tickUpper,collect0,collect1) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1227)
	- token0.safeTransfer(feeRecipient,fees0) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1151)
	- token1.safeTransfer(feeRecipient,fees1) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1152)
	Event emitted after the call(s):
	- Rebalance(currentTick(),token0.balanceOf(address(this)),token1.balanceOf(address(this)),fees0,fees1,totalSupply()) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1154-1161)
Reentrancy in Hypervisor.withdraw(uint256,address,address) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1080-1108):
	External calls:
	- (base0,base1) = _burnLiquidity(baseLower,baseUpper,_liquidityForShares(baseLower,baseUpper,shares),to,false) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1089-1090)
		- (owed0,owed1) = pool.burn(tickLower,tickUpper,liquidity) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1221)
		- (amount0,amount1) = pool.collect(to,tickLower,tickUpper,collect0,collect1) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1227)
	- (limit0,limit1) = _burnLiquidity(limitLower,limitUpper,_liquidityForShares(limitLower,limitUpper,shares),to,false) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1091-1092)
		- (owed0,owed1) = pool.burn(tickLower,tickUpper,liquidity) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1221)
		- (amount0,amount1) = pool.collect(to,tickLower,tickUpper,collect0,collect1) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1227)
	- token0.safeTransfer(to,unusedAmount0) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1098)
	- token1.safeTransfer(to,unusedAmount1) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1099)
	Event emitted after the call(s):
	- Transfer(account,address(0),amount) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#363)
		- _burn(from,shares) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1105)
	- Withdraw(from,to,shares,amount0,amount1) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1107)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3
INFO:Detectors:
TickMath.getTickAtSqrtRatio(uint160) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1897-2040) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1905-1909)
	- INLINE ASM (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1910-1914)
	- INLINE ASM (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1915-1919)
	- INLINE ASM (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1920-1924)
	- INLINE ASM (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1925-1929)
	- INLINE ASM (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1930-1934)
	- INLINE ASM (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1935-1939)
	- INLINE ASM (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1940-1943)
	- INLINE ASM (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1950-1955)
	- INLINE ASM (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1956-1961)
	- INLINE ASM (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1962-1967)
	- INLINE ASM (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1968-1973)
	- INLINE ASM (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1974-1979)
	- INLINE ASM (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1980-1985)
	- INLINE ASM (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1986-1991)
	- INLINE ASM (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1992-1997)
	- INLINE ASM (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1998-2003)
	- INLINE ASM (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#2004-2009)
	- INLINE ASM (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#2010-2015)
	- INLINE ASM (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#2016-2021)
	- INLINE ASM (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#2022-2027)
	- INLINE ASM (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#2028-2032)
FullMath.mulDiv(uint256,uint256,uint256) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#2056-2148) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#2068-2072)
	- INLINE ASM (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#2077-2079)
	- INLINE ASM (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#2094-2096)
	- INLINE ASM (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#2098-2101)
	- INLINE ASM (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#2108-2110)
	- INLINE ASM (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#2113-2115)
	- INLINE ASM (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#2119-2121)
Address.isContract(address) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#2415-2424) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#2422)
Address._verifyCallResult(bool,bytes,string) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#2560-2577) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#2569-2572)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage
INFO:Detectors:
Different versions of Solidity are used:
	- Version used: ['0.7.6', '>=0.4.0', '>=0.5.0', '>=0.6.0<0.8.0', '>=0.6.2<0.8.0']
	- 0.7.6 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#458)
	- 0.7.6 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#955)
	- 0.7.6 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#2307)
	- >=0.4.0 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#2044)
	- >=0.4.0 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#2581)
	- >=0.5.0 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#416)
	- >=0.5.0 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#435)
	- >=0.5.0 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#511)
	- >=0.5.0 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#547)
	- >=0.5.0 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#664)
	- >=0.5.0 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#705)
	- >=0.5.0 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#809)
	- >=0.5.0 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#833)
	- >=0.5.0 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1813)
	- >=0.5.0 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1838)
	- >=0.5.0 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#2169)
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#7)
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#85)
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#110)
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1430)
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1645)
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1738)
	- >=0.6.2<0.8.0 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#2392)
	- v2 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#2)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#different-pragma-directives-are-used
INFO:Detectors:
TickMath.getSqrtRatioAtTick(int24) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1859-1890) has a high cyclomatic complexity (24).
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#cyclomatic-complexity
INFO:Detectors:
Address.functionCall(address,bytes) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#2468-2470) is never used and should be removed
Address.functionCallWithValue(address,bytes,uint256) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#2493-2495) is never used and should be removed
Address.functionDelegateCall(address,bytes) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#2542-2544) is never used and should be removed
Address.functionDelegateCall(address,bytes,string) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#2552-2558) is never used and should be removed
Address.functionStaticCall(address,bytes) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#2518-2520) is never used and should be removed
Address.functionStaticCall(address,bytes,string) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#2528-2534) is never used and should be removed
Address.sendValue(address,uint256) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#2442-2448) is never used and should be removed
Context._msgData() (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#102-105) is never used and should be removed
ERC20._setupDecimals(uint8) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#394-396) is never used and should be removed
FullMath.mulDivRoundingUp(uint256,uint256,uint256) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#2155-2165) is never used and should be removed
SafeERC20.safeApprove(IERC20,address,uint256) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1772-1781) is never used and should be removed
SafeERC20.safeDecreaseAllowance(IERC20,address,uint256) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1788-1791) is never used and should be removed
SafeERC20.safeIncreaseAllowance(IERC20,address,uint256) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1783-1786) is never used and should be removed
SafeMath.div(uint256,uint256,string) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1617-1620) is never used and should be removed
SafeMath.mod(uint256,uint256) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1579-1582) is never used and should be removed
SafeMath.mod(uint256,uint256,string) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1637-1640) is never used and should be removed
SafeMath.tryAdd(uint256,uint256) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1451-1455) is never used and should be removed
SafeMath.tryDiv(uint256,uint256) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1487-1490) is never used and should be removed
SafeMath.tryMod(uint256,uint256) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1497-1500) is never used and should be removed
SafeMath.tryMul(uint256,uint256) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1472-1480) is never used and should be removed
SafeMath.trySub(uint256,uint256) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1462-1465) is never used and should be removed
SignedSafeMath.add(int256,int256) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1728-1733) is never used and should be removed
SignedSafeMath.div(int256,int256) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1692-1699) is never used and should be removed
SignedSafeMath.mul(int256,int256) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1664-1678) is never used and should be removed
SignedSafeMath.sub(int256,int256) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1711-1716) is never used and should be removed
TickMath.getTickAtSqrtRatio(uint160) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1897-2040) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code
INFO:Detectors:
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#7) is too complex
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#85) is too complex
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#110) is too complex
Pragma version>=0.5.0 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#416) allows old versions
Pragma version>=0.5.0 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#435) allows old versions
Pragma version0.7.6 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#458) allows old versions
Pragma version>=0.5.0 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#511) allows old versions
Pragma version>=0.5.0 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#547) allows old versions
Pragma version>=0.5.0 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#664) allows old versions
Pragma version>=0.5.0 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#705) allows old versions
Pragma version>=0.5.0 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#809) allows old versions
Pragma version>=0.5.0 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#833) allows old versions
Pragma version0.7.6 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#955) allows old versions
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1430) is too complex
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1645) is too complex
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1738) is too complex
Pragma version>=0.5.0 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1813) allows old versions
Pragma version>=0.5.0 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1838) allows old versions
Pragma version>=0.4.0 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#2044) allows old versions
Pragma version>=0.5.0 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#2169) allows old versions
Pragma version0.7.6 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#2307) allows old versions
Pragma version>=0.6.2<0.8.0 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#2392) is too complex
Pragma version>=0.4.0 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#2581) allows old versions
solc-0.7.6 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity
INFO:Detectors:
Low level call in Address.sendValue(address,uint256) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#2442-2448):
	- (success) = recipient.call{value: amount}() (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#2446)
Low level call in Address.functionCallWithValue(address,bytes,uint256,string) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#2503-2510):
	- (success,returndata) = target.call{value: value}(data) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#2508)
Low level call in Address.functionStaticCall(address,bytes,string) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#2528-2534):
	- (success,returndata) = target.staticcall(data) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#2532)
Low level call in Address.functionDelegateCall(address,bytes,string) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#2552-2558):
	- (success,returndata) = target.delegatecall(data) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#2556)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls
INFO:Detectors:
Parameter Hypervisor.rebalance(int24,int24,int24,int24,address,int256)._baseLower (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1119) is not in mixedCase
Parameter Hypervisor.rebalance(int24,int24,int24,int24,address,int256)._baseUpper (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1120) is not in mixedCase
Parameter Hypervisor.rebalance(int24,int24,int24,int24,address,int256)._limitLower (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1121) is not in mixedCase
Parameter Hypervisor.rebalance(int24,int24,int24,int24,address,int256)._limitUpper (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1122) is not in mixedCase
Parameter Hypervisor.setMaxTotalSupply(uint256)._maxTotalSupply (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1384) is not in mixedCase
Parameter Hypervisor.setDepositMax(uint256,uint256)._deposit0Max (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1390) is not in mixedCase
Parameter Hypervisor.setDepositMax(uint256,uint256)._deposit1Max (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1390) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions
INFO:Detectors:
Redundant expression "this (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#103)" inContext (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#97-106)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#redundant-statements
INFO:Detectors:
Variable IUniswapV3MintCallback.uniswapV3MintCallback(uint256,uint256,bytes).amount0Owed (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#428) is too similar to IUniswapV3MintCallback.uniswapV3MintCallback(uint256,uint256,bytes).amount1Owed (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#429)
Variable IUniswapV3SwapCallback.uniswapV3SwapCallback(int256,int256,bytes).amount0Delta (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#450) is too similar to IUniswapV3SwapCallback.uniswapV3SwapCallback(int256,int256,bytes).amount1Delta (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#451)
Variable IUniswapV3PoolState.positions(bytes32).feeGrowthInside0LastX128 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#638) is too similar to IUniswapV3PoolState.positions(bytes32).feeGrowthInside1LastX128 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#639)
Variable IUniswapV3PoolState.ticks(int24).feeGrowthOutside0X128 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#615) is too similar to IUniswapV3PoolState.ticks(int24).feeGrowthOutside1X128 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#616)
Variable IUniswapV3PoolState.positions(bytes32).tokensOwed0 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#640) is too similar to IUniswapV3PoolState.positions(bytes32).tokensOwed1 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#641)
Variable IUniswapV3PoolActions.collect(address,int24,int24,uint128,uint128).amount0Requested (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#750) is too similar to IUniswapV3PoolActions.collect(address,int24,int24,uint128,uint128).amount1Requested (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#751)
Variable IUniswapV3PoolOwnerActions.collectProtocol(address,uint128,uint128).amount0Requested (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#827) is too similar to IUniswapV3PoolOwnerActions.collectProtocol(address,uint128,uint128).amount1Requested (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#828)
Variable IUniswapV3PoolOwnerActions.setFeeProtocol(uint8,uint8).feeProtocol0 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#817) is too similar to IUniswapV3PoolOwnerActions.setFeeProtocol(uint8,uint8).feeProtocol1 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#817)
Variable Hypervisor.setDepositMax(uint256,uint256)._deposit0Max (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1390) is too similar to Hypervisor.setDepositMax(uint256,uint256)._deposit1Max (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1390)
Variable Hypervisor.uniswapV3SwapCallback(int256,int256,bytes).amount0Delta (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1268) is too similar to IUniswapV3SwapCallback.uniswapV3SwapCallback(int256,int256,bytes).amount1Delta (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#451)
Variable Hypervisor.uniswapV3SwapCallback(int256,int256,bytes).amount0Delta (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1268) is too similar to Hypervisor.uniswapV3SwapCallback(int256,int256,bytes).amount1Delta (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1269)
Variable IUniswapV3SwapCallback.uniswapV3SwapCallback(int256,int256,bytes).amount0Delta (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#450) is too similar to Hypervisor.uniswapV3SwapCallback(int256,int256,bytes).amount1Delta (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1269)
Variable Hypervisor.deposit0Max (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#994) is too similar to Hypervisor.deposit1Max (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#995)
Variable Hypervisor._position(int24,int24).tokensOwed0 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1244) is too similar to Hypervisor.getBasePosition().tokensOwed1 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1313)
Variable Hypervisor.getBasePosition().tokensOwed0 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1313) is too similar to Hypervisor.getBasePosition().tokensOwed1 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1313)
Variable Hypervisor.getLimitPosition().tokensOwed0 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1334) is too similar to Hypervisor.getBasePosition().tokensOwed1 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1313)
Variable Hypervisor._position(int24,int24).tokensOwed0 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1244) is too similar to Hypervisor.getLimitPosition().tokensOwed1 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1334)
Variable Hypervisor._position(int24,int24).tokensOwed0 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1244) is too similar to Hypervisor._position(int24,int24).tokensOwed1 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1244)
Variable Hypervisor.getLimitPosition().tokensOwed0 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1334) is too similar to Hypervisor.getLimitPosition().tokensOwed1 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1334)
Variable Hypervisor.getBasePosition().tokensOwed0 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1313) is too similar to Hypervisor._position(int24,int24).tokensOwed1 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1244)
Variable Hypervisor.getLimitPosition().tokensOwed0 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1334) is too similar to Hypervisor._position(int24,int24).tokensOwed1 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1244)
Variable Hypervisor.getBasePosition().tokensOwed0 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1313) is too similar to Hypervisor.getLimitPosition().tokensOwed1 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1334)
Variable Hypervisor.withdraw(uint256,address,address).unusedAmount0 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1096) is too similar to Hypervisor.withdraw(uint256,address,address).unusedAmount1 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1097)
Variable IUniswapV3PoolActions.collect(address,int24,int24,uint128,uint128).amount0Requested (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#750) is too similar to IUniswapV3PoolOwnerActions.collectProtocol(address,uint128,uint128).amount1Requested (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#828)
Variable IUniswapV3PoolOwnerActions.collectProtocol(address,uint128,uint128).amount0Requested (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#827) is too similar to IUniswapV3PoolActions.collect(address,int24,int24,uint128,uint128).amount1Requested (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#751)
Variable LiquidityAmounts.getAmount1ForLiquidity(uint160,uint160,uint128).sqrtRatioAX96 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#2270) is too similar to LiquidityAmounts.getLiquidityForAmount0(uint160,uint160,uint256).sqrtRatioBX96 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#2192)
Variable LiquidityAmounts.getAmount1ForLiquidity(uint160,uint160,uint128).sqrtRatioAX96 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#2270) is too similar to LiquidityAmounts.getAmount0ForLiquidity(uint160,uint160,uint128).sqrtRatioBX96 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#2251)
Variable LiquidityAmounts.getLiquidityForAmount1(uint160,uint160,uint256).sqrtRatioAX96 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#2207) is too similar to LiquidityAmounts.getLiquidityForAmount1(uint160,uint160,uint256).sqrtRatioBX96 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#2208)
Variable LiquidityAmounts.getAmount1ForLiquidity(uint160,uint160,uint128).sqrtRatioAX96 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#2270) is too similar to LiquidityAmounts.getLiquidityForAmount1(uint160,uint160,uint256).sqrtRatioBX96 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#2208)
Variable LiquidityAmounts.getLiquidityForAmount1(uint160,uint160,uint256).sqrtRatioAX96 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#2207) is too similar to LiquidityAmounts.getAmountsForLiquidity(uint160,uint160,uint160,uint128).sqrtRatioBX96 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#2290)
Variable LiquidityAmounts.getAmount0ForLiquidity(uint160,uint160,uint128).sqrtRatioAX96 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#2250) is too similar to LiquidityAmounts.getAmountsForLiquidity(uint160,uint160,uint160,uint128).sqrtRatioBX96 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#2290)
Variable LiquidityAmounts.getAmount1ForLiquidity(uint160,uint160,uint128).sqrtRatioAX96 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#2270) is too similar to LiquidityAmounts.getAmountsForLiquidity(uint160,uint160,uint160,uint128).sqrtRatioBX96 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#2290)
Variable LiquidityAmounts.getLiquidityForAmount0(uint160,uint160,uint256).sqrtRatioAX96 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#2191) is too similar to LiquidityAmounts.getLiquidityForAmount0(uint160,uint160,uint256).sqrtRatioBX96 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#2192)
Variable LiquidityAmounts.getAmountsForLiquidity(uint160,uint160,uint160,uint128).sqrtRatioAX96 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#2289) is too similar to LiquidityAmounts.getLiquidityForAmount0(uint160,uint160,uint256).sqrtRatioBX96 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#2192)
Variable LiquidityAmounts.getAmount0ForLiquidity(uint160,uint160,uint128).sqrtRatioAX96 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#2250) is too similar to LiquidityAmounts.getLiquidityForAmount0(uint160,uint160,uint256).sqrtRatioBX96 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#2192)
Variable LiquidityAmounts.getLiquidityForAmount1(uint160,uint160,uint256).sqrtRatioAX96 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#2207) is too similar to LiquidityAmounts.getLiquidityForAmount0(uint160,uint160,uint256).sqrtRatioBX96 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#2192)
Variable LiquidityAmounts.getAmount1ForLiquidity(uint160,uint160,uint128).sqrtRatioAX96 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#2270) is too similar to LiquidityAmounts.getAmount1ForLiquidity(uint160,uint160,uint128).sqrtRatioBX96 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#2271)
Variable LiquidityAmounts.getLiquidityForAmount1(uint160,uint160,uint256).sqrtRatioAX96 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#2207) is too similar to LiquidityAmounts.getAmount0ForLiquidity(uint160,uint160,uint128).sqrtRatioBX96 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#2251)
Variable LiquidityAmounts.getAmount0ForLiquidity(uint160,uint160,uint128).sqrtRatioAX96 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#2250) is too similar to LiquidityAmounts.getAmount0ForLiquidity(uint160,uint160,uint128).sqrtRatioBX96 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#2251)
Variable LiquidityAmounts.getLiquidityForAmount1(uint160,uint160,uint256).sqrtRatioAX96 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#2207) is too similar to LiquidityAmounts.getLiquidityForAmounts(uint160,uint160,uint160,uint256,uint256).sqrtRatioBX96 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#2226)
Variable LiquidityAmounts.getAmountsForLiquidity(uint160,uint160,uint160,uint128).sqrtRatioAX96 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#2289) is too similar to LiquidityAmounts.getAmountsForLiquidity(uint160,uint160,uint160,uint128).sqrtRatioBX96 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#2290)
Variable LiquidityAmounts.getLiquidityForAmount1(uint160,uint160,uint256).sqrtRatioAX96 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#2207) is too similar to LiquidityAmounts.getAmount1ForLiquidity(uint160,uint160,uint128).sqrtRatioBX96 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#2271)
Variable LiquidityAmounts.getAmountsForLiquidity(uint160,uint160,uint160,uint128).sqrtRatioAX96 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#2289) is too similar to LiquidityAmounts.getAmount0ForLiquidity(uint160,uint160,uint128).sqrtRatioBX96 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#2251)
Variable LiquidityAmounts.getAmountsForLiquidity(uint160,uint160,uint160,uint128).sqrtRatioAX96 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#2289) is too similar to LiquidityAmounts.getLiquidityForAmount1(uint160,uint160,uint256).sqrtRatioBX96 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#2208)
Variable LiquidityAmounts.getAmountsForLiquidity(uint160,uint160,uint160,uint128).sqrtRatioAX96 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#2289) is too similar to LiquidityAmounts.getLiquidityForAmounts(uint160,uint160,uint160,uint256,uint256).sqrtRatioBX96 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#2226)
Variable LiquidityAmounts.getLiquidityForAmounts(uint160,uint160,uint160,uint256,uint256).sqrtRatioAX96 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#2225) is too similar to LiquidityAmounts.getAmountsForLiquidity(uint160,uint160,uint160,uint128).sqrtRatioBX96 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#2290)
Variable LiquidityAmounts.getLiquidityForAmounts(uint160,uint160,uint160,uint256,uint256).sqrtRatioAX96 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#2225) is too similar to LiquidityAmounts.getLiquidityForAmount0(uint160,uint160,uint256).sqrtRatioBX96 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#2192)
Variable LiquidityAmounts.getAmountsForLiquidity(uint160,uint160,uint160,uint128).sqrtRatioAX96 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#2289) is too similar to LiquidityAmounts.getAmount1ForLiquidity(uint160,uint160,uint128).sqrtRatioBX96 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#2271)
Variable LiquidityAmounts.getLiquidityForAmounts(uint160,uint160,uint160,uint256,uint256).sqrtRatioAX96 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#2225) is too similar to LiquidityAmounts.getAmount0ForLiquidity(uint160,uint160,uint128).sqrtRatioBX96 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#2251)
Variable LiquidityAmounts.getLiquidityForAmounts(uint160,uint160,uint160,uint256,uint256).sqrtRatioAX96 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#2225) is too similar to LiquidityAmounts.getLiquidityForAmount1(uint160,uint160,uint256).sqrtRatioBX96 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#2208)
Variable LiquidityAmounts.getLiquidityForAmounts(uint160,uint160,uint160,uint256,uint256).sqrtRatioAX96 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#2225) is too similar to LiquidityAmounts.getAmount1ForLiquidity(uint160,uint160,uint128).sqrtRatioBX96 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#2271)
Variable LiquidityAmounts.getLiquidityForAmounts(uint160,uint160,uint160,uint256,uint256).sqrtRatioAX96 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#2225) is too similar to LiquidityAmounts.getLiquidityForAmounts(uint160,uint160,uint160,uint256,uint256).sqrtRatioBX96 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#2226)
Variable LiquidityAmounts.getLiquidityForAmount0(uint160,uint160,uint256).sqrtRatioAX96 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#2191) is too similar to LiquidityAmounts.getAmountsForLiquidity(uint160,uint160,uint160,uint128).sqrtRatioBX96 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#2290)
Variable LiquidityAmounts.getAmount1ForLiquidity(uint160,uint160,uint128).sqrtRatioAX96 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#2270) is too similar to LiquidityAmounts.getLiquidityForAmounts(uint160,uint160,uint160,uint256,uint256).sqrtRatioBX96 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#2226)
Variable LiquidityAmounts.getLiquidityForAmount0(uint160,uint160,uint256).sqrtRatioAX96 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#2191) is too similar to LiquidityAmounts.getAmount0ForLiquidity(uint160,uint160,uint128).sqrtRatioBX96 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#2251)
Variable LiquidityAmounts.getLiquidityForAmount0(uint160,uint160,uint256).sqrtRatioAX96 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#2191) is too similar to LiquidityAmounts.getLiquidityForAmount1(uint160,uint160,uint256).sqrtRatioBX96 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#2208)
Variable LiquidityAmounts.getAmount0ForLiquidity(uint160,uint160,uint128).sqrtRatioAX96 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#2250) is too similar to LiquidityAmounts.getLiquidityForAmount1(uint160,uint160,uint256).sqrtRatioBX96 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#2208)
Variable LiquidityAmounts.getLiquidityForAmount0(uint160,uint160,uint256).sqrtRatioAX96 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#2191) is too similar to LiquidityAmounts.getLiquidityForAmounts(uint160,uint160,uint160,uint256,uint256).sqrtRatioBX96 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#2226)
Variable LiquidityAmounts.getLiquidityForAmount0(uint160,uint160,uint256).sqrtRatioAX96 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#2191) is too similar to LiquidityAmounts.getAmount1ForLiquidity(uint160,uint160,uint128).sqrtRatioBX96 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#2271)
Variable LiquidityAmounts.getAmount0ForLiquidity(uint160,uint160,uint128).sqrtRatioAX96 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#2250) is too similar to LiquidityAmounts.getAmount1ForLiquidity(uint160,uint160,uint128).sqrtRatioBX96 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#2271)
Variable LiquidityAmounts.getAmount0ForLiquidity(uint160,uint160,uint128).sqrtRatioAX96 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#2250) is too similar to LiquidityAmounts.getLiquidityForAmounts(uint160,uint160,uint160,uint256,uint256).sqrtRatioBX96 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#2226)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#variable-names-too-similar
INFO:Detectors:
TickMath.getSqrtRatioAtTick(int24) (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1859-1890) uses literals with too many digits:
	- ratio = 0x100000000000000000000000000000000 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#1863)
FixedPoint96.slitherConstructorConstantVariables() (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#2586-2589) uses literals with too many digits:
	- Q96 = 0x1000000000000000000000000 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#2588)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits
INFO:Detectors:
Hypervisor.fee (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#985) should be immutable 
Hypervisor.pool (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#982) should be immutable 
Hypervisor.tickSpacing (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#986) should be immutable 
Hypervisor.token0 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#983) should be immutable 
Hypervisor.token1 (../../sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol#984) should be immutable 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-immutable
INFO:Slither:/bdata2/sc/dataset/mainnet/0x0d3fbebfdd96940952618598a5f012de7240c552.sol analyzed (23 contracts with 85 detectors), 173 result(s) found
