Compilation warnings/errors on /bdata2/sc/dataset/mainnet/0x67aEe3454d5F82344d58021179830A3bb2245C11.sol:
Warning: This contract has a payable fallback function, but no receive ether function. Consider adding a receive ether function.
   --> /bdata2/sc/dataset/mainnet/0x67aEe3454d5F82344d58021179830A3bb2245C11.sol:174:1:
    |
174 | contract PremiaPBC is Ownable, ReentrancyGuard {
    | ^ (Relevant source part starts here and spans across multiple lines).
Note: The payable fallback function is defined here.
   --> /bdata2/sc/dataset/mainnet/0x67aEe3454d5F82344d58021179830A3bb2245C11.sol:250:5:
    |
250 |     fallback() external payable {
    |     ^ (Relevant source part starts here and spans across multiple lines).

Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it "abstract" is sufficient.
  --> /bdata2/sc/dataset/mainnet/0x67aEe3454d5F82344d58021179830A3bb2245C11.sol:65:5:
   |
65 |     constructor () internal {
   |     ^ (Relevant source part starts here and spans across multiple lines).

Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it "abstract" is sufficient.
   --> /bdata2/sc/dataset/mainnet/0x67aEe3454d5F82344d58021179830A3bb2245C11.sol:116:5:
    |
116 |     constructor () internal {
    |     ^ (Relevant source part starts here and spans across multiple lines).


INFO:Detectors:
PremiaPBC.collect() (../../sc/dataset/mainnet/0x67aEe3454d5F82344d58021179830A3bb2245C11.sol#271-281) performs a multiplication on the result of a division:
	- contribution = amountDeposited[msg.sender].mul(1e12).div(ethTotal) (../../sc/dataset/mainnet/0x67aEe3454d5F82344d58021179830A3bb2245C11.sol#277)
	- premiaAmount = premiaTotal.mul(contribution).div(1e12) (../../sc/dataset/mainnet/0x67aEe3454d5F82344d58021179830A3bb2245C11.sol#278)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#divide-before-multiply
INFO:Detectors:
PremiaPBC.addPremia(uint256) (../../sc/dataset/mainnet/0x67aEe3454d5F82344d58021179830A3bb2245C11.sol#232-237) should emit an event for: 
	- premiaTotal = premiaTotal.add(_amount) (../../sc/dataset/mainnet/0x67aEe3454d5F82344d58021179830A3bb2245C11.sol#236) 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-arithmetic
INFO:Detectors:
PremiaPBC.constructor(IERC20,uint256,uint256,address)._treasury (../../sc/dataset/mainnet/0x67aEe3454d5F82344d58021179830A3bb2245C11.sol#214) lacks a zero-check on :
		- treasury = _treasury (../../sc/dataset/mainnet/0x67aEe3454d5F82344d58021179830A3bb2245C11.sol#219)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation
INFO:Detectors:
Reentrancy in PremiaPBC.addPremia(uint256) (../../sc/dataset/mainnet/0x67aEe3454d5F82344d58021179830A3bb2245C11.sol#232-237):
	External calls:
	- premia.safeTransferFrom(msg.sender,address(this),_amount) (../../sc/dataset/mainnet/0x67aEe3454d5F82344d58021179830A3bb2245C11.sol#235)
	State variables written after the call(s):
	- premiaTotal = premiaTotal.add(_amount) (../../sc/dataset/mainnet/0x67aEe3454d5F82344d58021179830A3bb2245C11.sol#236)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2
INFO:Detectors:
Address.isContract(address) (../../sc/dataset/mainnet/0x67aEe3454d5F82344d58021179830A3bb2245C11.sol#653-662) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0x67aEe3454d5F82344d58021179830A3bb2245C11.sol#660)
Address._verifyCallResult(bool,bytes,string) (../../sc/dataset/mainnet/0x67aEe3454d5F82344d58021179830A3bb2245C11.sol#774-791) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0x67aEe3454d5F82344d58021179830A3bb2245C11.sol#783-786)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage
INFO:Detectors:
PremiaPBC.collect() (../../sc/dataset/mainnet/0x67aEe3454d5F82344d58021179830A3bb2245C11.sol#271-281) compares to a boolean constant:
	-require(bool,string)(hasCollected[msg.sender] == false,Address already collected its reward) (../../sc/dataset/mainnet/0x67aEe3454d5F82344d58021179830A3bb2245C11.sol#273)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#boolean-equality
INFO:Detectors:
Different versions of Solidity are used:
	- Version used: ['>=0.6.0<0.8.0', '>=0.6.2<0.8.0', '^0.7.0']
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x67aEe3454d5F82344d58021179830A3bb2245C11.sol#6)
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x67aEe3454d5F82344d58021179830A3bb2245C11.sol#30)
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x67aEe3454d5F82344d58021179830A3bb2245C11.sol#93)
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x67aEe3454d5F82344d58021179830A3bb2245C11.sol#316)
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x67aEe3454d5F82344d58021179830A3bb2245C11.sol#476)
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x67aEe3454d5F82344d58021179830A3bb2245C11.sol#552)
	- >=0.6.2<0.8.0 (../../sc/dataset/mainnet/0x67aEe3454d5F82344d58021179830A3bb2245C11.sol#630)
	- ^0.7.0 (../../sc/dataset/mainnet/0x67aEe3454d5F82344d58021179830A3bb2245C11.sol#161)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#different-pragma-directives-are-used
INFO:Detectors:
Address.functionCall(address,bytes) (../../sc/dataset/mainnet/0x67aEe3454d5F82344d58021179830A3bb2245C11.sol#706-708) is never used and should be removed
Address.functionCallWithValue(address,bytes,uint256) (../../sc/dataset/mainnet/0x67aEe3454d5F82344d58021179830A3bb2245C11.sol#731-733) is never used and should be removed
Address.functionStaticCall(address,bytes) (../../sc/dataset/mainnet/0x67aEe3454d5F82344d58021179830A3bb2245C11.sol#756-758) is never used and should be removed
Address.functionStaticCall(address,bytes,string) (../../sc/dataset/mainnet/0x67aEe3454d5F82344d58021179830A3bb2245C11.sol#766-772) is never used and should be removed
Address.sendValue(address,uint256) (../../sc/dataset/mainnet/0x67aEe3454d5F82344d58021179830A3bb2245C11.sol#680-686) is never used and should be removed
Context._msgData() (../../sc/dataset/mainnet/0x67aEe3454d5F82344d58021179830A3bb2245C11.sol#23-26) is never used and should be removed
SafeERC20.safeApprove(IERC20,address,uint256) (../../sc/dataset/mainnet/0x67aEe3454d5F82344d58021179830A3bb2245C11.sol#510-519) is never used and should be removed
SafeERC20.safeDecreaseAllowance(IERC20,address,uint256) (../../sc/dataset/mainnet/0x67aEe3454d5F82344d58021179830A3bb2245C11.sol#526-529) is never used and should be removed
SafeERC20.safeIncreaseAllowance(IERC20,address,uint256) (../../sc/dataset/mainnet/0x67aEe3454d5F82344d58021179830A3bb2245C11.sol#521-524) is never used and should be removed
SafeMath.mod(uint256,uint256) (../../sc/dataset/mainnet/0x67aEe3454d5F82344d58021179830A3bb2245C11.sol#452-454) is never used and should be removed
SafeMath.mod(uint256,uint256,string) (../../sc/dataset/mainnet/0x67aEe3454d5F82344d58021179830A3bb2245C11.sol#468-471) is never used and should be removed
SafeMath.sub(uint256,uint256) (../../sc/dataset/mainnet/0x67aEe3454d5F82344d58021179830A3bb2245C11.sol#359-361) is never used and should be removed
SafeMath.sub(uint256,uint256,string) (../../sc/dataset/mainnet/0x67aEe3454d5F82344d58021179830A3bb2245C11.sol#373-378) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code
INFO:Detectors:
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x67aEe3454d5F82344d58021179830A3bb2245C11.sol#6) is too complex
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x67aEe3454d5F82344d58021179830A3bb2245C11.sol#30) is too complex
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x67aEe3454d5F82344d58021179830A3bb2245C11.sol#93) is too complex
Pragma version^0.7.0 (../../sc/dataset/mainnet/0x67aEe3454d5F82344d58021179830A3bb2245C11.sol#161) allows old versions
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x67aEe3454d5F82344d58021179830A3bb2245C11.sol#316) is too complex
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x67aEe3454d5F82344d58021179830A3bb2245C11.sol#476) is too complex
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x67aEe3454d5F82344d58021179830A3bb2245C11.sol#552) is too complex
Pragma version>=0.6.2<0.8.0 (../../sc/dataset/mainnet/0x67aEe3454d5F82344d58021179830A3bb2245C11.sol#630) is too complex
solc-0.7.6 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity
INFO:Detectors:
Low level call in Address.sendValue(address,uint256) (../../sc/dataset/mainnet/0x67aEe3454d5F82344d58021179830A3bb2245C11.sol#680-686):
	- (success) = recipient.call{value: amount}() (../../sc/dataset/mainnet/0x67aEe3454d5F82344d58021179830A3bb2245C11.sol#684)
Low level call in Address.functionCallWithValue(address,bytes,uint256,string) (../../sc/dataset/mainnet/0x67aEe3454d5F82344d58021179830A3bb2245C11.sol#741-748):
	- (success,returndata) = target.call{value: value}(data) (../../sc/dataset/mainnet/0x67aEe3454d5F82344d58021179830A3bb2245C11.sol#746)
Low level call in Address.functionStaticCall(address,bytes,string) (../../sc/dataset/mainnet/0x67aEe3454d5F82344d58021179830A3bb2245C11.sol#766-772):
	- (success,returndata) = target.staticcall(data) (../../sc/dataset/mainnet/0x67aEe3454d5F82344d58021179830A3bb2245C11.sol#770)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls
INFO:Detectors:
Parameter PremiaPBC.addPremia(uint256)._amount (../../sc/dataset/mainnet/0x67aEe3454d5F82344d58021179830A3bb2245C11.sol#232) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions
INFO:Detectors:
Redundant expression "this (../../sc/dataset/mainnet/0x67aEe3454d5F82344d58021179830A3bb2245C11.sol#24)" inContext (../../sc/dataset/mainnet/0x67aEe3454d5F82344d58021179830A3bb2245C11.sol#18-27)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#redundant-statements
INFO:Detectors:
PremiaPBC.endBlock (../../sc/dataset/mainnet/0x67aEe3454d5F82344d58021179830A3bb2245C11.sol#184) should be immutable 
PremiaPBC.premia (../../sc/dataset/mainnet/0x67aEe3454d5F82344d58021179830A3bb2245C11.sol#179) should be immutable 
PremiaPBC.startBlock (../../sc/dataset/mainnet/0x67aEe3454d5F82344d58021179830A3bb2245C11.sol#182) should be immutable 
PremiaPBC.treasury (../../sc/dataset/mainnet/0x67aEe3454d5F82344d58021179830A3bb2245C11.sol#192) should be immutable 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-immutable
INFO:Slither:/bdata2/sc/dataset/mainnet/0x67aEe3454d5F82344d58021179830A3bb2245C11.sol analyzed (8 contracts with 85 detectors), 39 result(s) found
