Compilation warnings/errors on /bdata2/sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol:
Warning: Contract code size exceeds 24576 bytes (a limit introduced in Spurious Dragon). This contract may not be deployable on mainnet. Consider enabling the optimizer (with a low "runs" value!), turning off revert strings, or using libraries.
    --> /bdata2/sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol:1608:1:
     |
1608 | contract PaladinFutureVault is HybridFutureVault {
     | ^ (Relevant source part starts here and spans across multiple lines).


INFO:Detectors:
Reentrancy in HybridFutureVault._withdraw(address,uint256) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#1488-1493):
	External calls:
	- super._withdraw(_user,_amount) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#1490)
		- returndata = address(token).functionCall(data,SafeERC20: low-level call failed) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#1911)
		- pt.mint(_user,_preparePTClaim(_user)) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#666)
		- (success,returndata) = target.call{value: value}(data) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#2857)
		- ibt.safeTransfer(_user,fundsToBeUnlocked.add(yieldToBeRedeemed).add(premiumToBeUnlocked)) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#757)
		- ibt.safeTransfer(registry.getTreasuryAddress(),treasuryFee) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#760)
		- pt.burnFrom(_user,_amount) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#763)
	External calls sending eth:
	- super._withdraw(_user,_amount) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#1490)
		- (success,returndata) = target.call{value: value}(data) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#2857)
	State variables written after the call(s):
	- scaledTotals[currentPeriodIndex] = scaledTotals[currentPeriodIndex].sub(scaledAmountToRemove) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#1492)
	HybridFutureVault.scaledTotals (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#1459) can be used in cross function reentrancies:
	- HybridFutureVault.deposit(address,uint256) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#1467-1480)
	- HybridFutureVault.getPTPerAmountDeposited(uint256) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#1525-1532)
Reentrancy in RateFutureVault.startNewPeriod() (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#1307-1311):
	External calls:
	- _switchPeriod() (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#1309)
		- returndata = address(token).functionCall(data,SafeERC20: low-level call failed) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#1911)
		- newToken = IFutureYieldToken(ITokensFactory(registry.getTokensFactoryAddress()).deployNextFutureYieldToken(newPeriodIndex)) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#921-923)
		- (success,returndata) = target.call{value: value}(data) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#2857)
		- futureWallet.registerExpiredFuture(collectedYield) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#635)
		- ibt.safeTransfer(registry.getTreasuryAddress(),performanceFee) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#637)
		- ibt.safeTransfer(address(futureWallet),collectedYield) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#638)
		- futureWallet.registerExpiredFuture(0) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#640)
	External calls sending eth:
	- _switchPeriod() (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#1309)
		- (success,returndata) = target.call{value: value}(data) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#2857)
	State variables written after the call(s):
	- IBTRates[getCurrentPeriodIndex()] = getIBTRate() (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#1310)
	RateFutureVault.IBTRates (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#1282) can be used in cross function reentrancies:
	- RateFutureVault.getPTPerAmountDeposited(uint256) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#1362-1364)
	- RateFutureVault.getUnrealisedYieldPerPT() (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#1342-1349)
	- RateFutureVault.initialize(IController,IERC20,uint256,string,address) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#1292-1301)
Reentrancy in FutureVault.withdraw(address,uint256) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#720-740):
	External calls:
	- _withdraw(_user,_amount) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#723)
		- returndata = address(token).functionCall(data,SafeERC20: low-level call failed) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#1911)
		- pt.mint(_user,_preparePTClaim(_user)) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#666)
		- (success,returndata) = target.call{value: value}(data) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#2857)
		- ibt.safeTransfer(_user,fundsToBeUnlocked.add(yieldToBeRedeemed).add(premiumToBeUnlocked)) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#757)
		- ibt.safeTransfer(registry.getTreasuryAddress(),treasuryFee) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#760)
		- pt.burnFrom(_user,_amount) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#763)
	External calls sending eth:
	- _withdraw(_user,_amount) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#723)
		- (success,returndata) = target.call{value: value}(data) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#2857)
	State variables written after the call(s):
	- claimableFYTByUser[_user] = claimableFYTByUser[_user].sub(ClaimableFYTsToBurn,FutureVault: ERR_AMOUNT) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#731)
	FutureVault.claimableFYTByUser (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#497) can be used in cross function reentrancies:
	- FutureVault._deposit(address,uint256) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#696-712)
	- FutureVault._preparePTClaim(address) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#671-682)
	- FutureVault.getClaimableFYTForPeriod(address,uint256) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#969-979)
	- FutureVault.getClaimablePT(address) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#934-952)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities
INFO:Detectors:
FutureVault._switchPeriod() (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#618-654) performs a multiplication on the result of a division:
	- yield = getUnrealisedYieldPerPT().mul(totalUnderlyingDeposited) / IBT_UNIT (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#620)
	- performanceFee = (yield.mul(performanceFeeFactor) / UNIT).sub(premiums) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#626)
FutureVault._withdraw(address,uint256) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#748-764) performs a multiplication on the result of a division:
	- yieldToBeUnlocked = _amount.mul(getUnrealisedYieldPerPT()) / IBT_UNIT (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#751)
	- treasuryFee = (yieldToBeUnlocked.mul(performanceFeeFactor) / UNIT).sub(premiumToBeUnlocked) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#755)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#divide-before-multiply
INFO:Detectors:
FutureVault.getPremiumPerUnderlyingDeposited(uint256) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#999-1006) uses a dangerous strict equality:
	- totalUnderlyingDeposited == 0 (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#1000)
HybridFutureVault.getUnrealisedYieldPerPT() (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#1512-1518) uses a dangerous strict equality:
	- totalUnderlyingAtStart == 0 (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#1514)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dangerous-strict-equalities
INFO:Detectors:
Reentrancy in FutureVault._switchPeriod() (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#618-654):
	External calls:
	- futureWallet.registerExpiredFuture(collectedYield) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#635)
	- ibt.safeTransfer(registry.getTreasuryAddress(),performanceFee) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#637)
	- ibt.safeTransfer(address(futureWallet),collectedYield) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#638)
	- futureWallet.registerExpiredFuture(0) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#640)
	State variables written after the call(s):
	- terminated = true (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#649)
	FutureVault.terminated (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#501) can be used in cross function reentrancies:
	- FutureVault.isTerminated() (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#1102-1104)
	- FutureVault.periodsActive() (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#550-553)
	- totalUnderlyingDeposited = totalUnderlyingDeposited.add(convertIBTToUnderlying(reinvestedYield)) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#644)
	FutureVault.totalUnderlyingDeposited (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#499) can be used in cross function reentrancies:
	- FutureVault._deposit(address,uint256) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#696-712)
	- FutureVault.getPremiumPerUnderlyingDeposited(uint256) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#999-1006)
	- FutureVault.getTotalUnderlyingDeposited() (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#1053-1055)
Reentrancy in FutureVault._switchPeriod() (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#618-654):
	External calls:
	- futureWallet.registerExpiredFuture(collectedYield) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#635)
	- ibt.safeTransfer(registry.getTreasuryAddress(),performanceFee) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#637)
	- ibt.safeTransfer(address(futureWallet),collectedYield) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#638)
	- futureWallet.registerExpiredFuture(0) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#640)
	- _deployNewFutureYieldToken(nextPeriodID) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#646)
		- newToken = IFutureYieldToken(ITokensFactory(registry.getTokensFactoryAddress()).deployNextFutureYieldToken(newPeriodIndex)) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#921-923)
	State variables written after the call(s):
	- _deployNewFutureYieldToken(nextPeriodID) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#646)
		- fyts.push(newToken) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#924)
	FutureVault.fyts (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#504) can be used in cross function reentrancies:
	- FutureVault.getCurrentPeriodIndex() (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#1045-1047)
	- FutureVault.getFYTofPeriod(uint256) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#1094-1096)
	- FutureVault.getNextPeriodIndex() (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#1036-1038)
	- FutureVault.initialize(IController,IERC20,uint256,string,address) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#577-608)
	- performanceFeeFactor = nextPerformanceFeeFactor (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#653)
	FutureVault.performanceFeeFactor (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#502) can be used in cross function reentrancies:
	- FutureVault.getPerformanceFeeFactor() (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#1110-1112)
	- FutureVault.getPremiumPerUnderlyingDeposited(uint256) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#999-1006)
Reentrancy in FutureVault._withdraw(address,uint256) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#748-764):
	External calls:
	- updateUserState(_user) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#749)
		- pt.mint(_user,_preparePTClaim(_user)) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#666)
	State variables written after the call(s):
	- premiumToBeUnlocked = _prepareUserEarlyPremiumUnlock(_user,_amount) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#753)
		- delete FYTsOfUserPremium[_user] (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#776)
		- FYTsOfUserPremium[_user] = userFYTsInPremium - _ptShares (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#781)
	FutureVault.FYTsOfUserPremium (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#495) can be used in cross function reentrancies:
	- FutureVault._deposit(address,uint256) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#696-712)
	- FutureVault._preparePTClaim(address) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#671-682)
	- FutureVault.getUserEarlyUnlockablePremium(address) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#791-798)
	- premiumToBeUnlocked = _prepareUserEarlyPremiumUnlock(_user,_amount) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#753)
		- delete premiumToBeRedeemed[_user] (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#775)
		- premiumToBeRedeemed[_user] = unlockablePremium - premiumForAmount (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#780)
	FutureVault.premiumToBeRedeemed (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#494) can be used in cross function reentrancies:
	- FutureVault._deposit(address,uint256) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#696-712)
	- FutureVault._preparePTClaim(address) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#671-682)
	- FutureVault.getClaimablePT(address) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#934-952)
	- FutureVault.getUnlockablePremium(address) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#1013-1019)
	- FutureVault.getUserEarlyUnlockablePremium(address) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#791-798)
Reentrancy in FutureVault.claimFYT(address,uint256) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#886-890):
	External calls:
	- updateUserState(_user) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#888)
		- pt.mint(_user,_preparePTClaim(_user)) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#666)
	- _claimFYT(_user,_amount) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#889)
		- fyts[currentPeriodIndex].mint(_user,_amount) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#895)
	State variables written after the call(s):
	- _claimFYT(_user,_amount) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#889)
		- claimableFYTByUser[_user] = claimableFYTByUser[_user].sub(_amount,ERR_CLAIMED_FYT_AMOUNT) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#894)
	FutureVault.claimableFYTByUser (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#497) can be used in cross function reentrancies:
	- FutureVault._deposit(address,uint256) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#696-712)
	- FutureVault._preparePTClaim(address) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#671-682)
	- FutureVault.getClaimableFYTForPeriod(address,uint256) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#969-979)
	- FutureVault.getClaimablePT(address) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#934-952)
Reentrancy in FutureVault.createFYTDelegationTo(address,address,uint256) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#808-835):
	External calls:
	- updateUserState(_delegator) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#814)
		- pt.mint(_user,_preparePTClaim(_user)) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#666)
	- updateUserState(_receiver) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#815)
		- pt.mint(_user,_preparePTClaim(_user)) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#666)
	State variables written after the call(s):
	- updateUserState(_receiver) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#815)
		- delete FYTsOfUserPremium[_user] (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#676)
	FutureVault.FYTsOfUserPremium (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#495) can be used in cross function reentrancies:
	- FutureVault._deposit(address,uint256) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#696-712)
	- FutureVault._preparePTClaim(address) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#671-682)
	- FutureVault.getUserEarlyUnlockablePremium(address) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#791-798)
	- updateUserState(_receiver) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#815)
		- claimableFYTByUser[_user] = pt.balanceOf(_user).add(totalDelegationsReceived[_user]).sub(getTotalDelegated(_user)) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#678-680)
	FutureVault.claimableFYTByUser (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#497) can be used in cross function reentrancies:
	- FutureVault._deposit(address,uint256) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#696-712)
	- FutureVault._preparePTClaim(address) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#671-682)
	- FutureVault.getClaimableFYTForPeriod(address,uint256) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#969-979)
	- FutureVault.getClaimablePT(address) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#934-952)
	- delegationsByDelegator[_delegator][i].delegatedAmount = delegationsByDelegator[_delegator][i].delegatedAmount.add(_amount) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#823-825)
	FutureVault.delegationsByDelegator (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#511) can be used in cross function reentrancies:
	- FutureVault.getTotalDelegated(address) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#873-878)
	- FutureVault.withdrawFYTDelegationFrom(address,address,uint256) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#843-866)
	- delegationsByDelegator[_delegator].push(Delegation(_receiver,_amount)) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#831)
	FutureVault.delegationsByDelegator (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#511) can be used in cross function reentrancies:
	- FutureVault.getTotalDelegated(address) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#873-878)
	- FutureVault.withdrawFYTDelegationFrom(address,address,uint256) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#843-866)
	- updateUserState(_receiver) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#815)
		- lastPeriodClaimed[_user] = currentPeriodIndex (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#677)
		- lastPeriodClaimed[_user] = currentPeriodIndex (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#668)
	FutureVault.lastPeriodClaimed (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#493) can be used in cross function reentrancies:
	- FutureVault._preparePTClaim(address) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#671-682)
	- FutureVault.getClaimableFYTForPeriod(address,uint256) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#969-979)
	- FutureVault.getClaimablePT(address) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#934-952)
	- FutureVault.getUnlockablePremium(address) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#1013-1019)
	- FutureVault.updateUserState(address) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#662-669)
	- updateUserState(_receiver) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#815)
		- delete premiumToBeRedeemed[_user] (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#675)
	FutureVault.premiumToBeRedeemed (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#494) can be used in cross function reentrancies:
	- FutureVault._deposit(address,uint256) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#696-712)
	- FutureVault._preparePTClaim(address) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#671-682)
	- FutureVault.getClaimablePT(address) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#934-952)
	- FutureVault.getUnlockablePremium(address) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#1013-1019)
	- FutureVault.getUserEarlyUnlockablePremium(address) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#791-798)
	- totalDelegationsReceived[_receiver] = totalDelegationsReceived[_receiver].add(_amount) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#833)
	FutureVault.totalDelegationsReceived (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#512) can be used in cross function reentrancies:
	- FutureVault._preparePTClaim(address) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#671-682)
	- FutureVault.getClaimableFYTForPeriod(address,uint256) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#969-979)
	- FutureVault.getClaimablePT(address) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#934-952)
	- FutureVault.withdrawFYTDelegationFrom(address,address,uint256) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#843-866)
Reentrancy in HybridFutureVault.deposit(address,uint256) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#1467-1480):
	External calls:
	- _deposit(_user,_amount) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#1469)
		- pt.mint(_user,ptToMint) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#711)
	State variables written after the call(s):
	- scaledTotals[getCurrentPeriodIndex()] = _amount (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#1473)
	HybridFutureVault.scaledTotals (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#1459) can be used in cross function reentrancies:
	- HybridFutureVault.deposit(address,uint256) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#1467-1480)
	- HybridFutureVault.getPTPerAmountDeposited(uint256) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#1525-1532)
	- scaledTotals[getCurrentPeriodIndex()] = currScaledTotals.add(convertUnderlyingtoIBT(getPTPerAmountDeposited(_amount))) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#1475-1477)
	HybridFutureVault.scaledTotals (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#1459) can be used in cross function reentrancies:
	- HybridFutureVault.deposit(address,uint256) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#1467-1480)
	- HybridFutureVault.getPTPerAmountDeposited(uint256) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#1525-1532)
Reentrancy in FutureVault.updateUserState(address) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#662-669):
	External calls:
	- pt.mint(_user,_preparePTClaim(_user)) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#666)
	State variables written after the call(s):
	- lastPeriodClaimed[_user] = currentPeriodIndex (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#668)
	FutureVault.lastPeriodClaimed (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#493) can be used in cross function reentrancies:
	- FutureVault._preparePTClaim(address) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#671-682)
	- FutureVault.getClaimableFYTForPeriod(address,uint256) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#969-979)
	- FutureVault.getClaimablePT(address) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#934-952)
	- FutureVault.getUnlockablePremium(address) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#1013-1019)
	- FutureVault.updateUserState(address) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#662-669)
Reentrancy in FutureVault.withdrawFYTDelegationFrom(address,address,uint256) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#843-866):
	External calls:
	- updateUserState(_delegator) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#849)
		- pt.mint(_user,_preparePTClaim(_user)) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#666)
	- updateUserState(_receiver) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#850)
		- pt.mint(_user,_preparePTClaim(_user)) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#666)
	State variables written after the call(s):
	- updateUserState(_receiver) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#850)
		- delete FYTsOfUserPremium[_user] (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#676)
	FutureVault.FYTsOfUserPremium (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#495) can be used in cross function reentrancies:
	- FutureVault._deposit(address,uint256) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#696-712)
	- FutureVault._preparePTClaim(address) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#671-682)
	- FutureVault.getUserEarlyUnlockablePremium(address) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#791-798)
	- updateUserState(_receiver) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#850)
		- claimableFYTByUser[_user] = pt.balanceOf(_user).add(totalDelegationsReceived[_user]).sub(getTotalDelegated(_user)) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#678-680)
	FutureVault.claimableFYTByUser (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#497) can be used in cross function reentrancies:
	- FutureVault._deposit(address,uint256) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#696-712)
	- FutureVault._preparePTClaim(address) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#671-682)
	- FutureVault.getClaimableFYTForPeriod(address,uint256) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#969-979)
	- FutureVault.getClaimablePT(address) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#934-952)
	- delegationsByDelegator[_delegator][i].delegatedAmount = delegationsByDelegator[_delegator][i].delegatedAmount.sub(_amount,ERR_AMOUNT) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#856-858)
	FutureVault.delegationsByDelegator (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#511) can be used in cross function reentrancies:
	- FutureVault.getTotalDelegated(address) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#873-878)
	- FutureVault.withdrawFYTDelegationFrom(address,address,uint256) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#843-866)
	- updateUserState(_receiver) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#850)
		- lastPeriodClaimed[_user] = currentPeriodIndex (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#677)
		- lastPeriodClaimed[_user] = currentPeriodIndex (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#668)
	FutureVault.lastPeriodClaimed (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#493) can be used in cross function reentrancies:
	- FutureVault._preparePTClaim(address) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#671-682)
	- FutureVault.getClaimableFYTForPeriod(address,uint256) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#969-979)
	- FutureVault.getClaimablePT(address) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#934-952)
	- FutureVault.getUnlockablePremium(address) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#1013-1019)
	- FutureVault.updateUserState(address) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#662-669)
	- updateUserState(_receiver) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#850)
		- delete premiumToBeRedeemed[_user] (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#675)
	FutureVault.premiumToBeRedeemed (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#494) can be used in cross function reentrancies:
	- FutureVault._deposit(address,uint256) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#696-712)
	- FutureVault._preparePTClaim(address) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#671-682)
	- FutureVault.getClaimablePT(address) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#934-952)
	- FutureVault.getUnlockablePremium(address) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#1013-1019)
	- FutureVault.getUserEarlyUnlockablePremium(address) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#791-798)
	- totalDelegationsReceived[_receiver] = totalDelegationsReceived[_receiver].sub(_amount) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#864)
	FutureVault.totalDelegationsReceived (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#512) can be used in cross function reentrancies:
	- FutureVault._preparePTClaim(address) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#671-682)
	- FutureVault.getClaimableFYTForPeriod(address,uint256) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#969-979)
	- FutureVault.getClaimablePT(address) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#934-952)
	- FutureVault.withdrawFYTDelegationFrom(address,address,uint256) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#843-866)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1
INFO:Detectors:
RewardsFutureVault.redeemAllVaultRewards().i (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#1193) is a local variable never initialized
FutureVault.withdrawFYTDelegationFrom(address,address,uint256).removed (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#853) is a local variable never initialized
FutureVault._switchPeriod().reinvestedYield (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#622) is a local variable never initialized
FutureVault.createFYTDelegationTo(address,address,uint256).delegated (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#820) is a local variable never initialized
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#uninitialized-local-variables
INFO:Detectors:
RewardsFutureVault.addRewardsToken(address) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#1218-1222) ignores return value by rewardTokens.add(_token) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#1220)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return
INFO:Detectors:
RewardsFutureVault.setRewardRecipient(address)._recipient (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#1227) lacks a zero-check on :
		- rewardsRecipient = _recipient (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#1229)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation
INFO:Detectors:
RewardsFutureVault.redeemAllVaultRewards() (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#1190-1199) has external calls inside a loop: rewardTokenBalance = rewardToken.balanceOf(address(this)) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#1195)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation/#calls-inside-a-loop
INFO:Detectors:
Reentrancy in FutureVault._claimFYT(address,uint256) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#892-897):
	External calls:
	- fyts[currentPeriodIndex].mint(_user,_amount) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#895)
	State variables written after the call(s):
	- collectedFYTSByPeriod[currentPeriodIndex] = collectedFYTSByPeriod[currentPeriodIndex].add(_amount) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#896)
Reentrancy in FutureVault._deployNewFutureYieldToken(uint256) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#920-925):
	External calls:
	- newToken = IFutureYieldToken(ITokensFactory(registry.getTokensFactoryAddress()).deployNextFutureYieldToken(newPeriodIndex)) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#921-923)
	State variables written after the call(s):
	- fyts.push(newToken) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#924)
Reentrancy in FutureVault._withdraw(address,uint256) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#748-764):
	External calls:
	- updateUserState(_user) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#749)
		- pt.mint(_user,_preparePTClaim(_user)) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#666)
	- ibt.safeTransfer(_user,fundsToBeUnlocked.add(yieldToBeRedeemed).add(premiumToBeUnlocked)) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#757)
	- ibt.safeTransfer(registry.getTreasuryAddress(),treasuryFee) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#760)
	State variables written after the call(s):
	- totalUnderlyingDeposited = totalUnderlyingDeposited.sub(_amount) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#762)
Reentrancy in RateFutureVault.initialize(IController,IERC20,uint256,string,address) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#1292-1301):
	External calls:
	- super.initialize(_controller,_ibt,_periodDuration,_platformName,_admin) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#1299)
		- pt = IPT(ITokensFactory(IRegistry(controller.getRegistryAddress()).getTokensFactoryAddress()).deployPT(ibt.symbol(),ibt.decimals(),PLATFORM_NAME,PERIOD_DURATION)) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#598-605)
	State variables written after the call(s):
	- IBTRates[getCurrentPeriodIndex()] = getIBTRate() (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#1300)
Reentrancy in HybridFutureVault.startNewPeriod() (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#1499-1506):
	External calls:
	- _switchPeriod() (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#1501)
		- returndata = address(token).functionCall(data,SafeERC20: low-level call failed) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#1911)
		- newToken = IFutureYieldToken(ITokensFactory(registry.getTokensFactoryAddress()).deployNextFutureYieldToken(newPeriodIndex)) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#921-923)
		- (success,returndata) = target.call{value: value}(data) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#2857)
		- futureWallet.registerExpiredFuture(collectedYield) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#635)
		- ibt.safeTransfer(registry.getTreasuryAddress(),performanceFee) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#637)
		- ibt.safeTransfer(address(futureWallet),collectedYield) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#638)
		- futureWallet.registerExpiredFuture(0) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#640)
	External calls sending eth:
	- _switchPeriod() (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#1501)
		- (success,returndata) = target.call{value: value}(data) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#2857)
	State variables written after the call(s):
	- IBTRates[getCurrentPeriodIndex()] = getIBTRate() (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#1503)
	- scaledTotals[getCurrentPeriodIndex()] = ibt.balanceOf(address(this)) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#1505)
Reentrancy in FutureVault.withdraw(address,uint256) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#720-740):
	External calls:
	- _withdraw(_user,_amount) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#723)
		- returndata = address(token).functionCall(data,SafeERC20: low-level call failed) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#1911)
		- pt.mint(_user,_preparePTClaim(_user)) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#666)
		- (success,returndata) = target.call{value: value}(data) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#2857)
		- ibt.safeTransfer(_user,fundsToBeUnlocked.add(yieldToBeRedeemed).add(premiumToBeUnlocked)) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#757)
		- ibt.safeTransfer(registry.getTreasuryAddress(),treasuryFee) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#760)
		- pt.burnFrom(_user,_amount) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#763)
	External calls sending eth:
	- _withdraw(_user,_amount) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#723)
		- (success,returndata) = target.call{value: value}(data) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#2857)
	State variables written after the call(s):
	- collectedFYTSByPeriod[currentPeriodIndex] = collectedFYTSByPeriod[currentPeriodIndex].add(ClaimableFYTsToBurn) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#732)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2
INFO:Detectors:
Reentrancy in FutureVault._switchPeriod() (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#618-654):
	External calls:
	- futureWallet.registerExpiredFuture(collectedYield) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#635)
	- ibt.safeTransfer(registry.getTreasuryAddress(),performanceFee) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#637)
	- ibt.safeTransfer(address(futureWallet),collectedYield) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#638)
	- futureWallet.registerExpiredFuture(0) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#640)
	- _deployNewFutureYieldToken(nextPeriodID) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#646)
		- newToken = IFutureYieldToken(ITokensFactory(registry.getTokensFactoryAddress()).deployNextFutureYieldToken(newPeriodIndex)) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#921-923)
	Event emitted after the call(s):
	- NewPeriodStarted(nextPeriodID) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#647)
Reentrancy in FutureVault.deposit(address,uint256) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#690-694):
	External calls:
	- _deposit(_user,_amount) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#692)
		- pt.mint(_user,ptToMint) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#711)
	Event emitted after the call(s):
	- FundsDeposited(_user,_amount) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#693)
Reentrancy in HybridFutureVault.deposit(address,uint256) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#1467-1480):
	External calls:
	- _deposit(_user,_amount) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#1469)
		- pt.mint(_user,ptToMint) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#711)
	Event emitted after the call(s):
	- FundsDeposited(_user,_amount) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#1479)
Reentrancy in FutureVault.initialize(IController,IERC20,uint256,string,address) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#577-608):
	External calls:
	- pt = IPT(ITokensFactory(IRegistry(controller.getRegistryAddress()).getTokensFactoryAddress()).deployPT(ibt.symbol(),ibt.decimals(),PLATFORM_NAME,PERIOD_DURATION)) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#598-605)
	Event emitted after the call(s):
	- PTSet(pt) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#607)
Reentrancy in FutureVault.pauseLiquidityTransfers() (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#1128-1132):
	External calls:
	- pt.pause() (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#1130)
	Event emitted after the call(s):
	- LiquidityTransfersPaused() (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#1131)
Reentrancy in RewardsFutureVault.redeemAllVaultRewards() (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#1190-1199):
	External calls:
	- rewardToken.safeTransfer(rewardsRecipient,rewardTokenBalance) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#1196)
	Event emitted after the call(s):
	- RewardTokenRedeemed(rewardToken,rewardTokenBalance) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#1197)
Reentrancy in RewardsFutureVault.redeemVaultRewards(IERC20) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#1205-1211):
	External calls:
	- _rewardToken.safeTransfer(rewardsRecipient,rewardTokenBalance) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#1209)
	Event emitted after the call(s):
	- RewardTokenRedeemed(_rewardToken,rewardTokenBalance) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#1210)
Reentrancy in FutureVault.resumeLiquidityTransfers() (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#1137-1141):
	External calls:
	- pt.unpause() (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#1139)
	Event emitted after the call(s):
	- LiquidityTransfersResumed() (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#1140)
Reentrancy in FutureVault.withdrawFYTDelegationFrom(address,address,uint256) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#843-866):
	External calls:
	- updateUserState(_delegator) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#849)
		- pt.mint(_user,_preparePTClaim(_user)) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#666)
	- updateUserState(_receiver) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#850)
		- pt.mint(_user,_preparePTClaim(_user)) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#666)
	Event emitted after the call(s):
	- DelegationRemoved(_delegator,_receiver,_amount) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#865)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3
INFO:Detectors:
AddressUpgradeable.isContract(address) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#2764-2773) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#2771)
AddressUpgradeable._verifyCallResult(bool,bytes,string) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#2885-2902) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#2894-2897)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage
INFO:Detectors:
Different versions of Solidity are used:
	- Version used: ['0.7.6', '>=0.4.24<0.8.0', '>=0.6.0<0.8.0', '>=0.6.2<0.8.0']
	- 0.7.6 (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#323)
	- 0.7.6 (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#434)
	- 0.7.6 (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#459)
	- 0.7.6 (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#1146)
	- 0.7.6 (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#1270)
	- 0.7.6 (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#1447)
	- 0.7.6 (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#1537)
	- 0.7.6 (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#1600)
	- 0.7.6 (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#1622)
	- 0.7.6 (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#1921)
	- 0.7.6 (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#1986)
	- 0.7.6 (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#2067)
	- 0.7.6 (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#2140)
	- 0.7.6 (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#2293)
	- 0.7.6 (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#2388)
	- 0.7.6 (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#2403)
	- 0.7.6 (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#2907)
	- >=0.4.24<0.8.0 (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#8)
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#63)
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#96)
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#365)
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#1369)
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#1630)
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#1845)
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#2443)
	- >=0.6.2<0.8.0 (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#2741)
	- ABIEncoderV2 (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#2)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#different-pragma-directives-are-used
INFO:Detectors:
APWineMaths.getActualOutput(uint256,uint256,uint256) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#2431-2438) is never used and should be removed
AccessControlUpgradeable.__AccessControl_init() (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#139-142) is never used and should be removed
AccessControlUpgradeable.__AccessControl_init_unchained() (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#144-145) is never used and should be removed
AccessControlUpgradeable._setRoleAdmin(bytes32,bytes32) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#302-305) is never used and should be removed
AddressUpgradeable.functionCall(address,bytes) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#2817-2819) is never used and should be removed
AddressUpgradeable.functionCallWithValue(address,bytes,uint256) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#2842-2844) is never used and should be removed
AddressUpgradeable.functionStaticCall(address,bytes) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#2867-2869) is never used and should be removed
AddressUpgradeable.functionStaticCall(address,bytes,string) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#2877-2883) is never used and should be removed
AddressUpgradeable.sendValue(address,uint256) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#2791-2797) is never used and should be removed
ContextUpgradeable.__Context_init() (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#77-79) is never used and should be removed
ContextUpgradeable.__Context_init_unchained() (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#81-82) is never used and should be removed
ContextUpgradeable._msgData() (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#87-90) is never used and should be removed
EnumerableSetUpgradeable.add(EnumerableSetUpgradeable.Bytes32Set,bytes32) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#2587-2589) is never used and should be removed
EnumerableSetUpgradeable.add(EnumerableSetUpgradeable.UintSet,uint256) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#2696-2698) is never used and should be removed
EnumerableSetUpgradeable.at(EnumerableSetUpgradeable.Bytes32Set,uint256) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#2625-2627) is never used and should be removed
EnumerableSetUpgradeable.at(EnumerableSetUpgradeable.UintSet,uint256) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#2734-2736) is never used and should be removed
EnumerableSetUpgradeable.contains(EnumerableSetUpgradeable.Bytes32Set,bytes32) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#2604-2606) is never used and should be removed
EnumerableSetUpgradeable.contains(EnumerableSetUpgradeable.UintSet,uint256) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#2713-2715) is never used and should be removed
EnumerableSetUpgradeable.length(EnumerableSetUpgradeable.Bytes32Set) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#2611-2613) is never used and should be removed
EnumerableSetUpgradeable.length(EnumerableSetUpgradeable.UintSet) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#2720-2722) is never used and should be removed
EnumerableSetUpgradeable.remove(EnumerableSetUpgradeable.Bytes32Set,bytes32) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#2597-2599) is never used and should be removed
EnumerableSetUpgradeable.remove(EnumerableSetUpgradeable.UintSet,uint256) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#2706-2708) is never used and should be removed
ReentrancyGuardUpgradeable.__ReentrancyGuard_init() (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#401-403) is never used and should be removed
ReentrancyGuardUpgradeable.__ReentrancyGuard_init_unchained() (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#405-407) is never used and should be removed
SafeERC20Upgradeable.safeApprove(IERC20Upgradeable,address,uint256) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#1879-1888) is never used and should be removed
SafeERC20Upgradeable.safeDecreaseAllowance(IERC20Upgradeable,address,uint256) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#1895-1898) is never used and should be removed
SafeERC20Upgradeable.safeIncreaseAllowance(IERC20Upgradeable,address,uint256) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#1890-1893) is never used and should be removed
SafeERC20Upgradeable.safeTransferFrom(IERC20Upgradeable,address,address,uint256) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#1868-1870) is never used and should be removed
SafeMathUpgradeable.div(uint256,uint256,string) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#1817-1820) is never used and should be removed
SafeMathUpgradeable.mod(uint256,uint256) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#1779-1782) is never used and should be removed
SafeMathUpgradeable.mod(uint256,uint256,string) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#1837-1840) is never used and should be removed
SafeMathUpgradeable.tryAdd(uint256,uint256) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#1651-1655) is never used and should be removed
SafeMathUpgradeable.tryDiv(uint256,uint256) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#1687-1690) is never used and should be removed
SafeMathUpgradeable.tryMod(uint256,uint256) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#1697-1700) is never used and should be removed
SafeMathUpgradeable.tryMul(uint256,uint256) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#1672-1680) is never used and should be removed
SafeMathUpgradeable.trySub(uint256,uint256) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#1662-1665) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code
INFO:Detectors:
Pragma version>=0.4.24<0.8.0 (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#8) is too complex
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#63) is too complex
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#96) is too complex
Pragma version0.7.6 (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#323) allows old versions
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#365) is too complex
Pragma version0.7.6 (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#434) allows old versions
Pragma version0.7.6 (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#459) allows old versions
Pragma version0.7.6 (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#1146) allows old versions
Pragma version0.7.6 (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#1270) allows old versions
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#1369) is too complex
Pragma version0.7.6 (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#1447) allows old versions
Pragma version0.7.6 (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#1537) allows old versions
Pragma version0.7.6 (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#1600) allows old versions
Pragma version0.7.6 (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#1622) allows old versions
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#1630) is too complex
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#1845) is too complex
Pragma version0.7.6 (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#1921) allows old versions
Pragma version0.7.6 (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#1986) allows old versions
Pragma version0.7.6 (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#2067) allows old versions
Pragma version0.7.6 (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#2140) allows old versions
Pragma version0.7.6 (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#2293) allows old versions
Pragma version0.7.6 (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#2388) allows old versions
Pragma version0.7.6 (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#2403) allows old versions
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#2443) is too complex
Pragma version>=0.6.2<0.8.0 (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#2741) is too complex
Pragma version0.7.6 (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#2907) allows old versions
solc-0.7.6 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity
INFO:Detectors:
Low level call in AddressUpgradeable.sendValue(address,uint256) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#2791-2797):
	- (success) = recipient.call{value: amount}() (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#2795)
Low level call in AddressUpgradeable.functionCallWithValue(address,bytes,uint256,string) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#2852-2859):
	- (success,returndata) = target.call{value: value}(data) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#2857)
Low level call in AddressUpgradeable.functionStaticCall(address,bytes,string) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#2877-2883):
	- (success,returndata) = target.staticcall(data) (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#2881)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls
INFO:Detectors:
Function ContextUpgradeable.__Context_init() (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#77-79) is not in mixedCase
Function ContextUpgradeable.__Context_init_unchained() (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#81-82) is not in mixedCase
Variable ContextUpgradeable.__gap (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#91) is not in mixedCase
Function AccessControlUpgradeable.__AccessControl_init() (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#139-142) is not in mixedCase
Function AccessControlUpgradeable.__AccessControl_init_unchained() (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#144-145) is not in mixedCase
Variable AccessControlUpgradeable.__gap (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#318) is not in mixedCase
Function ReentrancyGuardUpgradeable.__ReentrancyGuard_init() (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#401-403) is not in mixedCase
Function ReentrancyGuardUpgradeable.__ReentrancyGuard_init_unchained() (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#405-407) is not in mixedCase
Variable ReentrancyGuardUpgradeable.__gap (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#429) is not in mixedCase
Parameter RegistryStorage.setRegistry(IRegistry)._registry (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#451) is not in mixedCase
Parameter FutureVault.initialize(IController,IERC20,uint256,string,address)._controller (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#578) is not in mixedCase
Parameter FutureVault.initialize(IController,IERC20,uint256,string,address)._ibt (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#579) is not in mixedCase
Parameter FutureVault.initialize(IController,IERC20,uint256,string,address)._periodDuration (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#580) is not in mixedCase
Parameter FutureVault.initialize(IController,IERC20,uint256,string,address)._platformName (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#581) is not in mixedCase
Parameter FutureVault.initialize(IController,IERC20,uint256,string,address)._admin (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#582) is not in mixedCase
Parameter FutureVault.updateUserState(address)._user (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#662) is not in mixedCase
Parameter FutureVault.deposit(address,uint256)._user (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#690) is not in mixedCase
Parameter FutureVault.deposit(address,uint256)._amount (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#690) is not in mixedCase
Parameter FutureVault.withdraw(address,uint256)._user (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#720) is not in mixedCase
Parameter FutureVault.withdraw(address,uint256)._amount (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#720) is not in mixedCase
Parameter FutureVault.getUserEarlyUnlockablePremium(address)._user (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#791) is not in mixedCase
Parameter FutureVault.createFYTDelegationTo(address,address,uint256)._delegator (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#809) is not in mixedCase
Parameter FutureVault.createFYTDelegationTo(address,address,uint256)._receiver (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#810) is not in mixedCase
Parameter FutureVault.createFYTDelegationTo(address,address,uint256)._amount (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#811) is not in mixedCase
Parameter FutureVault.withdrawFYTDelegationFrom(address,address,uint256)._delegator (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#844) is not in mixedCase
Parameter FutureVault.withdrawFYTDelegationFrom(address,address,uint256)._receiver (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#845) is not in mixedCase
Parameter FutureVault.withdrawFYTDelegationFrom(address,address,uint256)._amount (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#846) is not in mixedCase
Parameter FutureVault.getTotalDelegated(address)._delegator (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#873) is not in mixedCase
Parameter FutureVault.claimFYT(address,uint256)._user (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#886) is not in mixedCase
Parameter FutureVault.claimFYT(address,uint256)._amount (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#886) is not in mixedCase
Parameter FutureVault.exitTerminatedFuture(address)._user (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#906) is not in mixedCase
Parameter FutureVault.getClaimablePT(address)._user (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#934) is not in mixedCase
Parameter FutureVault.getUnlockableFunds(address)._user (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#959) is not in mixedCase
Parameter FutureVault.getClaimableFYTForPeriod(address,uint256)._user (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#969) is not in mixedCase
Parameter FutureVault.getClaimableFYTForPeriod(address,uint256)._periodIndex (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#969) is not in mixedCase
Parameter FutureVault.getPremiumPerUnderlyingDeposited(uint256)._amount (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#999) is not in mixedCase
Parameter FutureVault.getUnlockablePremium(address)._user (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#1013) is not in mixedCase
Parameter FutureVault.getYieldOfPeriod(uint256)._periodID (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#1026) is not in mixedCase
Parameter FutureVault.getFYTofPeriod(uint256)._periodIndex (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#1094) is not in mixedCase
Parameter FutureVault.setFutureWallet(IFutureWallet)._futureWallet (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#1120) is not in mixedCase
Variable FutureVault.FYTsOfUserPremium (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#495) is not in mixedCase
Variable FutureVault.PERIOD_DURATION (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#521) is not in mixedCase
Variable FutureVault.PLATFORM_NAME (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#522) is not in mixedCase
Variable FutureVault.IBT_UNIT (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#525) is not in mixedCase
Variable FutureVault.IBT_UNITS_MULTIPLIED_VALUE (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#526) is not in mixedCase
Parameter RewardsFutureVault.redeemVaultRewards(IERC20)._rewardToken (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#1205) is not in mixedCase
Parameter RewardsFutureVault.addRewardsToken(address)._token (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#1218) is not in mixedCase
Parameter RewardsFutureVault.setRewardRecipient(address)._recipient (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#1227) is not in mixedCase
Parameter RewardsFutureVault.isRewardToken(IERC20)._token (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#1238) is not in mixedCase
Parameter RewardsFutureVault.getRewardTokenAt(uint256)._index (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#1247) is not in mixedCase
Parameter RateFutureVault.initialize(IController,IERC20,uint256,string,address)._controller (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#1293) is not in mixedCase
Parameter RateFutureVault.initialize(IController,IERC20,uint256,string,address)._ibt (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#1294) is not in mixedCase
Parameter RateFutureVault.initialize(IController,IERC20,uint256,string,address)._periodDuration (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#1295) is not in mixedCase
Parameter RateFutureVault.initialize(IController,IERC20,uint256,string,address)._platformName (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#1296) is not in mixedCase
Parameter RateFutureVault.initialize(IController,IERC20,uint256,string,address)._admin (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#1297) is not in mixedCase
Parameter RateFutureVault.convertIBTToUnderlying(uint256)._amount (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#1313) is not in mixedCase
Parameter RateFutureVault.convertUnderlyingtoIBT(uint256)._amount (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#1321) is not in mixedCase
Parameter RateFutureVault.getUnlockableFunds(address)._user (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#1334) is not in mixedCase
Parameter RateFutureVault.getPTPerAmountDeposited(uint256)._amount (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#1362) is not in mixedCase
Variable RateFutureVault.IBTRates (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#1282) is not in mixedCase
Parameter HybridFutureVault.deposit(address,uint256)._user (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#1467) is not in mixedCase
Parameter HybridFutureVault.deposit(address,uint256)._amount (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#1467) is not in mixedCase
Parameter HybridFutureVault.getPTPerAmountDeposited(uint256)._amount (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#1525) is not in mixedCase
Function IController.STARTING_DELAY() (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#2163) is not in mixedCase
Parameter IRegistry.setPTLogic(address)._PTLogic (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#2314) is not in mixedCase
Parameter IRegistry.setFYTLogic(address)._FYTLogic (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#2320) is not in mixedCase
Parameter APWineMaths.getScaledInput(uint256,uint256,uint256)._actualValue (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#2417) is not in mixedCase
Parameter APWineMaths.getScaledInput(uint256,uint256,uint256)._initialSum (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#2418) is not in mixedCase
Parameter APWineMaths.getScaledInput(uint256,uint256,uint256)._actualSum (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#2419) is not in mixedCase
Parameter APWineMaths.getActualOutput(uint256,uint256,uint256)._scaledOutput (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#2432) is not in mixedCase
Parameter APWineMaths.getActualOutput(uint256,uint256,uint256)._initialSum (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#2433) is not in mixedCase
Parameter APWineMaths.getActualOutput(uint256,uint256,uint256)._actualSum (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#2434) is not in mixedCase
Function IFutureVault.PERIOD_DURATION() (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#2931) is not in mixedCase
Function IFutureVault.PLATFORM_NAME() (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#2937) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions
INFO:Detectors:
Redundant expression "this (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#88)" inContextUpgradeable (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#76-92)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#redundant-statements
INFO:Detectors:
Variable FutureVault.PERIOD_DURATION (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#521) is too similar to FutureVault.initialize(IController,IERC20,uint256,string,address)._periodDuration (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#580)
Variable FutureVault.PLATFORM_NAME (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#522) is too similar to FutureVault.initialize(IController,IERC20,uint256,string,address)._platformName (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#581)
Variable RewardsFutureVault.redeemVaultRewards(IERC20)._rewardToken (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#1205) is too similar to RewardsFutureVault.rewardTokens (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#1160)
Variable FutureVault.PERIOD_DURATION (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#521) is too similar to RateFutureVault.initialize(IController,IERC20,uint256,string,address)._periodDuration (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#1295)
Variable FutureVault.PLATFORM_NAME (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#522) is too similar to RateFutureVault.initialize(IController,IERC20,uint256,string,address)._platformName (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#1296)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#variable-names-too-similar
INFO:Detectors:
RoleCheckable.FUTURE_ROLE (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#337) is never used in PaladinFutureVault (../../sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol#1608-1618)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-state-variable
INFO:Slither:/bdata2/sc/dataset/mainnet/0xbcde6f54b62c0c2d5a34aa77150ca979ce4880aa.sol analyzed (26 contracts with 85 detectors), 187 result(s) found
