INFO:Detectors:
RapidGainz._allowances (../../sc/dataset/mainnet/0x890cbB960ed76a07e76Ef1D39026b1b9Ed50Ab62.sol#699) shadows:
	- ERC20._allowances (../../sc/dataset/mainnet/0x890cbB960ed76a07e76Ef1D39026b1b9Ed50Ab62.sol#403)
RapidGainz._totalSupply (../../sc/dataset/mainnet/0x890cbB960ed76a07e76Ef1D39026b1b9Ed50Ab62.sol#700) shadows:
	- ERC20._totalSupply (../../sc/dataset/mainnet/0x890cbB960ed76a07e76Ef1D39026b1b9Ed50Ab62.sol#405)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variable-shadowing
INFO:Detectors:
RapidGainz.manualRebase(bool) (../../sc/dataset/mainnet/0x890cbB960ed76a07e76Ef1D39026b1b9Ed50Ab62.sol#879-887) performs a multiplication on the result of a division:
	- _totalSupply = _totalSupply.mul(targetRateMultiplier).div(targetRateDivisor) (../../sc/dataset/mainnet/0x890cbB960ed76a07e76Ef1D39026b1b9Ed50Ab62.sol#881)
	- _totalSupply = _totalSupply.mul(targetRateDivisor).div(targetRateMultiplier) (../../sc/dataset/mainnet/0x890cbB960ed76a07e76Ef1D39026b1b9Ed50Ab62.sol#883)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#divide-before-multiply
INFO:Detectors:
Reentrancy in RapidGainz.rebase() (../../sc/dataset/mainnet/0x890cbB960ed76a07e76Ef1D39026b1b9Ed50Ab62.sol#829-877):
	External calls:
	- (exchangeRate,targetRate,supplyDelta) = getRebaseValues() (../../sc/dataset/mainnet/0x890cbB960ed76a07e76Ef1D39026b1b9Ed50Ab62.sol#834-838)
		- exchangeRate = oracle.quote() (../../sc/dataset/mainnet/0x890cbB960ed76a07e76Ef1D39026b1b9Ed50Ab62.sol#804)
	State variables written after the call(s):
	- _totalSupply = _totalSupply.sub(uint256(supplyDelta.abs())) (../../sc/dataset/mainnet/0x890cbB960ed76a07e76Ef1D39026b1b9Ed50Ab62.sol#854)
	RapidGainz._totalSupply (../../sc/dataset/mainnet/0x890cbB960ed76a07e76Ef1D39026b1b9Ed50Ab62.sol#700) can be used in cross function reentrancies:
	- RapidGainz._transfer(address,address,uint256) (../../sc/dataset/mainnet/0x890cbB960ed76a07e76Ef1D39026b1b9Ed50Ab62.sol#793-801)
	- RapidGainz.constructor(address,address) (../../sc/dataset/mainnet/0x890cbB960ed76a07e76Ef1D39026b1b9Ed50Ab62.sol#726-734)
	- RapidGainz.getRebaseValues() (../../sc/dataset/mainnet/0x890cbB960ed76a07e76Ef1D39026b1b9Ed50Ab62.sol#803-827)
	- RapidGainz.manualRebase(bool) (../../sc/dataset/mainnet/0x890cbB960ed76a07e76Ef1D39026b1b9Ed50Ab62.sol#879-887)
	- RapidGainz.rebase() (../../sc/dataset/mainnet/0x890cbB960ed76a07e76Ef1D39026b1b9Ed50Ab62.sol#829-877)
	- RapidGainz.totalSupply() (../../sc/dataset/mainnet/0x890cbB960ed76a07e76Ef1D39026b1b9Ed50Ab62.sol#785-787)
	- _totalSupply = _totalSupply.add(uint256(supplyDelta.abs())) (../../sc/dataset/mainnet/0x890cbB960ed76a07e76Ef1D39026b1b9Ed50Ab62.sol#857)
	RapidGainz._totalSupply (../../sc/dataset/mainnet/0x890cbB960ed76a07e76Ef1D39026b1b9Ed50Ab62.sol#700) can be used in cross function reentrancies:
	- RapidGainz._transfer(address,address,uint256) (../../sc/dataset/mainnet/0x890cbB960ed76a07e76Ef1D39026b1b9Ed50Ab62.sol#793-801)
	- RapidGainz.constructor(address,address) (../../sc/dataset/mainnet/0x890cbB960ed76a07e76Ef1D39026b1b9Ed50Ab62.sol#726-734)
	- RapidGainz.getRebaseValues() (../../sc/dataset/mainnet/0x890cbB960ed76a07e76Ef1D39026b1b9Ed50Ab62.sol#803-827)
	- RapidGainz.manualRebase(bool) (../../sc/dataset/mainnet/0x890cbB960ed76a07e76Ef1D39026b1b9Ed50Ab62.sol#879-887)
	- RapidGainz.rebase() (../../sc/dataset/mainnet/0x890cbB960ed76a07e76Ef1D39026b1b9Ed50Ab62.sol#829-877)
	- RapidGainz.totalSupply() (../../sc/dataset/mainnet/0x890cbB960ed76a07e76Ef1D39026b1b9Ed50Ab62.sol#785-787)
	- baseRate = targetRate.mul(targetRateDivisor).div(targetRateMultiplier,Failed at new base rate setting) (../../sc/dataset/mainnet/0x890cbB960ed76a07e76Ef1D39026b1b9Ed50Ab62.sol#864)
	RapidGainz.baseRate (../../sc/dataset/mainnet/0x890cbB960ed76a07e76Ef1D39026b1b9Ed50Ab62.sol#724) can be used in cross function reentrancies:
	- RapidGainz.baseRate (../../sc/dataset/mainnet/0x890cbB960ed76a07e76Ef1D39026b1b9Ed50Ab62.sol#724)
	- RapidGainz.getRebaseValues() (../../sc/dataset/mainnet/0x890cbB960ed76a07e76Ef1D39026b1b9Ed50Ab62.sol#803-827)
	- RapidGainz.rebase() (../../sc/dataset/mainnet/0x890cbB960ed76a07e76Ef1D39026b1b9Ed50Ab62.sol#829-877)
	- RapidGainz.setBaseRate(uint256) (../../sc/dataset/mainnet/0x890cbB960ed76a07e76Ef1D39026b1b9Ed50Ab62.sol#766-768)
	- RapidGainz.setOracle(address) (../../sc/dataset/mainnet/0x890cbB960ed76a07e76Ef1D39026b1b9Ed50Ab62.sol#774-779)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1
INFO:Detectors:
RapidGainz.setController(address) (../../sc/dataset/mainnet/0x890cbB960ed76a07e76Ef1D39026b1b9Ed50Ab62.sol#781-783) should emit an event for: 
	- controller = _newControllerAddress (../../sc/dataset/mainnet/0x890cbB960ed76a07e76Ef1D39026b1b9Ed50Ab62.sol#782) 
	- controller = _newControllerAddress (../../sc/dataset/mainnet/0x890cbB960ed76a07e76Ef1D39026b1b9Ed50Ab62.sol#782) 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-access-control
INFO:Detectors:
RapidGainz.setDampener(int256) (../../sc/dataset/mainnet/0x890cbB960ed76a07e76Ef1D39026b1b9Ed50Ab62.sol#758-760) should emit an event for: 
	- dampener = _newDampeningFactor (../../sc/dataset/mainnet/0x890cbB960ed76a07e76Ef1D39026b1b9Ed50Ab62.sol#759) 
RapidGainz.setMaxTransferAmountInPercentage(uint256) (../../sc/dataset/mainnet/0x890cbB960ed76a07e76Ef1D39026b1b9Ed50Ab62.sol#762-764) should emit an event for: 
	- maxTransferAmountInPercentage = _maxTransferAmountInPercentage (../../sc/dataset/mainnet/0x890cbB960ed76a07e76Ef1D39026b1b9Ed50Ab62.sol#763) 
RapidGainz.setBaseRate(uint256) (../../sc/dataset/mainnet/0x890cbB960ed76a07e76Ef1D39026b1b9Ed50Ab62.sol#766-768) should emit an event for: 
	- baseRate = _newBaseRate (../../sc/dataset/mainnet/0x890cbB960ed76a07e76Ef1D39026b1b9Ed50Ab62.sol#767) 
RapidGainz.setOracle(address) (../../sc/dataset/mainnet/0x890cbB960ed76a07e76Ef1D39026b1b9Ed50Ab62.sol#774-779) should emit an event for: 
	- baseRate = oracle.quote() (../../sc/dataset/mainnet/0x890cbB960ed76a07e76Ef1D39026b1b9Ed50Ab62.sol#776) 
	- baseRate = (baseRate * targetRateDivisor) / targetRateMultiplier (../../sc/dataset/mainnet/0x890cbB960ed76a07e76Ef1D39026b1b9Ed50Ab62.sol#777) 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-arithmetic
INFO:Detectors:
RapidGainz.constructor(address,address)._controller (../../sc/dataset/mainnet/0x890cbB960ed76a07e76Ef1D39026b1b9Ed50Ab62.sol#726) lacks a zero-check on :
		- controller = _controller (../../sc/dataset/mainnet/0x890cbB960ed76a07e76Ef1D39026b1b9Ed50Ab62.sol#727)
RapidGainz.setController(address)._newControllerAddress (../../sc/dataset/mainnet/0x890cbB960ed76a07e76Ef1D39026b1b9Ed50Ab62.sol#781) lacks a zero-check on :
		- controller = _newControllerAddress (../../sc/dataset/mainnet/0x890cbB960ed76a07e76Ef1D39026b1b9Ed50Ab62.sol#782)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation
INFO:Detectors:
Reentrancy in RapidGainz.rebase() (../../sc/dataset/mainnet/0x890cbB960ed76a07e76Ef1D39026b1b9Ed50Ab62.sol#829-877):
	External calls:
	- (exchangeRate,targetRate,supplyDelta) = getRebaseValues() (../../sc/dataset/mainnet/0x890cbB960ed76a07e76Ef1D39026b1b9Ed50Ab62.sol#834-838)
		- exchangeRate = oracle.quote() (../../sc/dataset/mainnet/0x890cbB960ed76a07e76Ef1D39026b1b9Ed50Ab62.sol#804)
	State variables written after the call(s):
	- _gonsPerFragment = TOTAL_GONS.div(_totalSupply,Failed at gons per fragment total supply division) (../../sc/dataset/mainnet/0x890cbB960ed76a07e76Ef1D39026b1b9Ed50Ab62.sol#860)
Reentrancy in RapidGainz.setOracle(address) (../../sc/dataset/mainnet/0x890cbB960ed76a07e76Ef1D39026b1b9Ed50Ab62.sol#774-779):
	External calls:
	- baseRate = oracle.quote() (../../sc/dataset/mainnet/0x890cbB960ed76a07e76Ef1D39026b1b9Ed50Ab62.sol#776)
	State variables written after the call(s):
	- baseRate = (baseRate * targetRateDivisor) / targetRateMultiplier (../../sc/dataset/mainnet/0x890cbB960ed76a07e76Ef1D39026b1b9Ed50Ab62.sol#777)
	- isOracleInitialized = true (../../sc/dataset/mainnet/0x890cbB960ed76a07e76Ef1D39026b1b9Ed50Ab62.sol#778)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2
INFO:Detectors:
Reentrancy in RapidGainz.getRebaseValues() (../../sc/dataset/mainnet/0x890cbB960ed76a07e76Ef1D39026b1b9Ed50Ab62.sol#803-827):
	External calls:
	- exchangeRate = oracle.quote() (../../sc/dataset/mainnet/0x890cbB960ed76a07e76Ef1D39026b1b9Ed50Ab62.sol#804)
	Event emitted after the call(s):
	- GetRebaseValues(exchangeRate,targetRate,supplyDelta.div(dampener)) (../../sc/dataset/mainnet/0x890cbB960ed76a07e76Ef1D39026b1b9Ed50Ab62.sol#816-820)
Reentrancy in RapidGainz.rebase() (../../sc/dataset/mainnet/0x890cbB960ed76a07e76Ef1D39026b1b9Ed50Ab62.sol#829-877):
	External calls:
	- (exchangeRate,targetRate,supplyDelta) = getRebaseValues() (../../sc/dataset/mainnet/0x890cbB960ed76a07e76Ef1D39026b1b9Ed50Ab62.sol#834-838)
		- exchangeRate = oracle.quote() (../../sc/dataset/mainnet/0x890cbB960ed76a07e76Ef1D39026b1b9Ed50Ab62.sol#804)
	Event emitted after the call(s):
	- LogRebase(epoch,baseRate,exchangeRate,baseRate,supplyDelta,block.timestamp) (../../sc/dataset/mainnet/0x890cbB960ed76a07e76Ef1D39026b1b9Ed50Ab62.sol#841-848)
	- LogRebase(epoch,baseRate,exchangeRate,targetRate,supplyDelta,block.timestamp) (../../sc/dataset/mainnet/0x890cbB960ed76a07e76Ef1D39026b1b9Ed50Ab62.sol#866-873)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3
INFO:Detectors:
RapidGainz.rebase() (../../sc/dataset/mainnet/0x890cbB960ed76a07e76Ef1D39026b1b9Ed50Ab62.sol#829-877) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(lastRebaseTimestampSec.add(rebaseCooldown) < block.timestamp,Rebase requested too soon) (../../sc/dataset/mainnet/0x890cbB960ed76a07e76Ef1D39026b1b9Ed50Ab62.sol#831)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp
INFO:Detectors:
RapidGainz.managedFunction() (../../sc/dataset/mainnet/0x890cbB960ed76a07e76Ef1D39026b1b9Ed50Ab62.sol#741-744) compares to a boolean constant:
	-require(bool)(msg.sender == controller || isInCommunityStage == true) (../../sc/dataset/mainnet/0x890cbB960ed76a07e76Ef1D39026b1b9Ed50Ab62.sol#742)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#boolean-equality
INFO:Detectors:
Context._msgData() (../../sc/dataset/mainnet/0x890cbB960ed76a07e76Ef1D39026b1b9Ed50Ab62.sol#294-297) is never used and should be removed
ERC20._beforeTokenTransfer(address,address,uint256) (../../sc/dataset/mainnet/0x890cbB960ed76a07e76Ef1D39026b1b9Ed50Ab62.sol#670) is never used and should be removed
ERC20._burn(address,uint256) (../../sc/dataset/mainnet/0x890cbB960ed76a07e76Ef1D39026b1b9Ed50Ab62.sol#614-622) is never used and should be removed
ERC20._mint(address,uint256) (../../sc/dataset/mainnet/0x890cbB960ed76a07e76Ef1D39026b1b9Ed50Ab62.sol#593-601) is never used and should be removed
ERC20._setupDecimals(uint8) (../../sc/dataset/mainnet/0x890cbB960ed76a07e76Ef1D39026b1b9Ed50Ab62.sol#652-654) is never used and should be removed
ERC20._transfer(address,address,uint256) (../../sc/dataset/mainnet/0x890cbB960ed76a07e76Ef1D39026b1b9Ed50Ab62.sol#573-582) is never used and should be removed
SafeMath.mod(uint256,uint256) (../../sc/dataset/mainnet/0x890cbB960ed76a07e76Ef1D39026b1b9Ed50Ab62.sol#157-160) is never used and should be removed
SafeMath.mod(uint256,uint256,string) (../../sc/dataset/mainnet/0x890cbB960ed76a07e76Ef1D39026b1b9Ed50Ab62.sol#215-218) is never used and should be removed
SafeMath.tryAdd(uint256,uint256) (../../sc/dataset/mainnet/0x890cbB960ed76a07e76Ef1D39026b1b9Ed50Ab62.sol#29-33) is never used and should be removed
SafeMath.tryDiv(uint256,uint256) (../../sc/dataset/mainnet/0x890cbB960ed76a07e76Ef1D39026b1b9Ed50Ab62.sol#65-68) is never used and should be removed
SafeMath.tryMod(uint256,uint256) (../../sc/dataset/mainnet/0x890cbB960ed76a07e76Ef1D39026b1b9Ed50Ab62.sol#75-78) is never used and should be removed
SafeMath.tryMul(uint256,uint256) (../../sc/dataset/mainnet/0x890cbB960ed76a07e76Ef1D39026b1b9Ed50Ab62.sol#50-58) is never used and should be removed
SafeMath.trySub(uint256,uint256) (../../sc/dataset/mainnet/0x890cbB960ed76a07e76Ef1D39026b1b9Ed50Ab62.sol#40-43) is never used and should be removed
SafeMathInt.add(int256,int256) (../../sc/dataset/mainnet/0x890cbB960ed76a07e76Ef1D39026b1b9Ed50Ab62.sol#264-268) is never used and should be removed
SafeMathInt.mul(int256,int256) (../../sc/dataset/mainnet/0x890cbB960ed76a07e76Ef1D39026b1b9Ed50Ab62.sol#232-239) is never used and should be removed
SafeMathInt.sub(int256,int256) (../../sc/dataset/mainnet/0x890cbB960ed76a07e76Ef1D39026b1b9Ed50Ab62.sol#255-259) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code
INFO:Detectors:
RapidGainz.INITIAL_FRAGMENTS_SUPPLY (../../sc/dataset/mainnet/0x890cbB960ed76a07e76Ef1D39026b1b9Ed50Ab62.sol#705) is set pre-construction with a non-constant function or state variable:
	- 100000000 * 10 ** DECIMALS
RapidGainz.TOTAL_GONS (../../sc/dataset/mainnet/0x890cbB960ed76a07e76Ef1D39026b1b9Ed50Ab62.sol#706) is set pre-construction with a non-constant function or state variable:
	- MAX_UINT256 - (MAX_UINT256 % INITIAL_FRAGMENTS_SUPPLY)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#function-initializing-state
INFO:Detectors:
Pragma version>=0.7.0 (../../sc/dataset/mainnet/0x890cbB960ed76a07e76Ef1D39026b1b9Ed50Ab62.sol#8) allows old versions
solc-0.7.6 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity
INFO:Detectors:
Parameter RapidGainz.setRebaseCooldown(uint256)._newRebaseCooldown (../../sc/dataset/mainnet/0x890cbB960ed76a07e76Ef1D39026b1b9Ed50Ab62.sol#746) is not in mixedCase
Parameter RapidGainz.setIsLaunchFinished(bool)._newIsLaunchFinishedValue (../../sc/dataset/mainnet/0x890cbB960ed76a07e76Ef1D39026b1b9Ed50Ab62.sol#750) is not in mixedCase
Parameter RapidGainz.setIsInCommunityStage(bool)._isInCommunityStage (../../sc/dataset/mainnet/0x890cbB960ed76a07e76Ef1D39026b1b9Ed50Ab62.sol#754) is not in mixedCase
Parameter RapidGainz.setDampener(int256)._newDampeningFactor (../../sc/dataset/mainnet/0x890cbB960ed76a07e76Ef1D39026b1b9Ed50Ab62.sol#758) is not in mixedCase
Parameter RapidGainz.setMaxTransferAmountInPercentage(uint256)._maxTransferAmountInPercentage (../../sc/dataset/mainnet/0x890cbB960ed76a07e76Ef1D39026b1b9Ed50Ab62.sol#762) is not in mixedCase
Parameter RapidGainz.setBaseRate(uint256)._newBaseRate (../../sc/dataset/mainnet/0x890cbB960ed76a07e76Ef1D39026b1b9Ed50Ab62.sol#766) is not in mixedCase
Parameter RapidGainz.setTargetRatePercentage(uint256)._rateMultiplier (../../sc/dataset/mainnet/0x890cbB960ed76a07e76Ef1D39026b1b9Ed50Ab62.sol#770) is not in mixedCase
Parameter RapidGainz.setOracle(address)._oracleAddress (../../sc/dataset/mainnet/0x890cbB960ed76a07e76Ef1D39026b1b9Ed50Ab62.sol#774) is not in mixedCase
Parameter RapidGainz.setController(address)._newControllerAddress (../../sc/dataset/mainnet/0x890cbB960ed76a07e76Ef1D39026b1b9Ed50Ab62.sol#781) is not in mixedCase
Variable RapidGainz.MAX_UINT256 (../../sc/dataset/mainnet/0x890cbB960ed76a07e76Ef1D39026b1b9Ed50Ab62.sol#702) is not in mixedCase
Variable RapidGainz.MAX_ALLOWED_SUPPLY (../../sc/dataset/mainnet/0x890cbB960ed76a07e76Ef1D39026b1b9Ed50Ab62.sol#703) is not in mixedCase
Variable RapidGainz.DECIMALS (../../sc/dataset/mainnet/0x890cbB960ed76a07e76Ef1D39026b1b9Ed50Ab62.sol#704) is not in mixedCase
Variable RapidGainz.INITIAL_FRAGMENTS_SUPPLY (../../sc/dataset/mainnet/0x890cbB960ed76a07e76Ef1D39026b1b9Ed50Ab62.sol#705) is not in mixedCase
Variable RapidGainz.TOTAL_GONS (../../sc/dataset/mainnet/0x890cbB960ed76a07e76Ef1D39026b1b9Ed50Ab62.sol#706) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions
INFO:Detectors:
Redundant expression "this (../../sc/dataset/mainnet/0x890cbB960ed76a07e76Ef1D39026b1b9Ed50Ab62.sol#295)" inContext (../../sc/dataset/mainnet/0x890cbB960ed76a07e76Ef1D39026b1b9Ed50Ab62.sol#289-298)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#redundant-statements
INFO:Detectors:
RapidGainz.slitherConstructorVariables() (../../sc/dataset/mainnet/0x890cbB960ed76a07e76Ef1D39026b1b9Ed50Ab62.sol#679-889) uses literals with too many digits:
	- INITIAL_FRAGMENTS_SUPPLY = 100000000 * 10 ** DECIMALS (../../sc/dataset/mainnet/0x890cbB960ed76a07e76Ef1D39026b1b9Ed50Ab62.sol#705)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits
INFO:Detectors:
SafeMathInt.MAX_INT256 (../../sc/dataset/mainnet/0x890cbB960ed76a07e76Ef1D39026b1b9Ed50Ab62.sol#227) is never used in SafeMathInt (../../sc/dataset/mainnet/0x890cbB960ed76a07e76Ef1D39026b1b9Ed50Ab62.sol#225-277)
RapidGainz._allowances (../../sc/dataset/mainnet/0x890cbB960ed76a07e76Ef1D39026b1b9Ed50Ab62.sol#699) is never used in RapidGainz (../../sc/dataset/mainnet/0x890cbB960ed76a07e76Ef1D39026b1b9Ed50Ab62.sol#679-889)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-state-variable
INFO:Detectors:
RapidGainz.DECIMALS (../../sc/dataset/mainnet/0x890cbB960ed76a07e76Ef1D39026b1b9Ed50Ab62.sol#704) should be constant 
RapidGainz.MAX_ALLOWED_SUPPLY (../../sc/dataset/mainnet/0x890cbB960ed76a07e76Ef1D39026b1b9Ed50Ab62.sol#703) should be constant 
RapidGainz.MAX_UINT256 (../../sc/dataset/mainnet/0x890cbB960ed76a07e76Ef1D39026b1b9Ed50Ab62.sol#702) should be constant 
RapidGainz.targetRateDivisor (../../sc/dataset/mainnet/0x890cbB960ed76a07e76Ef1D39026b1b9Ed50Ab62.sol#710) should be constant 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant
INFO:Detectors:
RapidGainz.INITIAL_FRAGMENTS_SUPPLY (../../sc/dataset/mainnet/0x890cbB960ed76a07e76Ef1D39026b1b9Ed50Ab62.sol#705) should be immutable 
RapidGainz.TOTAL_GONS (../../sc/dataset/mainnet/0x890cbB960ed76a07e76Ef1D39026b1b9Ed50Ab62.sol#706) should be immutable 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-immutable
INFO:Slither:/bdata2/sc/dataset/mainnet/0x890cbB960ed76a07e76Ef1D39026b1b9Ed50Ab62.sol analyzed (7 contracts with 85 detectors), 61 result(s) found
