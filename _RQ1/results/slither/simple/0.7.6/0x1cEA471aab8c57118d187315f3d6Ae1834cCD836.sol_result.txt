Compilation warnings/errors on /bdata2/sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol:
Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it "abstract" is sufficient.
   --> /bdata2/sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol:400:5:
    |
400 |     constructor () internal {
    |     ^ (Relevant source part starts here and spans across multiple lines).

Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it "abstract" is sufficient.
    --> /bdata2/sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol:1650:5:
     |
1650 |     constructor (string memory name_, string memory symbol_) public {
     |     ^ (Relevant source part starts here and spans across multiple lines).

Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    --> /bdata2/sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol:2486:9:
     |
2486 |         bytes calldata data
     |         ^^^^^^^^^^^^^^^^^^^

Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    --> /bdata2/sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol:2497:9:
     |
2497 |         bytes calldata data
     |         ^^^^^^^^^^^^^^^^^^^

Warning: Contract code size exceeds 24576 bytes (a limit introduced in Spurious Dragon). This contract may not be deployable on mainnet. Consider enabling the optimizer (with a low "runs" value!), turning off revert strings, or using libraries.
    --> /bdata2/sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol:1996:1:
     |
1996 | contract AlphaVault is
     | ^ (Relevant source part starts here and spans across multiple lines).


INFO:Detectors:
FullMath.mulDiv(uint256,uint256,uint256) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#674-766) performs a multiplication on the result of a division:
	- denominator = denominator / twos (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#727)
	- inv = (3 * denominator) ^ 2 (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#747)
FullMath.mulDiv(uint256,uint256,uint256) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#674-766) performs a multiplication on the result of a division:
	- denominator = denominator / twos (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#727)
	- inv *= 2 - denominator * inv (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#751)
FullMath.mulDiv(uint256,uint256,uint256) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#674-766) performs a multiplication on the result of a division:
	- denominator = denominator / twos (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#727)
	- inv *= 2 - denominator * inv (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#752)
FullMath.mulDiv(uint256,uint256,uint256) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#674-766) performs a multiplication on the result of a division:
	- denominator = denominator / twos (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#727)
	- inv *= 2 - denominator * inv (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#753)
FullMath.mulDiv(uint256,uint256,uint256) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#674-766) performs a multiplication on the result of a division:
	- denominator = denominator / twos (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#727)
	- inv *= 2 - denominator * inv (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#754)
FullMath.mulDiv(uint256,uint256,uint256) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#674-766) performs a multiplication on the result of a division:
	- denominator = denominator / twos (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#727)
	- inv *= 2 - denominator * inv (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#755)
FullMath.mulDiv(uint256,uint256,uint256) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#674-766) performs a multiplication on the result of a division:
	- denominator = denominator / twos (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#727)
	- inv *= 2 - denominator * inv (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#756)
FullMath.mulDiv(uint256,uint256,uint256) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#674-766) performs a multiplication on the result of a division:
	- prod0 = prod0 / twos (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#732)
	- result = prod0 * inv (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#764)
PassiveStrategy._floor(int24) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2759-2763) performs a multiplication on the result of a division:
	- compressed = tick / tickSpacing (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2760)
	- compressed * tickSpacing (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2762)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#divide-before-multiply
INFO:Detectors:
Reentrancy in AlphaVault.deposit(uint256,uint256,uint256,uint256,address) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2087-2124):
	External calls:
	- _poke(baseLower,baseUpper) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2107)
		- pool.burn(tickLower,tickUpper,0) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2132)
	- _poke(limitLower,limitUpper) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2108)
		- pool.burn(tickLower,tickUpper,0) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2132)
	- token0.safeTransferFrom(msg.sender,address(this),amount0) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2117)
	- token1.safeTransferFrom(msg.sender,address(this),amount1) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2118)
	State variables written after the call(s):
	- _mint(to,shares) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2121)
		- _totalSupply = _totalSupply.add(amount) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#1828)
	ERC20._totalSupply (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#1635) can be used in cross function reentrancies:
	- ERC20.totalSupply() (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#1691-1693)
Reentrancy in AlphaVault.rebalance(int256,uint160,int24,int24,int24,int24,int24,int24) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2248-2310):
	External calls:
	- _burnAndCollect(baseLower,baseUpper,baseLiquidity) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2271)
		- (burned0,burned1) = pool.burn(tickLower,tickUpper,liquidity) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2337)
		- (collect0,collect1) = pool.collect(address(this),tickLower,tickUpper,type()(uint128).max,type()(uint128).max) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2341-2348)
	- _burnAndCollect(limitLower,limitUpper,limitLiquidity) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2272)
		- (burned0,burned1) = pool.burn(tickLower,tickUpper,liquidity) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2337)
		- (collect0,collect1) = pool.collect(address(this),tickLower,tickUpper,type()(uint128).max,type()(uint128).max) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2341-2348)
	State variables written after the call(s):
	- _burnAndCollect(limitLower,limitUpper,limitLiquidity) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2272)
		- accruedProtocolFees0 = accruedProtocolFees0.add(feesToProtocol0) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2362)
	AlphaVault.accruedProtocolFees0 (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2046) can be used in cross function reentrancies:
	- AlphaVault.accruedProtocolFees0 (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2046)
	- AlphaVault.collectProtocol(uint256,uint256,address) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2507-2516)
	- AlphaVault.getBalance0() (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2415-2417)
	- _burnAndCollect(limitLower,limitUpper,limitLiquidity) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2272)
		- accruedProtocolFees1 = accruedProtocolFees1.add(feesToProtocol1) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2363)
	AlphaVault.accruedProtocolFees1 (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2047) can be used in cross function reentrancies:
	- AlphaVault.accruedProtocolFees1 (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2047)
	- AlphaVault.collectProtocol(uint256,uint256,address) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2507-2516)
	- AlphaVault.getBalance1() (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2422-2424)
Reentrancy in AlphaVault.rebalance(int256,uint160,int24,int24,int24,int24,int24,int24) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2248-2310):
	External calls:
	- _burnAndCollect(baseLower,baseUpper,baseLiquidity) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2271)
		- (burned0,burned1) = pool.burn(tickLower,tickUpper,liquidity) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2337)
		- (collect0,collect1) = pool.collect(address(this),tickLower,tickUpper,type()(uint128).max,type()(uint128).max) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2341-2348)
	- _burnAndCollect(limitLower,limitUpper,limitLiquidity) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2272)
		- (burned0,burned1) = pool.burn(tickLower,tickUpper,liquidity) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2337)
		- (collect0,collect1) = pool.collect(address(this),tickLower,tickUpper,type()(uint128).max,type()(uint128).max) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2341-2348)
	- _mintLiquidity(_baseLower,_baseUpper,liquidity) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2294)
		- pool.mint(address(this),tickLower,tickUpper,liquidity,) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2375)
	- pool.swap(address(this),swapAmount > 0,swapAmount,sqrtPriceLimitX96,) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2281-2287)
	- pool.swap(address(this),swapAmount > 0,- swapAmount,sqrtPriceLimitX96,) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2281-2287)
	State variables written after the call(s):
	- (baseLower,baseUpper) = (_baseLower,_baseUpper) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2295)
	AlphaVault.baseLower (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2042) can be used in cross function reentrancies:
	- AlphaVault.baseLower (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2042)
	- AlphaVault.getTotalAmounts() (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2384-2390)
	- (baseLower,baseUpper) = (_baseLower,_baseUpper) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2295)
	AlphaVault.baseUpper (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2043) can be used in cross function reentrancies:
	- AlphaVault.baseUpper (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2043)
	- AlphaVault.getTotalAmounts() (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2384-2390)
Reentrancy in AlphaVault.rebalance(int256,uint160,int24,int24,int24,int24,int24,int24) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2248-2310):
	External calls:
	- _burnAndCollect(baseLower,baseUpper,baseLiquidity) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2271)
		- (burned0,burned1) = pool.burn(tickLower,tickUpper,liquidity) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2337)
		- (collect0,collect1) = pool.collect(address(this),tickLower,tickUpper,type()(uint128).max,type()(uint128).max) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2341-2348)
	- _burnAndCollect(limitLower,limitUpper,limitLiquidity) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2272)
		- (burned0,burned1) = pool.burn(tickLower,tickUpper,liquidity) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2337)
		- (collect0,collect1) = pool.collect(address(this),tickLower,tickUpper,type()(uint128).max,type()(uint128).max) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2341-2348)
	- _mintLiquidity(_baseLower,_baseUpper,liquidity) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2294)
		- pool.mint(address(this),tickLower,tickUpper,liquidity,) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2375)
	- _mintLiquidity(_bidLower,_bidUpper,bidLiquidity) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2304)
		- pool.mint(address(this),tickLower,tickUpper,liquidity,) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2375)
	- pool.swap(address(this),swapAmount > 0,swapAmount,sqrtPriceLimitX96,) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2281-2287)
	- pool.swap(address(this),swapAmount > 0,- swapAmount,sqrtPriceLimitX96,) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2281-2287)
	State variables written after the call(s):
	- (limitLower,limitUpper) = (_bidLower,_bidUpper) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2305)
	AlphaVault.limitLower (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2044) can be used in cross function reentrancies:
	- AlphaVault.getTotalAmounts() (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2384-2390)
	- AlphaVault.limitLower (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2044)
	- (limitLower,limitUpper) = (_bidLower,_bidUpper) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2305)
	AlphaVault.limitUpper (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2045) can be used in cross function reentrancies:
	- AlphaVault.getTotalAmounts() (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2384-2390)
	- AlphaVault.limitUpper (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2045)
Reentrancy in AlphaVault.rebalance(int256,uint160,int24,int24,int24,int24,int24,int24) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2248-2310):
	External calls:
	- _burnAndCollect(baseLower,baseUpper,baseLiquidity) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2271)
		- (burned0,burned1) = pool.burn(tickLower,tickUpper,liquidity) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2337)
		- (collect0,collect1) = pool.collect(address(this),tickLower,tickUpper,type()(uint128).max,type()(uint128).max) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2341-2348)
	- _burnAndCollect(limitLower,limitUpper,limitLiquidity) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2272)
		- (burned0,burned1) = pool.burn(tickLower,tickUpper,liquidity) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2337)
		- (collect0,collect1) = pool.collect(address(this),tickLower,tickUpper,type()(uint128).max,type()(uint128).max) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2341-2348)
	- _mintLiquidity(_baseLower,_baseUpper,liquidity) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2294)
		- pool.mint(address(this),tickLower,tickUpper,liquidity,) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2375)
	- _mintLiquidity(_askLower,_askUpper,askLiquidity) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2307)
		- pool.mint(address(this),tickLower,tickUpper,liquidity,) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2375)
	- pool.swap(address(this),swapAmount > 0,swapAmount,sqrtPriceLimitX96,) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2281-2287)
	- pool.swap(address(this),swapAmount > 0,- swapAmount,sqrtPriceLimitX96,) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2281-2287)
	State variables written after the call(s):
	- (limitLower,limitUpper) = (_askLower,_askUpper) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2308)
	AlphaVault.limitLower (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2044) can be used in cross function reentrancies:
	- AlphaVault.getTotalAmounts() (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2384-2390)
	- AlphaVault.limitLower (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2044)
	- (limitLower,limitUpper) = (_askLower,_askUpper) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2308)
	AlphaVault.limitUpper (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2045) can be used in cross function reentrancies:
	- AlphaVault.getTotalAmounts() (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2384-2390)
	- AlphaVault.limitUpper (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2045)
Reentrancy in PassiveStrategy.rebalance() (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2687-2707):
	External calls:
	- vault.rebalance(0,0,tickFloor - baseThreshold,tickCeil + baseThreshold,tickFloor - limitThreshold,tickFloor,tickCeil,tickCeil + limitThreshold) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2694-2703)
	State variables written after the call(s):
	- lastTick = tick (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2706)
	PassiveStrategy.lastTick (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2637) can be used in cross function reentrancies:
	- PassiveStrategy.constructor(address,int24,int24,uint256,int24,int24,uint32,address) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2649-2681)
	- PassiveStrategy.lastTick (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2637)
	- PassiveStrategy.rebalance() (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2687-2707)
	- PassiveStrategy.shouldRebalance() (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2709-2744)
	- lastTimestamp = block.timestamp (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2705)
	PassiveStrategy.lastTimestamp (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2636) can be used in cross function reentrancies:
	- PassiveStrategy.lastTimestamp (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2636)
	- PassiveStrategy.rebalance() (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2687-2707)
	- PassiveStrategy.shouldRebalance() (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2709-2744)
Reentrancy in AlphaVault.withdraw(uint256,uint256,uint256,address) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2185-2219):
	External calls:
	- (baseAmount0,baseAmount1) = _burnLiquidityShare(baseLower,baseUpper,shares,totalSupply) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2203-2204)
		- (burned0,burned1) = pool.burn(tickLower,tickUpper,liquidity) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2337)
		- (collect0,collect1) = pool.collect(address(this),tickLower,tickUpper,type()(uint128).max,type()(uint128).max) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2341-2348)
	- (limitAmount0,limitAmount1) = _burnLiquidityShare(limitLower,limitUpper,shares,totalSupply) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2205-2206)
		- (burned0,burned1) = pool.burn(tickLower,tickUpper,liquidity) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2337)
		- (collect0,collect1) = pool.collect(address(this),tickLower,tickUpper,type()(uint128).max,type()(uint128).max) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2341-2348)
	State variables written after the call(s):
	- (limitAmount0,limitAmount1) = _burnLiquidityShare(limitLower,limitUpper,shares,totalSupply) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2205-2206)
		- accruedProtocolFees0 = accruedProtocolFees0.add(feesToProtocol0) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2362)
	AlphaVault.accruedProtocolFees0 (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2046) can be used in cross function reentrancies:
	- AlphaVault.accruedProtocolFees0 (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2046)
	- AlphaVault.collectProtocol(uint256,uint256,address) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2507-2516)
	- AlphaVault.getBalance0() (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2415-2417)
	- (limitAmount0,limitAmount1) = _burnLiquidityShare(limitLower,limitUpper,shares,totalSupply) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2205-2206)
		- accruedProtocolFees1 = accruedProtocolFees1.add(feesToProtocol1) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2363)
	AlphaVault.accruedProtocolFees1 (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2047) can be used in cross function reentrancies:
	- AlphaVault.accruedProtocolFees1 (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2047)
	- AlphaVault.collectProtocol(uint256,uint256,address) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2507-2516)
	- AlphaVault.getBalance1() (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2422-2424)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1
INFO:Detectors:
AlphaVault._burnAndCollect(int24,int24,uint128).feesToProtocol1 (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2353) is a local variable never initialized
AlphaVault._burnAndCollect(int24,int24,uint128).feesToProtocol0 (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2352) is a local variable never initialized
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#uninitialized-local-variables
INFO:Detectors:
AlphaVault._poke(int24,int24) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2129-2134) ignores return value by pool.burn(tickLower,tickUpper,0) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2132)
AlphaVault.rebalance(int256,uint160,int24,int24,int24,int24,int24,int24) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2248-2310) ignores return value by pool.swap(address(this),swapAmount > 0,swapAmount,sqrtPriceLimitX96,) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2281-2287)
AlphaVault.rebalance(int256,uint160,int24,int24,int24,int24,int24,int24) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2248-2310) ignores return value by pool.swap(address(this),swapAmount > 0,- swapAmount,sqrtPriceLimitX96,) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2281-2287)
AlphaVault._mintLiquidity(int24,int24,uint128) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2369-2377) ignores return value by pool.mint(address(this),tickLower,tickUpper,liquidity,) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2375)
AlphaVault.emergencyBurn(int24,int24,uint128) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2561-2568) ignores return value by pool.burn(tickLower,tickUpper,liquidity) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2566)
AlphaVault.emergencyBurn(int24,int24,uint128) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2561-2568) ignores return value by pool.collect(address(this),tickLower,tickUpper,type()(uint128).max,type()(uint128).max) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2567)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return
INFO:Detectors:
AlphaVault._calcSharesAndAmounts(uint256,uint256).totalSupply (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2148) shadows:
	- ERC20.totalSupply() (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#1691-1693) (function)
	- IERC20.totalSupply() (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#268) (function)
AlphaVault.withdraw(uint256,uint256,uint256,address).totalSupply (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2193) shadows:
	- ERC20.totalSupply() (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#1691-1693) (function)
	- IERC20.totalSupply() (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#268) (function)
AlphaVault._burnLiquidityShare(int24,int24,uint256,uint256).totalSupply (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2226) shadows:
	- ERC20.totalSupply() (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#1691-1693) (function)
	- IERC20.totalSupply() (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#268) (function)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing
INFO:Detectors:
AlphaVault.acceptGovernance() (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2582-2585) should emit an event for: 
	- governance = msg.sender (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2584) 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-access-control
INFO:Detectors:
AlphaVault.collectProtocol(uint256,uint256,address) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2507-2516) should emit an event for: 
	- accruedProtocolFees0 = accruedProtocolFees0.sub(amount0) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2512) 
	- accruedProtocolFees1 = accruedProtocolFees1.sub(amount1) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2513) 
AlphaVault.setProtocolFee(uint256) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2543-2546) should emit an event for: 
	- protocolFee = _protocolFee (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2545) 
AlphaVault.setMaxTotalSupply(uint256) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2554-2556) should emit an event for: 
	- maxTotalSupply = _maxTotalSupply (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2555) 
PassiveStrategy.setTwapDuration(uint32) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2799-2802) should emit an event for: 
	- twapDuration = _twapDuration (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2801) 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-arithmetic
INFO:Detectors:
AlphaVault.setStrategy(address)._strategy (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2535) lacks a zero-check on :
		- strategy = _strategy (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2536)
AlphaVault.setGovernance(address)._governance (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2574) lacks a zero-check on :
		- pendingGovernance = _governance (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2575)
PassiveStrategy.constructor(address,int24,int24,uint256,int24,int24,uint32,address)._keeper (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2657) lacks a zero-check on :
		- keeper = _keeper (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2672)
PassiveStrategy.setKeeper(address)._keeper (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2771) lacks a zero-check on :
		- keeper = _keeper (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2772)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation
INFO:Detectors:
Reentrancy in AlphaVault._burnAndCollect(int24,int24,uint128) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2323-2366):
	External calls:
	- (burned0,burned1) = pool.burn(tickLower,tickUpper,liquidity) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2337)
	- (collect0,collect1) = pool.collect(address(this),tickLower,tickUpper,type()(uint128).max,type()(uint128).max) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2341-2348)
	State variables written after the call(s):
	- accruedProtocolFees0 = accruedProtocolFees0.add(feesToProtocol0) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2362)
	- accruedProtocolFees1 = accruedProtocolFees1.add(feesToProtocol1) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2363)
Reentrancy in AlphaVault.deposit(uint256,uint256,uint256,uint256,address) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2087-2124):
	External calls:
	- _poke(baseLower,baseUpper) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2107)
		- pool.burn(tickLower,tickUpper,0) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2132)
	- _poke(limitLower,limitUpper) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2108)
		- pool.burn(tickLower,tickUpper,0) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2132)
	- token0.safeTransferFrom(msg.sender,address(this),amount0) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2117)
	- token1.safeTransferFrom(msg.sender,address(this),amount1) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2118)
	State variables written after the call(s):
	- _mint(to,shares) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2121)
		- _balances[account] = _balances[account].add(amount) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#1829)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2
INFO:Detectors:
PassiveStrategy.shouldRebalance() (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2709-2744) uses timestamp for comparisons
	Dangerous comparisons:
	- block.timestamp < lastTimestamp.add(period) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2716)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp
INFO:Detectors:
Address.isContract(address) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#71-80) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#78)
Address._verifyCallResult(bool,bytes,string) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#216-233) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#225-228)
FullMath.mulDiv(uint256,uint256,uint256) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#674-766) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#686-690)
	- INLINE ASM (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#695-697)
	- INLINE ASM (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#712-714)
	- INLINE ASM (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#716-719)
	- INLINE ASM (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#726-728)
	- INLINE ASM (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#731-733)
	- INLINE ASM (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#737-739)
TickMath.getTickAtSqrtRatio(uint160) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#1322-1465) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#1330-1334)
	- INLINE ASM (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#1335-1339)
	- INLINE ASM (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#1340-1344)
	- INLINE ASM (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#1345-1349)
	- INLINE ASM (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#1350-1354)
	- INLINE ASM (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#1355-1359)
	- INLINE ASM (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#1360-1364)
	- INLINE ASM (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#1365-1368)
	- INLINE ASM (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#1375-1380)
	- INLINE ASM (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#1381-1386)
	- INLINE ASM (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#1387-1392)
	- INLINE ASM (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#1393-1398)
	- INLINE ASM (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#1399-1404)
	- INLINE ASM (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#1405-1410)
	- INLINE ASM (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#1411-1416)
	- INLINE ASM (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#1417-1422)
	- INLINE ASM (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#1423-1428)
	- INLINE ASM (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#1429-1434)
	- INLINE ASM (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#1435-1440)
	- INLINE ASM (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#1441-1446)
	- INLINE ASM (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#1447-1452)
	- INLINE ASM (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#1453-1457)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage
INFO:Detectors:
TickMath.getSqrtRatioAtTick(int24) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#1284-1315) has a high cyclomatic complexity (24).
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#cyclomatic-complexity
INFO:Detectors:
Address.functionCall(address,bytes) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#124-126) is never used and should be removed
Address.functionCallWithValue(address,bytes,uint256) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#149-151) is never used and should be removed
Address.functionDelegateCall(address,bytes) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#198-200) is never used and should be removed
Address.functionDelegateCall(address,bytes,string) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#208-214) is never used and should be removed
Address.functionStaticCall(address,bytes) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#174-176) is never used and should be removed
Address.functionStaticCall(address,bytes,string) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#184-190) is never used and should be removed
Address.sendValue(address,uint256) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#98-104) is never used and should be removed
Context._msgData() (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#253-256) is never used and should be removed
ERC20._setupDecimals(uint8) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#1882-1884) is never used and should be removed
FullMath.mulDivRoundingUp(uint256,uint256,uint256) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#773-783) is never used and should be removed
Math.average(uint256,uint256) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#359-362) is never used and should be removed
SafeERC20.safeApprove(IERC20,address,uint256) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#1933-1942) is never used and should be removed
SafeERC20.safeDecreaseAllowance(IERC20,address,uint256) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#1949-1952) is never used and should be removed
SafeERC20.safeIncreaseAllowance(IERC20,address,uint256) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#1944-1947) is never used and should be removed
SafeMath.div(uint256,uint256,string) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#613-616) is never used and should be removed
SafeMath.mod(uint256,uint256) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#575-578) is never used and should be removed
SafeMath.mod(uint256,uint256,string) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#633-636) is never used and should be removed
SafeMath.tryAdd(uint256,uint256) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#447-451) is never used and should be removed
SafeMath.tryDiv(uint256,uint256) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#483-486) is never used and should be removed
SafeMath.tryMod(uint256,uint256) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#493-496) is never used and should be removed
SafeMath.tryMul(uint256,uint256) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#468-476) is never used and should be removed
SafeMath.trySub(uint256,uint256) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#458-461) is never used and should be removed
TickMath.getTickAtSqrtRatio(uint160) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#1322-1465) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code
INFO:Detectors:
Pragma version0.7.6 (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#9) allows old versions
solc-0.7.6 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity
INFO:Detectors:
Low level call in Address.sendValue(address,uint256) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#98-104):
	- (success) = recipient.call{value: amount}() (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#102)
Low level call in Address.functionCallWithValue(address,bytes,uint256,string) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#159-166):
	- (success,returndata) = target.call{value: value}(data) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#164)
Low level call in Address.functionStaticCall(address,bytes,string) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#184-190):
	- (success,returndata) = target.staticcall(data) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#188)
Low level call in Address.functionDelegateCall(address,bytes,string) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#208-214):
	- (success,returndata) = target.delegatecall(data) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#212)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls
INFO:Detectors:
Parameter AlphaVault.rebalance(int256,uint160,int24,int24,int24,int24,int24,int24)._baseLower (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2251) is not in mixedCase
Parameter AlphaVault.rebalance(int256,uint160,int24,int24,int24,int24,int24,int24)._baseUpper (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2252) is not in mixedCase
Parameter AlphaVault.rebalance(int256,uint160,int24,int24,int24,int24,int24,int24)._bidLower (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2253) is not in mixedCase
Parameter AlphaVault.rebalance(int256,uint160,int24,int24,int24,int24,int24,int24)._bidUpper (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2254) is not in mixedCase
Parameter AlphaVault.rebalance(int256,uint160,int24,int24,int24,int24,int24,int24)._askLower (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2255) is not in mixedCase
Parameter AlphaVault.rebalance(int256,uint160,int24,int24,int24,int24,int24,int24)._askUpper (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2256) is not in mixedCase
Parameter AlphaVault.setStrategy(address)._strategy (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2535) is not in mixedCase
Parameter AlphaVault.setProtocolFee(uint256)._protocolFee (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2543) is not in mixedCase
Parameter AlphaVault.setMaxTotalSupply(uint256)._maxTotalSupply (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2554) is not in mixedCase
Parameter AlphaVault.setGovernance(address)._governance (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2574) is not in mixedCase
Parameter PassiveStrategy.setKeeper(address)._keeper (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2771) is not in mixedCase
Parameter PassiveStrategy.setBaseThreshold(int24)._baseThreshold (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2775) is not in mixedCase
Parameter PassiveStrategy.setLimitThreshold(int24)._limitThreshold (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2780) is not in mixedCase
Parameter PassiveStrategy.setPeriod(uint256)._period (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2785) is not in mixedCase
Parameter PassiveStrategy.setMinTickMove(int24)._minTickMove (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2789) is not in mixedCase
Parameter PassiveStrategy.setMaxTwapDeviation(int24)._maxTwapDeviation (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2794) is not in mixedCase
Parameter PassiveStrategy.setTwapDuration(uint32)._twapDuration (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2799) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions
INFO:Detectors:
Redundant expression "this (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#254)" inContext (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#248-257)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#redundant-statements
INFO:Detectors:
Variable IUniswapV3MintCallback.uniswapV3MintCallback(uint256,uint256,bytes).amount0Owed (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#798) is too similar to IUniswapV3MintCallback.uniswapV3MintCallback(uint256,uint256,bytes).amount1Owed (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#799)
Variable IUniswapV3PoolActions.collect(address,int24,int24,uint128,uint128).amount0Requested (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#849) is too similar to IUniswapV3PoolActions.collect(address,int24,int24,uint128,uint128).amount1Requested (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#850)
Variable IUniswapV3PoolOwnerActions.collectProtocol(address,uint128,uint128).amount0Requested (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#1121) is too similar to IUniswapV3PoolOwnerActions.collectProtocol(address,uint128,uint128).amount1Requested (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#1122)
Variable IUniswapV3PoolOwnerActions.setFeeProtocol(uint8,uint8).feeProtocol0 (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#1111) is too similar to IUniswapV3PoolOwnerActions.setFeeProtocol(uint8,uint8).feeProtocol1 (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#1111)
Variable IUniswapV3PoolState.positions(bytes32).feeGrowthInside0LastX128 (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#1217) is too similar to IUniswapV3PoolState.positions(bytes32).feeGrowthInside1LastX128 (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#1218)
Variable IUniswapV3PoolState.ticks(int24).feeGrowthOutside0X128 (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#1194) is too similar to IUniswapV3PoolState.ticks(int24).feeGrowthOutside1X128 (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#1195)
Variable IUniswapV3PoolState.positions(bytes32).tokensOwed0 (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#1219) is too similar to IUniswapV3PoolState.positions(bytes32).tokensOwed1 (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#1220)
Variable IUniswapV3SwapCallback.uniswapV3SwapCallback(int256,int256,bytes).amount0Delta (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#1257) is too similar to IUniswapV3SwapCallback.uniswapV3SwapCallback(int256,int256,bytes).amount1Delta (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#1258)
Variable LiquidityAmounts.getAmount0ForLiquidity(uint160,uint160,uint128).sqrtRatioAX96 (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#1546) is too similar to LiquidityAmounts.getAmount0ForLiquidity(uint160,uint160,uint128).sqrtRatioBX96 (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#1547)
Variable LiquidityAmounts.getAmountsForLiquidity(uint160,uint160,uint160,uint128).sqrtRatioAX96 (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#1585) is too similar to LiquidityAmounts.getAmountsForLiquidity(uint160,uint160,uint160,uint128).sqrtRatioBX96 (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#1586)
Variable LiquidityAmounts.getLiquidityForAmount1(uint160,uint160,uint256).sqrtRatioAX96 (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#1503) is too similar to LiquidityAmounts.getLiquidityForAmount1(uint160,uint160,uint256).sqrtRatioBX96 (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#1504)
Variable LiquidityAmounts.getAmountsForLiquidity(uint160,uint160,uint160,uint128).sqrtRatioAX96 (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#1585) is too similar to LiquidityAmounts.getLiquidityForAmount0(uint160,uint160,uint256).sqrtRatioBX96 (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#1488)
Variable LiquidityAmounts.getAmount1ForLiquidity(uint160,uint160,uint128).sqrtRatioAX96 (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#1566) is too similar to LiquidityAmounts.getLiquidityForAmounts(uint160,uint160,uint160,uint256,uint256).sqrtRatioBX96 (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#1522)
Variable LiquidityAmounts.getLiquidityForAmounts(uint160,uint160,uint160,uint256,uint256).sqrtRatioAX96 (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#1521) is too similar to LiquidityAmounts.getLiquidityForAmounts(uint160,uint160,uint160,uint256,uint256).sqrtRatioBX96 (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#1522)
Variable LiquidityAmounts.getAmount1ForLiquidity(uint160,uint160,uint128).sqrtRatioAX96 (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#1566) is too similar to LiquidityAmounts.getLiquidityForAmount0(uint160,uint160,uint256).sqrtRatioBX96 (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#1488)
Variable LiquidityAmounts.getAmount1ForLiquidity(uint160,uint160,uint128).sqrtRatioAX96 (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#1566) is too similar to LiquidityAmounts.getAmountsForLiquidity(uint160,uint160,uint160,uint128).sqrtRatioBX96 (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#1586)
Variable LiquidityAmounts.getLiquidityForAmount0(uint160,uint160,uint256).sqrtRatioAX96 (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#1487) is too similar to LiquidityAmounts.getLiquidityForAmounts(uint160,uint160,uint160,uint256,uint256).sqrtRatioBX96 (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#1522)
Variable LiquidityAmounts.getAmount1ForLiquidity(uint160,uint160,uint128).sqrtRatioAX96 (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#1566) is too similar to LiquidityAmounts.getAmount0ForLiquidity(uint160,uint160,uint128).sqrtRatioBX96 (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#1547)
Variable LiquidityAmounts.getLiquidityForAmount1(uint160,uint160,uint256).sqrtRatioAX96 (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#1503) is too similar to LiquidityAmounts.getLiquidityForAmounts(uint160,uint160,uint160,uint256,uint256).sqrtRatioBX96 (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#1522)
Variable LiquidityAmounts.getLiquidityForAmounts(uint160,uint160,uint160,uint256,uint256).sqrtRatioAX96 (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#1521) is too similar to LiquidityAmounts.getAmountsForLiquidity(uint160,uint160,uint160,uint128).sqrtRatioBX96 (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#1586)
Variable LiquidityAmounts.getLiquidityForAmount0(uint160,uint160,uint256).sqrtRatioAX96 (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#1487) is too similar to LiquidityAmounts.getLiquidityForAmount0(uint160,uint160,uint256).sqrtRatioBX96 (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#1488)
Variable LiquidityAmounts.getLiquidityForAmount0(uint160,uint160,uint256).sqrtRatioAX96 (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#1487) is too similar to LiquidityAmounts.getAmountsForLiquidity(uint160,uint160,uint160,uint128).sqrtRatioBX96 (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#1586)
Variable LiquidityAmounts.getAmount0ForLiquidity(uint160,uint160,uint128).sqrtRatioAX96 (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#1546) is too similar to LiquidityAmounts.getLiquidityForAmounts(uint160,uint160,uint160,uint256,uint256).sqrtRatioBX96 (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#1522)
Variable LiquidityAmounts.getLiquidityForAmount1(uint160,uint160,uint256).sqrtRatioAX96 (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#1503) is too similar to LiquidityAmounts.getLiquidityForAmount0(uint160,uint160,uint256).sqrtRatioBX96 (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#1488)
Variable LiquidityAmounts.getLiquidityForAmount1(uint160,uint160,uint256).sqrtRatioAX96 (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#1503) is too similar to LiquidityAmounts.getAmountsForLiquidity(uint160,uint160,uint160,uint128).sqrtRatioBX96 (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#1586)
Variable LiquidityAmounts.getLiquidityForAmount0(uint160,uint160,uint256).sqrtRatioAX96 (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#1487) is too similar to LiquidityAmounts.getAmount0ForLiquidity(uint160,uint160,uint128).sqrtRatioBX96 (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#1547)
Variable LiquidityAmounts.getAmount1ForLiquidity(uint160,uint160,uint128).sqrtRatioAX96 (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#1566) is too similar to LiquidityAmounts.getLiquidityForAmount1(uint160,uint160,uint256).sqrtRatioBX96 (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#1504)
Variable LiquidityAmounts.getAmount0ForLiquidity(uint160,uint160,uint128).sqrtRatioAX96 (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#1546) is too similar to LiquidityAmounts.getLiquidityForAmount0(uint160,uint160,uint256).sqrtRatioBX96 (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#1488)
Variable LiquidityAmounts.getAmount0ForLiquidity(uint160,uint160,uint128).sqrtRatioAX96 (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#1546) is too similar to LiquidityAmounts.getAmountsForLiquidity(uint160,uint160,uint160,uint128).sqrtRatioBX96 (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#1586)
Variable LiquidityAmounts.getLiquidityForAmount1(uint160,uint160,uint256).sqrtRatioAX96 (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#1503) is too similar to LiquidityAmounts.getAmount0ForLiquidity(uint160,uint160,uint128).sqrtRatioBX96 (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#1547)
Variable LiquidityAmounts.getAmountsForLiquidity(uint160,uint160,uint160,uint128).sqrtRatioAX96 (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#1585) is too similar to LiquidityAmounts.getLiquidityForAmounts(uint160,uint160,uint160,uint256,uint256).sqrtRatioBX96 (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#1522)
Variable LiquidityAmounts.getAmount1ForLiquidity(uint160,uint160,uint128).sqrtRatioAX96 (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#1566) is too similar to LiquidityAmounts.getAmount1ForLiquidity(uint160,uint160,uint128).sqrtRatioBX96 (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#1567)
Variable LiquidityAmounts.getLiquidityForAmounts(uint160,uint160,uint160,uint256,uint256).sqrtRatioAX96 (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#1521) is too similar to LiquidityAmounts.getAmount1ForLiquidity(uint160,uint160,uint128).sqrtRatioBX96 (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#1567)
Variable LiquidityAmounts.getLiquidityForAmount0(uint160,uint160,uint256).sqrtRatioAX96 (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#1487) is too similar to LiquidityAmounts.getAmount1ForLiquidity(uint160,uint160,uint128).sqrtRatioBX96 (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#1567)
Variable LiquidityAmounts.getAmountsForLiquidity(uint160,uint160,uint160,uint128).sqrtRatioAX96 (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#1585) is too similar to LiquidityAmounts.getAmount1ForLiquidity(uint160,uint160,uint128).sqrtRatioBX96 (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#1567)
Variable LiquidityAmounts.getLiquidityForAmounts(uint160,uint160,uint160,uint256,uint256).sqrtRatioAX96 (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#1521) is too similar to LiquidityAmounts.getLiquidityForAmount1(uint160,uint160,uint256).sqrtRatioBX96 (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#1504)
Variable LiquidityAmounts.getAmount0ForLiquidity(uint160,uint160,uint128).sqrtRatioAX96 (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#1546) is too similar to LiquidityAmounts.getAmount1ForLiquidity(uint160,uint160,uint128).sqrtRatioBX96 (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#1567)
Variable LiquidityAmounts.getLiquidityForAmounts(uint160,uint160,uint160,uint256,uint256).sqrtRatioAX96 (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#1521) is too similar to LiquidityAmounts.getAmount0ForLiquidity(uint160,uint160,uint128).sqrtRatioBX96 (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#1547)
Variable LiquidityAmounts.getLiquidityForAmount0(uint160,uint160,uint256).sqrtRatioAX96 (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#1487) is too similar to LiquidityAmounts.getLiquidityForAmount1(uint160,uint160,uint256).sqrtRatioBX96 (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#1504)
Variable LiquidityAmounts.getAmountsForLiquidity(uint160,uint160,uint160,uint128).sqrtRatioAX96 (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#1585) is too similar to LiquidityAmounts.getLiquidityForAmount1(uint160,uint160,uint256).sqrtRatioBX96 (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#1504)
Variable LiquidityAmounts.getLiquidityForAmount1(uint160,uint160,uint256).sqrtRatioAX96 (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#1503) is too similar to LiquidityAmounts.getAmount1ForLiquidity(uint160,uint160,uint128).sqrtRatioBX96 (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#1567)
Variable LiquidityAmounts.getAmountsForLiquidity(uint160,uint160,uint160,uint128).sqrtRatioAX96 (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#1585) is too similar to LiquidityAmounts.getAmount0ForLiquidity(uint160,uint160,uint128).sqrtRatioBX96 (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#1547)
Variable LiquidityAmounts.getLiquidityForAmounts(uint160,uint160,uint160,uint256,uint256).sqrtRatioAX96 (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#1521) is too similar to LiquidityAmounts.getLiquidityForAmount0(uint160,uint160,uint256).sqrtRatioBX96 (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#1488)
Variable LiquidityAmounts.getAmount0ForLiquidity(uint160,uint160,uint128).sqrtRatioAX96 (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#1546) is too similar to LiquidityAmounts.getLiquidityForAmount1(uint160,uint160,uint256).sqrtRatioBX96 (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#1504)
Variable IUniswapV3PoolOwnerActions.collectProtocol(address,uint128,uint128).amount0Requested (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#1121) is too similar to IUniswapV3PoolActions.collect(address,int24,int24,uint128,uint128).amount1Requested (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#850)
Variable IUniswapV3PoolActions.collect(address,int24,int24,uint128,uint128).amount0Requested (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#849) is too similar to IUniswapV3PoolOwnerActions.collectProtocol(address,uint128,uint128).amount1Requested (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#1122)
Variable AlphaVault.accruedProtocolFees0 (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2046) is too similar to AlphaVault.accruedProtocolFees1 (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2047)
Variable AlphaVault.uniswapV3SwapCallback(int256,int256,bytes).amount0Delta (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2495) is too similar to AlphaVault.uniswapV3SwapCallback(int256,int256,bytes).amount1Delta (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2496)
Variable AlphaVault.uniswapV3SwapCallback(int256,int256,bytes).amount0Delta (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2495) is too similar to IUniswapV3SwapCallback.uniswapV3SwapCallback(int256,int256,bytes).amount1Delta (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#1258)
Variable AlphaVault._calcSharesAndAmounts(uint256,uint256).amount0Desired (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2139) is too similar to AlphaVault._calcSharesAndAmounts(uint256,uint256).amount1Desired (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2139)
Variable AlphaVault.deposit(uint256,uint256,uint256,uint256,address).amount0Desired (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2088) is too similar to AlphaVault._calcSharesAndAmounts(uint256,uint256).amount1Desired (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2139)
Variable AlphaVault.deposit(uint256,uint256,uint256,uint256,address).amount0Desired (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2088) is too similar to AlphaVault.deposit(uint256,uint256,uint256,uint256,address).amount1Desired (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2089)
Variable IUniswapV3SwapCallback.uniswapV3SwapCallback(int256,int256,bytes).amount0Delta (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#1257) is too similar to AlphaVault.uniswapV3SwapCallback(int256,int256,bytes).amount1Delta (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2496)
Variable AlphaVault._calcSharesAndAmounts(uint256,uint256).amount0Desired (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2139) is too similar to AlphaVault.deposit(uint256,uint256,uint256,uint256,address).amount1Desired (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2089)
Variable AlphaVault.withdraw(uint256,uint256,uint256,address).baseAmount0 (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2203) is too similar to AlphaVault.getTotalAmounts().baseAmount1 (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2385)
Variable AlphaVault.getTotalAmounts().baseAmount0 (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2385) is too similar to AlphaVault.getTotalAmounts().baseAmount1 (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2385)
Variable AlphaVault.withdraw(uint256,uint256,uint256,address).baseAmount0 (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2203) is too similar to AlphaVault.withdraw(uint256,uint256,uint256,address).baseAmount1 (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2203)
Variable AlphaVault.getTotalAmounts().baseAmount0 (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2385) is too similar to AlphaVault.withdraw(uint256,uint256,uint256,address).baseAmount1 (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2203)
Variable AlphaVault._burnAndCollect(int24,int24,uint128).feesToProtocol0 (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2352) is too similar to AlphaVault._burnAndCollect(int24,int24,uint128).feesToProtocol1 (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2353)
Variable AlphaVault._burnAndCollect(int24,int24,uint128).feesToVault0 (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2332) is too similar to AlphaVault._burnAndCollect(int24,int24,uint128).feesToVault1 (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2333)
Variable AlphaVault.getTotalAmounts().limitAmount0 (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2386) is too similar to AlphaVault.getTotalAmounts().limitAmount1 (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2386)
Variable AlphaVault.withdraw(uint256,uint256,uint256,address).limitAmount0 (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2205) is too similar to AlphaVault.withdraw(uint256,uint256,uint256,address).limitAmount1 (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2205)
Variable AlphaVault.withdraw(uint256,uint256,uint256,address).limitAmount0 (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2205) is too similar to AlphaVault.getTotalAmounts().limitAmount1 (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2386)
Variable AlphaVault.getTotalAmounts().limitAmount0 (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2386) is too similar to AlphaVault.withdraw(uint256,uint256,uint256,address).limitAmount1 (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2205)
Variable AlphaVault.getPositionAmounts(int24,int24).tokensOwed0 (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2402) is too similar to AlphaVault.getPositionAmounts(int24,int24).tokensOwed1 (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2402)
Variable AlphaVault.withdraw(uint256,uint256,uint256,address).unusedAmount0 (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2199) is too similar to AlphaVault.withdraw(uint256,uint256,uint256,address).unusedAmount1 (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#2200)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#variable-names-too-similar
INFO:Detectors:
FixedPoint96.slitherConstructorConstantVariables() (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#657-660) uses literals with too many digits:
	- Q96 = 0x1000000000000000000000000 (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#659)
TickMath.getSqrtRatioAtTick(int24) (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#1284-1315) uses literals with too many digits:
	- ratio = 0x100000000000000000000000000000000 (../../sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol#1288)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits
INFO:Slither:/bdata2/sc/dataset/mainnet/0x1cEA471aab8c57118d187315f3d6Ae1834cCD836.sol analyzed (26 contracts with 85 detectors), 159 result(s) found
