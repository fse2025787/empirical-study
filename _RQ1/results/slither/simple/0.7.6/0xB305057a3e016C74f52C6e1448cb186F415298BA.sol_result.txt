INFO:Detectors:
YINSoloStaking.claimReward() (../../sc/dataset/mainnet/0xB305057a3e016C74f52C6e1448cb186F415298BA.sol#303-319) uses arbitrary from in transferFrom: depositToken.safeTransferFrom(provider,msg.sender,reward) (../../sc/dataset/mainnet/0xB305057a3e016C74f52C6e1448cb186F415298BA.sol#315)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#arbitrary-from-in-transferfrom
INFO:Detectors:
YINSoloStaking.getMultiper(uint256,uint256,uint256) (../../sc/dataset/mainnet/0xB305057a3e016C74f52C6e1448cb186F415298BA.sol#388-404) performs a multiplication on the result of a division:
	- amount.mul(duration.mul(1e18).div(604800).mul(2).div(100)).div(1e18).add(amount) (../../sc/dataset/mainnet/0xB305057a3e016C74f52C6e1448cb186F415298BA.sol#399-403)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#divide-before-multiply
INFO:Detectors:
YINSoloStaking.rewardPerShare() (../../sc/dataset/mainnet/0xB305057a3e016C74f52C6e1448cb186F415298BA.sol#336-348) uses a dangerous strict equality:
	- _totalShare == 0 (../../sc/dataset/mainnet/0xB305057a3e016C74f52C6e1448cb186F415298BA.sol#337)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dangerous-strict-equalities
INFO:Detectors:
Reentrancy in YINSoloStaking.stake(uint256,uint256) (../../sc/dataset/mainnet/0xB305057a3e016C74f52C6e1448cb186F415298BA.sol#243-272):
	External calls:
	- depositToken.safeTransferFrom(msg.sender,address(this),amount) (../../sc/dataset/mainnet/0xB305057a3e016C74f52C6e1448cb186F415298BA.sol#253)
	State variables written after the call(s):
	- _totalShare = _totalShare.add(_userShare[msg.sender]) (../../sc/dataset/mainnet/0xB305057a3e016C74f52C6e1448cb186F415298BA.sol#261)
	YINSoloStaking._totalShare (../../sc/dataset/mainnet/0xB305057a3e016C74f52C6e1448cb186F415298BA.sol#197) can be used in cross function reentrancies:
	- YINSoloStaking.rewardPerShare() (../../sc/dataset/mainnet/0xB305057a3e016C74f52C6e1448cb186F415298BA.sol#336-348)
	- YINSoloStaking.totalShare() (../../sc/dataset/mainnet/0xB305057a3e016C74f52C6e1448cb186F415298BA.sol#235-237)
	- _userShare[msg.sender] = shares (../../sc/dataset/mainnet/0xB305057a3e016C74f52C6e1448cb186F415298BA.sol#260)
	YINSoloStaking._userShare (../../sc/dataset/mainnet/0xB305057a3e016C74f52C6e1448cb186F415298BA.sol#195) can be used in cross function reentrancies:
	- YINSoloStaking.earned(address) (../../sc/dataset/mainnet/0xB305057a3e016C74f52C6e1448cb186F415298BA.sol#350-356)
	- YINSoloStaking.pendingReward(address,uint256) (../../sc/dataset/mainnet/0xB305057a3e016C74f52C6e1448cb186F415298BA.sol#321-334)
	- YINSoloStaking.userShare(address) (../../sc/dataset/mainnet/0xB305057a3e016C74f52C6e1448cb186F415298BA.sol#239-241)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1
INFO:Detectors:
YINSoloStaking.getTotalDeposit(address).idx (../../sc/dataset/mainnet/0xB305057a3e016C74f52C6e1448cb186F415298BA.sol#367) is a local variable never initialized
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#uninitialized-local-variables
INFO:Detectors:
YINSoloStaking.constructor(address,address,uint256,uint256,uint256,uint256)._provider (../../sc/dataset/mainnet/0xB305057a3e016C74f52C6e1448cb186F415298BA.sol#214) lacks a zero-check on :
		- provider = _provider (../../sc/dataset/mainnet/0xB305057a3e016C74f52C6e1448cb186F415298BA.sol#221)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation
INFO:Detectors:
Reentrancy in YINSoloStaking.stake(uint256,uint256) (../../sc/dataset/mainnet/0xB305057a3e016C74f52C6e1448cb186F415298BA.sol#243-272):
	External calls:
	- depositToken.safeTransferFrom(msg.sender,address(this),amount) (../../sc/dataset/mainnet/0xB305057a3e016C74f52C6e1448cb186F415298BA.sol#253)
	State variables written after the call(s):
	- depositsOf[msg.sender].push(DepositInfo(amount,uint64(block.timestamp),uint64(block.timestamp) + uint64(duration))) (../../sc/dataset/mainnet/0xB305057a3e016C74f52C6e1448cb186F415298BA.sol#263-269)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2
INFO:Detectors:
YINSoloStaking.constructor(address,address,uint256,uint256,uint256,uint256) (../../sc/dataset/mainnet/0xB305057a3e016C74f52C6e1448cb186F415298BA.sol#212-233) uses timestamp for comparisons
	Dangerous comparisons:
	- _startTime == 0 (../../sc/dataset/mainnet/0xB305057a3e016C74f52C6e1448cb186F415298BA.sol#227)
YINSoloStaking.unstake(uint256,address) (../../sc/dataset/mainnet/0xB305057a3e016C74f52C6e1448cb186F415298BA.sol#274-301) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(block.timestamp >= userDeposit.until,EARLY) (../../sc/dataset/mainnet/0xB305057a3e016C74f52C6e1448cb186F415298BA.sol#281)
YINSoloStaking.claimReward() (../../sc/dataset/mainnet/0xB305057a3e016C74f52C6e1448cb186F415298BA.sol#303-319) uses timestamp for comparisons
	Dangerous comparisons:
	- reward > 0 (../../sc/dataset/mainnet/0xB305057a3e016C74f52C6e1448cb186F415298BA.sol#312)
YINSoloStaking.rewardPerShare() (../../sc/dataset/mainnet/0xB305057a3e016C74f52C6e1448cb186F415298BA.sol#336-348) uses timestamp for comparisons
	Dangerous comparisons:
	- _totalShare == 0 (../../sc/dataset/mainnet/0xB305057a3e016C74f52C6e1448cb186F415298BA.sol#337)
YINSoloStaking.getMultiper(uint256,uint256,uint256) (../../sc/dataset/mainnet/0xB305057a3e016C74f52C6e1448cb186F415298BA.sol#388-404) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(_to >= _from,NEG) (../../sc/dataset/mainnet/0xB305057a3e016C74f52C6e1448cb186F415298BA.sol#393)
	- require(bool,string)(duration >= MIN_LOCK_DURATION && duration <= maxLockDuration,DURATION) (../../sc/dataset/mainnet/0xB305057a3e016C74f52C6e1448cb186F415298BA.sol#395-398)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp
INFO:Detectors:
Address.isContract(address) (../../sc/dataset/mainnet/0xB305057a3e016C74f52C6e1448cb186F415298BA.sol#858-867) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0xB305057a3e016C74f52C6e1448cb186F415298BA.sol#865)
Address._verifyCallResult(bool,bytes,string) (../../sc/dataset/mainnet/0xB305057a3e016C74f52C6e1448cb186F415298BA.sol#1003-1020) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0xB305057a3e016C74f52C6e1448cb186F415298BA.sol#1012-1015)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage
INFO:Detectors:
Different versions of Solidity are used:
	- Version used: ['>=0.6.0<0.8.0', '^0.7.0', '^0.7.6']
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0xB305057a3e016C74f52C6e1448cb186F415298BA.sol#7)
	- ^0.7.0 (../../sc/dataset/mainnet/0xB305057a3e016C74f52C6e1448cb186F415298BA.sol#32)
	- ^0.7.0 (../../sc/dataset/mainnet/0xB305057a3e016C74f52C6e1448cb186F415298BA.sol#101)
	- ^0.7.0 (../../sc/dataset/mainnet/0xB305057a3e016C74f52C6e1448cb186F415298BA.sol#434)
	- ^0.7.0 (../../sc/dataset/mainnet/0xB305057a3e016C74f52C6e1448cb186F415298BA.sol#466)
	- ^0.7.0 (../../sc/dataset/mainnet/0xB305057a3e016C74f52C6e1448cb186F415298BA.sol#681)
	- ^0.7.0 (../../sc/dataset/mainnet/0xB305057a3e016C74f52C6e1448cb186F415298BA.sol#757)
	- ^0.7.0 (../../sc/dataset/mainnet/0xB305057a3e016C74f52C6e1448cb186F415298BA.sol#835)
	- ^0.7.6 (../../sc/dataset/mainnet/0xB305057a3e016C74f52C6e1448cb186F415298BA.sol#162)
	- v2 (../../sc/dataset/mainnet/0xB305057a3e016C74f52C6e1448cb186F415298BA.sol#2)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#different-pragma-directives-are-used
INFO:Detectors:
Address.functionCall(address,bytes) (../../sc/dataset/mainnet/0xB305057a3e016C74f52C6e1448cb186F415298BA.sol#911-913) is never used and should be removed
Address.functionCallWithValue(address,bytes,uint256) (../../sc/dataset/mainnet/0xB305057a3e016C74f52C6e1448cb186F415298BA.sol#936-938) is never used and should be removed
Address.functionDelegateCall(address,bytes) (../../sc/dataset/mainnet/0xB305057a3e016C74f52C6e1448cb186F415298BA.sol#985-987) is never used and should be removed
Address.functionDelegateCall(address,bytes,string) (../../sc/dataset/mainnet/0xB305057a3e016C74f52C6e1448cb186F415298BA.sol#995-1001) is never used and should be removed
Address.functionStaticCall(address,bytes) (../../sc/dataset/mainnet/0xB305057a3e016C74f52C6e1448cb186F415298BA.sol#961-963) is never used and should be removed
Address.functionStaticCall(address,bytes,string) (../../sc/dataset/mainnet/0xB305057a3e016C74f52C6e1448cb186F415298BA.sol#971-977) is never used and should be removed
Address.sendValue(address,uint256) (../../sc/dataset/mainnet/0xB305057a3e016C74f52C6e1448cb186F415298BA.sol#885-891) is never used and should be removed
Context._msgData() (../../sc/dataset/mainnet/0xB305057a3e016C74f52C6e1448cb186F415298BA.sol#24-27) is never used and should be removed
Math.average(uint256,uint256) (../../sc/dataset/mainnet/0xB305057a3e016C74f52C6e1448cb186F415298BA.sol#458-461) is never used and should be removed
SafeERC20.safeApprove(IERC20,address,uint256) (../../sc/dataset/mainnet/0xB305057a3e016C74f52C6e1448cb186F415298BA.sol#715-724) is never used and should be removed
SafeERC20.safeDecreaseAllowance(IERC20,address,uint256) (../../sc/dataset/mainnet/0xB305057a3e016C74f52C6e1448cb186F415298BA.sol#731-734) is never used and should be removed
SafeERC20.safeIncreaseAllowance(IERC20,address,uint256) (../../sc/dataset/mainnet/0xB305057a3e016C74f52C6e1448cb186F415298BA.sol#726-729) is never used and should be removed
SafeMath.div(uint256,uint256,string) (../../sc/dataset/mainnet/0xB305057a3e016C74f52C6e1448cb186F415298BA.sol#653-656) is never used and should be removed
SafeMath.mod(uint256,uint256) (../../sc/dataset/mainnet/0xB305057a3e016C74f52C6e1448cb186F415298BA.sol#615-618) is never used and should be removed
SafeMath.mod(uint256,uint256,string) (../../sc/dataset/mainnet/0xB305057a3e016C74f52C6e1448cb186F415298BA.sol#673-676) is never used and should be removed
SafeMath.sub(uint256,uint256,string) (../../sc/dataset/mainnet/0xB305057a3e016C74f52C6e1448cb186F415298BA.sol#633-636) is never used and should be removed
SafeMath.tryAdd(uint256,uint256) (../../sc/dataset/mainnet/0xB305057a3e016C74f52C6e1448cb186F415298BA.sol#487-491) is never used and should be removed
SafeMath.tryDiv(uint256,uint256) (../../sc/dataset/mainnet/0xB305057a3e016C74f52C6e1448cb186F415298BA.sol#523-526) is never used and should be removed
SafeMath.tryMod(uint256,uint256) (../../sc/dataset/mainnet/0xB305057a3e016C74f52C6e1448cb186F415298BA.sol#533-536) is never used and should be removed
SafeMath.tryMul(uint256,uint256) (../../sc/dataset/mainnet/0xB305057a3e016C74f52C6e1448cb186F415298BA.sol#508-516) is never used and should be removed
SafeMath.trySub(uint256,uint256) (../../sc/dataset/mainnet/0xB305057a3e016C74f52C6e1448cb186F415298BA.sol#498-501) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code
INFO:Detectors:
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0xB305057a3e016C74f52C6e1448cb186F415298BA.sol#7) is too complex
Pragma version^0.7.0 (../../sc/dataset/mainnet/0xB305057a3e016C74f52C6e1448cb186F415298BA.sol#32) allows old versions
Pragma version^0.7.0 (../../sc/dataset/mainnet/0xB305057a3e016C74f52C6e1448cb186F415298BA.sol#101) allows old versions
Pragma version^0.7.6 (../../sc/dataset/mainnet/0xB305057a3e016C74f52C6e1448cb186F415298BA.sol#162) allows old versions
Pragma version^0.7.0 (../../sc/dataset/mainnet/0xB305057a3e016C74f52C6e1448cb186F415298BA.sol#434) allows old versions
Pragma version^0.7.0 (../../sc/dataset/mainnet/0xB305057a3e016C74f52C6e1448cb186F415298BA.sol#466) allows old versions
Pragma version^0.7.0 (../../sc/dataset/mainnet/0xB305057a3e016C74f52C6e1448cb186F415298BA.sol#681) allows old versions
Pragma version^0.7.0 (../../sc/dataset/mainnet/0xB305057a3e016C74f52C6e1448cb186F415298BA.sol#757) allows old versions
Pragma version^0.7.0 (../../sc/dataset/mainnet/0xB305057a3e016C74f52C6e1448cb186F415298BA.sol#835) allows old versions
solc-0.7.6 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity
INFO:Detectors:
Low level call in Address.sendValue(address,uint256) (../../sc/dataset/mainnet/0xB305057a3e016C74f52C6e1448cb186F415298BA.sol#885-891):
	- (success) = recipient.call{value: amount}() (../../sc/dataset/mainnet/0xB305057a3e016C74f52C6e1448cb186F415298BA.sol#889)
Low level call in Address.functionCallWithValue(address,bytes,uint256,string) (../../sc/dataset/mainnet/0xB305057a3e016C74f52C6e1448cb186F415298BA.sol#946-953):
	- (success,returndata) = target.call{value: value}(data) (../../sc/dataset/mainnet/0xB305057a3e016C74f52C6e1448cb186F415298BA.sol#951)
Low level call in Address.functionStaticCall(address,bytes,string) (../../sc/dataset/mainnet/0xB305057a3e016C74f52C6e1448cb186F415298BA.sol#971-977):
	- (success,returndata) = target.staticcall(data) (../../sc/dataset/mainnet/0xB305057a3e016C74f52C6e1448cb186F415298BA.sol#975)
Low level call in Address.functionDelegateCall(address,bytes,string) (../../sc/dataset/mainnet/0xB305057a3e016C74f52C6e1448cb186F415298BA.sol#995-1001):
	- (success,returndata) = target.delegatecall(data) (../../sc/dataset/mainnet/0xB305057a3e016C74f52C6e1448cb186F415298BA.sol#999)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls
INFO:Detectors:
Parameter YINSoloStaking.getMultiper(uint256,uint256,uint256)._from (../../sc/dataset/mainnet/0xB305057a3e016C74f52C6e1448cb186F415298BA.sol#390) is not in mixedCase
Parameter YINSoloStaking.getMultiper(uint256,uint256,uint256)._to (../../sc/dataset/mainnet/0xB305057a3e016C74f52C6e1448cb186F415298BA.sol#391) is not in mixedCase
Parameter YINSoloStaking.modifyRewardRate(uint256)._rewardRate (../../sc/dataset/mainnet/0xB305057a3e016C74f52C6e1448cb186F415298BA.sol#406) is not in mixedCase
Parameter YINSoloStaking.modifyPeriodFinish(uint256)._periodFinish (../../sc/dataset/mainnet/0xB305057a3e016C74f52C6e1448cb186F415298BA.sol#411) is not in mixedCase
Parameter YINSoloStaking.modifyTotalReward(uint256)._totalReward (../../sc/dataset/mainnet/0xB305057a3e016C74f52C6e1448cb186F415298BA.sol#416) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions
INFO:Detectors:
Redundant expression "this (../../sc/dataset/mainnet/0xB305057a3e016C74f52C6e1448cb186F415298BA.sol#25)" inContext (../../sc/dataset/mainnet/0xB305057a3e016C74f52C6e1448cb186F415298BA.sol#19-28)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#redundant-statements
INFO:Detectors:
YINSoloStaking.depositToken (../../sc/dataset/mainnet/0xB305057a3e016C74f52C6e1448cb186F415298BA.sol#199) should be immutable 
YINSoloStaking.provider (../../sc/dataset/mainnet/0xB305057a3e016C74f52C6e1448cb186F415298BA.sol#198) should be immutable 
YINSoloStaking.startTime (../../sc/dataset/mainnet/0xB305057a3e016C74f52C6e1448cb186F415298BA.sol#185) should be immutable 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-immutable
INFO:Slither:/bdata2/sc/dataset/mainnet/0xB305057a3e016C74f52C6e1448cb186F415298BA.sol analyzed (9 contracts with 85 detectors), 59 result(s) found
