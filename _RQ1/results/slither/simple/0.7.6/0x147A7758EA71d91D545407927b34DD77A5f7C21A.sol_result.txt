INFO:Detectors:
TokenUtils.pullTokens(IGraphToken,address,uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2786-2794) uses arbitrary from in transferFrom: require(bool,string)(_graphToken.transferFrom(_from,address(this),_amount),!transfer) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2792)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#arbitrary-from-in-transferfrom
INFO:Detectors:
BancorFormula.optimalLog(uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2599-2674) performs a multiplication on the result of a division:
	- x = (x * FIXED_1) / 0xd3094c70f034de4b96ff7d5b6f99fcd8 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2608)
	- x = (x * FIXED_1) / 0xa45af1e1f40c333b3de1db4dd55f29a7 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2612)
BancorFormula.optimalLog(uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2599-2674) performs a multiplication on the result of a division:
	- x = (x * FIXED_1) / 0xa45af1e1f40c333b3de1db4dd55f29a7 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2612)
	- x = (x * FIXED_1) / 0x910b022db7ae67ce76b441c27035c6a1 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2616)
BancorFormula.optimalLog(uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2599-2674) performs a multiplication on the result of a division:
	- x = (x * FIXED_1) / 0x910b022db7ae67ce76b441c27035c6a1 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2616)
	- x = (x * FIXED_1) / 0x88415abbe9a76bead8d00cf112e4d4a8 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2620)
BancorFormula.optimalLog(uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2599-2674) performs a multiplication on the result of a division:
	- x = (x * FIXED_1) / 0x88415abbe9a76bead8d00cf112e4d4a8 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2620)
	- x = (x * FIXED_1) / 0x84102b00893f64c705e841d5d4064bd3 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2624)
BancorFormula.optimalLog(uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2599-2674) performs a multiplication on the result of a division:
	- x = (x * FIXED_1) / 0x84102b00893f64c705e841d5d4064bd3 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2624)
	- x = (x * FIXED_1) / 0x8204055aaef1c8bd5c3259f4822735a2 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2628)
BancorFormula.optimalLog(uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2599-2674) performs a multiplication on the result of a division:
	- x = (x * FIXED_1) / 0x8204055aaef1c8bd5c3259f4822735a2 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2628)
	- x = (x * FIXED_1) / 0x810100ab00222d861931c15e39b44e99 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2632)
BancorFormula.optimalLog(uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2599-2674) performs a multiplication on the result of a division:
	- x = (x * FIXED_1) / 0x810100ab00222d861931c15e39b44e99 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2632)
	- x = (x * FIXED_1) / 0x808040155aabbbe9451521693554f733 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2636)
BancorFormula.optimalLog(uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2599-2674) performs a multiplication on the result of a division:
	- w = (y * y) / FIXED_1 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2640)
	- z = (z * w) / FIXED_1 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2644)
BancorFormula.optimalLog(uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2599-2674) performs a multiplication on the result of a division:
	- z = (z * w) / FIXED_1 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2644)
	- res += (z * (0x0aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa - y)) / 0x200000000000000000000000000000000 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2645-2647)
BancorFormula.optimalLog(uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2599-2674) performs a multiplication on the result of a division:
	- w = (y * y) / FIXED_1 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2640)
	- z = (z * w) / FIXED_1 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2644)
	- z = (z * w) / FIXED_1 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2648)
BancorFormula.optimalLog(uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2599-2674) performs a multiplication on the result of a division:
	- z = (z * w) / FIXED_1 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2648)
	- res += (z * (0x099999999999999999999999999999999 - y)) / 0x300000000000000000000000000000000 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2649-2651)
BancorFormula.optimalLog(uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2599-2674) performs a multiplication on the result of a division:
	- w = (y * y) / FIXED_1 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2640)
	- z = (z * w) / FIXED_1 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2648)
	- z = (z * w) / FIXED_1 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2652)
BancorFormula.optimalLog(uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2599-2674) performs a multiplication on the result of a division:
	- z = (z * w) / FIXED_1 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2652)
	- res += (z * (0x092492492492492492492492492492492 - y)) / 0x400000000000000000000000000000000 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2653-2655)
BancorFormula.optimalLog(uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2599-2674) performs a multiplication on the result of a division:
	- w = (y * y) / FIXED_1 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2640)
	- z = (z * w) / FIXED_1 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2652)
	- z = (z * w) / FIXED_1 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2656)
BancorFormula.optimalLog(uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2599-2674) performs a multiplication on the result of a division:
	- z = (z * w) / FIXED_1 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2656)
	- res += (z * (0x08e38e38e38e38e38e38e38e38e38e38e - y)) / 0x500000000000000000000000000000000 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2657-2659)
BancorFormula.optimalLog(uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2599-2674) performs a multiplication on the result of a division:
	- w = (y * y) / FIXED_1 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2640)
	- z = (z * w) / FIXED_1 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2656)
	- z = (z * w) / FIXED_1 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2660)
BancorFormula.optimalLog(uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2599-2674) performs a multiplication on the result of a division:
	- z = (z * w) / FIXED_1 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2660)
	- res += (z * (0x08ba2e8ba2e8ba2e8ba2e8ba2e8ba2e8b - y)) / 0x600000000000000000000000000000000 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2661-2663)
BancorFormula.optimalLog(uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2599-2674) performs a multiplication on the result of a division:
	- w = (y * y) / FIXED_1 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2640)
	- z = (z * w) / FIXED_1 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2660)
	- z = (z * w) / FIXED_1 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2664)
BancorFormula.optimalLog(uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2599-2674) performs a multiplication on the result of a division:
	- z = (z * w) / FIXED_1 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2664)
	- res += (z * (0x089d89d89d89d89d89d89d89d89d89d89 - y)) / 0x700000000000000000000000000000000 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2665-2667)
BancorFormula.optimalLog(uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2599-2674) performs a multiplication on the result of a division:
	- w = (y * y) / FIXED_1 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2640)
	- z = (z * w) / FIXED_1 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2664)
	- z = (z * w) / FIXED_1 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2668)
BancorFormula.optimalLog(uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2599-2674) performs a multiplication on the result of a division:
	- z = (z * w) / FIXED_1 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2668)
	- res += (z * (0x088888888888888888888888888888888 - y)) / 0x800000000000000000000000000000000 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2669-2671)
BancorFormula.optimalExp(uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2687-2750) performs a multiplication on the result of a division:
	- z = (z * y) / FIXED_1 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2694)
	- res += z * 0x10e1b3be415a0000 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2695)
BancorFormula.optimalExp(uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2687-2750) performs a multiplication on the result of a division:
	- z = (z * y) / FIXED_1 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2694)
	- z = (z * y) / FIXED_1 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2696)
BancorFormula.optimalExp(uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2687-2750) performs a multiplication on the result of a division:
	- z = (z * y) / FIXED_1 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2696)
	- res += z * 0x05a0913f6b1e0000 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2697)
BancorFormula.optimalExp(uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2687-2750) performs a multiplication on the result of a division:
	- z = (z * y) / FIXED_1 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2696)
	- z = (z * y) / FIXED_1 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2698)
BancorFormula.optimalExp(uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2687-2750) performs a multiplication on the result of a division:
	- z = (z * y) / FIXED_1 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2698)
	- res += z * 0x0168244fdac78000 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2699)
BancorFormula.optimalExp(uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2687-2750) performs a multiplication on the result of a division:
	- z = (z * y) / FIXED_1 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2698)
	- z = (z * y) / FIXED_1 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2700)
BancorFormula.optimalExp(uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2687-2750) performs a multiplication on the result of a division:
	- z = (z * y) / FIXED_1 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2700)
	- res += z * 0x004807432bc18000 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2701)
BancorFormula.optimalExp(uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2687-2750) performs a multiplication on the result of a division:
	- z = (z * y) / FIXED_1 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2700)
	- z = (z * y) / FIXED_1 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2702)
BancorFormula.optimalExp(uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2687-2750) performs a multiplication on the result of a division:
	- z = (z * y) / FIXED_1 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2702)
	- res += z * 0x000c0135dca04000 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2703)
BancorFormula.optimalExp(uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2687-2750) performs a multiplication on the result of a division:
	- z = (z * y) / FIXED_1 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2702)
	- z = (z * y) / FIXED_1 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2704)
BancorFormula.optimalExp(uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2687-2750) performs a multiplication on the result of a division:
	- z = (z * y) / FIXED_1 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2704)
	- res += z * 0x0001b707b1cdc000 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2705)
BancorFormula.optimalExp(uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2687-2750) performs a multiplication on the result of a division:
	- z = (z * y) / FIXED_1 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2704)
	- z = (z * y) / FIXED_1 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2706)
BancorFormula.optimalExp(uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2687-2750) performs a multiplication on the result of a division:
	- z = (z * y) / FIXED_1 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2706)
	- res += z * 0x000036e0f639b800 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2707)
BancorFormula.optimalExp(uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2687-2750) performs a multiplication on the result of a division:
	- z = (z * y) / FIXED_1 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2706)
	- z = (z * y) / FIXED_1 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2708)
BancorFormula.optimalExp(uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2687-2750) performs a multiplication on the result of a division:
	- z = (z * y) / FIXED_1 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2708)
	- res += z * 0x00000618fee9f800 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2709)
BancorFormula.optimalExp(uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2687-2750) performs a multiplication on the result of a division:
	- z = (z * y) / FIXED_1 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2708)
	- z = (z * y) / FIXED_1 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2710)
BancorFormula.optimalExp(uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2687-2750) performs a multiplication on the result of a division:
	- z = (z * y) / FIXED_1 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2710)
	- res += z * 0x0000009c197dcc00 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2711)
BancorFormula.optimalExp(uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2687-2750) performs a multiplication on the result of a division:
	- z = (z * y) / FIXED_1 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2710)
	- z = (z * y) / FIXED_1 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2712)
BancorFormula.optimalExp(uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2687-2750) performs a multiplication on the result of a division:
	- z = (z * y) / FIXED_1 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2712)
	- res += z * 0x0000000e30dce400 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2713)
BancorFormula.optimalExp(uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2687-2750) performs a multiplication on the result of a division:
	- z = (z * y) / FIXED_1 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2712)
	- z = (z * y) / FIXED_1 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2714)
BancorFormula.optimalExp(uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2687-2750) performs a multiplication on the result of a division:
	- z = (z * y) / FIXED_1 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2714)
	- res += z * 0x000000012ebd1300 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2715)
BancorFormula.optimalExp(uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2687-2750) performs a multiplication on the result of a division:
	- z = (z * y) / FIXED_1 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2714)
	- z = (z * y) / FIXED_1 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2716)
BancorFormula.optimalExp(uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2687-2750) performs a multiplication on the result of a division:
	- z = (z * y) / FIXED_1 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2716)
	- res += z * 0x0000000017499f00 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2717)
BancorFormula.optimalExp(uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2687-2750) performs a multiplication on the result of a division:
	- z = (z * y) / FIXED_1 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2716)
	- z = (z * y) / FIXED_1 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2718)
BancorFormula.optimalExp(uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2687-2750) performs a multiplication on the result of a division:
	- z = (z * y) / FIXED_1 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2718)
	- res += z * 0x0000000001a9d480 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2719)
BancorFormula.optimalExp(uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2687-2750) performs a multiplication on the result of a division:
	- z = (z * y) / FIXED_1 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2718)
	- z = (z * y) / FIXED_1 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2720)
BancorFormula.optimalExp(uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2687-2750) performs a multiplication on the result of a division:
	- z = (z * y) / FIXED_1 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2720)
	- res += z * 0x00000000001c6380 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2721)
BancorFormula.optimalExp(uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2687-2750) performs a multiplication on the result of a division:
	- z = (z * y) / FIXED_1 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2720)
	- z = (z * y) / FIXED_1 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2722)
BancorFormula.optimalExp(uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2687-2750) performs a multiplication on the result of a division:
	- z = (z * y) / FIXED_1 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2722)
	- res += z * 0x000000000001c638 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2723)
BancorFormula.optimalExp(uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2687-2750) performs a multiplication on the result of a division:
	- z = (z * y) / FIXED_1 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2722)
	- z = (z * y) / FIXED_1 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2724)
BancorFormula.optimalExp(uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2687-2750) performs a multiplication on the result of a division:
	- z = (z * y) / FIXED_1 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2724)
	- res += z * 0x0000000000001ab8 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2725)
BancorFormula.optimalExp(uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2687-2750) performs a multiplication on the result of a division:
	- z = (z * y) / FIXED_1 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2724)
	- z = (z * y) / FIXED_1 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2726)
BancorFormula.optimalExp(uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2687-2750) performs a multiplication on the result of a division:
	- z = (z * y) / FIXED_1 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2726)
	- res += z * 0x000000000000017c (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2727)
BancorFormula.optimalExp(uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2687-2750) performs a multiplication on the result of a division:
	- z = (z * y) / FIXED_1 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2726)
	- z = (z * y) / FIXED_1 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2728)
BancorFormula.optimalExp(uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2687-2750) performs a multiplication on the result of a division:
	- z = (z * y) / FIXED_1 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2728)
	- res += z * 0x0000000000000014 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2729)
BancorFormula.optimalExp(uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2687-2750) performs a multiplication on the result of a division:
	- z = (z * y) / FIXED_1 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2728)
	- z = (z * y) / FIXED_1 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2730)
BancorFormula.optimalExp(uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2687-2750) performs a multiplication on the result of a division:
	- z = (z * y) / FIXED_1 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2730)
	- res += z * 0x0000000000000001 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2731)
BancorFormula.optimalExp(uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2687-2750) performs a multiplication on the result of a division:
	- res = (res * 0x1c3d6a24ed82218787d624d3e5eba95f9) / 0x18ebef9eac820ae8682b9793ac6d1e776 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2735)
	- res = (res * 0x18ebef9eac820ae8682b9793ac6d1e778) / 0x1368b2fc6f9609fe7aceb46aa619baed4 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2737)
BancorFormula.optimalExp(uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2687-2750) performs a multiplication on the result of a division:
	- res = (res * 0x18ebef9eac820ae8682b9793ac6d1e778) / 0x1368b2fc6f9609fe7aceb46aa619baed4 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2737)
	- res = (res * 0x1368b2fc6f9609fe7aceb46aa619baed5) / 0x0bc5ab1b16779be3575bd8f0520a9f21f (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2739)
BancorFormula.optimalExp(uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2687-2750) performs a multiplication on the result of a division:
	- res = (res * 0x1368b2fc6f9609fe7aceb46aa619baed5) / 0x0bc5ab1b16779be3575bd8f0520a9f21f (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2739)
	- res = (res * 0x0bc5ab1b16779be3575bd8f0520a9f21e) / 0x0454aaa8efe072e7f6ddbab84b40a55c9 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2741)
BancorFormula.optimalExp(uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2687-2750) performs a multiplication on the result of a division:
	- res = (res * 0x0bc5ab1b16779be3575bd8f0520a9f21e) / 0x0454aaa8efe072e7f6ddbab84b40a55c9 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2741)
	- res = (res * 0x0454aaa8efe072e7f6ddbab84b40a55c5) / 0x00960aadc109e7a3bf4578099615711ea (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2743)
BancorFormula.optimalExp(uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2687-2750) performs a multiplication on the result of a division:
	- res = (res * 0x0454aaa8efe072e7f6ddbab84b40a55c5) / 0x00960aadc109e7a3bf4578099615711ea (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2743)
	- res = (res * 0x00960aadc109e7a3bf4578099615711d7) / 0x0002bf84208204f5977f9a8cf01fdce3d (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2745)
BancorFormula.optimalExp(uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2687-2750) performs a multiplication on the result of a division:
	- res = (res * 0x00960aadc109e7a3bf4578099615711d7) / 0x0002bf84208204f5977f9a8cf01fdce3d (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2745)
	- res = (res * 0x0002bf84208204f5977f9a8cf01fdc307) / 0x0000003c6ab775dd0b95b4cbee7e65d11 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2747)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#divide-before-multiply
INFO:Detectors:
Reentrancy in Curation.burn(bytes32,uint256,uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1314-1355):
	External calls:
	- _updateRewards(_subgraphDeploymentID) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1335)
		- rewardsManager.onSubgraphSignalUpdate(_subgraphDeploymentID) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1508)
	State variables written after the call(s):
	- curationPool.tokens = curationPool.tokens.sub(tokensOut) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1339)
	CurationV1Storage.pools (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#522) can be used in cross function reentrancies:
	- Curation._tokensToSignal(bytes32,uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1435-1467)
	- Curation.burn(bytes32,uint256,uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1314-1355)
	- Curation.collect(bytes32,uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1232-1247)
	- Curation.getCurationPoolSignal(bytes32) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1387-1395)
	- Curation.getCurationPoolTokens(bytes32) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1402-1409)
	- Curation.getCuratorSignal(address,bytes32) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1372-1380)
	- Curation.isCurated(bytes32) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1362-1364)
	- Curation.mint(bytes32,uint256,uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1256-1304)
	- CurationV1Storage.pools (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#522)
	- Curation.signalToTokens(bytes32,uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1475-1499)
Reentrancy in Curation.burn(bytes32,uint256,uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1314-1355):
	External calls:
	- _updateRewards(_subgraphDeploymentID) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1335)
		- rewardsManager.onSubgraphSignalUpdate(_subgraphDeploymentID) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1508)
	- curationPool.gcs.burnFrom(curator,_signalIn) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1340)
	State variables written after the call(s):
	- curationPool.tokens = 0 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1345)
	CurationV1Storage.pools (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#522) can be used in cross function reentrancies:
	- Curation._tokensToSignal(bytes32,uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1435-1467)
	- Curation.burn(bytes32,uint256,uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1314-1355)
	- Curation.collect(bytes32,uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1232-1247)
	- Curation.getCurationPoolSignal(bytes32) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1387-1395)
	- Curation.getCurationPoolTokens(bytes32) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1402-1409)
	- Curation.getCuratorSignal(address,bytes32) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1372-1380)
	- Curation.isCurated(bytes32) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1362-1364)
	- Curation.mint(bytes32,uint256,uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1256-1304)
	- CurationV1Storage.pools (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#522)
	- Curation.signalToTokens(bytes32,uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1475-1499)
	- curationPool.reserveRatio = 0 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1346)
	CurationV1Storage.pools (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#522) can be used in cross function reentrancies:
	- Curation._tokensToSignal(bytes32,uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1435-1467)
	- Curation.burn(bytes32,uint256,uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1314-1355)
	- Curation.collect(bytes32,uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1232-1247)
	- Curation.getCurationPoolSignal(bytes32) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1387-1395)
	- Curation.getCurationPoolTokens(bytes32) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1402-1409)
	- Curation.getCuratorSignal(address,bytes32) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1372-1380)
	- Curation.isCurated(bytes32) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1362-1364)
	- Curation.mint(bytes32,uint256,uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1256-1304)
	- CurationV1Storage.pools (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#522)
	- Curation.signalToTokens(bytes32,uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1475-1499)
Reentrancy in Curation.mint(bytes32,uint256,uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1256-1304):
	External calls:
	- gcs.initialize(address(this)) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1281)
	State variables written after the call(s):
	- curationPool.gcs = gcs (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1282)
	CurationV1Storage.pools (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#522) can be used in cross function reentrancies:
	- Curation._tokensToSignal(bytes32,uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1435-1467)
	- Curation.burn(bytes32,uint256,uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1314-1355)
	- Curation.collect(bytes32,uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1232-1247)
	- Curation.getCurationPoolSignal(bytes32) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1387-1395)
	- Curation.getCurationPoolTokens(bytes32) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1402-1409)
	- Curation.getCuratorSignal(address,bytes32) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1372-1380)
	- Curation.isCurated(bytes32) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1362-1364)
	- Curation.mint(bytes32,uint256,uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1256-1304)
	- CurationV1Storage.pools (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#522)
	- Curation.signalToTokens(bytes32,uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1475-1499)
Reentrancy in Curation.mint(bytes32,uint256,uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1256-1304):
	External calls:
	- gcs.initialize(address(this)) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1281)
	- _updateRewards(_subgraphDeploymentID) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1287)
		- rewardsManager.onSubgraphSignalUpdate(_subgraphDeploymentID) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1508)
	- TokenUtils.pullTokens(_graphToken,curator,_tokensIn) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1294)
	- TokenUtils.burnTokens(_graphToken,curationTax) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1295)
	State variables written after the call(s):
	- curationPool.tokens = curationPool.tokens.add(_tokensIn.sub(curationTax)) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1298)
	CurationV1Storage.pools (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#522) can be used in cross function reentrancies:
	- Curation._tokensToSignal(bytes32,uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1435-1467)
	- Curation.burn(bytes32,uint256,uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1314-1355)
	- Curation.collect(bytes32,uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1232-1247)
	- Curation.getCurationPoolSignal(bytes32) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1387-1395)
	- Curation.getCurationPoolTokens(bytes32) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1402-1409)
	- Curation.getCuratorSignal(address,bytes32) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1372-1380)
	- Curation.isCurated(bytes32) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1362-1364)
	- Curation.mint(bytes32,uint256,uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1256-1304)
	- CurationV1Storage.pools (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#522)
	- Curation.signalToTokens(bytes32,uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1475-1499)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1
INFO:Detectors:
BancorFormula.optimalExp(uint256).y (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2690) is a local variable never initialized
BancorFormula.optimalLog(uint256).y (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2602) is a local variable never initialized
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#uninitialized-local-variables
INFO:Detectors:
Curation._updateRewards(bytes32) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1505-1510) ignores return value by rewardsManager.onSubgraphSignalUpdate(_subgraphDeploymentID) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1508)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return
INFO:Detectors:
Curation._updateRewards(bytes32).rewardsManager (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1506) shadows:
	- Managed.rewardsManager() (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#325-327) (function)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing
INFO:Detectors:
Reentrancy in Curation.burn(bytes32,uint256,uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1314-1355):
	External calls:
	- _updateRewards(_subgraphDeploymentID) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1335)
		- rewardsManager.onSubgraphSignalUpdate(_subgraphDeploymentID) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1508)
	- curationPool.gcs.burnFrom(curator,_signalIn) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1340)
	- TokenUtils.pushTokens(graphToken(),curator,tokensOut) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1350)
	Event emitted after the call(s):
	- Burned(curator,_subgraphDeploymentID,tokensOut,_signalIn) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1352)
Reentrancy in Curation.mint(bytes32,uint256,uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1256-1304):
	External calls:
	- gcs.initialize(address(this)) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1281)
	- _updateRewards(_subgraphDeploymentID) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1287)
		- rewardsManager.onSubgraphSignalUpdate(_subgraphDeploymentID) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1508)
	- TokenUtils.pullTokens(_graphToken,curator,_tokensIn) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1294)
	- TokenUtils.burnTokens(_graphToken,curationTax) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1295)
	- curationPool.gcs.mint(curator,signalOut) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1299)
	Event emitted after the call(s):
	- Signalled(curator,_subgraphDeploymentID,_tokensIn,signalOut,curationTax) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1301)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3
INFO:Detectors:
GraphUpgradeable._implementation() (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#457-462) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#459-461)
Address.isContract(address) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1538-1547) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1545)
Address._verifyCallResult(bool,bytes,string) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1683-1700) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1692-1695)
Clones.clone(address) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1941-1951) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1943-1949)
Clones.cloneDeterministic(address,bytes32) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1960-1970) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1962-1968)
Clones.predictDeterministicAddress(address,bytes32,address) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1975-1987) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1977-1986)
AddressUpgradeable.isContract(address) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#3467-3476) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#3474)
AddressUpgradeable._verifyCallResult(bool,bytes,string) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#3588-3605) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#3597-3600)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage
INFO:Detectors:
Different versions of Solidity are used:
	- Version used: ['>=0.4.24<0.8.0', '>=0.6.0<0.8.0', '>=0.6.12<0.8.0', '>=0.6.2<0.8.0', '^0.7.6']
	- >=0.4.24<0.8.0 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#8)
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#63)
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#387)
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#527)
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#660)
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1705)
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1920)
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#3229)
	- >=0.6.12<0.8.0 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#605)
	- >=0.6.12<0.8.0 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2931)
	- >=0.6.12<0.8.0 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#3054)
	- >=0.6.2<0.8.0 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1515)
	- >=0.6.2<0.8.0 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#3444)
	- ^0.7.6 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#141)
	- ^0.7.6 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#200)
	- ^0.7.6 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#420)
	- ^0.7.6 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#486)
	- ^0.7.6 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#974)
	- ^0.7.6 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1042)
	- ^0.7.6 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1999)
	- ^0.7.6 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2775)
	- ^0.7.6 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2826)
	- ^0.7.6 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2875)
	- ^0.7.6 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2895)
	- ^0.7.6 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2961)
	- ^0.7.6 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2993)
	- ^0.7.6 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#3215)
	- v2 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#different-pragma-directives-are-used
INFO:Detectors:
Address._verifyCallResult(bool,bytes,string) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1683-1700) is never used and should be removed
Address.functionCall(address,bytes) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1591-1593) is never used and should be removed
Address.functionCall(address,bytes,string) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1601-1603) is never used and should be removed
Address.functionCallWithValue(address,bytes,uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1616-1618) is never used and should be removed
Address.functionCallWithValue(address,bytes,uint256,string) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1626-1633) is never used and should be removed
Address.functionDelegateCall(address,bytes) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1665-1667) is never used and should be removed
Address.functionDelegateCall(address,bytes,string) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1675-1681) is never used and should be removed
Address.functionStaticCall(address,bytes) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1641-1643) is never used and should be removed
Address.functionStaticCall(address,bytes,string) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1651-1657) is never used and should be removed
Address.sendValue(address,uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1565-1571) is never used and should be removed
AddressUpgradeable._verifyCallResult(bool,bytes,string) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#3588-3605) is never used and should be removed
AddressUpgradeable.functionCall(address,bytes) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#3520-3522) is never used and should be removed
AddressUpgradeable.functionCall(address,bytes,string) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#3530-3532) is never used and should be removed
AddressUpgradeable.functionCallWithValue(address,bytes,uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#3545-3547) is never used and should be removed
AddressUpgradeable.functionCallWithValue(address,bytes,uint256,string) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#3555-3562) is never used and should be removed
AddressUpgradeable.functionStaticCall(address,bytes) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#3570-3572) is never used and should be removed
AddressUpgradeable.functionStaticCall(address,bytes,string) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#3580-3586) is never used and should be removed
AddressUpgradeable.sendValue(address,uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#3494-3500) is never used and should be removed
Clones.cloneDeterministic(address,bytes32) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1960-1970) is never used and should be removed
Clones.predictDeterministicAddress(address,bytes32) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1992-1994) is never used and should be removed
Clones.predictDeterministicAddress(address,bytes32,address) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1975-1987) is never used and should be removed
ContextUpgradeable.__Context_init() (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#401-403) is never used and should be removed
ContextUpgradeable._msgData() (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#411-414) is never used and should be removed
ERC20Upgradeable._setupDecimals(uint8) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#950-952) is never used and should be removed
Managed._notPaused() (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#244-246) is never used and should be removed
Managed.curation() (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#309-311) is never used and should be removed
Managed.epochManager() (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#317-319) is never used and should be removed
SafeMath.div(uint256,uint256,string) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1892-1895) is never used and should be removed
SafeMath.mod(uint256,uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1854-1857) is never used and should be removed
SafeMath.mod(uint256,uint256,string) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1912-1915) is never used and should be removed
SafeMath.sub(uint256,uint256,string) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1872-1875) is never used and should be removed
SafeMath.tryAdd(uint256,uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1726-1730) is never used and should be removed
SafeMath.tryDiv(uint256,uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1762-1765) is never used and should be removed
SafeMath.tryMod(uint256,uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1772-1775) is never used and should be removed
SafeMath.tryMul(uint256,uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1747-1755) is never used and should be removed
SafeMath.trySub(uint256,uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1737-1740) is never used and should be removed
SafeMathUpgradeable.div(uint256,uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#3361-3364) is never used and should be removed
SafeMathUpgradeable.div(uint256,uint256,string) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#3416-3419) is never used and should be removed
SafeMathUpgradeable.mod(uint256,uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#3378-3381) is never used and should be removed
SafeMathUpgradeable.mod(uint256,uint256,string) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#3436-3439) is never used and should be removed
SafeMathUpgradeable.mul(uint256,uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#3342-3347) is never used and should be removed
SafeMathUpgradeable.tryAdd(uint256,uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#3250-3254) is never used and should be removed
SafeMathUpgradeable.tryDiv(uint256,uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#3286-3289) is never used and should be removed
SafeMathUpgradeable.tryMod(uint256,uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#3296-3299) is never used and should be removed
SafeMathUpgradeable.tryMul(uint256,uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#3271-3279) is never used and should be removed
SafeMathUpgradeable.trySub(uint256,uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#3261-3264) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code
INFO:Detectors:
Pragma version>=0.4.24<0.8.0 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#8) is too complex
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#63) is too complex
Pragma version^0.7.6 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#141) allows old versions
Pragma version^0.7.6 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#200) allows old versions
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#387) is too complex
Pragma version^0.7.6 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#420) allows old versions
Pragma version^0.7.6 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#486) allows old versions
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#527) is too complex
Pragma version>=0.6.12<0.8.0 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#605) is too complex
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#660) is too complex
Pragma version^0.7.6 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#974) allows old versions
Pragma version^0.7.6 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1042) allows old versions
Pragma version>=0.6.2<0.8.0 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1515) is too complex
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1705) is too complex
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1920) is too complex
Pragma version^0.7.6 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1999) allows old versions
Pragma version^0.7.6 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2775) allows old versions
Pragma version^0.7.6 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2826) allows old versions
Pragma version^0.7.6 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2875) allows old versions
Pragma version^0.7.6 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2895) allows old versions
Pragma version>=0.6.12<0.8.0 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2931) is too complex
Pragma version^0.7.6 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2961) allows old versions
Pragma version^0.7.6 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2993) allows old versions
Pragma version>=0.6.12<0.8.0 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#3054) is too complex
Pragma version^0.7.6 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#3215) allows old versions
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#3229) is too complex
Pragma version>=0.6.2<0.8.0 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#3444) is too complex
solc-0.7.6 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity
INFO:Detectors:
Low level call in Address.sendValue(address,uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1565-1571):
	- (success) = recipient.call{value: amount}() (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1569)
Low level call in Address.functionCallWithValue(address,bytes,uint256,string) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1626-1633):
	- (success,returndata) = target.call{value: value}(data) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1631)
Low level call in Address.functionStaticCall(address,bytes,string) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1651-1657):
	- (success,returndata) = target.staticcall(data) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1655)
Low level call in Address.functionDelegateCall(address,bytes,string) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1675-1681):
	- (success,returndata) = target.delegatecall(data) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1679)
Low level call in AddressUpgradeable.sendValue(address,uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#3494-3500):
	- (success) = recipient.call{value: amount}() (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#3498)
Low level call in AddressUpgradeable.functionCallWithValue(address,bytes,uint256,string) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#3555-3562):
	- (success,returndata) = target.call{value: value}(data) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#3560)
Low level call in AddressUpgradeable.functionStaticCall(address,bytes,string) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#3580-3586):
	- (success,returndata) = target.staticcall(data) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#3584)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls
INFO:Detectors:
GraphCurationToken (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2844-2871) should inherit from IGraphCurationToken (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#3219-3225)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-inheritance
INFO:Detectors:
Parameter Managed.setController(address)._controller (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#291) is not in mixedCase
Variable Managed.__gap (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#225) is not in mixedCase
Function ContextUpgradeable.__Context_init() (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#401-403) is not in mixedCase
Function ContextUpgradeable.__Context_init_unchained() (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#405-406) is not in mixedCase
Variable ContextUpgradeable.__gap (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#415) is not in mixedCase
Parameter GraphUpgradeable.acceptProxy(IGraphProxy)._proxy (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#467) is not in mixedCase
Parameter GraphUpgradeable.acceptProxyAndCall(IGraphProxy,bytes)._proxy (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#476) is not in mixedCase
Parameter GraphUpgradeable.acceptProxyAndCall(IGraphProxy,bytes)._data (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#476) is not in mixedCase
Function ERC20Upgradeable.__ERC20_init(string,string) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#713-716) is not in mixedCase
Function ERC20Upgradeable.__ERC20_init_unchained(string,string) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#718-722) is not in mixedCase
Variable ERC20Upgradeable.__gap (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#969) is not in mixedCase
Parameter Governed.transferOwnership(address)._newGovernor (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1011) is not in mixedCase
Parameter Curation.initialize(address,address,address,uint32,uint32,uint256)._controller (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1113) is not in mixedCase
Parameter Curation.initialize(address,address,address,uint32,uint32,uint256)._bondingCurve (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1114) is not in mixedCase
Parameter Curation.initialize(address,address,address,uint32,uint32,uint256)._curationTokenMaster (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1115) is not in mixedCase
Parameter Curation.initialize(address,address,address,uint32,uint32,uint256)._defaultReserveRatio (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1116) is not in mixedCase
Parameter Curation.initialize(address,address,address,uint32,uint32,uint256)._curationTaxPercentage (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1117) is not in mixedCase
Parameter Curation.initialize(address,address,address,uint32,uint32,uint256)._minimumCurationDeposit (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1118) is not in mixedCase
Parameter Curation.setDefaultReserveRatio(uint32)._defaultReserveRatio (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1137) is not in mixedCase
Parameter Curation.setMinimumCurationDeposit(uint256)._minimumCurationDeposit (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1163) is not in mixedCase
Parameter Curation.setCurationTaxPercentage(uint32)._percentage (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1187) is not in mixedCase
Parameter Curation.setCurationTokenMaster(address)._curationTokenMaster (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1209) is not in mixedCase
Parameter Curation.collect(bytes32,uint256)._subgraphDeploymentID (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1232) is not in mixedCase
Parameter Curation.collect(bytes32,uint256)._tokens (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1232) is not in mixedCase
Parameter Curation.mint(bytes32,uint256,uint256)._subgraphDeploymentID (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1257) is not in mixedCase
Parameter Curation.mint(bytes32,uint256,uint256)._tokensIn (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1258) is not in mixedCase
Parameter Curation.mint(bytes32,uint256,uint256)._signalOutMin (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1259) is not in mixedCase
Parameter Curation.burn(bytes32,uint256,uint256)._subgraphDeploymentID (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1315) is not in mixedCase
Parameter Curation.burn(bytes32,uint256,uint256)._signalIn (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1316) is not in mixedCase
Parameter Curation.burn(bytes32,uint256,uint256)._tokensOutMin (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1317) is not in mixedCase
Parameter Curation.isCurated(bytes32)._subgraphDeploymentID (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1362) is not in mixedCase
Parameter Curation.getCuratorSignal(address,bytes32)._curator (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1372) is not in mixedCase
Parameter Curation.getCuratorSignal(address,bytes32)._subgraphDeploymentID (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1372) is not in mixedCase
Parameter Curation.getCurationPoolSignal(bytes32)._subgraphDeploymentID (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1387) is not in mixedCase
Parameter Curation.getCurationPoolTokens(bytes32)._subgraphDeploymentID (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1402) is not in mixedCase
Parameter Curation.tokensToSignal(bytes32,uint256)._subgraphDeploymentID (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1418) is not in mixedCase
Parameter Curation.tokensToSignal(bytes32,uint256)._tokensIn (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1418) is not in mixedCase
Parameter Curation.signalToTokens(bytes32,uint256)._subgraphDeploymentID (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1475) is not in mixedCase
Parameter Curation.signalToTokens(bytes32,uint256)._signalIn (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1475) is not in mixedCase
Parameter BancorFormula.calculatePurchaseReturn(uint256,uint256,uint32,uint256)._supply (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2183) is not in mixedCase
Parameter BancorFormula.calculatePurchaseReturn(uint256,uint256,uint32,uint256)._reserveBalance (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2184) is not in mixedCase
Parameter BancorFormula.calculatePurchaseReturn(uint256,uint256,uint32,uint256)._reserveRatio (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2185) is not in mixedCase
Parameter BancorFormula.calculatePurchaseReturn(uint256,uint256,uint32,uint256)._depositAmount (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2186) is not in mixedCase
Parameter BancorFormula.calculateSaleReturn(uint256,uint256,uint32,uint256)._supply (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2223) is not in mixedCase
Parameter BancorFormula.calculateSaleReturn(uint256,uint256,uint32,uint256)._reserveBalance (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2224) is not in mixedCase
Parameter BancorFormula.calculateSaleReturn(uint256,uint256,uint32,uint256)._reserveRatio (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2225) is not in mixedCase
Parameter BancorFormula.calculateSaleReturn(uint256,uint256,uint32,uint256)._sellAmount (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2226) is not in mixedCase
Parameter BancorFormula.calculateCrossReserveReturn(uint256,uint32,uint256,uint32,uint256)._fromReserveBalance (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2273) is not in mixedCase
Parameter BancorFormula.calculateCrossReserveReturn(uint256,uint32,uint256,uint32,uint256)._fromReserveRatio (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2274) is not in mixedCase
Parameter BancorFormula.calculateCrossReserveReturn(uint256,uint32,uint256,uint32,uint256)._toReserveBalance (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2275) is not in mixedCase
Parameter BancorFormula.calculateCrossReserveReturn(uint256,uint32,uint256,uint32,uint256)._toReserveRatio (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2276) is not in mixedCase
Parameter BancorFormula.calculateCrossReserveReturn(uint256,uint32,uint256,uint32,uint256)._amount (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2277) is not in mixedCase
Parameter BancorFormula.calculateFundCost(uint256,uint256,uint32,uint256)._supply (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2317) is not in mixedCase
Parameter BancorFormula.calculateFundCost(uint256,uint256,uint32,uint256)._reserveBalance (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2318) is not in mixedCase
Parameter BancorFormula.calculateFundCost(uint256,uint256,uint32,uint256)._totalRatio (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2319) is not in mixedCase
Parameter BancorFormula.calculateFundCost(uint256,uint256,uint32,uint256)._amount (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2320) is not in mixedCase
Parameter BancorFormula.calculateLiquidateReturn(uint256,uint256,uint32,uint256)._supply (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2356) is not in mixedCase
Parameter BancorFormula.calculateLiquidateReturn(uint256,uint256,uint32,uint256)._reserveBalance (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2357) is not in mixedCase
Parameter BancorFormula.calculateLiquidateReturn(uint256,uint256,uint32,uint256)._totalRatio (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2358) is not in mixedCase
Parameter BancorFormula.calculateLiquidateReturn(uint256,uint256,uint32,uint256)._amount (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2359) is not in mixedCase
Parameter BancorFormula.power(uint256,uint256,uint32,uint32)._baseN (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2407) is not in mixedCase
Parameter BancorFormula.power(uint256,uint256,uint32,uint32)._baseD (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2408) is not in mixedCase
Parameter BancorFormula.power(uint256,uint256,uint32,uint32)._expN (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2409) is not in mixedCase
Parameter BancorFormula.power(uint256,uint256,uint32,uint32)._expD (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2410) is not in mixedCase
Parameter BancorFormula.floorLog2(uint256)._n (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2465) is not in mixedCase
Parameter BancorFormula.findPositionInMaxExpArray(uint256)._x (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2492) is not in mixedCase
Parameter BancorFormula.generalExp(uint256,uint8)._x (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2516) is not in mixedCase
Parameter BancorFormula.generalExp(uint256,uint8)._precision (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2516) is not in mixedCase
Parameter BancorFormula.calculateCrossConnectorReturn(uint256,uint32,uint256,uint32,uint256)._fromConnectorBalance (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2756) is not in mixedCase
Parameter BancorFormula.calculateCrossConnectorReturn(uint256,uint32,uint256,uint32,uint256)._fromConnectorWeight (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2757) is not in mixedCase
Parameter BancorFormula.calculateCrossConnectorReturn(uint256,uint32,uint256,uint32,uint256)._toConnectorBalance (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2758) is not in mixedCase
Parameter BancorFormula.calculateCrossConnectorReturn(uint256,uint32,uint256,uint32,uint256)._toConnectorWeight (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2759) is not in mixedCase
Parameter BancorFormula.calculateCrossConnectorReturn(uint256,uint32,uint256,uint32,uint256)._amount (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2760) is not in mixedCase
Parameter TokenUtils.pullTokens(IGraphToken,address,uint256)._graphToken (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2787) is not in mixedCase
Parameter TokenUtils.pullTokens(IGraphToken,address,uint256)._from (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2788) is not in mixedCase
Parameter TokenUtils.pullTokens(IGraphToken,address,uint256)._amount (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2789) is not in mixedCase
Parameter TokenUtils.pushTokens(IGraphToken,address,uint256)._graphToken (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2803) is not in mixedCase
Parameter TokenUtils.pushTokens(IGraphToken,address,uint256)._to (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2804) is not in mixedCase
Parameter TokenUtils.pushTokens(IGraphToken,address,uint256)._amount (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2805) is not in mixedCase
Parameter TokenUtils.burnTokens(IGraphToken,uint256)._graphToken (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2817) is not in mixedCase
Parameter TokenUtils.burnTokens(IGraphToken,uint256)._amount (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2817) is not in mixedCase
Parameter GraphCurationToken.initialize(address)._owner (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2849) is not in mixedCase
Parameter GraphCurationToken.mint(address,uint256)._to (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2859) is not in mixedCase
Parameter GraphCurationToken.mint(address,uint256)._amount (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2859) is not in mixedCase
Parameter GraphCurationToken.burnFrom(address,uint256)._account (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2868) is not in mixedCase
Parameter GraphCurationToken.burnFrom(address,uint256)._amount (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2868) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions
INFO:Detectors:
Redundant expression "this (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#412)" inContextUpgradeable (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#400-416)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#redundant-statements
INFO:Detectors:
Curation.slitherConstructorConstantVariables() (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1068-1511) uses literals with too many digits:
	- MAX_PPM = 1000000 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1072)
Clones.clone(address) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1941-1951) uses literals with too many digits:
	- mstore(uint256,uint256)(ptr_clone_asm_0,0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1945)
Clones.clone(address) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1941-1951) uses literals with too many digits:
	- mstore(uint256,uint256)(ptr_clone_asm_0 + 0x28,0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1947)
Clones.cloneDeterministic(address,bytes32) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1960-1970) uses literals with too many digits:
	- mstore(uint256,uint256)(ptr_cloneDeterministic_asm_0,0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1964)
Clones.cloneDeterministic(address,bytes32) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1960-1970) uses literals with too many digits:
	- mstore(uint256,uint256)(ptr_cloneDeterministic_asm_0 + 0x28,0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1966)
Clones.predictDeterministicAddress(address,bytes32,address) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1975-1987) uses literals with too many digits:
	- mstore(uint256,uint256)(ptr_predictDeterministicAddress_asm_0,0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1979)
Clones.predictDeterministicAddress(address,bytes32,address) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1975-1987) uses literals with too many digits:
	- mstore(uint256,uint256)(ptr_predictDeterministicAddress_asm_0 + 0x28,0x5af43d82803e903d91602b57fd5bf3ff00000000000000000000000000000000) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#1981)
BancorFormula.generalExp(uint256,uint8) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2516-2586) uses literals with too many digits:
	- res += xi * 0x3442c4e6074a82f1797f72ac0000000 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2521)
BancorFormula.generalExp(uint256,uint8) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2516-2586) uses literals with too many digits:
	- res += xi * 0x116b96f757c380fb287fd0e40000000 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2523)
BancorFormula.generalExp(uint256,uint8) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2516-2586) uses literals with too many digits:
	- res += xi * 0x045ae5bdd5f0e03eca1ff4390000000 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2525)
BancorFormula.generalExp(uint256,uint8) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2516-2586) uses literals with too many digits:
	- res += xi * 0x00defabf91302cd95b9ffda50000000 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2527)
BancorFormula.generalExp(uint256,uint8) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2516-2586) uses literals with too many digits:
	- res += xi * 0x002529ca9832b22439efff9b8000000 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2529)
BancorFormula.generalExp(uint256,uint8) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2516-2586) uses literals with too many digits:
	- res += xi * 0x00054f1cf12bd04e516b6da88000000 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2531)
BancorFormula.generalExp(uint256,uint8) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2516-2586) uses literals with too many digits:
	- res += xi * 0x0000a9e39e257a09ca2d6db51000000 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2533)
BancorFormula.generalExp(uint256,uint8) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2516-2586) uses literals with too many digits:
	- res += xi * 0x000012e066e7b839fa050c309000000 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2535)
BancorFormula.generalExp(uint256,uint8) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2516-2586) uses literals with too many digits:
	- res += xi * 0x000001e33d7d926c329a1ad1a800000 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2537)
BancorFormula.generalExp(uint256,uint8) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2516-2586) uses literals with too many digits:
	- res += xi * 0x0000002bee513bdb4a6b19b5f800000 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2539)
BancorFormula.generalExp(uint256,uint8) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2516-2586) uses literals with too many digits:
	- res += xi * 0x00000003a9316fa79b88eccf2a00000 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2541)
BancorFormula.generalExp(uint256,uint8) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2516-2586) uses literals with too many digits:
	- res += xi * 0x0000000048177ebe1fa812375200000 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2543)
BancorFormula.generalExp(uint256,uint8) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2516-2586) uses literals with too many digits:
	- res += xi * 0x0000000005263fe90242dcbacf00000 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2545)
BancorFormula.generalExp(uint256,uint8) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2516-2586) uses literals with too many digits:
	- res += xi * 0x000000000057e22099c030d94100000 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2547)
BancorFormula.generalExp(uint256,uint8) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2516-2586) uses literals with too many digits:
	- res += xi * 0x0000000000057e22099c030d9410000 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2549)
BancorFormula.generalExp(uint256,uint8) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2516-2586) uses literals with too many digits:
	- res += xi * 0x00000000000052b6b54569976310000 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2551)
BancorFormula.generalExp(uint256,uint8) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2516-2586) uses literals with too many digits:
	- res += xi * 0x00000000000004985f67696bf748000 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2553)
BancorFormula.generalExp(uint256,uint8) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2516-2586) uses literals with too many digits:
	- res += xi * 0x000000000000003dea12ea99e498000 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2555)
BancorFormula.generalExp(uint256,uint8) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2516-2586) uses literals with too many digits:
	- res += xi * 0x00000000000000031880f2214b6e000 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2557)
BancorFormula.generalExp(uint256,uint8) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2516-2586) uses literals with too many digits:
	- res += xi * 0x000000000000000025bcff56eb36000 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2559)
BancorFormula.generalExp(uint256,uint8) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2516-2586) uses literals with too many digits:
	- res += xi * 0x000000000000000001b722e10ab1000 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2561)
BancorFormula.generalExp(uint256,uint8) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2516-2586) uses literals with too many digits:
	- res += xi * 0x0000000000000000001317c70077000 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2563)
BancorFormula.generalExp(uint256,uint8) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2516-2586) uses literals with too many digits:
	- res += xi * 0x00000000000000000000cba84aafa00 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2565)
BancorFormula.generalExp(uint256,uint8) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2516-2586) uses literals with too many digits:
	- res += xi * 0x00000000000000000000082573a0a00 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2567)
BancorFormula.generalExp(uint256,uint8) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2516-2586) uses literals with too many digits:
	- res += xi * 0x00000000000000000000005035ad900 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2569)
BancorFormula.generalExp(uint256,uint8) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2516-2586) uses literals with too many digits:
	- res += xi * 0x000000000000000000000002f881b00 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2571)
BancorFormula.generalExp(uint256,uint8) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2516-2586) uses literals with too many digits:
	- res += xi * 0x0000000000000000000000001b29340 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2573)
BancorFormula.generalExp(uint256,uint8) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2516-2586) uses literals with too many digits:
	- res += xi * 0x00000000000000000000000000efc40 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2575)
BancorFormula.generalExp(uint256,uint8) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2516-2586) uses literals with too many digits:
	- res += xi * 0x0000000000000000000000000007fe0 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2577)
BancorFormula.generalExp(uint256,uint8) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2516-2586) uses literals with too many digits:
	- res += xi * 0x0000000000000000000000000000420 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2579)
BancorFormula.generalExp(uint256,uint8) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2516-2586) uses literals with too many digits:
	- res += xi * 0x0000000000000000000000000000021 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2581)
BancorFormula.generalExp(uint256,uint8) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2516-2586) uses literals with too many digits:
	- res += xi * 0x0000000000000000000000000000001 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2583)
BancorFormula.generalExp(uint256,uint8) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2516-2586) uses literals with too many digits:
	- res / 0x688589cc0e9505e2f2fee5580000000 + _x + (ONE << _precision) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2585)
BancorFormula.optimalLog(uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2599-2674) uses literals with too many digits:
	- res += 0x40000000000000000000000000000000 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2607)
BancorFormula.optimalLog(uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2599-2674) uses literals with too many digits:
	- res += 0x20000000000000000000000000000000 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2611)
BancorFormula.optimalLog(uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2599-2674) uses literals with too many digits:
	- res += 0x10000000000000000000000000000000 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2615)
BancorFormula.optimalLog(uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2599-2674) uses literals with too many digits:
	- res += 0x08000000000000000000000000000000 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2619)
BancorFormula.optimalLog(uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2599-2674) uses literals with too many digits:
	- res += 0x04000000000000000000000000000000 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2623)
BancorFormula.optimalLog(uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2599-2674) uses literals with too many digits:
	- res += 0x02000000000000000000000000000000 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2627)
BancorFormula.optimalLog(uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2599-2674) uses literals with too many digits:
	- res += 0x01000000000000000000000000000000 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2631)
BancorFormula.optimalLog(uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2599-2674) uses literals with too many digits:
	- res += 0x00800000000000000000000000000000 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2635)
BancorFormula.optimalLog(uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2599-2674) uses literals with too many digits:
	- res += (z * (0x100000000000000000000000000000000 - y)) / 0x100000000000000000000000000000000 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2641-2643)
BancorFormula.optimalLog(uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2599-2674) uses literals with too many digits:
	- res += (z * (0x0aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa - y)) / 0x200000000000000000000000000000000 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2645-2647)
BancorFormula.optimalLog(uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2599-2674) uses literals with too many digits:
	- res += (z * (0x099999999999999999999999999999999 - y)) / 0x300000000000000000000000000000000 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2649-2651)
BancorFormula.optimalLog(uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2599-2674) uses literals with too many digits:
	- res += (z * (0x092492492492492492492492492492492 - y)) / 0x400000000000000000000000000000000 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2653-2655)
BancorFormula.optimalLog(uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2599-2674) uses literals with too many digits:
	- res += (z * (0x08e38e38e38e38e38e38e38e38e38e38e - y)) / 0x500000000000000000000000000000000 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2657-2659)
BancorFormula.optimalLog(uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2599-2674) uses literals with too many digits:
	- res += (z * (0x08ba2e8ba2e8ba2e8ba2e8ba2e8ba2e8b - y)) / 0x600000000000000000000000000000000 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2661-2663)
BancorFormula.optimalLog(uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2599-2674) uses literals with too many digits:
	- res += (z * (0x089d89d89d89d89d89d89d89d89d89d89 - y)) / 0x700000000000000000000000000000000 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2665-2667)
BancorFormula.optimalLog(uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2599-2674) uses literals with too many digits:
	- res += (z * (0x088888888888888888888888888888888 - y)) / 0x800000000000000000000000000000000 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2669-2671)
BancorFormula.optimalExp(uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2687-2750) uses literals with too many digits:
	- z = y = x % 0x10000000000000000000000000000000 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2693)
BancorFormula.optimalExp(uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2687-2750) uses literals with too many digits:
	- res += z * 0x00000618fee9f800 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2709)
BancorFormula.optimalExp(uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2687-2750) uses literals with too many digits:
	- res += z * 0x0000009c197dcc00 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2711)
BancorFormula.optimalExp(uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2687-2750) uses literals with too many digits:
	- res += z * 0x0000000e30dce400 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2713)
BancorFormula.optimalExp(uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2687-2750) uses literals with too many digits:
	- res += z * 0x000000012ebd1300 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2715)
BancorFormula.optimalExp(uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2687-2750) uses literals with too many digits:
	- res += z * 0x0000000017499f00 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2717)
BancorFormula.optimalExp(uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2687-2750) uses literals with too many digits:
	- res += z * 0x0000000001a9d480 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2719)
BancorFormula.optimalExp(uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2687-2750) uses literals with too many digits:
	- res += z * 0x00000000001c6380 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2721)
BancorFormula.optimalExp(uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2687-2750) uses literals with too many digits:
	- res += z * 0x000000000001c638 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2723)
BancorFormula.optimalExp(uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2687-2750) uses literals with too many digits:
	- res += z * 0x0000000000001ab8 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2725)
BancorFormula.optimalExp(uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2687-2750) uses literals with too many digits:
	- res += z * 0x000000000000017c (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2727)
BancorFormula.optimalExp(uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2687-2750) uses literals with too many digits:
	- res += z * 0x0000000000000014 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2729)
BancorFormula.optimalExp(uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2687-2750) uses literals with too many digits:
	- res += z * 0x0000000000000001 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2731)
BancorFormula.optimalExp(uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2687-2750) uses literals with too many digits:
	- (x & 0x010000000000000000000000000000000) != 0 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2734)
BancorFormula.optimalExp(uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2687-2750) uses literals with too many digits:
	- (x & 0x020000000000000000000000000000000) != 0 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2736)
BancorFormula.optimalExp(uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2687-2750) uses literals with too many digits:
	- (x & 0x040000000000000000000000000000000) != 0 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2738)
BancorFormula.optimalExp(uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2687-2750) uses literals with too many digits:
	- (x & 0x080000000000000000000000000000000) != 0 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2740)
BancorFormula.optimalExp(uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2687-2750) uses literals with too many digits:
	- (x & 0x100000000000000000000000000000000) != 0 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2742)
BancorFormula.optimalExp(uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2687-2750) uses literals with too many digits:
	- (x & 0x200000000000000000000000000000000) != 0 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2744)
BancorFormula.optimalExp(uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2687-2750) uses literals with too many digits:
	- (x & 0x400000000000000000000000000000000) != 0 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2746)
BancorFormula.optimalExp(uint256) (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2687-2750) uses literals with too many digits:
	- res = (res * 0x0002bf84208204f5977f9a8cf01fdc307) / 0x0000003c6ab775dd0b95b4cbee7e65d11 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2747)
BancorFormula.slitherConstructorConstantVariables() (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2003-2771) uses literals with too many digits:
	- MAX_RATIO = 1000000 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2009)
BancorFormula.slitherConstructorConstantVariables() (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2003-2771) uses literals with too many digits:
	- FIXED_1 = 0x080000000000000000000000000000000 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2016)
BancorFormula.slitherConstructorConstantVariables() (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2003-2771) uses literals with too many digits:
	- FIXED_2 = 0x100000000000000000000000000000000 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2017)
BancorFormula.slitherConstructorConstantVariables() (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2003-2771) uses literals with too many digits:
	- MAX_NUM = 0x200000000000000000000000000000000 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2018)
BancorFormula.slitherConstructorConstantVariables() (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2003-2771) uses literals with too many digits:
	- OPT_EXP_MAX_VAL = 0x800000000000000000000000000000000 (../../sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol#2030)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits
INFO:Slither:/bdata2/sc/dataset/mainnet/0x147A7758EA71d91D545407927b34DD77A5f7C21A.sol analyzed (27 contracts with 85 detectors), 335 result(s) found
