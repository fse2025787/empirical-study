Compilation warnings/errors on /bdata2/sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol:
Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> /bdata2/sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol


INFO:Detectors:
Future.swapBack() (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#376-414) sends eth to arbitrary user
	Dangerous calls:
	- address(marketingFeeReceiver).transfer(amountETHMarketing) (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#399)
	- address(teamFeeReceiver).transfer(amountETHTeam) (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#400)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#functions-that-send-ether-to-arbitrary-destinations
INFO:Detectors:
Reentrancy in Future._transferFrom(address,address,uint256) (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#326-344):
	External calls:
	- swapBack() (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#327)
		- router.swapExactTokensForETHSupportingFeeOnTransferTokens(amountToSwap,0,path,address(this),block.timestamp + 360) (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#386-392)
		- router.addLiquidityETH{value: amountETHLiquidity}(address(this),amountToLiquify,0,0,autoLiquidityReceiver,block.timestamp + 360) (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#404-411)
	External calls sending eth:
	- swapBack() (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#327)
		- address(marketingFeeReceiver).transfer(amountETHMarketing) (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#399)
		- address(teamFeeReceiver).transfer(amountETHTeam) (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#400)
		- router.addLiquidityETH{value: amountETHLiquidity}(address(this),amountToLiquify,0,0,autoLiquidityReceiver,block.timestamp + 360) (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#404-411)
	State variables written after the call(s):
	- _balances[sender] = _balances[sender].sub(amount,Insufficient Balance) (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#329)
	Future._balances (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#237) can be used in cross function reentrancies:
	- Future._transferFrom(address,address,uint256) (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#326-344)
	- Future.balanceOf(address) (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#298-300)
	- Future.constructor() (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#267-280)
	- Future.shouldSwapBack() (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#369-374)
	- Future.takeFee(address,uint256) (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#355-367)
	- _balances[address(this)] = _balances[address(this)].add(amount) (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#333)
	Future._balances (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#237) can be used in cross function reentrancies:
	- Future._transferFrom(address,address,uint256) (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#326-344)
	- Future.balanceOf(address) (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#298-300)
	- Future.constructor() (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#267-280)
	- Future.shouldSwapBack() (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#369-374)
	- Future.takeFee(address,uint256) (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#355-367)
	- _balances[recipient] = _balances[recipient].add(amountReceived) (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#341)
	Future._balances (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#237) can be used in cross function reentrancies:
	- Future._transferFrom(address,address,uint256) (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#326-344)
	- Future.balanceOf(address) (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#298-300)
	- Future.constructor() (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#267-280)
	- Future.shouldSwapBack() (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#369-374)
	- Future.takeFee(address,uint256) (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#355-367)
	- amountReceived = takeFee(sender,amount) (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#340)
		- _balances[address(this)] = _balances[address(this)].add(feeAmount) (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#359)
		- _balances[address(this)] = _balances[address(this)].add(feeAmount) (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#364)
	Future._balances (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#237) can be used in cross function reentrancies:
	- Future._transferFrom(address,address,uint256) (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#326-344)
	- Future.balanceOf(address) (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#298-300)
	- Future.constructor() (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#267-280)
	- Future.shouldSwapBack() (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#369-374)
	- Future.takeFee(address,uint256) (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#355-367)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities
INFO:Detectors:
Future.swapBack() (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#376-414) ignores return value by router.addLiquidityETH{value: amountETHLiquidity}(address(this),amountToLiquify,0,0,autoLiquidityReceiver,block.timestamp + 360) (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#404-411)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return
INFO:Detectors:
Future.setFees(uint256,uint256,uint256,uint256) (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#445-452) should emit an event for: 
	- liquidityFee = _liquidityFee (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#446) 
	- teamFee = _teamFee (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#447) 
	- marketingFee = _marketingFee (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#448) 
	- totalFee = _liquidityFee.add(teamFee).add(_marketingFee) (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#449) 
	- feeDenominator = _feeDenominator (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#450) 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-arithmetic
INFO:Detectors:
Auth.transferOwnership(address).adr (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#147) lacks a zero-check on :
		- owner = adr (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#148)
Future.setFeeReceivers(address,address,address)._autoLiquidityReceiver (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#434) lacks a zero-check on :
		- autoLiquidityReceiver = _autoLiquidityReceiver (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#435)
Future.setFeeReceivers(address,address,address)._teamFeeReceiver (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#434) lacks a zero-check on :
		- teamFeeReceiver = _teamFeeReceiver (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#436)
Future.setFeeReceivers(address,address,address)._marketingFeeReceiver (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#434) lacks a zero-check on :
		- marketingFeeReceiver = _marketingFeeReceiver (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#437)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation
INFO:Detectors:
Reentrancy in Future._transferFrom(address,address,uint256) (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#326-344):
	External calls:
	- swapBack() (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#327)
		- router.swapExactTokensForETHSupportingFeeOnTransferTokens(amountToSwap,0,path,address(this),block.timestamp + 360) (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#386-392)
		- router.addLiquidityETH{value: amountETHLiquidity}(address(this),amountToLiquify,0,0,autoLiquidityReceiver,block.timestamp + 360) (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#404-411)
	External calls sending eth:
	- swapBack() (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#327)
		- address(marketingFeeReceiver).transfer(amountETHMarketing) (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#399)
		- address(teamFeeReceiver).transfer(amountETHTeam) (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#400)
		- router.addLiquidityETH{value: amountETHLiquidity}(address(this),amountToLiquify,0,0,autoLiquidityReceiver,block.timestamp + 360) (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#404-411)
	State variables written after the call(s):
	- _holderLastTransferTimestamp[recipient] = block.timestamp (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#332)
	- _holderLastTransferTimestamp[recipient] = block.timestamp (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#338)
	- launch() (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#328)
		- launchedAt = block.number (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#422)
	- launch() (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#328)
		- launchedTime = block.timestamp (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#423)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2
INFO:Detectors:
Reentrancy in Future._transferFrom(address,address,uint256) (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#326-344):
	External calls:
	- swapBack() (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#327)
		- router.swapExactTokensForETHSupportingFeeOnTransferTokens(amountToSwap,0,path,address(this),block.timestamp + 360) (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#386-392)
		- router.addLiquidityETH{value: amountETHLiquidity}(address(this),amountToLiquify,0,0,autoLiquidityReceiver,block.timestamp + 360) (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#404-411)
	External calls sending eth:
	- swapBack() (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#327)
		- address(marketingFeeReceiver).transfer(amountETHMarketing) (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#399)
		- address(teamFeeReceiver).transfer(amountETHTeam) (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#400)
		- router.addLiquidityETH{value: amountETHLiquidity}(address(this),amountToLiquify,0,0,autoLiquidityReceiver,block.timestamp + 360) (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#404-411)
	Event emitted after the call(s):
	- Transfer(sender,address(this),feeAmount) (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#360)
		- amountReceived = takeFee(sender,amount) (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#340)
	- Transfer(sender,address(this),feeAmount) (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#365)
		- amountReceived = takeFee(sender,amount) (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#340)
	- Transfer(sender,recipient,0) (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#334)
	- Transfer(sender,address(this),amount) (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#335)
	- Transfer(sender,recipient,amountReceived) (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#342)
Reentrancy in Future.swapBack() (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#376-414):
	External calls:
	- router.swapExactTokensForETHSupportingFeeOnTransferTokens(amountToSwap,0,path,address(this),block.timestamp + 360) (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#386-392)
	- router.addLiquidityETH{value: amountETHLiquidity}(address(this),amountToLiquify,0,0,autoLiquidityReceiver,block.timestamp + 360) (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#404-411)
	External calls sending eth:
	- address(marketingFeeReceiver).transfer(amountETHMarketing) (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#399)
	- address(teamFeeReceiver).transfer(amountETHTeam) (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#400)
	- router.addLiquidityETH{value: amountETHLiquidity}(address(this),amountToLiquify,0,0,autoLiquidityReceiver,block.timestamp + 360) (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#404-411)
	Event emitted after the call(s):
	- AutoLiquify(amountETHLiquidity,amountToLiquify) (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#412)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3
INFO:Detectors:
Future._transferFrom(address,address,uint256) (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#326-344) uses timestamp for comparisons
	Dangerous comparisons:
	- launchMode() && recipient != pair (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#330)
	- launchMode() && recipient != pair && block.timestamp < _holderLastTransferTimestamp[recipient] + 20 (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#331)
Future.takeFee(address,uint256) (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#355-367) uses timestamp for comparisons
	Dangerous comparisons:
	- launchMode() && amount > _maxTxAmount (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#357)
Future.launchMode() (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#458-460) uses timestamp for comparisons
	Dangerous comparisons:
	- launchedAt != 0 && launchedAt + 3 < block.number && launchedTime + 10 >= block.timestamp (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#459)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp
INFO:Detectors:
SafeMath.mod(uint256,uint256) (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#61-63) is never used and should be removed
SafeMath.mod(uint256,uint256,string) (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#65-68) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code
INFO:Detectors:
Future._maxTxAmount (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#235) is set pre-construction with a non-constant function or state variable:
	- _totalSupply / 100
Future._maxWalletAmount (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#236) is set pre-construction with a non-constant function or state variable:
	- _totalSupply / 100
Future.swapThreshold (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#259) is set pre-construction with a non-constant function or state variable:
	- _totalSupply / 10000
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#function-initializing-state
INFO:Detectors:
Pragma version^0.7.6 (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#22) allows old versions
solc-0.7.6 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity
INFO:Detectors:
Function IDEXRouter.WETH() (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#162) is not in mixedCase
Parameter Future.setFeeReceivers(address,address,address)._autoLiquidityReceiver (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#434) is not in mixedCase
Parameter Future.setFeeReceivers(address,address,address)._teamFeeReceiver (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#434) is not in mixedCase
Parameter Future.setFeeReceivers(address,address,address)._marketingFeeReceiver (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#434) is not in mixedCase
Parameter Future.setSwapBackSettings(bool,uint256)._enabled (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#440) is not in mixedCase
Parameter Future.setSwapBackSettings(bool,uint256)._amount (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#440) is not in mixedCase
Parameter Future.setFees(uint256,uint256,uint256,uint256)._liquidityFee (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#445) is not in mixedCase
Parameter Future.setFees(uint256,uint256,uint256,uint256)._teamFee (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#445) is not in mixedCase
Parameter Future.setFees(uint256,uint256,uint256,uint256)._marketingFee (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#445) is not in mixedCase
Parameter Future.setFees(uint256,uint256,uint256,uint256)._feeDenominator (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#445) is not in mixedCase
Parameter Future.recoverToken(address,uint256)._token (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#466) is not in mixedCase
Variable Future.WETH (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#230) is not in mixedCase
Constant Future._name (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#231) is not in UPPER_CASE_WITH_UNDERSCORES
Constant Future._symbol (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#232) is not in UPPER_CASE_WITH_UNDERSCORES
Constant Future._decimals (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#233) is not in UPPER_CASE_WITH_UNDERSCORES
Variable Future._totalSupply (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#234) is not in mixedCase
Variable Future._maxTxAmount (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#235) is not in mixedCase
Variable Future._maxWalletAmount (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#236) is not in mixedCase
Variable Future._balances (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#237) is not in mixedCase
Variable Future._allowances (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#238) is not in mixedCase
Variable Future._holderLastTransferTimestamp (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#241) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions
INFO:Detectors:
Reentrancy in Future._transferFrom(address,address,uint256) (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#326-344):
	External calls:
	- swapBack() (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#327)
		- address(marketingFeeReceiver).transfer(amountETHMarketing) (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#399)
		- address(teamFeeReceiver).transfer(amountETHTeam) (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#400)
	External calls sending eth:
	- swapBack() (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#327)
		- address(marketingFeeReceiver).transfer(amountETHMarketing) (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#399)
		- address(teamFeeReceiver).transfer(amountETHTeam) (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#400)
		- router.addLiquidityETH{value: amountETHLiquidity}(address(this),amountToLiquify,0,0,autoLiquidityReceiver,block.timestamp + 360) (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#404-411)
	State variables written after the call(s):
	- _balances[sender] = _balances[sender].sub(amount,Insufficient Balance) (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#329)
	- _balances[address(this)] = _balances[address(this)].add(amount) (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#333)
	- _balances[recipient] = _balances[recipient].add(amountReceived) (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#341)
	- amountReceived = takeFee(sender,amount) (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#340)
		- _balances[address(this)] = _balances[address(this)].add(feeAmount) (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#359)
		- _balances[address(this)] = _balances[address(this)].add(feeAmount) (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#364)
	- _holderLastTransferTimestamp[recipient] = block.timestamp (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#332)
	- _holderLastTransferTimestamp[recipient] = block.timestamp (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#338)
	- launch() (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#328)
		- launchedAt = block.number (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#422)
	- launch() (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#328)
		- launchedTime = block.timestamp (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#423)
	Event emitted after the call(s):
	- Transfer(sender,address(this),feeAmount) (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#360)
		- amountReceived = takeFee(sender,amount) (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#340)
	- Transfer(sender,address(this),feeAmount) (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#365)
		- amountReceived = takeFee(sender,amount) (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#340)
	- Transfer(sender,recipient,0) (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#334)
	- Transfer(sender,address(this),amount) (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#335)
	- Transfer(sender,recipient,amountReceived) (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#342)
Reentrancy in Future.swapBack() (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#376-414):
	External calls:
	- address(marketingFeeReceiver).transfer(amountETHMarketing) (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#399)
	- address(teamFeeReceiver).transfer(amountETHTeam) (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#400)
	External calls sending eth:
	- address(marketingFeeReceiver).transfer(amountETHMarketing) (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#399)
	- address(teamFeeReceiver).transfer(amountETHTeam) (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#400)
	- router.addLiquidityETH{value: amountETHLiquidity}(address(this),amountToLiquify,0,0,autoLiquidityReceiver,block.timestamp + 360) (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#404-411)
	Event emitted after the call(s):
	- AutoLiquify(amountETHLiquidity,amountToLiquify) (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#412)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-4
INFO:Detectors:
Variable IDEXRouter.addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256).amountADesired (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#167) is too similar to IDEXRouter.addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256).amountBDesired (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#168)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#variable-names-too-similar
INFO:Detectors:
Future.slitherConstructorVariables() (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#227-472) uses literals with too many digits:
	- _totalSupply = 1000000000 * (10 ** _decimals) (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#234)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits
INFO:Detectors:
Future.WETH (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#230) should be constant 
Future._totalSupply (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#234) should be constant 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant
INFO:Detectors:
Future._maxTxAmount (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#235) should be immutable 
Future._maxWalletAmount (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#236) should be immutable 
Future.pair (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#254) should be immutable 
Future.router (../../sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol#253) should be immutable 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-immutable
INFO:Slither:/bdata2/sc/dataset/mainnet/0xba69c5b5349b3acc05c1630555304e3c3beef434.sol analyzed (6 contracts with 85 detectors), 52 result(s) found
