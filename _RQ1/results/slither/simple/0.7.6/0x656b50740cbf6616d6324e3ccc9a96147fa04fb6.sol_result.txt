INFO:Detectors:
LibMarket.refund() (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#2360-2379) sends eth to arbitrary user
	Dangerous calls:
	- (success) = msg.sender.call{value: s.ethRefundAmount}() (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#2368)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#functions-that-send-ether-to-arbitrary-destinations
INFO:Detectors:
FieldFacet.sowBeans(uint256) (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#337-340) ignores return value by bean().transferFrom(msg.sender,address(this),amount) (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#338)
FieldFacet.buyAndSowBeans(uint256,uint256) (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#342-346) ignores return value by bean().transferFrom(msg.sender,address(this),amount) (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#344)
LibClaim.claim(LibClaim.Claim) (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#396-416) ignores return value by IBean(s.c.bean).transfer(msg.sender,beansClaimed) (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#413)
LibClaim.claimLP(uint32[]) (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#440-444) ignores return value by IUniswapV2Pair(s.c.pair).transfer(msg.sender,lpClaimed) (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#443)
LibMarket.transferBeans(address,uint256,bool) (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#2298-2305) ignores return value by IBean(s.c.bean).transferFrom(msg.sender,to,amount) (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#2300)
LibMarket.transferBeans(address,uint256,bool) (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#2298-2305) ignores return value by IBean(s.c.bean).transferFrom(msg.sender,address(this),amount) (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#2302)
LibMarket.allocateBeansTo(uint256,address) (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#2311-2329) ignores return value by IBean(s.c.bean).transfer(to,fromWrappedBeans) (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#2326)
LibMarket.allocateBeansTo(uint256,address) (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#2311-2329) ignores return value by IBean(s.c.bean).transferFrom(msg.sender,to,remainingBeans) (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#2328)
LibMarket.refund() (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#2360-2379) ignores return value by IBean(s.c.bean).transfer(msg.sender,s.beanRefundAmount) (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#2374)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unchecked-transfer
INFO:Detectors:
Reentrancy in ReentrancyGuard.updateSiloNonReentrant() (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#27-33):
	External calls:
	- LibInternal.updateSilo(msg.sender) (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#30)
	State variables written after the call(s):
	- s.reentrantStatus = _NOT_ENTERED (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#32)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1
INFO:Detectors:
FieldFacet.allocateBeans(LibClaim.Claim,uint256) (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#348-351) ignores return value by LibClaim.claim(c) (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#349)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return
INFO:Detectors:
Reentrancy in LibMarket.buyBeansAndAddLiquidity(uint256,LibMarket.AddLiquidity) (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#2118-2148):
	External calls:
	- IWETH(ds.weth).deposit{value: msg.value}() (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#2123)
	- (ethSold,beans) = _buyWithWETH(buyBeanAmount,amounts[0],address(this)) (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#2129)
		- amounts = IUniswapV2Router02(ds.router).swapExactTokensForTokens(ethAmount,beanAmount,path,to,block.timestamp) (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#2240-2246)
	- allocateBeans(newBeanAmount) (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#2134)
		- IBean(s.c.bean).transfer(to,fromWrappedBeans) (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#2326)
		- IBean(s.c.bean).transferFrom(msg.sender,to,remainingBeans) (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#2328)
	External calls sending eth:
	- IWETH(ds.weth).deposit{value: msg.value}() (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#2123)
	Event emitted after the call(s):
	- BeanAllocation(msg.sender,fromWrappedBeans) (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#2325)
		- allocateBeans(newBeanAmount) (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#2134)
Reentrancy in LibClaim.claim(LibClaim.Claim) (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#396-416):
	External calls:
	- beansClaimed = beansClaimed.add(removeClaimLPAndWrapBeans(c.lpWithdrawals,c.minBeanAmount,c.minEthAmount)) (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#405)
		- (beanAmount,ethAmount) = IUniswapV2Router02(ds.router).removeLiquidity(ds.bean,ds.weth,liqudity,minBeanAmount,minEthAmount,address(this),block.timestamp) (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#2065-2073)
		- (beans,None) = LibMarket.removeLiquidityWithBeanAllocation(lpClaimd,minBeanAmount,minEthAmount) (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#467)
		- IWETH(s.c.weth).withdraw(inputAmount - amount) (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#2346)
	- removeAndClaimLP(c.lpWithdrawals,c.minBeanAmount,c.minEthAmount) (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#406)
		- IUniswapV2Router02(ds.router).removeLiquidityETH(ds.bean,liqudity,minBeanAmount,minEthAmount,msg.sender,block.timestamp) (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#2050-2057)
		- (beans,None) = LibMarket.removeLiquidity(lpClaimd,minBeanAmount,minEthAmount) (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#455)
	- claimLP(c.lpWithdrawals) (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#408)
		- IUniswapV2Pair(s.c.pair).transfer(msg.sender,lpClaimed) (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#443)
	- claimEth() (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#410)
		- LibInternal.updateSilo(msg.sender) (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#493)
		- (success) = address(facet).delegatecall(myFunctionCall) (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#1949)
		- IWETH(s.c.weth).withdraw(eth) (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#505)
		- (success) = account.call{value: eth}() (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#506)
	External calls sending eth:
	- claimEth() (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#410)
		- (success) = account.call{value: eth}() (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#506)
	Event emitted after the call(s):
	- EtherClaim(msg.sender,eth) (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#495)
		- claimEth() (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#410)
Reentrancy in LibClaim.claimEth() (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#492-496):
	External calls:
	- LibInternal.updateSilo(msg.sender) (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#493)
	- eth = claimPlenty(msg.sender) (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#494)
		- IWETH(s.c.weth).withdraw(eth) (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#505)
		- (success) = account.call{value: eth}() (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#506)
	External calls sending eth:
	- eth = claimPlenty(msg.sender) (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#494)
		- (success) = account.call{value: eth}() (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#506)
	Event emitted after the call(s):
	- EtherClaim(msg.sender,eth) (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#495)
Reentrancy in FieldFacet.sowBeans(uint256) (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#337-340):
	External calls:
	- bean().transferFrom(msg.sender,address(this),amount) (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#338)
	- _sowBeans(amount) (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#339)
		- bean().burn(amount) (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#108)
	Event emitted after the call(s):
	- Sow(account,s.f.pods,beans,pods) (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#616)
		- _sowBeans(amount) (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#339)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3
INFO:Detectors:
LibDibbler.saveSowTime() (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#624-651) uses timestamp for comparisons
	Dangerous comparisons:
	- sowTime < fasterTime (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#647)
LibMarket.allocateBeanRefund(uint256,uint256) (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#2332-2340) uses timestamp for comparisons
	Dangerous comparisons:
	- inputAmount > amount (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#2333)
LibMarket.allocateEthRefund(uint256,uint256,bool) (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#2343-2352) uses timestamp for comparisons
	Dangerous comparisons:
	- inputAmount > amount (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#2344)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp
INFO:Detectors:
LibAppStorage.diamondStorage() (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#1161-1165) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#1162-1164)
LibInternal.diamondStorage() (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#1938-1943) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#1940-1942)
LibMarket.diamondStorage() (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#1992-1997) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#1994-1996)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage
INFO:Detectors:
Different versions of Solidity are used:
	- Version used: ['=0.7.6', '>=0.5.0', '>=0.6.0<0.8.0', '>=0.6.2']
	- =0.7.6 (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#7)
	- =0.7.6 (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#47)
	- =0.7.6 (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#293)
	- =0.7.6 (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#359)
	- =0.7.6 (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#552)
	- =0.7.6 (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#572)
	- =0.7.6 (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#659)
	- =0.7.6 (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#838)
	- =0.7.6 (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#1097)
	- =0.7.6 (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#1150)
	- =0.7.6 (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#1647)
	- =0.7.6 (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#1871)
	- =0.7.6 (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#1904)
	- =0.7.6 (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#1958)
	- =0.7.6 (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#2386)
	- >=0.5.0 (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#1384)
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#119)
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#1171)
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#1439)
	- >=0.6.2 (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#195)
	- >=0.6.2 (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#2401)
	- ABIEncoderV2 (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#2)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#different-pragma-directives-are-used
INFO:Detectors:
C.getAdvanceIncentive() (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#752-754) is never used and should be removed
C.getChainId() (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#776-778) is never used and should be removed
C.getCommitIncentive() (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#756-758) is never used and should be removed
C.getGovernanceEmergencyPeriod() (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#732-734) is never used and should be removed
C.getGovernanceEmergencyThreshold() (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#744-746) is never used and should be removed
C.getGovernanceExpiration() (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#736-738) is never used and should be removed
C.getGovernancePassThreshold() (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#740-742) is never used and should be removed
C.getGovernancePeriod() (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#728-730) is never used and should be removed
C.getGovernanceProposalThreshold() (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#748-750) is never used and should be removed
C.getHarvestPercentage() (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#772-774) is never used and should be removed
C.getLowerBoundPodRate() (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#788-790) is never used and should be removed
C.getMaxPropositions() (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#808-810) is never used and should be removed
C.getMaxSoilDenominator() (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#768-770) is never used and should be removed
C.getOptimalPodRate() (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#780-782) is never used and should be removed
C.getRainTime() (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#804-806) is never used and should be removed
C.getRootsBase() (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#828-830) is never used and should be removed
C.getSeasonPeriod() (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#724-726) is never used and should be removed
C.getSeedsPerBean() (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#812-814) is never used and should be removed
C.getSeedsPerLPBean() (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#816-818) is never used and should be removed
C.getSiloWithdrawSeasons() (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#760-762) is never used and should be removed
C.getStalkPerBean() (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#820-822) is never used and should be removed
C.getStalkPerLPSeed() (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#824-826) is never used and should be removed
C.getUpperBoundDPD() (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#792-794) is never used and should be removed
Decimal.add(Decimal.D256,uint256) (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#904-913) is never used and should be removed
Decimal.div(Decimal.D256,Decimal.D256) (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#1025-1034) is never used and should be removed
Decimal.div(Decimal.D256,uint256) (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#949-958) is never used and should be removed
Decimal.equals(Decimal.D256,Decimal.D256) (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#1036-1038) is never used and should be removed
Decimal.greaterThanOrEqualTo(Decimal.D256,Decimal.D256) (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#1048-1050) is never used and should be removed
Decimal.isZero(Decimal.D256) (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#1056-1058) is never used and should be removed
Decimal.lessThan(Decimal.D256,Decimal.D256) (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#1044-1046) is never used and should be removed
Decimal.lessThanOrEqualTo(Decimal.D256,Decimal.D256) (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#1052-1054) is never used and should be removed
Decimal.pow(Decimal.D256,uint256) (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#960-978) is never used and should be removed
Decimal.sub(Decimal.D256,Decimal.D256) (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#991-1000) is never used and should be removed
Decimal.sub(Decimal.D256,Decimal.D256,string) (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#1002-1012) is never used and should be removed
Decimal.sub(Decimal.D256,uint256) (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#915-924) is never used and should be removed
Decimal.sub(Decimal.D256,uint256,string) (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#926-936) is never used and should be removed
Decimal.zero() (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#865-871) is never used and should be removed
LibCheck.balanceCheck() (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#1131-1142) is never used and should be removed
LibCheck.lpBalanceCheck() (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#1123-1129) is never used and should be removed
LibMarket._addLiquidity(uint256,uint256,uint256,uint256) (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#2250-2262) is never used and should be removed
LibMarket._addLiquidityWETH(uint256,uint256,uint256,uint256) (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#2264-2278) is never used and should be removed
LibMarket._amountIn(uint256) (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#2280-2287) is never used and should be removed
LibMarket._buyExactTokens(uint256,uint256,address) (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#2213-2229) is never used and should be removed
LibMarket._buyWithWETH(uint256,uint256,address) (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#2231-2248) is never used and should be removed
LibMarket._sell(uint256,uint256,address) (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#2177-2193) is never used and should be removed
LibMarket.addAndDepositLiquidity(LibMarket.AddLiquidity) (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#2077-2081) is never used and should be removed
LibMarket.addLiquidity(LibMarket.AddLiquidity) (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#2083-2093) is never used and should be removed
LibMarket.allocateBeanRefund(uint256,uint256) (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#2332-2340) is never used and should be removed
LibMarket.allocateBeansToWallet(uint256,address,bool) (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#2289-2296) is never used and should be removed
LibMarket.buy(uint256) (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#2010-2012) is never used and should be removed
LibMarket.buyBeansAndAddLiquidity(uint256,LibMarket.AddLiquidity) (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#2118-2148) is never used and should be removed
LibMarket.buyEthAndAddLiquidity(uint256,LibMarket.AddLiquidity) (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#2152-2171) is never used and should be removed
LibMarket.buyExactTokens(uint256,address) (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#2027-2031) is never used and should be removed
LibMarket.buyExactTokensToWallet(uint256,address,bool) (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#2018-2025) is never used and should be removed
LibMarket.initMarket(address,address,address) (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#1999-2004) is never used and should be removed
LibMarket.sellToWETH(uint256,uint256) (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#2033-2039) is never used and should be removed
LibMarket.swapAndAddLiquidity(uint256,uint256,LibMarket.AddLiquidity) (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#2095-2111) is never used and should be removed
LibMarket.transferBeans(address,uint256,bool) (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#2298-2305) is never used and should be removed
LibSafeMath32.add(uint32,uint32) (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#1512-1516) is never used and should be removed
LibSafeMath32.div(uint32,uint32) (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#1562-1565) is never used and should be removed
LibSafeMath32.div(uint32,uint32,string) (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#1617-1620) is never used and should be removed
LibSafeMath32.mod(uint32,uint32) (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#1579-1582) is never used and should be removed
LibSafeMath32.mod(uint32,uint32,string) (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#1637-1640) is never used and should be removed
LibSafeMath32.mul(uint32,uint32) (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#1543-1548) is never used and should be removed
LibSafeMath32.sub(uint32,uint32,string) (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#1597-1600) is never used and should be removed
LibSafeMath32.tryAdd(uint32,uint32) (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#1451-1455) is never used and should be removed
LibSafeMath32.tryDiv(uint32,uint32) (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#1487-1490) is never used and should be removed
LibSafeMath32.tryMod(uint32,uint32) (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#1497-1500) is never used and should be removed
LibSafeMath32.tryMul(uint32,uint32) (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#1472-1480) is never used and should be removed
LibSafeMath32.trySub(uint32,uint32) (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#1462-1465) is never used and should be removed
SafeMath.div(uint256,uint256,string) (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#1358-1361) is never used and should be removed
SafeMath.mod(uint256,uint256) (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#1320-1323) is never used and should be removed
SafeMath.mod(uint256,uint256,string) (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#1378-1381) is never used and should be removed
SafeMath.tryAdd(uint256,uint256) (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#1192-1196) is never used and should be removed
SafeMath.tryDiv(uint256,uint256) (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#1228-1231) is never used and should be removed
SafeMath.tryMod(uint256,uint256) (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#1238-1241) is never used and should be removed
SafeMath.tryMul(uint256,uint256) (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#1213-1221) is never used and should be removed
SafeMath.trySub(uint256,uint256) (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#1203-1206) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code
INFO:Detectors:
Pragma version=0.7.6 (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#7) allows old versions
Pragma version=0.7.6 (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#47) allows old versions
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#119) is too complex
Pragma version>=0.6.2 (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#195) allows old versions
Pragma version=0.7.6 (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#293) allows old versions
Pragma version=0.7.6 (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#359) allows old versions
Pragma version=0.7.6 (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#552) allows old versions
Pragma version=0.7.6 (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#572) allows old versions
Pragma version=0.7.6 (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#659) allows old versions
Pragma version=0.7.6 (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#838) allows old versions
Pragma version=0.7.6 (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#1097) allows old versions
Pragma version=0.7.6 (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#1150) allows old versions
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#1171) is too complex
Pragma version>=0.5.0 (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#1384) allows old versions
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#1439) is too complex
Pragma version=0.7.6 (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#1647) allows old versions
Pragma version=0.7.6 (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#1871) allows old versions
Pragma version=0.7.6 (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#1904) allows old versions
Pragma version=0.7.6 (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#1958) allows old versions
Pragma version=0.7.6 (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#2386) allows old versions
Pragma version>=0.6.2 (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#2401) allows old versions
solc-0.7.6 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity
INFO:Detectors:
Low level call in LibClaim.claimPlenty(address) (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#498-509):
	- (success) = account.call{value: eth}() (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#506)
Low level call in LibInternal.updateSilo(address) (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#1945-1951):
	- (success) = address(facet).delegatecall(myFunctionCall) (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#1949)
Low level call in LibMarket.refund() (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#2360-2379):
	- (success) = msg.sender.call{value: s.ethRefundAmount}() (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#2368)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls
INFO:Detectors:
Function IUniswapV2Router01.WETH() (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#199) is not in mixedCase
Parameter LibClaim.claimBeanWithdrawal(address,uint32)._s (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#429) is not in mixedCase
Parameter LibClaim.claimLPWithdrawal(address,uint32)._s (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#481) is not in mixedCase
Function IUniswapV2Pair.DOMAIN_SEPARATOR() (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#1401) is not in mixedCase
Function IUniswapV2Pair.PERMIT_TYPEHASH() (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#1402) is not in mixedCase
Function IUniswapV2Pair.MINIMUM_LIQUIDITY() (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#1419) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions
INFO:Detectors:
Variable IUniswapV2Router01.addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256).amountADesired (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#204) is too similar to IUniswapV2Router01.addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256).amountBDesired (../../sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol#205)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#variable-names-too-similar
INFO:Slither:/bdata2/sc/dataset/mainnet/0x656b50740cbf6616d6324e3ccc9a96147fa04fb6.sol analyzed (23 contracts with 85 detectors), 133 result(s) found
