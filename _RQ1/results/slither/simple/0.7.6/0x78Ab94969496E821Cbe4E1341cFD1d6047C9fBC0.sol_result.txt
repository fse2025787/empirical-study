Compilation warnings/errors on /bdata2/sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol:
Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it "abstract" is sufficient.
   --> /bdata2/sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol:167:5:
    |
167 |     constructor(address _logic, bytes memory _data) public payable {
    |     ^ (Relevant source part starts here and spans across multiple lines).

Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it "abstract" is sufficient.
   --> /bdata2/sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol:287:5:
    |
287 |     constructor(address _logic, address admin_, bytes memory _data) public payable UpgradeableProxy(_logic, _data) {
    |     ^ (Relevant source part starts here and spans across multiple lines).

Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it "abstract" is sufficient.
   --> /bdata2/sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol:888:5:
    |
888 |     constructor(address logic, address admin, bytes memory data) TransparentUpgradeableProxy(logic, admin, data) public {
    |     ^ (Relevant source part starts here and spans across multiple lines).


INFO:Detectors:
ZoneStakingUpgradeable.fund(address,uint256) (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#857-862) uses arbitrary from in transferFrom: zoneToken.safeTransferFrom(_from,address(this),_amount) (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#861)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#arbitrary-from-in-transferfrom
INFO:Detectors:
ZoneStakingUpgradeable.endStake() (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#785-809) uses a dangerous strict equality:
	- require(bool,string)(earlyUnstakeAllowed || claimIn == 0,Locked still) (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#795)
ZoneStakingUpgradeable.endStake() (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#785-809) uses a dangerous strict equality:
	- (claimIn == 0) (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#797)
ZoneStakingUpgradeable.isStaked(address) (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#738-740) uses a dangerous strict equality:
	- (stakes[account].exist && stakes[account].unstakedTs == 0) (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#739)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dangerous-strict-equalities
INFO:Detectors:
Reentrancy in ZoneStakingUpgradeable.startStake(uint256,uint8) (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#759-783):
	External calls:
	- zoneToken.safeTransferFrom(staker,address(this),amount) (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#769)
	State variables written after the call(s):
	- stakes[staker] = Stake(true,typeIndex,block.timestamp,0,amount,0) (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#771-778)
	ZoneStakingUpgradeable.stakes (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#604) can be used in cross function reentrancies:
	- ZoneStakingUpgradeable.getStakeInfo(address) (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#844-855)
	- ZoneStakingUpgradeable.isStaked(address) (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#738-740)
	- ZoneStakingUpgradeable.stakes (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#604)
	- totalStakedAmount = totalStakedAmount.add(amount) (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#779)
	ZoneStakingUpgradeable.totalStakedAmount (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#605) can be used in cross function reentrancies:
	- ZoneStakingUpgradeable.finish() (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#864-875)
	- ZoneStakingUpgradeable.leftCapacity() (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#733-736)
	- ZoneStakingUpgradeable.setStakeLimit(uint256) (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#742-747)
	- ZoneStakingUpgradeable.totalStakedAmount (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#605)
	- types[typeIndex].stakedAmount = types[typeIndex].stakedAmount.add(amount) (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#780)
	ZoneStakingUpgradeable.types (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#603) can be used in cross function reentrancies:
	- ZoneStakingUpgradeable._addTypes(bool[],uint16[],uint256[]) (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#692-715)
	- ZoneStakingUpgradeable._calcReward(uint256,uint256,uint8) (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#829-842)
	- ZoneStakingUpgradeable.changeType(uint8,bool,uint16,uint256) (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#717-731)
	- ZoneStakingUpgradeable.finish() (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#864-875)
	- ZoneStakingUpgradeable.getAllTypes() (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#672-682)
	- ZoneStakingUpgradeable.types (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#603)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1
INFO:Detectors:
UpgradeableProxy.constructor(address,bytes) (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#167-173) ignores return value by Address.functionDelegateCall(_logic,_data) (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#171)
TransparentUpgradeableProxy.upgradeToAndCall(address,bytes) (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#370-373) ignores return value by Address.functionDelegateCall(newImplementation,data) (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#372)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return
INFO:Detectors:
ZoneStakingUpgradeableProxy.constructor(address,address,bytes).admin (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#888) shadows:
	- TransparentUpgradeableProxy.admin() (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#324-326) (function)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing
INFO:Detectors:
ZoneStakingUpgradeable.setGovernorTimelock(address) (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#668-670) should emit an event for: 
	- governorTimelock = _governorTimelock (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#669) 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-access-control
INFO:Detectors:
ZoneStakingUpgradeable.setUser1ZonePerSec(uint256) (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#882-884) should emit an event for: 
	- user1ZonePerSec = _user1ZonePerSec (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#883) 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-arithmetic
INFO:Detectors:
ZoneStakingUpgradeable.initialize(address,address,address,bool[],uint16[],uint256[])._governorTimelock (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#649) lacks a zero-check on :
		- governorTimelock = _governorTimelock (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#663)
ZoneStakingUpgradeable.setGovernorTimelock(address)._governorTimelock (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#668) lacks a zero-check on :
		- governorTimelock = _governorTimelock (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#669)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation
INFO:Detectors:
Modifier TransparentUpgradeableProxy.ifAdmin() (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#307-313) does not always execute _; or revertReference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-modifier
INFO:Detectors:
ZoneStakingUpgradeable.isStaked(address) (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#738-740) uses timestamp for comparisons
	Dangerous comparisons:
	- (stakes[account].exist && stakes[account].unstakedTs == 0) (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#739)
ZoneStakingUpgradeable.startStake(uint256,uint8) (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#759-783) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(0 < capacity,Already closed) (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#762)
	- require(bool,string)(amount <= capacity,Exceed the staking limit) (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#765)
ZoneStakingUpgradeable.endStake() (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#785-809) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(earlyUnstakeAllowed || claimIn == 0,Locked still) (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#795)
	- (claimIn == 0) (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#797)
ZoneStakingUpgradeable.endStakeForUser1(address) (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#811-827) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(0 < user1LastUnlockTs,Blacklisted) (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#812)
	- allowedAmount < stakedAmount (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#816)
	- 0 < allowedAmount (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#824)
ZoneStakingUpgradeable._calcReward(uint256,uint256,uint8) (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#829-842) uses timestamp for comparisons
	Dangerous comparisons:
	- (block.timestamp < unlockTs) (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#839)
ZoneStakingUpgradeable.finish() (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#864-875) uses timestamp for comparisons
	Dangerous comparisons:
	- 0 < amount (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#872)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp
INFO:Detectors:
Proxy._delegate(address) (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#80-100) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#82-99)
UpgradeableProxy._implementation() (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#190-196) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#193-195)
UpgradeableProxy._setImplementation(address) (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#211-220) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#217-219)
TransparentUpgradeableProxy._admin() (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#378-384) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#381-383)
TransparentUpgradeableProxy._setAdmin(address) (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#389-396) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#393-395)
Address.isContract(address) (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#1286-1295) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#1293)
Address._verifyCallResult(bool,bytes,string) (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#1431-1448) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#1440-1443)
AddressUpgradeable.isContract(address) (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#1476-1485) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#1483)
AddressUpgradeable._verifyCallResult(bool,bytes,string) (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#1597-1614) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#1606-1609)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage
INFO:Detectors:
ZoneStakingUpgradeable.startStake(uint256,uint8) (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#759-783) compares to a boolean constant:
	-require(bool,string)(isStaked(staker) == false,Already staked) (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#763)
ZoneStakingUpgradeable._calcReward(uint256,uint256,uint8) (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#829-842) compares to a boolean constant:
	-types[typeIndex].enabled == false (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#834)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#boolean-equality
INFO:Detectors:
Different versions of Solidity are used:
	- Version used: ['0.7.6', '>=0.4.24<0.8.0', '>=0.6.0<0.8.0', '>=0.6.2<0.8.0']
	- 0.7.6 (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#477)
	- 0.7.6 (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#571)
	- >=0.4.24<0.8.0 (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#7)
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#62)
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#146)
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#225)
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#257)
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#409)
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#894)
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#1109)
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#1187)
	- >=0.6.2<0.8.0 (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#1263)
	- >=0.6.2<0.8.0 (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#1453)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#different-pragma-directives-are-used
INFO:Detectors:
Address.functionCall(address,bytes) (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#1339-1341) is never used and should be removed
Address.functionCall(address,bytes,string) (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#1349-1351) is never used and should be removed
Address.functionCallWithValue(address,bytes,uint256) (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#1364-1366) is never used and should be removed
Address.functionCallWithValue(address,bytes,uint256,string) (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#1374-1381) is never used and should be removed
Address.functionStaticCall(address,bytes) (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#1389-1391) is never used and should be removed
Address.functionStaticCall(address,bytes,string) (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#1399-1405) is never used and should be removed
Address.sendValue(address,uint256) (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#1313-1319) is never used and should be removed
AddressUpgradeable.functionCall(address,bytes) (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#1529-1531) is never used and should be removed
AddressUpgradeable.functionCallWithValue(address,bytes,uint256) (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#1554-1556) is never used and should be removed
AddressUpgradeable.functionStaticCall(address,bytes) (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#1579-1581) is never used and should be removed
AddressUpgradeable.functionStaticCall(address,bytes,string) (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#1589-1595) is never used and should be removed
AddressUpgradeable.sendValue(address,uint256) (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#1503-1509) is never used and should be removed
ContextUpgradeable.__Context_init() (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#239-241) is never used and should be removed
ContextUpgradeable._msgData() (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#249-252) is never used and should be removed
SafeERC20Upgradeable.safeApprove(IERC20Upgradeable,address,uint256) (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#1221-1230) is never used and should be removed
SafeERC20Upgradeable.safeDecreaseAllowance(IERC20Upgradeable,address,uint256) (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#1237-1240) is never used and should be removed
SafeERC20Upgradeable.safeIncreaseAllowance(IERC20Upgradeable,address,uint256) (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#1232-1235) is never used and should be removed
SafeMathUpgradeable.div(uint256,uint256,string) (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#1081-1084) is never used and should be removed
SafeMathUpgradeable.mod(uint256,uint256) (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#1043-1046) is never used and should be removed
SafeMathUpgradeable.mod(uint256,uint256,string) (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#1101-1104) is never used and should be removed
SafeMathUpgradeable.sub(uint256,uint256,string) (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#1061-1064) is never used and should be removed
SafeMathUpgradeable.tryAdd(uint256,uint256) (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#915-919) is never used and should be removed
SafeMathUpgradeable.tryDiv(uint256,uint256) (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#951-954) is never used and should be removed
SafeMathUpgradeable.tryMod(uint256,uint256) (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#961-964) is never used and should be removed
SafeMathUpgradeable.tryMul(uint256,uint256) (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#936-944) is never used and should be removed
SafeMathUpgradeable.trySub(uint256,uint256) (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#926-929) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code
INFO:Detectors:
Pragma version>=0.4.24<0.8.0 (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#7) is too complex
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#62) is too complex
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#146) is too complex
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#225) is too complex
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#257) is too complex
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#409) is too complex
Pragma version0.7.6 (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#477) allows old versions
Pragma version0.7.6 (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#571) allows old versions
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#894) is too complex
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#1109) is too complex
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#1187) is too complex
Pragma version>=0.6.2<0.8.0 (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#1263) is too complex
Pragma version>=0.6.2<0.8.0 (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#1453) is too complex
solc-0.7.6 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity
INFO:Detectors:
Low level call in Address.sendValue(address,uint256) (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#1313-1319):
	- (success) = recipient.call{value: amount}() (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#1317)
Low level call in Address.functionCallWithValue(address,bytes,uint256,string) (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#1374-1381):
	- (success,returndata) = target.call{value: value}(data) (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#1379)
Low level call in Address.functionStaticCall(address,bytes,string) (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#1399-1405):
	- (success,returndata) = target.staticcall(data) (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#1403)
Low level call in Address.functionDelegateCall(address,bytes,string) (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#1423-1429):
	- (success,returndata) = target.delegatecall(data) (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#1427)
Low level call in AddressUpgradeable.sendValue(address,uint256) (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#1503-1509):
	- (success) = recipient.call{value: amount}() (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#1507)
Low level call in AddressUpgradeable.functionCallWithValue(address,bytes,uint256,string) (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#1564-1571):
	- (success,returndata) = target.call{value: value}(data) (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#1569)
Low level call in AddressUpgradeable.functionStaticCall(address,bytes,string) (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#1589-1595):
	- (success,returndata) = target.staticcall(data) (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#1593)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls
INFO:Detectors:
Function ContextUpgradeable.__Context_init() (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#239-241) is not in mixedCase
Function ContextUpgradeable.__Context_init_unchained() (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#243-244) is not in mixedCase
Variable ContextUpgradeable.__gap (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#253) is not in mixedCase
Function ReentrancyGuardUpgradeable.__ReentrancyGuard_init() (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#445-447) is not in mixedCase
Function ReentrancyGuardUpgradeable.__ReentrancyGuard_init_unchained() (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#449-451) is not in mixedCase
Variable ReentrancyGuardUpgradeable.__gap (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#473) is not in mixedCase
Function OwnableUpgradeable.__Ownable_init(address) (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#503-506) is not in mixedCase
Parameter OwnableUpgradeable.__Ownable_init(address)._ownerAddress (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#503) is not in mixedCase
Function OwnableUpgradeable.__Ownable_init_unchained(address) (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#508-511) is not in mixedCase
Parameter OwnableUpgradeable.__Ownable_init_unchained(address)._ownerAddress (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#508) is not in mixedCase
Variable OwnableUpgradeable.__gap (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#568) is not in mixedCase
Parameter ZoneStakingUpgradeable.initialize(address,address,address,bool[],uint16[],uint256[])._ownerAddress (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#647) is not in mixedCase
Parameter ZoneStakingUpgradeable.initialize(address,address,address,bool[],uint16[],uint256[])._zoneToken (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#648) is not in mixedCase
Parameter ZoneStakingUpgradeable.initialize(address,address,address,bool[],uint16[],uint256[])._governorTimelock (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#649) is not in mixedCase
Parameter ZoneStakingUpgradeable.initialize(address,address,address,bool[],uint16[],uint256[])._typeEnables (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#650) is not in mixedCase
Parameter ZoneStakingUpgradeable.initialize(address,address,address,bool[],uint16[],uint256[])._lockDays (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#651) is not in mixedCase
Parameter ZoneStakingUpgradeable.initialize(address,address,address,bool[],uint16[],uint256[])._rewardRates (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#652) is not in mixedCase
Parameter ZoneStakingUpgradeable.setGovernorTimelock(address)._governorTimelock (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#668) is not in mixedCase
Parameter ZoneStakingUpgradeable.addTypes(bool[],uint16[],uint256[])._enables (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#685) is not in mixedCase
Parameter ZoneStakingUpgradeable.addTypes(bool[],uint16[],uint256[])._lockDays (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#686) is not in mixedCase
Parameter ZoneStakingUpgradeable.addTypes(bool[],uint16[],uint256[])._rewardRates (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#687) is not in mixedCase
Parameter ZoneStakingUpgradeable.changeType(uint8,bool,uint16,uint256)._typeIndex (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#718) is not in mixedCase
Parameter ZoneStakingUpgradeable.changeType(uint8,bool,uint16,uint256)._enable (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#719) is not in mixedCase
Parameter ZoneStakingUpgradeable.changeType(uint8,bool,uint16,uint256)._lockDay (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#720) is not in mixedCase
Parameter ZoneStakingUpgradeable.changeType(uint8,bool,uint16,uint256)._rewardRate (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#721) is not in mixedCase
Parameter ZoneStakingUpgradeable.setStakeLimit(uint256)._stakeLimit (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#742) is not in mixedCase
Parameter ZoneStakingUpgradeable.setMinStakeAmount(uint256)._minStakeAmount (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#749) is not in mixedCase
Parameter ZoneStakingUpgradeable.fund(address,uint256)._from (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#857) is not in mixedCase
Parameter ZoneStakingUpgradeable.fund(address,uint256)._amount (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#857) is not in mixedCase
Parameter ZoneStakingUpgradeable.setUser1ZonePerSec(uint256)._user1ZonePerSec (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#882) is not in mixedCase
Constant ZoneStakingUpgradeable.user1 (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#618) is not in UPPER_CASE_WITH_UNDERSCORES
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions
INFO:Detectors:
Redundant expression "this (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#250)" inContextUpgradeable (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#238-254)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#redundant-statements
INFO:Detectors:
Variable ZoneStakingUpgradeable.changeType(uint8,bool,uint16,uint256)._rewardRate (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#721) is too similar to ZoneStakingUpgradeable.getAllTypes().rewardRates (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#672)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#variable-names-too-similar
INFO:Detectors:
ZoneStakingUpgradeable.initialize(address,address,address,bool[],uint16[],uint256[]) (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#646-666) uses literals with too many digits:
	- stakeLimit = 2500000e18 (../../sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol#656)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits
INFO:Slither:/bdata2/sc/dataset/mainnet/0x78Ab94969496E821Cbe4E1341cFD1d6047C9fBC0.sol analyzed (14 contracts with 85 detectors), 112 result(s) found
