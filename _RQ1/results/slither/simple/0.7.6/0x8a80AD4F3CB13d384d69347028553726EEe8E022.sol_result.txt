Compilation warnings/errors on /bdata2/sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol:
Warning: Contract code size exceeds 24576 bytes (a limit introduced in Spurious Dragon). This contract may not be deployable on mainnet. Consider enabling the optimizer (with a low "runs" value!), turning off revert strings, or using libraries.
    --> /bdata2/sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol:1289:1:
     |
1289 | contract HarvestFuture is RateFuture {
     | ^ (Relevant source part starts here and spans across multiple lines).


INFO:Detectors:
RateFuture.startNewPeriod() (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#1126-1157) uses arbitrary from in transferFrom: assert(bool)(ibt.transferFrom(address(futureVault),address(futureWallet),yield)) (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#1140)
Future.withdrawLockFunds(address,uint256) (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#642-678) uses arbitrary from in transferFrom: ibt.transferFrom(address(futureVault),_user,fundsToBeUnlocked.add(yieldToBeRedeemed)) (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#664)
Future.withdrawLockFunds(address,uint256) (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#642-678) uses arbitrary from in transferFrom: ibt.transferFrom(address(futureVault),IRegistry(controller.getRegistryAddress()).getTreasuryAddress(),treasuryFee) (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#668-672)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#arbitrary-from-in-transferfrom
INFO:Detectors:
Future.claimFYTforPeriod(address,uint256) (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#612-618) ignores return value by fyts[_periodIndex].transfer(_user,apwibt.balanceOf(_user)) (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#617)
Future._claimAPWIBT(address) (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#620-634) ignores return value by apwibt.transfer(_user,claimableAPWIBT) (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#625)
Future._claimAPWIBT(address) (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#620-634) ignores return value by fyts[i].transfer(_user,claimableAPWIBT) (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#629)
Future.withdrawLockFunds(address,uint256) (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#642-678) ignores return value by ibt.transferFrom(address(futureVault),_user,fundsToBeUnlocked.add(yieldToBeRedeemed)) (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#664)
Future.withdrawLockFunds(address,uint256) (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#642-678) ignores return value by ibt.transferFrom(address(futureVault),IRegistry(controller.getRegistryAddress()).getTreasuryAddress(),treasuryFee) (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#668-672)
RateFuture.unregister(address,uint256) (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#1101-1120) ignores return value by ibt.transfer(_user,toRefund) (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#1119)
RateFuture.startNewPeriod() (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#1126-1157) ignores return value by ibt.transfer(address(futureVault),registrationsTotals[nextPeriodID]) (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#1148)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unchecked-transfer
INFO:Detectors:
Future.withdrawLockFunds(address,uint256) (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#642-678) performs a multiplication on the result of a division:
	- yieldToBeUnlocked = _amount.mul(unrealisedYield).div(apwibt.balanceOf(_user)) (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#655)
	- yieldToBeRedeemed = (yieldToBeUnlocked.mul(controller.getUnlockYieldFactor(PERIOD_DURATION))).div(1000) (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#661)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#divide-before-multiply
INFO:Detectors:
Future.claimFYTforPeriod(address,uint256) (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#612-618) uses a dangerous strict equality:
	- assert(bool)((lastPeriodClaimed[_user] + 1) == _periodIndex) (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#613)
RateFuture.getRegisteredAmount(address) (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#1165-1172) uses a dangerous strict equality:
	- periodID == getNextPeriodIndex() (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#1167)
Future.hasNoRecord(address) (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#969-971) uses a dangerous strict equality:
	- (lastPeriodClaimed[_user] == 0) (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#970)
Future.register(address,uint256) (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#562-580) uses a dangerous strict equality:
	- registrations[_user].startIndex == nextIndex (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#570)
RateFuture.unregister(address,uint256) (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#1101-1120) uses a dangerous strict equality:
	- require(bool,string)(registrations[_user].startIndex == nextIndex,The is not ongoing registration for the next period) (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#1105)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dangerous-strict-equalities
INFO:Detectors:
Reentrancy in Future._claimAPWIBT(address) (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#620-634):
	External calls:
	- _claimFYT(_user) (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#624)
		- fyts[_periodIndex].transfer(_user,apwibt.balanceOf(_user)) (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#617)
	- apwibt.transfer(_user,claimableAPWIBT) (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#625)
	- fyts[i].transfer(_user,claimableAPWIBT) (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#629)
	State variables written after the call(s):
	- lastPeriodClaimed[_user] = nextIndex - 1 (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#632)
	Future.lastPeriodClaimed (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#439) can be used in cross function reentrancies:
	- Future._claimAPWIBT(address) (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#620-634)
	- Future._claimFYT(address) (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#605-610)
	- Future._hasOnlyClaimableFYT(address) (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#714-716)
	- Future.claimFYTforPeriod(address,uint256) (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#612-618)
	- Future.createRecord(address) (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#973-976)
	- Future.getClaimableFYTForPeriod(address,uint256) (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#749-761)
	- Future.hasNoRecord(address) (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#969-971)
	- delete registrations[_user] (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#633)
	Future.registrations (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#440) can be used in cross function reentrancies:
	- Future._claimAPWIBT(address) (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#620-634)
	- Future._register(address,uint256) (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#582-584)
	- Future.getClaimableFYTForPeriod(address,uint256) (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#749-761)
	- Future.hasClaimableAPWIBT(address) (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#723-725)
	- Future.register(address,uint256) (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#562-580)
Reentrancy in Future.register(address,uint256) (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#562-580):
	External calls:
	- _claimAPWIBT(_user) (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#575)
		- fyts[_periodIndex].transfer(_user,apwibt.balanceOf(_user)) (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#617)
		- apwibt.transfer(_user,claimableAPWIBT) (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#625)
		- fyts[i].transfer(_user,claimableAPWIBT) (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#629)
	State variables written after the call(s):
	- _register(_user,_amount) (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#576)
		- registrations[_user] = Registration(getNextPeriodIndex(),_initialScaledBalance) (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#583)
	Future.registrations (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#440) can be used in cross function reentrancies:
	- Future._claimAPWIBT(address) (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#620-634)
	- Future._register(address,uint256) (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#582-584)
	- Future.getClaimableFYTForPeriod(address,uint256) (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#749-761)
	- Future.hasClaimableAPWIBT(address) (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#723-725)
	- Future.register(address,uint256) (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#562-580)
Reentrancy in RateFuture.startNewPeriod() (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#1126-1157):
	External calls:
	- futureWallet.registerExpiredFuture(yield) (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#1139)
	- assert(bool)(ibt.transferFrom(address(futureVault),address(futureWallet),yield)) (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#1140)
	- apwibt.mint(address(this),registrationsTotals[nextPeriodID].mul(IBTRates[nextPeriodID]).div(10 ** ibt.decimals())) (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#1144-1147)
	- ibt.transfer(address(futureVault),registrationsTotals[nextPeriodID]) (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#1148)
	State variables written after the call(s):
	- IBTRates.push() (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#1152)
	RateFuture.IBTRates (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#1072) can be used in cross function reentrancies:
	- RateFuture.getClaimableAPWIBT(address) (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#1179-1182)
	- RateFuture.getUnrealisedYield(address) (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#1198-1202)
	- RateFuture.initialize(address,address,uint256,string,address,address) (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#1082-1093)
	- registrationsTotals.push() (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#1151)
	Future.registrationsTotals (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#431) can be used in cross function reentrancies:
	- Future.getNextPeriodIndex() (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#732-734)
	- Future.initialize(address,address,uint256,string,address,address) (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#510-546)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1
INFO:Detectors:
Reentrancy in Future.deployFutureYieldToken(uint256) (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#682-701):
	External calls:
	- tokenDenomination = controller.getFYTSymbol(apwibt.symbol(),PERIOD_DURATION) (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#684)
	- newToken = IFutureYieldToken(IProxyFactory(registry.getProxyFactoryAddress()).deployMinimal(registry.getFYTLogicAddress(),payload)) (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#694-697)
	State variables written after the call(s):
	- fyts.push(newToken) (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#698)
Reentrancy in Future.initialize(address,address,uint256,string,address,address) (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#510-546):
	External calls:
	- ibtSymbol = controller.getFutureIBTSymbol(ibt.symbol(),_platformName,PERIOD_DURATION) (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#533)
	- apwibt = IAPWineIBT(IProxyFactory(registry.getProxyFactoryAddress()).deployMinimal(registry.getAPWineIBTLogicAddress(),payload)) (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#542-544)
	State variables written after the call(s):
	- apwibt = IAPWineIBT(IProxyFactory(registry.getProxyFactoryAddress()).deployMinimal(registry.getAPWineIBTLogicAddress(),payload)) (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#542-544)
Reentrancy in RateFuture.initialize(address,address,uint256,string,address,address) (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#1082-1093):
	External calls:
	- super.initialize(_controller,_ibt,_periodDuration,_platformName,_deployerAddress,_admin) (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#1090)
		- ibtSymbol = controller.getFutureIBTSymbol(ibt.symbol(),_platformName,PERIOD_DURATION) (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#533)
		- apwibt = IAPWineIBT(IProxyFactory(registry.getProxyFactoryAddress()).deployMinimal(registry.getAPWineIBTLogicAddress(),payload)) (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#542-544)
	State variables written after the call(s):
	- IBTRates.push(getIBTRate()) (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#1091)
	- IBTRates.push() (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#1092)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2
INFO:Detectors:
Reentrancy in Future.initialize(address,address,uint256,string,address,address) (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#510-546):
	External calls:
	- ibtSymbol = controller.getFutureIBTSymbol(ibt.symbol(),_platformName,PERIOD_DURATION) (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#533)
	- apwibt = IAPWineIBT(IProxyFactory(registry.getProxyFactoryAddress()).deployMinimal(registry.getAPWineIBTLogicAddress(),payload)) (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#542-544)
	Event emitted after the call(s):
	- APWIBTSet(address(apwibt)) (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#545)
Reentrancy in Future.pauseLiquidityTransfers() (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#910-914):
	External calls:
	- apwibt.pause() (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#912)
	Event emitted after the call(s):
	- LiquidityTransfersPaused() (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#913)
Reentrancy in Future.register(address,uint256) (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#562-580):
	External calls:
	- _claimAPWIBT(_user) (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#575)
		- fyts[_periodIndex].transfer(_user,apwibt.balanceOf(_user)) (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#617)
		- apwibt.transfer(_user,claimableAPWIBT) (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#625)
		- fyts[i].transfer(_user,claimableAPWIBT) (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#629)
	Event emitted after the call(s):
	- UserRegistered(_user,_amount,nextIndex) (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#579)
Reentrancy in Future.resumeLiquidityTransfers() (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#919-923):
	External calls:
	- apwibt.unpause() (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#921)
	Event emitted after the call(s):
	- LiquidityTransfersResumed() (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#922)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3
INFO:Detectors:
Initializable._isConstructor() (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#55-66) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#64)
AddressUpgradeable.isContract(address) (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#1790-1799) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#1797)
AddressUpgradeable._verifyCallResult(bool,bytes,string) (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#1911-1928) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#1920-1923)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage
INFO:Detectors:
Different versions of Solidity are used:
	- Version used: ['0.7.6', '>=0.4.24<0.8.0', '>=0.6.0<0.8.0', '>=0.6.2<0.8.0']
	- 0.7.6 (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#398)
	- 0.7.6 (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#1056)
	- 0.7.6 (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#1217)
	- 0.7.6 (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#1278)
	- 0.7.6 (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#1299)
	- 0.7.6 (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#1931)
	- 0.7.6 (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#1937)
	- 0.7.6 (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#1976)
	- 0.7.6 (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#2004)
	- 0.7.6 (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#2063)
	- 0.7.6 (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#2106)
	- 0.7.6 (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#2280)
	- 0.7.6 (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#2302)
	- 0.7.6 (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#2388)
	- >=0.4.24<0.8.0 (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#8)
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#71)
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#104)
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#331)
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#981)
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#1309)
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#1469)
	- >=0.6.2<0.8.0 (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#1767)
	- ABIEncoderV2 (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#2)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#different-pragma-directives-are-used
INFO:Detectors:
AccessControlUpgradeable.__AccessControl_init() (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#147-150) is never used and should be removed
AccessControlUpgradeable.__AccessControl_init_unchained() (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#152-153) is never used and should be removed
AccessControlUpgradeable._setRoleAdmin(bytes32,bytes32) (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#310-313) is never used and should be removed
AddressUpgradeable._verifyCallResult(bool,bytes,string) (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#1911-1928) is never used and should be removed
AddressUpgradeable.functionCall(address,bytes) (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#1843-1845) is never used and should be removed
AddressUpgradeable.functionCall(address,bytes,string) (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#1853-1855) is never used and should be removed
AddressUpgradeable.functionCallWithValue(address,bytes,uint256) (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#1868-1870) is never used and should be removed
AddressUpgradeable.functionCallWithValue(address,bytes,uint256,string) (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#1878-1885) is never used and should be removed
AddressUpgradeable.functionStaticCall(address,bytes) (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#1893-1895) is never used and should be removed
AddressUpgradeable.functionStaticCall(address,bytes,string) (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#1903-1909) is never used and should be removed
AddressUpgradeable.isContract(address) (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#1790-1799) is never used and should be removed
AddressUpgradeable.sendValue(address,uint256) (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#1817-1823) is never used and should be removed
ContextUpgradeable.__Context_init() (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#85-87) is never used and should be removed
ContextUpgradeable.__Context_init_unchained() (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#89-90) is never used and should be removed
ContextUpgradeable._msgData() (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#95-98) is never used and should be removed
EnumerableSetUpgradeable.add(EnumerableSetUpgradeable.Bytes32Set,bytes32) (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#1613-1615) is never used and should be removed
EnumerableSetUpgradeable.add(EnumerableSetUpgradeable.UintSet,uint256) (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#1722-1724) is never used and should be removed
EnumerableSetUpgradeable.at(EnumerableSetUpgradeable.Bytes32Set,uint256) (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#1651-1653) is never used and should be removed
EnumerableSetUpgradeable.at(EnumerableSetUpgradeable.UintSet,uint256) (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#1760-1762) is never used and should be removed
EnumerableSetUpgradeable.contains(EnumerableSetUpgradeable.Bytes32Set,bytes32) (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#1630-1632) is never used and should be removed
EnumerableSetUpgradeable.contains(EnumerableSetUpgradeable.UintSet,uint256) (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#1739-1741) is never used and should be removed
EnumerableSetUpgradeable.length(EnumerableSetUpgradeable.Bytes32Set) (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#1637-1639) is never used and should be removed
EnumerableSetUpgradeable.length(EnumerableSetUpgradeable.UintSet) (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#1746-1748) is never used and should be removed
EnumerableSetUpgradeable.remove(EnumerableSetUpgradeable.Bytes32Set,bytes32) (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#1623-1625) is never used and should be removed
EnumerableSetUpgradeable.remove(EnumerableSetUpgradeable.UintSet,uint256) (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#1732-1734) is never used and should be removed
ReentrancyGuardUpgradeable.__ReentrancyGuard_init() (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#367-369) is never used and should be removed
ReentrancyGuardUpgradeable.__ReentrancyGuard_init_unchained() (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#371-373) is never used and should be removed
SafeMathUpgradeable.mod(uint256,uint256) (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#1445-1447) is never used and should be removed
SafeMathUpgradeable.mod(uint256,uint256,string) (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#1461-1464) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code
INFO:Detectors:
Pragma version>=0.4.24<0.8.0 (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#8) is too complex
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#71) is too complex
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#104) is too complex
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#331) is too complex
Pragma version0.7.6 (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#398) allows old versions
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#981) is too complex
Pragma version0.7.6 (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#1056) allows old versions
Pragma version0.7.6 (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#1217) allows old versions
Pragma version0.7.6 (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#1278) allows old versions
Pragma version0.7.6 (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#1299) allows old versions
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#1309) is too complex
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#1469) is too complex
Pragma version>=0.6.2<0.8.0 (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#1767) is too complex
Pragma version0.7.6 (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#1931) allows old versions
Pragma version0.7.6 (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#1937) allows old versions
Pragma version0.7.6 (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#1976) allows old versions
Pragma version0.7.6 (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#2004) allows old versions
Pragma version0.7.6 (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#2063) allows old versions
Pragma version0.7.6 (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#2106) allows old versions
Pragma version0.7.6 (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#2280) allows old versions
Pragma version0.7.6 (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#2302) allows old versions
Pragma version0.7.6 (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#2388) allows old versions
solc-0.7.6 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity
INFO:Detectors:
Low level call in AddressUpgradeable.sendValue(address,uint256) (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#1817-1823):
	- (success) = recipient.call{value: amount}() (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#1821)
Low level call in AddressUpgradeable.functionCallWithValue(address,bytes,uint256,string) (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#1878-1885):
	- (success,returndata) = target.call{value: value}(data) (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#1883)
Low level call in AddressUpgradeable.functionStaticCall(address,bytes,string) (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#1903-1909):
	- (success,returndata) = target.staticcall(data) (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#1907)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls
INFO:Detectors:
Function ContextUpgradeable.__Context_init() (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#85-87) is not in mixedCase
Function ContextUpgradeable.__Context_init_unchained() (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#89-90) is not in mixedCase
Variable ContextUpgradeable.__gap (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#99) is not in mixedCase
Function AccessControlUpgradeable.__AccessControl_init() (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#147-150) is not in mixedCase
Function AccessControlUpgradeable.__AccessControl_init_unchained() (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#152-153) is not in mixedCase
Variable AccessControlUpgradeable.__gap (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#326) is not in mixedCase
Function ReentrancyGuardUpgradeable.__ReentrancyGuard_init() (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#367-369) is not in mixedCase
Function ReentrancyGuardUpgradeable.__ReentrancyGuard_init_unchained() (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#371-373) is not in mixedCase
Variable ReentrancyGuardUpgradeable.__gap (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#395) is not in mixedCase
Parameter Future.initialize(address,address,uint256,string,address,address)._controller (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#511) is not in mixedCase
Parameter Future.initialize(address,address,uint256,string,address,address)._ibt (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#512) is not in mixedCase
Parameter Future.initialize(address,address,uint256,string,address,address)._periodDuration (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#513) is not in mixedCase
Parameter Future.initialize(address,address,uint256,string,address,address)._platformName (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#514) is not in mixedCase
Parameter Future.initialize(address,address,uint256,string,address,address)._deployerAddress (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#515) is not in mixedCase
Parameter Future.initialize(address,address,uint256,string,address,address)._admin (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#516) is not in mixedCase
Parameter Future.register(address,uint256)._user (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#562) is not in mixedCase
Parameter Future.register(address,uint256)._amount (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#562) is not in mixedCase
Parameter Future.claimFYT(address)._user (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#599) is not in mixedCase
Parameter Future.claimFYTforPeriod(address,uint256)._user (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#612) is not in mixedCase
Parameter Future.claimFYTforPeriod(address,uint256)._periodIndex (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#612) is not in mixedCase
Parameter Future.withdrawLockFunds(address,uint256)._user (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#642) is not in mixedCase
Parameter Future.withdrawLockFunds(address,uint256)._amount (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#642) is not in mixedCase
Parameter Future.deployFutureYieldToken(uint256)._internalPeriodID (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#682) is not in mixedCase
Parameter Future.hasClaimableFYT(address)._user (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#710) is not in mixedCase
Parameter Future.hasClaimableAPWIBT(address)._user (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#723) is not in mixedCase
Parameter Future.getClaimableFYTForPeriod(address,uint256)._user (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#749) is not in mixedCase
Parameter Future.getClaimableFYTForPeriod(address,uint256)._periodID (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#749) is not in mixedCase
Parameter Future.getUnlockableFunds(address)._user (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#768) is not in mixedCase
Parameter Future.getFYTofPeriod(uint256)._periodIndex (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#840) is not in mixedCase
Parameter Future.setFutureVault(address)._futureVault (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#930) is not in mixedCase
Parameter Future.setFutureWallet(address)._futureWallet (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#941) is not in mixedCase
Parameter Future.setLiquidityGauge(address)._liquidityGauge (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#952) is not in mixedCase
Parameter Future.setAPWIBT(address)._apwibt (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#963) is not in mixedCase
Parameter Future.hasNoRecord(address)._user (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#969) is not in mixedCase
Parameter Future.createRecord(address)._user (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#973) is not in mixedCase
Variable Future.PERIOD_DURATION (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#452) is not in mixedCase
Variable Future.PLATFORM_NAME (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#453) is not in mixedCase
Variable Future.PAUSED (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#455) is not in mixedCase
Variable Future.WITHRAWALS_PAUSED (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#456) is not in mixedCase
Variable Future.DEPOSITS_PAUSED (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#457) is not in mixedCase
Parameter RateFuture.initialize(address,address,uint256,string,address,address)._controller (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#1083) is not in mixedCase
Parameter RateFuture.initialize(address,address,uint256,string,address,address)._ibt (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#1084) is not in mixedCase
Parameter RateFuture.initialize(address,address,uint256,string,address,address)._periodDuration (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#1085) is not in mixedCase
Parameter RateFuture.initialize(address,address,uint256,string,address,address)._platformName (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#1086) is not in mixedCase
Parameter RateFuture.initialize(address,address,uint256,string,address,address)._deployerAddress (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#1087) is not in mixedCase
Parameter RateFuture.initialize(address,address,uint256,string,address,address)._admin (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#1088) is not in mixedCase
Parameter RateFuture.unregister(address,uint256)._user (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#1101) is not in mixedCase
Parameter RateFuture.unregister(address,uint256)._amount (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#1101) is not in mixedCase
Parameter RateFuture.getRegisteredAmount(address)._user (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#1165) is not in mixedCase
Parameter RateFuture.getClaimableAPWIBT(address)._user (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#1179) is not in mixedCase
Parameter RateFuture.getUnlockableFunds(address)._user (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#1189) is not in mixedCase
Parameter RateFuture.getUnrealisedYield(address)._user (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#1198) is not in mixedCase
Parameter RateFuture.forceSetRegisteredBalance(address,uint256)._user (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#1210) is not in mixedCase
Parameter RateFuture.forceSetRegisteredBalance(address,uint256)._amount (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#1210) is not in mixedCase
Variable RateFuture.IBTRates (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#1072) is not in mixedCase
Contract iFarm (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#1303-1305) is not in CapWords
Function IController.STARTING_DELAY() (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#2111) is not in mixedCase
Parameter IRegistry.setAPWineIBTLogic(address)._APWineIBTLogic (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#2440) is not in mixedCase
Parameter IRegistry.setFYTLogic(address)._FYTLogic (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#2446) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions
INFO:Detectors:
Redundant expression "this (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#96)" inContextUpgradeable (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#84-100)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#redundant-statements
INFO:Detectors:
Variable Future.PERIOD_DURATION (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#452) is too similar to Future.initialize(address,address,uint256,string,address,address)._periodDuration (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#513)
Variable Future.PLATFORM_NAME (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#453) is too similar to Future.initialize(address,address,uint256,string,address,address)._platformName (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#514)
Variable Future.PERIOD_DURATION (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#452) is too similar to RateFuture.initialize(address,address,uint256,string,address,address)._periodDuration (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#1085)
Variable Future.PLATFORM_NAME (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#453) is too similar to RateFuture.initialize(address,address,uint256,string,address,address)._platformName (../../sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol#1086)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#variable-names-too-similar
INFO:Slither:/bdata2/sc/dataset/mainnet/0x8a80AD4F3CB13d384d69347028553726EEe8E022.sol analyzed (22 contracts with 85 detectors), 149 result(s) found
