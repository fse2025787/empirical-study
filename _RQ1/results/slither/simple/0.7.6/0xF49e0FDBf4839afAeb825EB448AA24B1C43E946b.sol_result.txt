Compilation warnings/errors on /bdata2/sc/dataset/mainnet/0xF49e0FDBf4839afAeb825EB448AA24B1C43E946b.sol:
Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it "abstract" is sufficient.
  --> /bdata2/sc/dataset/mainnet/0xF49e0FDBf4839afAeb825EB448AA24B1C43E946b.sol:53:5:
   |
53 |     constructor () internal {
   |     ^ (Relevant source part starts here and spans across multiple lines).


INFO:Detectors:
PremiaBondingCurve.sell(uint256,uint256) (../../sc/dataset/mainnet/0xF49e0FDBf4839afAeb825EB448AA24B1C43E946b.sol#263-276) sends eth to arbitrary user
	Dangerous calls:
	- treasury.transfer(commission) (../../sc/dataset/mainnet/0xF49e0FDBf4839afAeb825EB448AA24B1C43E946b.sol#273)
	- msg.sender.transfer(refund) (../../sc/dataset/mainnet/0xF49e0FDBf4839afAeb825EB448AA24B1C43E946b.sol#274)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#functions-that-send-ether-to-arbitrary-destinations
INFO:Detectors:
Reentrancy in PremiaBondingCurve.doUpgrade() (../../sc/dataset/mainnet/0xF49e0FDBf4839afAeb825EB448AA24B1C43E946b.sol#190-201):
	External calls:
	- premia.safeTransfer(address(newContract),premiaBalance) (../../sc/dataset/mainnet/0xF49e0FDBf4839afAeb825EB448AA24B1C43E946b.sol#196)
	- newContract.initialize{value: ethBalance}(premiaBalance,ethBalance,soldAmount) (../../sc/dataset/mainnet/0xF49e0FDBf4839afAeb825EB448AA24B1C43E946b.sol#198)
	External calls sending eth:
	- newContract.initialize{value: ethBalance}(premiaBalance,ethBalance,soldAmount) (../../sc/dataset/mainnet/0xF49e0FDBf4839afAeb825EB448AA24B1C43E946b.sol#198)
	State variables written after the call(s):
	- isUpgradeDone = true (../../sc/dataset/mainnet/0xF49e0FDBf4839afAeb825EB448AA24B1C43E946b.sol#199)
	PremiaBondingCurve.isUpgradeDone (../../sc/dataset/mainnet/0xF49e0FDBf4839afAeb825EB448AA24B1C43E946b.sol#134) can be used in cross function reentrancies:
	- PremiaBondingCurve.doUpgrade() (../../sc/dataset/mainnet/0xF49e0FDBf4839afAeb825EB448AA24B1C43E946b.sol#190-201)
	- PremiaBondingCurve.isUpgradeDone (../../sc/dataset/mainnet/0xF49e0FDBf4839afAeb825EB448AA24B1C43E946b.sol#134)
	- PremiaBondingCurve.notUpgraded() (../../sc/dataset/mainnet/0xF49e0FDBf4839afAeb825EB448AA24B1C43E946b.sol#170-173)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities
INFO:Detectors:
PremiaBondingCurve.constructor(IERC20,address,uint256,uint256)._treasury (../../sc/dataset/mainnet/0xF49e0FDBf4839afAeb825EB448AA24B1C43E946b.sol#155) lacks a zero-check on :
		- treasury = _treasury (../../sc/dataset/mainnet/0xF49e0FDBf4839afAeb825EB448AA24B1C43E946b.sol#157)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation
INFO:Detectors:
Reentrancy in PremiaBondingCurve.buyExactTokenAmount(uint256) (../../sc/dataset/mainnet/0xF49e0FDBf4839afAeb825EB448AA24B1C43E946b.sol#222-231):
	External calls:
	- premia.safeTransfer(msg.sender,_tokenAmount) (../../sc/dataset/mainnet/0xF49e0FDBf4839afAeb825EB448AA24B1C43E946b.sol#227)
	External calls sending eth:
	- msg.sender.transfer(msg.value.sub(ethAmount)) (../../sc/dataset/mainnet/0xF49e0FDBf4839afAeb825EB448AA24B1C43E946b.sol#229)
	Event emitted after the call(s):
	- Bought(msg.sender,msg.sender,_tokenAmount,ethAmount) (../../sc/dataset/mainnet/0xF49e0FDBf4839afAeb825EB448AA24B1C43E946b.sol#230)
Reentrancy in PremiaBondingCurve.buyTokenWithExactEthAmount(uint256,address) (../../sc/dataset/mainnet/0xF49e0FDBf4839afAeb825EB448AA24B1C43E946b.sol#237-246):
	External calls:
	- premia.safeTransfer(_sendTo,tokenAmount) (../../sc/dataset/mainnet/0xF49e0FDBf4839afAeb825EB448AA24B1C43E946b.sol#242)
	Event emitted after the call(s):
	- Bought(msg.sender,_sendTo,tokenAmount,ethAmount) (../../sc/dataset/mainnet/0xF49e0FDBf4839afAeb825EB448AA24B1C43E946b.sol#243)
Reentrancy in PremiaBondingCurve.doUpgrade() (../../sc/dataset/mainnet/0xF49e0FDBf4839afAeb825EB448AA24B1C43E946b.sol#190-201):
	External calls:
	- premia.safeTransfer(address(newContract),premiaBalance) (../../sc/dataset/mainnet/0xF49e0FDBf4839afAeb825EB448AA24B1C43E946b.sol#196)
	- newContract.initialize{value: ethBalance}(premiaBalance,ethBalance,soldAmount) (../../sc/dataset/mainnet/0xF49e0FDBf4839afAeb825EB448AA24B1C43E946b.sol#198)
	External calls sending eth:
	- newContract.initialize{value: ethBalance}(premiaBalance,ethBalance,soldAmount) (../../sc/dataset/mainnet/0xF49e0FDBf4839afAeb825EB448AA24B1C43E946b.sol#198)
	Event emitted after the call(s):
	- UpgradePerformed(address(newContract),premiaBalance,ethBalance,soldAmount) (../../sc/dataset/mainnet/0xF49e0FDBf4839afAeb825EB448AA24B1C43E946b.sol#200)
Reentrancy in PremiaBondingCurve.sell(uint256,uint256) (../../sc/dataset/mainnet/0xF49e0FDBf4839afAeb825EB448AA24B1C43E946b.sol#263-276):
	External calls:
	- premia.safeTransferFrom(msg.sender,address(this),_tokenAmount) (../../sc/dataset/mainnet/0xF49e0FDBf4839afAeb825EB448AA24B1C43E946b.sol#272)
	External calls sending eth:
	- treasury.transfer(commission) (../../sc/dataset/mainnet/0xF49e0FDBf4839afAeb825EB448AA24B1C43E946b.sol#273)
	- msg.sender.transfer(refund) (../../sc/dataset/mainnet/0xF49e0FDBf4839afAeb825EB448AA24B1C43E946b.sol#274)
	Event emitted after the call(s):
	- Sold(msg.sender,_tokenAmount,refund,commission) (../../sc/dataset/mainnet/0xF49e0FDBf4839afAeb825EB448AA24B1C43E946b.sol#275)
Reentrancy in PremiaBondingCurve.sellWithPermit(uint256,uint256,uint256,uint8,bytes32,bytes32) (../../sc/dataset/mainnet/0xF49e0FDBf4839afAeb825EB448AA24B1C43E946b.sol#255-258):
	External calls:
	- IERC2612Permit(address(premia)).permit(msg.sender,address(this),_tokenAmount,_deadline,_v,_r,_s) (../../sc/dataset/mainnet/0xF49e0FDBf4839afAeb825EB448AA24B1C43E946b.sol#256)
	- sell(_tokenAmount,_minEth) (../../sc/dataset/mainnet/0xF49e0FDBf4839afAeb825EB448AA24B1C43E946b.sol#257)
		- returndata = address(token).functionCall(data,SafeERC20: low-level call failed) (../../sc/dataset/mainnet/0xF49e0FDBf4839afAeb825EB448AA24B1C43E946b.sol#397)
		- (success,returndata) = target.call{value: value}(data) (../../sc/dataset/mainnet/0xF49e0FDBf4839afAeb825EB448AA24B1C43E946b.sol#824)
		- premia.safeTransferFrom(msg.sender,address(this),_tokenAmount) (../../sc/dataset/mainnet/0xF49e0FDBf4839afAeb825EB448AA24B1C43E946b.sol#272)
	External calls sending eth:
	- sell(_tokenAmount,_minEth) (../../sc/dataset/mainnet/0xF49e0FDBf4839afAeb825EB448AA24B1C43E946b.sol#257)
		- (success,returndata) = target.call{value: value}(data) (../../sc/dataset/mainnet/0xF49e0FDBf4839afAeb825EB448AA24B1C43E946b.sol#824)
		- treasury.transfer(commission) (../../sc/dataset/mainnet/0xF49e0FDBf4839afAeb825EB448AA24B1C43E946b.sol#273)
		- msg.sender.transfer(refund) (../../sc/dataset/mainnet/0xF49e0FDBf4839afAeb825EB448AA24B1C43E946b.sol#274)
	Event emitted after the call(s):
	- Sold(msg.sender,_tokenAmount,refund,commission) (../../sc/dataset/mainnet/0xF49e0FDBf4839afAeb825EB448AA24B1C43E946b.sol#275)
		- sell(_tokenAmount,_minEth) (../../sc/dataset/mainnet/0xF49e0FDBf4839afAeb825EB448AA24B1C43E946b.sol#257)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3
INFO:Detectors:
PremiaBondingCurve.doUpgrade() (../../sc/dataset/mainnet/0xF49e0FDBf4839afAeb825EB448AA24B1C43E946b.sol#190-201) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(block.timestamp > upgradeETA,Upgrade still timelocked) (../../sc/dataset/mainnet/0xF49e0FDBf4839afAeb825EB448AA24B1C43E946b.sol#192)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp
INFO:Detectors:
Address.isContract(address) (../../sc/dataset/mainnet/0xF49e0FDBf4839afAeb825EB448AA24B1C43E946b.sol#731-740) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0xF49e0FDBf4839afAeb825EB448AA24B1C43E946b.sol#738)
Address._verifyCallResult(bool,bytes,string) (../../sc/dataset/mainnet/0xF49e0FDBf4839afAeb825EB448AA24B1C43E946b.sol#852-869) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0xF49e0FDBf4839afAeb825EB448AA24B1C43E946b.sol#861-864)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage
INFO:Detectors:
Different versions of Solidity are used:
	- Version used: ['>=0.6.0<0.8.0', '>=0.6.2<0.8.0', '^0.7.0']
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0xF49e0FDBf4839afAeb825EB448AA24B1C43E946b.sol#6)
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0xF49e0FDBf4839afAeb825EB448AA24B1C43E946b.sol#30)
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0xF49e0FDBf4839afAeb825EB448AA24B1C43E946b.sol#331)
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0xF49e0FDBf4839afAeb825EB448AA24B1C43E946b.sol#407)
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0xF49e0FDBf4839afAeb825EB448AA24B1C43E946b.sol#548)
	- >=0.6.2<0.8.0 (../../sc/dataset/mainnet/0xF49e0FDBf4839afAeb825EB448AA24B1C43E946b.sol#708)
	- ^0.7.0 (../../sc/dataset/mainnet/0xF49e0FDBf4839afAeb825EB448AA24B1C43E946b.sol#98)
	- ^0.7.0 (../../sc/dataset/mainnet/0xF49e0FDBf4839afAeb825EB448AA24B1C43E946b.sol#485)
	- ^0.7.0 (../../sc/dataset/mainnet/0xF49e0FDBf4839afAeb825EB448AA24B1C43E946b.sol#492)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#different-pragma-directives-are-used
INFO:Detectors:
Address.functionCall(address,bytes) (../../sc/dataset/mainnet/0xF49e0FDBf4839afAeb825EB448AA24B1C43E946b.sol#784-786) is never used and should be removed
Address.functionCallWithValue(address,bytes,uint256) (../../sc/dataset/mainnet/0xF49e0FDBf4839afAeb825EB448AA24B1C43E946b.sol#809-811) is never used and should be removed
Address.functionStaticCall(address,bytes) (../../sc/dataset/mainnet/0xF49e0FDBf4839afAeb825EB448AA24B1C43E946b.sol#834-836) is never used and should be removed
Address.functionStaticCall(address,bytes,string) (../../sc/dataset/mainnet/0xF49e0FDBf4839afAeb825EB448AA24B1C43E946b.sol#844-850) is never used and should be removed
Address.sendValue(address,uint256) (../../sc/dataset/mainnet/0xF49e0FDBf4839afAeb825EB448AA24B1C43E946b.sol#758-764) is never used and should be removed
Context._msgData() (../../sc/dataset/mainnet/0xF49e0FDBf4839afAeb825EB448AA24B1C43E946b.sol#23-26) is never used and should be removed
SafeERC20.safeApprove(IERC20,address,uint256) (../../sc/dataset/mainnet/0xF49e0FDBf4839afAeb825EB448AA24B1C43E946b.sol#365-374) is never used and should be removed
SafeERC20.safeDecreaseAllowance(IERC20,address,uint256) (../../sc/dataset/mainnet/0xF49e0FDBf4839afAeb825EB448AA24B1C43E946b.sol#381-384) is never used and should be removed
SafeERC20.safeIncreaseAllowance(IERC20,address,uint256) (../../sc/dataset/mainnet/0xF49e0FDBf4839afAeb825EB448AA24B1C43E946b.sol#376-379) is never used and should be removed
SafeMath.mod(uint256,uint256) (../../sc/dataset/mainnet/0xF49e0FDBf4839afAeb825EB448AA24B1C43E946b.sol#684-686) is never used and should be removed
SafeMath.mod(uint256,uint256,string) (../../sc/dataset/mainnet/0xF49e0FDBf4839afAeb825EB448AA24B1C43E946b.sol#700-703) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code
INFO:Detectors:
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0xF49e0FDBf4839afAeb825EB448AA24B1C43E946b.sol#6) is too complex
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0xF49e0FDBf4839afAeb825EB448AA24B1C43E946b.sol#30) is too complex
Pragma version^0.7.0 (../../sc/dataset/mainnet/0xF49e0FDBf4839afAeb825EB448AA24B1C43E946b.sol#98) allows old versions
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0xF49e0FDBf4839afAeb825EB448AA24B1C43E946b.sol#331) is too complex
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0xF49e0FDBf4839afAeb825EB448AA24B1C43E946b.sol#407) is too complex
Pragma version^0.7.0 (../../sc/dataset/mainnet/0xF49e0FDBf4839afAeb825EB448AA24B1C43E946b.sol#485) allows old versions
Pragma version^0.7.0 (../../sc/dataset/mainnet/0xF49e0FDBf4839afAeb825EB448AA24B1C43E946b.sol#492) allows old versions
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0xF49e0FDBf4839afAeb825EB448AA24B1C43E946b.sol#548) is too complex
Pragma version>=0.6.2<0.8.0 (../../sc/dataset/mainnet/0xF49e0FDBf4839afAeb825EB448AA24B1C43E946b.sol#708) is too complex
solc-0.7.6 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity
INFO:Detectors:
Low level call in Address.sendValue(address,uint256) (../../sc/dataset/mainnet/0xF49e0FDBf4839afAeb825EB448AA24B1C43E946b.sol#758-764):
	- (success) = recipient.call{value: amount}() (../../sc/dataset/mainnet/0xF49e0FDBf4839afAeb825EB448AA24B1C43E946b.sol#762)
Low level call in Address.functionCallWithValue(address,bytes,uint256,string) (../../sc/dataset/mainnet/0xF49e0FDBf4839afAeb825EB448AA24B1C43E946b.sol#819-826):
	- (success,returndata) = target.call{value: value}(data) (../../sc/dataset/mainnet/0xF49e0FDBf4839afAeb825EB448AA24B1C43E946b.sol#824)
Low level call in Address.functionStaticCall(address,bytes,string) (../../sc/dataset/mainnet/0xF49e0FDBf4839afAeb825EB448AA24B1C43E946b.sol#844-850):
	- (success,returndata) = target.staticcall(data) (../../sc/dataset/mainnet/0xF49e0FDBf4839afAeb825EB448AA24B1C43E946b.sol#848)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls
INFO:Detectors:
Parameter PremiaBondingCurve.startUpgrade(IPremiaBondingCurveUpgrade)._newContract (../../sc/dataset/mainnet/0xF49e0FDBf4839afAeb825EB448AA24B1C43E946b.sol#183) is not in mixedCase
Parameter PremiaBondingCurve.buyExactTokenAmount(uint256)._tokenAmount (../../sc/dataset/mainnet/0xF49e0FDBf4839afAeb825EB448AA24B1C43E946b.sol#222) is not in mixedCase
Parameter PremiaBondingCurve.buyTokenWithExactEthAmount(uint256,address)._minToken (../../sc/dataset/mainnet/0xF49e0FDBf4839afAeb825EB448AA24B1C43E946b.sol#237) is not in mixedCase
Parameter PremiaBondingCurve.buyTokenWithExactEthAmount(uint256,address)._sendTo (../../sc/dataset/mainnet/0xF49e0FDBf4839afAeb825EB448AA24B1C43E946b.sol#237) is not in mixedCase
Parameter PremiaBondingCurve.sellWithPermit(uint256,uint256,uint256,uint8,bytes32,bytes32)._tokenAmount (../../sc/dataset/mainnet/0xF49e0FDBf4839afAeb825EB448AA24B1C43E946b.sol#255) is not in mixedCase
Parameter PremiaBondingCurve.sellWithPermit(uint256,uint256,uint256,uint8,bytes32,bytes32)._minEth (../../sc/dataset/mainnet/0xF49e0FDBf4839afAeb825EB448AA24B1C43E946b.sol#255) is not in mixedCase
Parameter PremiaBondingCurve.sellWithPermit(uint256,uint256,uint256,uint8,bytes32,bytes32)._deadline (../../sc/dataset/mainnet/0xF49e0FDBf4839afAeb825EB448AA24B1C43E946b.sol#255) is not in mixedCase
Parameter PremiaBondingCurve.sellWithPermit(uint256,uint256,uint256,uint8,bytes32,bytes32)._v (../../sc/dataset/mainnet/0xF49e0FDBf4839afAeb825EB448AA24B1C43E946b.sol#255) is not in mixedCase
Parameter PremiaBondingCurve.sellWithPermit(uint256,uint256,uint256,uint8,bytes32,bytes32)._r (../../sc/dataset/mainnet/0xF49e0FDBf4839afAeb825EB448AA24B1C43E946b.sol#255) is not in mixedCase
Parameter PremiaBondingCurve.sellWithPermit(uint256,uint256,uint256,uint8,bytes32,bytes32)._s (../../sc/dataset/mainnet/0xF49e0FDBf4839afAeb825EB448AA24B1C43E946b.sol#255) is not in mixedCase
Parameter PremiaBondingCurve.sell(uint256,uint256)._tokenAmount (../../sc/dataset/mainnet/0xF49e0FDBf4839afAeb825EB448AA24B1C43E946b.sol#263) is not in mixedCase
Parameter PremiaBondingCurve.sell(uint256,uint256)._minEth (../../sc/dataset/mainnet/0xF49e0FDBf4839afAeb825EB448AA24B1C43E946b.sol#263) is not in mixedCase
Parameter PremiaBondingCurve.getEthCost(uint256,uint256)._x0 (../../sc/dataset/mainnet/0xF49e0FDBf4839afAeb825EB448AA24B1C43E946b.sol#288) is not in mixedCase
Parameter PremiaBondingCurve.getEthCost(uint256,uint256)._x1 (../../sc/dataset/mainnet/0xF49e0FDBf4839afAeb825EB448AA24B1C43E946b.sol#288) is not in mixedCase
Parameter PremiaBondingCurve.getTokensPurchasable(uint256)._ethAmount (../../sc/dataset/mainnet/0xF49e0FDBf4839afAeb825EB448AA24B1C43E946b.sol#299) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions
INFO:Detectors:
Redundant expression "this (../../sc/dataset/mainnet/0xF49e0FDBf4839afAeb825EB448AA24B1C43E946b.sol#24)" inContext (../../sc/dataset/mainnet/0xF49e0FDBf4839afAeb825EB448AA24B1C43E946b.sol#18-27)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#redundant-statements
INFO:Detectors:
Reentrancy in PremiaBondingCurve.buyExactTokenAmount(uint256) (../../sc/dataset/mainnet/0xF49e0FDBf4839afAeb825EB448AA24B1C43E946b.sol#222-231):
	External calls:
	- msg.sender.transfer(msg.value.sub(ethAmount)) (../../sc/dataset/mainnet/0xF49e0FDBf4839afAeb825EB448AA24B1C43E946b.sol#229)
	Event emitted after the call(s):
	- Bought(msg.sender,msg.sender,_tokenAmount,ethAmount) (../../sc/dataset/mainnet/0xF49e0FDBf4839afAeb825EB448AA24B1C43E946b.sol#230)
Reentrancy in PremiaBondingCurve.sell(uint256,uint256) (../../sc/dataset/mainnet/0xF49e0FDBf4839afAeb825EB448AA24B1C43E946b.sol#263-276):
	External calls:
	- treasury.transfer(commission) (../../sc/dataset/mainnet/0xF49e0FDBf4839afAeb825EB448AA24B1C43E946b.sol#273)
	- msg.sender.transfer(refund) (../../sc/dataset/mainnet/0xF49e0FDBf4839afAeb825EB448AA24B1C43E946b.sol#274)
	Event emitted after the call(s):
	- Sold(msg.sender,_tokenAmount,refund,commission) (../../sc/dataset/mainnet/0xF49e0FDBf4839afAeb825EB448AA24B1C43E946b.sol#275)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-4
INFO:Detectors:
PremiaBondingCurve.premia (../../sc/dataset/mainnet/0xF49e0FDBf4839afAeb825EB448AA24B1C43E946b.sol#114) should be immutable 
PremiaBondingCurve.treasury (../../sc/dataset/mainnet/0xF49e0FDBf4839afAeb825EB448AA24B1C43E946b.sol#116) should be immutable 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-immutable
INFO:Slither:/bdata2/sc/dataset/mainnet/0xF49e0FDBf4839afAeb825EB448AA24B1C43E946b.sol analyzed (9 contracts with 85 detectors), 56 result(s) found
