Compilation warnings/errors on /bdata2/sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol:
Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it "abstract" is sufficient.
   --> /bdata2/sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol:396:5:
    |
396 |     constructor () internal {
    |     ^ (Relevant source part starts here and spans across multiple lines).

Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it "abstract" is sufficient.
    --> /bdata2/sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol:1625:5:
     |
1625 |     constructor (string memory name_, string memory symbol_) public {
     |     ^ (Relevant source part starts here and spans across multiple lines).

Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    --> /bdata2/sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol:2411:9:
     |
2411 |         bytes calldata data
     |         ^^^^^^^^^^^^^^^^^^^

Warning: Contract code size exceeds 24576 bytes (a limit introduced in Spurious Dragon). This contract may not be deployable on mainnet. Consider enabling the optimizer (with a low "runs" value!), turning off revert strings, or using libraries.
    --> /bdata2/sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol:1971:1:
     |
1971 | contract AlphaVault is IVault, IUniswapV3MintCallback, ERC20, ReentrancyGuard {
     | ^ (Relevant source part starts here and spans across multiple lines).


INFO:Detectors:
FullMath.mulDiv(uint256,uint256,uint256) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#670-762) performs a multiplication on the result of a division:
	- denominator = denominator / twos (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#723)
	- inv = (3 * denominator) ^ 2 (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#743)
FullMath.mulDiv(uint256,uint256,uint256) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#670-762) performs a multiplication on the result of a division:
	- denominator = denominator / twos (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#723)
	- inv *= 2 - denominator * inv (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#747)
FullMath.mulDiv(uint256,uint256,uint256) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#670-762) performs a multiplication on the result of a division:
	- denominator = denominator / twos (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#723)
	- inv *= 2 - denominator * inv (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#748)
FullMath.mulDiv(uint256,uint256,uint256) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#670-762) performs a multiplication on the result of a division:
	- denominator = denominator / twos (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#723)
	- inv *= 2 - denominator * inv (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#749)
FullMath.mulDiv(uint256,uint256,uint256) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#670-762) performs a multiplication on the result of a division:
	- denominator = denominator / twos (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#723)
	- inv *= 2 - denominator * inv (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#750)
FullMath.mulDiv(uint256,uint256,uint256) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#670-762) performs a multiplication on the result of a division:
	- denominator = denominator / twos (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#723)
	- inv *= 2 - denominator * inv (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#751)
FullMath.mulDiv(uint256,uint256,uint256) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#670-762) performs a multiplication on the result of a division:
	- denominator = denominator / twos (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#723)
	- inv *= 2 - denominator * inv (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#752)
FullMath.mulDiv(uint256,uint256,uint256) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#670-762) performs a multiplication on the result of a division:
	- prod0 = prod0 / twos (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#728)
	- result = prod0 * inv (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#760)
AlphaStrategy._floor(int24) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2656-2660) performs a multiplication on the result of a division:
	- compressed = tick / tickSpacing (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2657)
	- compressed * tickSpacing (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2659)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#divide-before-multiply
INFO:Detectors:
Reentrancy in AlphaVault.deposit(uint256,uint256,uint256,uint256,address) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2057-2097):
	External calls:
	- pool.burn(baseLower,baseUpper,0) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2078)
	- pool.burn(limitLower,limitUpper,0) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2081)
	- token0.safeTransferFrom(msg.sender,address(this),amount0) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2090)
	- token1.safeTransferFrom(msg.sender,address(this),amount1) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2091)
	State variables written after the call(s):
	- _mint(to,shares) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2094)
		- _totalSupply = _totalSupply.add(amount) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#1803)
	ERC20._totalSupply (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#1610) can be used in cross function reentrancies:
	- ERC20.totalSupply() (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#1666-1668)
Reentrancy in AlphaVault.rebalance(int24,int24,int24,int24,int24,int24) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2217-2261):
	External calls:
	- _burnAllLiquidity(baseLower,baseUpper) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2235)
		- (owed0,owed1) = pool.burn(tickLower,tickUpper,liquidity) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2280)
		- (collect0,collect1) = pool.collect(address(this),tickLower,tickUpper,type()(uint128).max,type()(uint128).max) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2284-2291)
	- _burnAllLiquidity(limitLower,limitUpper) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2236)
		- (owed0,owed1) = pool.burn(tickLower,tickUpper,liquidity) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2280)
		- (collect0,collect1) = pool.collect(address(this),tickLower,tickUpper,type()(uint128).max,type()(uint128).max) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2284-2291)
	State variables written after the call(s):
	- _burnAllLiquidity(limitLower,limitUpper) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2236)
		- accruedProtocolFees0 = accruedProtocolFees0.add(feesToProtocol0) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2303)
	AlphaVault.accruedProtocolFees0 (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2016) can be used in cross function reentrancies:
	- AlphaVault._balance0() (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2333-2335)
	- AlphaVault.accruedProtocolFees0 (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2016)
	- AlphaVault.collectProtocol(uint256,uint256,address) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2421-2430)
	- _burnAllLiquidity(limitLower,limitUpper) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2236)
		- accruedProtocolFees1 = accruedProtocolFees1.add(feesToProtocol1) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2304)
	AlphaVault.accruedProtocolFees1 (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2017) can be used in cross function reentrancies:
	- AlphaVault._balance1() (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2338-2340)
	- AlphaVault.accruedProtocolFees1 (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2017)
	- AlphaVault.collectProtocol(uint256,uint256,address) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2421-2430)
Reentrancy in AlphaVault.rebalance(int24,int24,int24,int24,int24,int24) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2217-2261):
	External calls:
	- _burnAllLiquidity(baseLower,baseUpper) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2235)
		- (owed0,owed1) = pool.burn(tickLower,tickUpper,liquidity) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2280)
		- (collect0,collect1) = pool.collect(address(this),tickLower,tickUpper,type()(uint128).max,type()(uint128).max) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2284-2291)
	- _burnAllLiquidity(limitLower,limitUpper) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2236)
		- (owed0,owed1) = pool.burn(tickLower,tickUpper,liquidity) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2280)
		- (collect0,collect1) = pool.collect(address(this),tickLower,tickUpper,type()(uint128).max,type()(uint128).max) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2284-2291)
	- _mintLiquidity(_baseLower,_baseUpper,liquidity) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2245)
		- pool.mint(address(this),tickLower,tickUpper,liquidity,) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2316)
	State variables written after the call(s):
	- (baseLower,baseUpper) = (_baseLower,_baseUpper) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2246)
	AlphaVault.baseLower (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2012) can be used in cross function reentrancies:
	- AlphaVault.baseLower (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2012)
	- AlphaVault.getTotalAmounts() (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2325-2330)
	- (baseLower,baseUpper) = (_baseLower,_baseUpper) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2246)
	AlphaVault.baseUpper (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2013) can be used in cross function reentrancies:
	- AlphaVault.baseUpper (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2013)
	- AlphaVault.getTotalAmounts() (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2325-2330)
Reentrancy in AlphaVault.rebalance(int24,int24,int24,int24,int24,int24) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2217-2261):
	External calls:
	- _burnAllLiquidity(baseLower,baseUpper) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2235)
		- (owed0,owed1) = pool.burn(tickLower,tickUpper,liquidity) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2280)
		- (collect0,collect1) = pool.collect(address(this),tickLower,tickUpper,type()(uint128).max,type()(uint128).max) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2284-2291)
	- _burnAllLiquidity(limitLower,limitUpper) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2236)
		- (owed0,owed1) = pool.burn(tickLower,tickUpper,liquidity) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2280)
		- (collect0,collect1) = pool.collect(address(this),tickLower,tickUpper,type()(uint128).max,type()(uint128).max) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2284-2291)
	- _mintLiquidity(_baseLower,_baseUpper,liquidity) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2245)
		- pool.mint(address(this),tickLower,tickUpper,liquidity,) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2316)
	- _mintLiquidity(_bidLower,_bidUpper,bidLiquidity) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2255)
		- pool.mint(address(this),tickLower,tickUpper,liquidity,) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2316)
	State variables written after the call(s):
	- (limitLower,limitUpper) = (_bidLower,_bidUpper) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2256)
	AlphaVault.limitLower (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2014) can be used in cross function reentrancies:
	- AlphaVault.getTotalAmounts() (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2325-2330)
	- AlphaVault.limitLower (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2014)
	- (limitLower,limitUpper) = (_bidLower,_bidUpper) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2256)
	AlphaVault.limitUpper (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2015) can be used in cross function reentrancies:
	- AlphaVault.getTotalAmounts() (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2325-2330)
	- AlphaVault.limitUpper (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2015)
Reentrancy in AlphaVault.rebalance(int24,int24,int24,int24,int24,int24) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2217-2261):
	External calls:
	- _burnAllLiquidity(baseLower,baseUpper) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2235)
		- (owed0,owed1) = pool.burn(tickLower,tickUpper,liquidity) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2280)
		- (collect0,collect1) = pool.collect(address(this),tickLower,tickUpper,type()(uint128).max,type()(uint128).max) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2284-2291)
	- _burnAllLiquidity(limitLower,limitUpper) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2236)
		- (owed0,owed1) = pool.burn(tickLower,tickUpper,liquidity) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2280)
		- (collect0,collect1) = pool.collect(address(this),tickLower,tickUpper,type()(uint128).max,type()(uint128).max) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2284-2291)
	- _mintLiquidity(_baseLower,_baseUpper,liquidity) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2245)
		- pool.mint(address(this),tickLower,tickUpper,liquidity,) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2316)
	- _mintLiquidity(_askLower,_askUpper,askLiquidity) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2258)
		- pool.mint(address(this),tickLower,tickUpper,liquidity,) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2316)
	State variables written after the call(s):
	- (limitLower,limitUpper) = (_askLower,_askUpper) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2259)
	AlphaVault.limitLower (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2014) can be used in cross function reentrancies:
	- AlphaVault.getTotalAmounts() (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2325-2330)
	- AlphaVault.limitLower (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2014)
	- (limitLower,limitUpper) = (_askLower,_askUpper) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2259)
	AlphaVault.limitUpper (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2015) can be used in cross function reentrancies:
	- AlphaVault.getTotalAmounts() (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2325-2330)
	- AlphaVault.limitUpper (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2015)
Reentrancy in AlphaVault.withdraw(uint256,uint256,uint256,address) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2150-2182):
	External calls:
	- (baseAmount0,baseAmount1) = _burnLiquidityShare(baseLower,baseUpper,shares,to) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2161-2162)
		- (amount0,amount1) = pool.burn(tickLower,tickUpper,_toUint128(liquidity)) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2196)
		- (amount0,amount1) = pool.collect(to,tickLower,tickUpper,_toUint128(amount0),_toUint128(amount1)) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2199-2205)
	- (limitAmount0,limitAmount1) = _burnLiquidityShare(limitLower,limitUpper,shares,to) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2163-2164)
		- (amount0,amount1) = pool.burn(tickLower,tickUpper,_toUint128(liquidity)) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2196)
		- (amount0,amount1) = pool.collect(to,tickLower,tickUpper,_toUint128(amount0),_toUint128(amount1)) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2199-2205)
	- token0.safeTransfer(to,unusedAmount0) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2170)
	- token1.safeTransfer(to,unusedAmount1) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2171)
	State variables written after the call(s):
	- _burn(msg.sender,shares) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2180)
		- _totalSupply = _totalSupply.sub(amount) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#1825)
	ERC20._totalSupply (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#1610) can be used in cross function reentrancies:
	- ERC20.totalSupply() (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#1666-1668)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1
INFO:Detectors:
AlphaVault.deposit(uint256,uint256,uint256,uint256,address) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2057-2097) ignores return value by pool.burn(baseLower,baseUpper,0) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2078)
AlphaVault.deposit(uint256,uint256,uint256,uint256,address) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2057-2097) ignores return value by pool.burn(limitLower,limitUpper,0) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2081)
AlphaVault._mintLiquidity(int24,int24,uint128) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2310-2318) ignores return value by pool.mint(address(this),tickLower,tickUpper,liquidity,) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2316)
AlphaVault.emergencyBurn(int24,int24,uint128) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2492-2500) ignores return value by pool.burn(tickLower,tickUpper,liquidity) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2498)
AlphaVault.emergencyBurn(int24,int24,uint128) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2492-2500) ignores return value by pool.collect(msg.sender,tickLower,tickUpper,type()(uint128).max,type()(uint128).max) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2499)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return
INFO:Detectors:
AlphaVault._calcSharesAndAmounts(uint256,uint256).totalSupply (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2111) shadows:
	- ERC20.totalSupply() (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#1666-1668) (function)
	- IERC20.totalSupply() (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#264) (function)
AlphaVault.withdraw(uint256,uint256,uint256,address).totalSupply (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2167) shadows:
	- ERC20.totalSupply() (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#1666-1668) (function)
	- IERC20.totalSupply() (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#264) (function)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing
INFO:Detectors:
AlphaVault.acceptGovernance() (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2514-2517) should emit an event for: 
	- governance = msg.sender (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2516) 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-access-control
INFO:Detectors:
AlphaVault.collectProtocol(uint256,uint256,address) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2421-2430) should emit an event for: 
	- accruedProtocolFees0 = accruedProtocolFees0.sub(amount0) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2426) 
	- accruedProtocolFees1 = accruedProtocolFees1.sub(amount1) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2427) 
AlphaVault.setProtocolFee(uint256) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2457-2460) should emit an event for: 
	- protocolFee = _protocolFee (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2459) 
AlphaVault.setMaxTotalSupply(uint256) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2468-2470) should emit an event for: 
	- maxTotalSupply = _maxTotalSupply (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2469) 
AlphaStrategy.setTwapDuration(uint32) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2687-2690) should emit an event for: 
	- twapDuration = _twapDuration (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2689) 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-arithmetic
INFO:Detectors:
AlphaVault.setStrategy(address)._strategy (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2449) lacks a zero-check on :
		- strategy = _strategy (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2450)
AlphaVault.setGovernance(address)._governance (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2506) lacks a zero-check on :
		- pendingGovernance = _governance (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2507)
AlphaStrategy.constructor(address,int24,int24,int24,uint32,address)._keeper (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2581) lacks a zero-check on :
		- keeper = _keeper (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2591)
AlphaStrategy.setKeeper(address)._keeper (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2668) lacks a zero-check on :
		- keeper = _keeper (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2669)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation
INFO:Detectors:
Reentrancy in AlphaVault._burnAllLiquidity(int24,int24) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2274-2307):
	External calls:
	- (owed0,owed1) = pool.burn(tickLower,tickUpper,liquidity) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2280)
	- (collect0,collect1) = pool.collect(address(this),tickLower,tickUpper,type()(uint128).max,type()(uint128).max) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2284-2291)
	State variables written after the call(s):
	- accruedProtocolFees0 = accruedProtocolFees0.add(feesToProtocol0) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2303)
	- accruedProtocolFees1 = accruedProtocolFees1.add(feesToProtocol1) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2304)
Reentrancy in AlphaVault.deposit(uint256,uint256,uint256,uint256,address) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2057-2097):
	External calls:
	- pool.burn(baseLower,baseUpper,0) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2078)
	- pool.burn(limitLower,limitUpper,0) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2081)
	- token0.safeTransferFrom(msg.sender,address(this),amount0) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2090)
	- token1.safeTransferFrom(msg.sender,address(this),amount1) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2091)
	State variables written after the call(s):
	- _mint(to,shares) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2094)
		- _balances[account] = _balances[account].add(amount) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#1804)
Reentrancy in AlphaStrategy.rebalance() (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2605-2636):
	External calls:
	- vault.rebalance(tickFloor - baseThreshold,tickCeil + baseThreshold,tickFloor - limitThreshold,tickFloor,tickCeil,tickCeil + limitThreshold) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2625-2632)
	State variables written after the call(s):
	- lastRebalance = block.timestamp (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2634)
	- lastTick = tick (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2635)
Reentrancy in AlphaVault.withdraw(uint256,uint256,uint256,address) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2150-2182):
	External calls:
	- (baseAmount0,baseAmount1) = _burnLiquidityShare(baseLower,baseUpper,shares,to) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2161-2162)
		- (amount0,amount1) = pool.burn(tickLower,tickUpper,_toUint128(liquidity)) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2196)
		- (amount0,amount1) = pool.collect(to,tickLower,tickUpper,_toUint128(amount0),_toUint128(amount1)) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2199-2205)
	- (limitAmount0,limitAmount1) = _burnLiquidityShare(limitLower,limitUpper,shares,to) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2163-2164)
		- (amount0,amount1) = pool.burn(tickLower,tickUpper,_toUint128(liquidity)) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2196)
		- (amount0,amount1) = pool.collect(to,tickLower,tickUpper,_toUint128(amount0),_toUint128(amount1)) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2199-2205)
	- token0.safeTransfer(to,unusedAmount0) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2170)
	- token1.safeTransfer(to,unusedAmount1) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2171)
	State variables written after the call(s):
	- _burn(msg.sender,shares) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2180)
		- _balances[account] = _balances[account].sub(amount,ERC20: burn amount exceeds balance) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#1824)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2
INFO:Detectors:
Address.isContract(address) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#67-76) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#74)
Address._verifyCallResult(bool,bytes,string) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#212-229) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#221-224)
FullMath.mulDiv(uint256,uint256,uint256) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#670-762) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#682-686)
	- INLINE ASM (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#691-693)
	- INLINE ASM (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#708-710)
	- INLINE ASM (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#712-715)
	- INLINE ASM (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#722-724)
	- INLINE ASM (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#727-729)
	- INLINE ASM (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#733-735)
TickMath.getTickAtSqrtRatio(uint160) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#1297-1440) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#1305-1309)
	- INLINE ASM (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#1310-1314)
	- INLINE ASM (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#1315-1319)
	- INLINE ASM (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#1320-1324)
	- INLINE ASM (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#1325-1329)
	- INLINE ASM (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#1330-1334)
	- INLINE ASM (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#1335-1339)
	- INLINE ASM (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#1340-1343)
	- INLINE ASM (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#1350-1355)
	- INLINE ASM (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#1356-1361)
	- INLINE ASM (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#1362-1367)
	- INLINE ASM (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#1368-1373)
	- INLINE ASM (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#1374-1379)
	- INLINE ASM (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#1380-1385)
	- INLINE ASM (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#1386-1391)
	- INLINE ASM (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#1392-1397)
	- INLINE ASM (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#1398-1403)
	- INLINE ASM (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#1404-1409)
	- INLINE ASM (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#1410-1415)
	- INLINE ASM (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#1416-1421)
	- INLINE ASM (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#1422-1427)
	- INLINE ASM (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#1428-1432)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage
INFO:Detectors:
TickMath.getSqrtRatioAtTick(int24) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#1259-1290) has a high cyclomatic complexity (24).
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#cyclomatic-complexity
INFO:Detectors:
Address.functionCall(address,bytes) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#120-122) is never used and should be removed
Address.functionCallWithValue(address,bytes,uint256) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#145-147) is never used and should be removed
Address.functionDelegateCall(address,bytes) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#194-196) is never used and should be removed
Address.functionDelegateCall(address,bytes,string) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#204-210) is never used and should be removed
Address.functionStaticCall(address,bytes) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#170-172) is never used and should be removed
Address.functionStaticCall(address,bytes,string) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#180-186) is never used and should be removed
Address.sendValue(address,uint256) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#94-100) is never used and should be removed
Context._msgData() (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#249-252) is never used and should be removed
ERC20._setupDecimals(uint8) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#1857-1859) is never used and should be removed
FullMath.mulDivRoundingUp(uint256,uint256,uint256) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#769-779) is never used and should be removed
Math.average(uint256,uint256) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#355-358) is never used and should be removed
SafeERC20.safeApprove(IERC20,address,uint256) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#1908-1917) is never used and should be removed
SafeERC20.safeDecreaseAllowance(IERC20,address,uint256) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#1924-1927) is never used and should be removed
SafeERC20.safeIncreaseAllowance(IERC20,address,uint256) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#1919-1922) is never used and should be removed
SafeMath.div(uint256,uint256,string) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#609-612) is never used and should be removed
SafeMath.mod(uint256,uint256) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#571-574) is never used and should be removed
SafeMath.mod(uint256,uint256,string) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#629-632) is never used and should be removed
SafeMath.tryAdd(uint256,uint256) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#443-447) is never used and should be removed
SafeMath.tryDiv(uint256,uint256) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#479-482) is never used and should be removed
SafeMath.tryMod(uint256,uint256) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#489-492) is never used and should be removed
SafeMath.tryMul(uint256,uint256) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#464-472) is never used and should be removed
SafeMath.trySub(uint256,uint256) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#454-457) is never used and should be removed
TickMath.getTickAtSqrtRatio(uint160) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#1297-1440) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code
INFO:Detectors:
Pragma version0.7.6 (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#13) allows old versions
solc-0.7.6 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity
INFO:Detectors:
Low level call in Address.sendValue(address,uint256) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#94-100):
	- (success) = recipient.call{value: amount}() (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#98)
Low level call in Address.functionCallWithValue(address,bytes,uint256,string) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#155-162):
	- (success,returndata) = target.call{value: value}(data) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#160)
Low level call in Address.functionStaticCall(address,bytes,string) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#180-186):
	- (success,returndata) = target.staticcall(data) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#184)
Low level call in Address.functionDelegateCall(address,bytes,string) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#204-210):
	- (success,returndata) = target.delegatecall(data) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#208)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls
INFO:Detectors:
Parameter AlphaVault.rebalance(int24,int24,int24,int24,int24,int24)._baseLower (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2218) is not in mixedCase
Parameter AlphaVault.rebalance(int24,int24,int24,int24,int24,int24)._baseUpper (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2219) is not in mixedCase
Parameter AlphaVault.rebalance(int24,int24,int24,int24,int24,int24)._bidLower (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2220) is not in mixedCase
Parameter AlphaVault.rebalance(int24,int24,int24,int24,int24,int24)._bidUpper (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2221) is not in mixedCase
Parameter AlphaVault.rebalance(int24,int24,int24,int24,int24,int24)._askLower (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2222) is not in mixedCase
Parameter AlphaVault.rebalance(int24,int24,int24,int24,int24,int24)._askUpper (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2223) is not in mixedCase
Parameter AlphaVault.setStrategy(address)._strategy (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2449) is not in mixedCase
Parameter AlphaVault.setProtocolFee(uint256)._protocolFee (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2457) is not in mixedCase
Parameter AlphaVault.setMaxTotalSupply(uint256)._maxTotalSupply (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2468) is not in mixedCase
Parameter AlphaVault.setGovernance(address)._governance (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2506) is not in mixedCase
Parameter AlphaStrategy.setKeeper(address)._keeper (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2668) is not in mixedCase
Parameter AlphaStrategy.setBaseThreshold(int24)._baseThreshold (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2672) is not in mixedCase
Parameter AlphaStrategy.setLimitThreshold(int24)._limitThreshold (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2677) is not in mixedCase
Parameter AlphaStrategy.setMaxTwapDeviation(int24)._maxTwapDeviation (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2682) is not in mixedCase
Parameter AlphaStrategy.setTwapDuration(uint32)._twapDuration (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2687) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions
INFO:Detectors:
Redundant expression "this (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#250)" inContext (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#244-253)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#redundant-statements
INFO:Detectors:
Variable IUniswapV3MintCallback.uniswapV3MintCallback(uint256,uint256,bytes).amount0Owed (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#794) is too similar to IUniswapV3MintCallback.uniswapV3MintCallback(uint256,uint256,bytes).amount1Owed (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#795)
Variable IUniswapV3PoolActions.collect(address,int24,int24,uint128,uint128).amount0Requested (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#845) is too similar to IUniswapV3PoolActions.collect(address,int24,int24,uint128,uint128).amount1Requested (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#846)
Variable IUniswapV3PoolOwnerActions.collectProtocol(address,uint128,uint128).amount0Requested (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#1117) is too similar to IUniswapV3PoolOwnerActions.collectProtocol(address,uint128,uint128).amount1Requested (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#1118)
Variable IUniswapV3PoolOwnerActions.setFeeProtocol(uint8,uint8).feeProtocol0 (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#1107) is too similar to IUniswapV3PoolOwnerActions.setFeeProtocol(uint8,uint8).feeProtocol1 (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#1107)
Variable IUniswapV3PoolState.positions(bytes32).feeGrowthInside0LastX128 (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#1213) is too similar to IUniswapV3PoolState.positions(bytes32).feeGrowthInside1LastX128 (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#1214)
Variable IUniswapV3PoolState.ticks(int24).feeGrowthOutside0X128 (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#1190) is too similar to IUniswapV3PoolState.ticks(int24).feeGrowthOutside1X128 (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#1191)
Variable IUniswapV3PoolState.positions(bytes32).tokensOwed0 (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#1215) is too similar to IUniswapV3PoolState.positions(bytes32).tokensOwed1 (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#1216)
Variable LiquidityAmounts.getLiquidityForAmounts(uint160,uint160,uint160,uint256,uint256).sqrtRatioAX96 (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#1496) is too similar to LiquidityAmounts.getAmountsForLiquidity(uint160,uint160,uint160,uint128).sqrtRatioBX96 (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#1561)
Variable LiquidityAmounts.getAmountsForLiquidity(uint160,uint160,uint160,uint128).sqrtRatioAX96 (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#1560) is too similar to LiquidityAmounts.getLiquidityForAmount0(uint160,uint160,uint256).sqrtRatioBX96 (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#1463)
Variable LiquidityAmounts.getLiquidityForAmount0(uint160,uint160,uint256).sqrtRatioAX96 (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#1462) is too similar to LiquidityAmounts.getAmountsForLiquidity(uint160,uint160,uint160,uint128).sqrtRatioBX96 (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#1561)
Variable LiquidityAmounts.getAmountsForLiquidity(uint160,uint160,uint160,uint128).sqrtRatioAX96 (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#1560) is too similar to LiquidityAmounts.getAmount1ForLiquidity(uint160,uint160,uint128).sqrtRatioBX96 (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#1542)
Variable LiquidityAmounts.getLiquidityForAmounts(uint160,uint160,uint160,uint256,uint256).sqrtRatioAX96 (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#1496) is too similar to LiquidityAmounts.getLiquidityForAmounts(uint160,uint160,uint160,uint256,uint256).sqrtRatioBX96 (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#1497)
Variable LiquidityAmounts.getLiquidityForAmount0(uint160,uint160,uint256).sqrtRatioAX96 (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#1462) is too similar to LiquidityAmounts.getLiquidityForAmounts(uint160,uint160,uint160,uint256,uint256).sqrtRatioBX96 (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#1497)
Variable LiquidityAmounts.getAmountsForLiquidity(uint160,uint160,uint160,uint128).sqrtRatioAX96 (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#1560) is too similar to LiquidityAmounts.getAmount0ForLiquidity(uint160,uint160,uint128).sqrtRatioBX96 (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#1522)
Variable LiquidityAmounts.getAmountsForLiquidity(uint160,uint160,uint160,uint128).sqrtRatioAX96 (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#1560) is too similar to LiquidityAmounts.getLiquidityForAmount1(uint160,uint160,uint256).sqrtRatioBX96 (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#1479)
Variable LiquidityAmounts.getLiquidityForAmount0(uint160,uint160,uint256).sqrtRatioAX96 (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#1462) is too similar to LiquidityAmounts.getLiquidityForAmount0(uint160,uint160,uint256).sqrtRatioBX96 (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#1463)
Variable LiquidityAmounts.getAmount1ForLiquidity(uint160,uint160,uint128).sqrtRatioAX96 (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#1541) is too similar to LiquidityAmounts.getAmount1ForLiquidity(uint160,uint160,uint128).sqrtRatioBX96 (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#1542)
Variable LiquidityAmounts.getLiquidityForAmounts(uint160,uint160,uint160,uint256,uint256).sqrtRatioAX96 (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#1496) is too similar to LiquidityAmounts.getAmount1ForLiquidity(uint160,uint160,uint128).sqrtRatioBX96 (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#1542)
Variable LiquidityAmounts.getLiquidityForAmount0(uint160,uint160,uint256).sqrtRatioAX96 (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#1462) is too similar to LiquidityAmounts.getAmount1ForLiquidity(uint160,uint160,uint128).sqrtRatioBX96 (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#1542)
Variable LiquidityAmounts.getAmountsForLiquidity(uint160,uint160,uint160,uint128).sqrtRatioAX96 (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#1560) is too similar to LiquidityAmounts.getAmountsForLiquidity(uint160,uint160,uint160,uint128).sqrtRatioBX96 (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#1561)
Variable LiquidityAmounts.getLiquidityForAmounts(uint160,uint160,uint160,uint256,uint256).sqrtRatioAX96 (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#1496) is too similar to LiquidityAmounts.getAmount0ForLiquidity(uint160,uint160,uint128).sqrtRatioBX96 (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#1522)
Variable LiquidityAmounts.getAmount1ForLiquidity(uint160,uint160,uint128).sqrtRatioAX96 (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#1541) is too similar to LiquidityAmounts.getAmount0ForLiquidity(uint160,uint160,uint128).sqrtRatioBX96 (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#1522)
Variable LiquidityAmounts.getAmount1ForLiquidity(uint160,uint160,uint128).sqrtRatioAX96 (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#1541) is too similar to LiquidityAmounts.getLiquidityForAmount1(uint160,uint160,uint256).sqrtRatioBX96 (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#1479)
Variable LiquidityAmounts.getLiquidityForAmount1(uint160,uint160,uint256).sqrtRatioAX96 (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#1478) is too similar to LiquidityAmounts.getAmount0ForLiquidity(uint160,uint160,uint128).sqrtRatioBX96 (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#1522)
Variable LiquidityAmounts.getLiquidityForAmount0(uint160,uint160,uint256).sqrtRatioAX96 (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#1462) is too similar to LiquidityAmounts.getAmount0ForLiquidity(uint160,uint160,uint128).sqrtRatioBX96 (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#1522)
Variable LiquidityAmounts.getLiquidityForAmounts(uint160,uint160,uint160,uint256,uint256).sqrtRatioAX96 (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#1496) is too similar to LiquidityAmounts.getLiquidityForAmount1(uint160,uint160,uint256).sqrtRatioBX96 (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#1479)
Variable LiquidityAmounts.getLiquidityForAmount1(uint160,uint160,uint256).sqrtRatioAX96 (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#1478) is too similar to LiquidityAmounts.getLiquidityForAmount1(uint160,uint160,uint256).sqrtRatioBX96 (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#1479)
Variable LiquidityAmounts.getLiquidityForAmount0(uint160,uint160,uint256).sqrtRatioAX96 (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#1462) is too similar to LiquidityAmounts.getLiquidityForAmount1(uint160,uint160,uint256).sqrtRatioBX96 (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#1479)
Variable LiquidityAmounts.getAmount0ForLiquidity(uint160,uint160,uint128).sqrtRatioAX96 (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#1521) is too similar to LiquidityAmounts.getAmount0ForLiquidity(uint160,uint160,uint128).sqrtRatioBX96 (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#1522)
Variable LiquidityAmounts.getAmountsForLiquidity(uint160,uint160,uint160,uint128).sqrtRatioAX96 (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#1560) is too similar to LiquidityAmounts.getLiquidityForAmounts(uint160,uint160,uint160,uint256,uint256).sqrtRatioBX96 (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#1497)
Variable LiquidityAmounts.getLiquidityForAmount1(uint160,uint160,uint256).sqrtRatioAX96 (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#1478) is too similar to LiquidityAmounts.getLiquidityForAmounts(uint160,uint160,uint160,uint256,uint256).sqrtRatioBX96 (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#1497)
Variable LiquidityAmounts.getAmount0ForLiquidity(uint160,uint160,uint128).sqrtRatioAX96 (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#1521) is too similar to LiquidityAmounts.getLiquidityForAmount0(uint160,uint160,uint256).sqrtRatioBX96 (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#1463)
Variable LiquidityAmounts.getLiquidityForAmount1(uint160,uint160,uint256).sqrtRatioAX96 (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#1478) is too similar to LiquidityAmounts.getLiquidityForAmount0(uint160,uint160,uint256).sqrtRatioBX96 (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#1463)
Variable LiquidityAmounts.getAmount1ForLiquidity(uint160,uint160,uint128).sqrtRatioAX96 (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#1541) is too similar to LiquidityAmounts.getAmountsForLiquidity(uint160,uint160,uint160,uint128).sqrtRatioBX96 (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#1561)
Variable LiquidityAmounts.getAmount0ForLiquidity(uint160,uint160,uint128).sqrtRatioAX96 (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#1521) is too similar to LiquidityAmounts.getAmountsForLiquidity(uint160,uint160,uint160,uint128).sqrtRatioBX96 (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#1561)
Variable LiquidityAmounts.getAmount0ForLiquidity(uint160,uint160,uint128).sqrtRatioAX96 (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#1521) is too similar to LiquidityAmounts.getAmount1ForLiquidity(uint160,uint160,uint128).sqrtRatioBX96 (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#1542)
Variable LiquidityAmounts.getLiquidityForAmounts(uint160,uint160,uint160,uint256,uint256).sqrtRatioAX96 (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#1496) is too similar to LiquidityAmounts.getLiquidityForAmount0(uint160,uint160,uint256).sqrtRatioBX96 (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#1463)
Variable LiquidityAmounts.getLiquidityForAmount1(uint160,uint160,uint256).sqrtRatioAX96 (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#1478) is too similar to LiquidityAmounts.getAmountsForLiquidity(uint160,uint160,uint160,uint128).sqrtRatioBX96 (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#1561)
Variable LiquidityAmounts.getAmount0ForLiquidity(uint160,uint160,uint128).sqrtRatioAX96 (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#1521) is too similar to LiquidityAmounts.getLiquidityForAmount1(uint160,uint160,uint256).sqrtRatioBX96 (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#1479)
Variable LiquidityAmounts.getLiquidityForAmount1(uint160,uint160,uint256).sqrtRatioAX96 (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#1478) is too similar to LiquidityAmounts.getAmount1ForLiquidity(uint160,uint160,uint128).sqrtRatioBX96 (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#1542)
Variable LiquidityAmounts.getAmount1ForLiquidity(uint160,uint160,uint128).sqrtRatioAX96 (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#1541) is too similar to LiquidityAmounts.getLiquidityForAmounts(uint160,uint160,uint160,uint256,uint256).sqrtRatioBX96 (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#1497)
Variable LiquidityAmounts.getAmount0ForLiquidity(uint160,uint160,uint128).sqrtRatioAX96 (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#1521) is too similar to LiquidityAmounts.getLiquidityForAmounts(uint160,uint160,uint160,uint256,uint256).sqrtRatioBX96 (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#1497)
Variable LiquidityAmounts.getAmount1ForLiquidity(uint160,uint160,uint128).sqrtRatioAX96 (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#1541) is too similar to LiquidityAmounts.getLiquidityForAmount0(uint160,uint160,uint256).sqrtRatioBX96 (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#1463)
Variable IUniswapV3PoolOwnerActions.collectProtocol(address,uint128,uint128).amount0Requested (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#1117) is too similar to IUniswapV3PoolActions.collect(address,int24,int24,uint128,uint128).amount1Requested (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#846)
Variable IUniswapV3PoolActions.collect(address,int24,int24,uint128,uint128).amount0Requested (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#845) is too similar to IUniswapV3PoolOwnerActions.collectProtocol(address,uint128,uint128).amount1Requested (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#1118)
Variable AlphaVault.accruedProtocolFees0 (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2016) is too similar to AlphaVault.accruedProtocolFees1 (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2017)
Variable AlphaVault.deposit(uint256,uint256,uint256,uint256,address).amount0Desired (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2058) is too similar to AlphaVault._calcSharesAndAmounts(uint256,uint256).amount1Desired (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2102)
Variable AlphaVault.deposit(uint256,uint256,uint256,uint256,address).amount0Desired (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2058) is too similar to AlphaVault.deposit(uint256,uint256,uint256,uint256,address).amount1Desired (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2059)
Variable AlphaVault._calcSharesAndAmounts(uint256,uint256).amount0Desired (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2102) is too similar to AlphaVault._calcSharesAndAmounts(uint256,uint256).amount1Desired (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2102)
Variable AlphaVault._calcSharesAndAmounts(uint256,uint256).amount0Desired (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2102) is too similar to AlphaVault.deposit(uint256,uint256,uint256,uint256,address).amount1Desired (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2059)
Variable AlphaVault.getTotalAmounts().baseAmount0 (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2326) is too similar to AlphaVault.withdraw(uint256,uint256,uint256,address).baseAmount1 (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2161)
Variable AlphaVault.getTotalAmounts().baseAmount0 (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2326) is too similar to AlphaVault.getTotalAmounts().baseAmount1 (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2326)
Variable AlphaVault.withdraw(uint256,uint256,uint256,address).baseAmount0 (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2161) is too similar to AlphaVault.withdraw(uint256,uint256,uint256,address).baseAmount1 (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2161)
Variable AlphaVault.withdraw(uint256,uint256,uint256,address).baseAmount0 (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2161) is too similar to AlphaVault.getTotalAmounts().baseAmount1 (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2326)
Variable AlphaVault._burnAllLiquidity(int24,int24).feesFromPool0 (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2293) is too similar to AlphaVault._burnAllLiquidity(int24,int24).feesFromPool1 (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2294)
Variable AlphaVault._burnAllLiquidity(int24,int24).feesToProtocol0 (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2295) is too similar to AlphaVault._burnAllLiquidity(int24,int24).feesToProtocol1 (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2296)
Variable AlphaVault.getTotalAmounts().limitAmount0 (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2327) is too similar to AlphaVault.withdraw(uint256,uint256,uint256,address).limitAmount1 (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2163)
Variable AlphaVault.getTotalAmounts().limitAmount0 (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2327) is too similar to AlphaVault.getTotalAmounts().limitAmount1 (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2327)
Variable AlphaVault.withdraw(uint256,uint256,uint256,address).limitAmount0 (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2163) is too similar to AlphaVault.withdraw(uint256,uint256,uint256,address).limitAmount1 (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2163)
Variable AlphaVault.withdraw(uint256,uint256,uint256,address).limitAmount0 (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2163) is too similar to AlphaVault.getTotalAmounts().limitAmount1 (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2327)
Variable AlphaVault._positionAmounts(int24,int24).tokensOwed0 (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2359) is too similar to AlphaVault._positionAmounts(int24,int24).tokensOwed1 (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2359)
Variable AlphaVault.withdraw(uint256,uint256,uint256,address).unusedAmount0 (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2168) is too similar to AlphaVault.withdraw(uint256,uint256,uint256,address).unusedAmount1 (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2169)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#variable-names-too-similar
INFO:Detectors:
FixedPoint96.slitherConstructorConstantVariables() (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#653-656) uses literals with too many digits:
	- Q96 = 0x1000000000000000000000000 (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#655)
TickMath.getSqrtRatioAtTick(int24) (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#1259-1290) uses literals with too many digits:
	- ratio = 0x100000000000000000000000000000000 (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#1263)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits
INFO:Detectors:
AlphaStrategy.pool (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2555) should be immutable 
AlphaStrategy.tickSpacing (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2556) should be immutable 
AlphaStrategy.vault (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2554) should be immutable 
AlphaVault.pool (../../sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol#2000) should be immutable 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-immutable
INFO:Slither:/bdata2/sc/dataset/mainnet/0xab639009df888ba3e2a1ef7bd8fc56e5d0b4f571.sol analyzed (24 contracts with 85 detectors), 153 result(s) found
