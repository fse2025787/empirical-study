Compilation warnings/errors on /bdata2/sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol:
Warning: Contract code size exceeds 24576 bytes (a limit introduced in Spurious Dragon). This contract may not be deployable on mainnet. Consider enabling the optimizer (with a low "runs" value!), turning off revert strings, or using libraries.
   --> /bdata2/sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol:309:1:
    |
309 | contract Furnace is OwnableUpgradeable, IFurnace {
    | ^ (Relevant source part starts here and spans across multiple lines).


INFO:Detectors:
Furnace.distribute(address,uint256) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#550-556) uses arbitrary from in transferFrom: IERC20Upgradeable(CVX).safeTransferFrom(_origin,address(this),_amount) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#553)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#arbitrary-from-in-transferfrom
INFO:Detectors:
Reentrancy in Furnace.exit(address) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#540-545):
	External calls:
	- _withdraw(_recipient,userInfo[msg.sender].unrealised) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#543)
		- returndata = address(token).functionCall(data,SafeERC20: low-level call failed) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#1124)
		- IERC20Upgradeable(clevCVX).safeTransfer(_recipient,_amount) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#788)
		- (success,returndata) = target.call{value: value}(data) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#1465)
	- _claim(_recipient) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#544)
		- returndata = address(token).functionCall(data,SafeERC20: low-level call failed) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#1124)
		- (success,returndata) = target.call{value: value}(data) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#1465)
		- IConvexCVXRewardPool(CVX_REWARD_POOL).withdraw(_amount - _balanceInContract,false) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#804)
		- IERC20Upgradeable(CVX).safeTransfer(_recipient,_amount) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#806)
		- ICLeverToken(clevCVX).burn(_amount) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#808)
	External calls sending eth:
	- _withdraw(_recipient,userInfo[msg.sender].unrealised) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#543)
		- (success,returndata) = target.call{value: value}(data) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#1465)
	- _claim(_recipient) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#544)
		- (success,returndata) = target.call{value: value}(data) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#1465)
	State variables written after the call(s):
	- _claim(_recipient) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#544)
		- totalRealised = uint128(uint256(totalRealised).sub(_amount)) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#798)
	Furnace.totalRealised (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#370) can be used in cross function reentrancies:
	- Furnace._claim(address) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#795-811)
	- Furnace._deposit(address,uint256) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#747-777)
	- Furnace._reduceGlobalDebt(uint256) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#856-877)
	- Furnace.totalRealised (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#370)
	- _claim(_recipient) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#544)
		- userInfo[msg.sender].realised = 0 (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#799)
	Furnace.userInfo (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#378) can be used in cross function reentrancies:
	- Furnace._claim(address) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#795-811)
	- Furnace._deposit(address,uint256) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#747-777)
	- Furnace._updateUserInfo(address) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#711-741)
	- Furnace._withdraw(address,uint256) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#782-791)
	- Furnace.exit(address) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#540-545)
	- Furnace.getUserInfo(address) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#452-468)
	- Furnace.userInfo (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#378)
	- Furnace.withdrawAll(address) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#524-528)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities
INFO:Detectors:
Furnace._distribute(address,uint256) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#816-852) uses a dangerous strict equality:
	- _info.periodLength == 0 (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#822)
Furnace._mul128(uint128,uint128) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#886-890) uses a dangerous strict equality:
	- _a == 0 (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#887)
Furnace._mul128(uint128,uint128) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#886-890) uses a dangerous strict equality:
	- _b == 0 (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#888)
Furnace._muldiv128(uint256,uint128,uint128) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#893-905) uses a dangerous strict equality:
	- _b == 0 (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#898)
Furnace._muldiv128(uint256,uint128,uint128) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#893-905) uses a dangerous strict equality:
	- _c == 0 (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#899)
Furnace._muldiv128(uint256,uint128,uint128) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#893-905) uses a dangerous strict equality:
	- _c == 0 (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#902)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dangerous-strict-equalities
INFO:Detectors:
Reentrancy in Furnace.deposit(uint256) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#491-498):
	External calls:
	- IERC20Upgradeable(clevCVX).safeTransferFrom(msg.sender,address(this),_amount) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#495)
	State variables written after the call(s):
	- _deposit(msg.sender,_amount) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#497)
		- accUnrealisedFraction = 0 (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#868)
		- accUnrealisedFraction = _mul128(_accUnrealisedFraction,_fraction) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#875)
	- _deposit(msg.sender,_amount) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#497)
		- distributeIndex += 1 (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#857)
	- _deposit(msg.sender,_amount) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#497)
		- lastPaidOffDistributeIndex = distributeIndex (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#869)
	- _deposit(msg.sender,_amount) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#497)
		- rewardInfo = _info (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#702)
	- _deposit(msg.sender,_amount) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#497)
		- totalRealised = _toU128(_totalUnrealised + _totalRealised) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#866)
		- totalRealised = _toU128(_totalRealised + _amount) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#872)
		- totalRealised = _toU128(_totalRealised.add(_newRealised)) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#773)
	- _deposit(msg.sender,_amount) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#497)
		- totalUnrealised = 0 (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#865)
		- totalUnrealised = uint128(_totalUnrealised - _amount) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#871)
		- totalUnrealised = _toU128(_totalUnrealised.add(_newUnrealised)) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#774)
	- _deposit(msg.sender,_amount) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#497)
		- userInfo[_account] = UserInfo(0,_info.unrealised + _info.realised,_accUnrealisedFraction,_distributeIndex) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#719-724)
		- userInfo[_account] = UserInfo(_newUnrealised,_newRealised,_accUnrealisedFraction,_distributeIndex) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#734-739)
		- userInfo[_account].realised = _toU128(_newRealised.add(userInfo[_account].realised)) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#770)
		- userInfo[_account].unrealised = _toU128(_newUnrealised.add(userInfo[_account].unrealised)) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#771)
Reentrancy in Furnace.depositFor(address,uint256) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#503-510):
	External calls:
	- IERC20Upgradeable(clevCVX).safeTransferFrom(msg.sender,address(this),_amount) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#507)
	State variables written after the call(s):
	- _deposit(_account,_amount) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#509)
		- accUnrealisedFraction = 0 (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#868)
		- accUnrealisedFraction = _mul128(_accUnrealisedFraction,_fraction) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#875)
	- _deposit(_account,_amount) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#509)
		- distributeIndex += 1 (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#857)
	- _deposit(_account,_amount) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#509)
		- lastPaidOffDistributeIndex = distributeIndex (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#869)
	- _deposit(_account,_amount) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#509)
		- rewardInfo = _info (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#702)
	- _deposit(_account,_amount) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#509)
		- totalRealised = _toU128(_totalUnrealised + _totalRealised) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#866)
		- totalRealised = _toU128(_totalRealised + _amount) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#872)
		- totalRealised = _toU128(_totalRealised.add(_newRealised)) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#773)
	- _deposit(_account,_amount) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#509)
		- totalUnrealised = 0 (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#865)
		- totalUnrealised = uint128(_totalUnrealised - _amount) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#871)
		- totalUnrealised = _toU128(_totalUnrealised.add(_newUnrealised)) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#774)
	- _deposit(_account,_amount) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#509)
		- userInfo[_account] = UserInfo(0,_info.unrealised + _info.realised,_accUnrealisedFraction,_distributeIndex) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#719-724)
		- userInfo[_account] = UserInfo(_newUnrealised,_newRealised,_accUnrealisedFraction,_distributeIndex) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#734-739)
		- userInfo[_account].realised = _toU128(_newRealised.add(userInfo[_account].realised)) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#770)
		- userInfo[_account].unrealised = _toU128(_newUnrealised.add(userInfo[_account].unrealised)) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#771)
Reentrancy in Furnace.distribute(address,uint256) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#550-556):
	External calls:
	- IERC20Upgradeable(CVX).safeTransferFrom(_origin,address(this),_amount) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#553)
	- _distribute(_origin,_amount) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#555)
		- returndata = address(token).functionCall(data,SafeERC20: low-level call failed) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#1124)
		- (success,returndata) = target.call{value: value}(data) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#1465)
		- IERC20Upgradeable(CVX).safeApprove(CVX_REWARD_POOL,0) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#845)
		- IERC20Upgradeable(CVX).safeApprove(CVX_REWARD_POOL,_toStake) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#846)
		- IConvexCVXRewardPool(CVX_REWARD_POOL).stake(_toStake) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#847)
	External calls sending eth:
	- _distribute(_origin,_amount) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#555)
		- (success,returndata) = target.call{value: value}(data) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#1465)
	State variables written after the call(s):
	- _distribute(_origin,_amount) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#555)
		- lastPaidOffDistributeIndex = distributeIndex (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#869)
Reentrancy in Furnace.harvest(address,uint256) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#562-595):
	External calls:
	- IConvexCVXRewardPool(CVX_REWARD_POOL).getReward(false) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#564)
	- IERC20Upgradeable(CVXCRV).safeTransfer(zap,_amount) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#569)
	- _amount = IZap(zap).zap(CVXCRV,_amount,CVX,_minimumOut) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#570)
	- IERC20Upgradeable(CVX).safeTransfer(platform,_platformFee) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#581)
	- IERC20Upgradeable(CVX).safeTransfer(_recipient,_harvestBounty) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#588)
	- _distribute(address(this),_distributeAmount) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#592)
		- returndata = address(token).functionCall(data,SafeERC20: low-level call failed) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#1124)
		- (success,returndata) = target.call{value: value}(data) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#1465)
		- IERC20Upgradeable(CVX).safeApprove(CVX_REWARD_POOL,0) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#845)
		- IERC20Upgradeable(CVX).safeApprove(CVX_REWARD_POOL,_toStake) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#846)
		- IConvexCVXRewardPool(CVX_REWARD_POOL).stake(_toStake) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#847)
	External calls sending eth:
	- _distribute(address(this),_distributeAmount) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#592)
		- (success,returndata) = target.call{value: value}(data) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#1465)
	State variables written after the call(s):
	- _distribute(address(this),_distributeAmount) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#592)
		- lastPaidOffDistributeIndex = distributeIndex (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#869)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2
INFO:Detectors:
Reentrancy in Furnace._claim(address) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#795-811):
	External calls:
	- IConvexCVXRewardPool(CVX_REWARD_POOL).withdraw(_amount - _balanceInContract,false) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#804)
	- IERC20Upgradeable(CVX).safeTransfer(_recipient,_amount) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#806)
	- ICLeverToken(clevCVX).burn(_amount) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#808)
	Event emitted after the call(s):
	- Claim(msg.sender,_recipient,_amount) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#810)
Reentrancy in Furnace._distribute(address,uint256) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#816-852):
	External calls:
	- IERC20Upgradeable(CVX).safeApprove(CVX_REWARD_POOL,0) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#845)
	- IERC20Upgradeable(CVX).safeApprove(CVX_REWARD_POOL,_toStake) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#846)
	- IConvexCVXRewardPool(CVX_REWARD_POOL).stake(_toStake) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#847)
	Event emitted after the call(s):
	- Distribute(_origin,_amount) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#851)
Reentrancy in Furnace._withdraw(address,uint256) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#782-791):
	External calls:
	- IERC20Upgradeable(clevCVX).safeTransfer(_recipient,_amount) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#788)
	Event emitted after the call(s):
	- Withdraw(msg.sender,_recipient,_amount) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#790)
Reentrancy in Furnace.deposit(uint256) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#491-498):
	External calls:
	- IERC20Upgradeable(clevCVX).safeTransferFrom(msg.sender,address(this),_amount) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#495)
	Event emitted after the call(s):
	- Deposit(_account,_amount) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#776)
		- _deposit(msg.sender,_amount) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#497)
Reentrancy in Furnace.depositFor(address,uint256) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#503-510):
	External calls:
	- IERC20Upgradeable(clevCVX).safeTransferFrom(msg.sender,address(this),_amount) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#507)
	Event emitted after the call(s):
	- Deposit(_account,_amount) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#776)
		- _deposit(_account,_amount) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#509)
Reentrancy in Furnace.distribute(address,uint256) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#550-556):
	External calls:
	- IERC20Upgradeable(CVX).safeTransferFrom(_origin,address(this),_amount) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#553)
	- _distribute(_origin,_amount) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#555)
		- returndata = address(token).functionCall(data,SafeERC20: low-level call failed) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#1124)
		- (success,returndata) = target.call{value: value}(data) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#1465)
		- IERC20Upgradeable(CVX).safeApprove(CVX_REWARD_POOL,0) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#845)
		- IERC20Upgradeable(CVX).safeApprove(CVX_REWARD_POOL,_toStake) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#846)
		- IConvexCVXRewardPool(CVX_REWARD_POOL).stake(_toStake) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#847)
	External calls sending eth:
	- _distribute(_origin,_amount) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#555)
		- (success,returndata) = target.call{value: value}(data) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#1465)
	Event emitted after the call(s):
	- Distribute(_origin,_amount) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#851)
		- _distribute(_origin,_amount) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#555)
Reentrancy in Furnace.exit(address) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#540-545):
	External calls:
	- _withdraw(_recipient,userInfo[msg.sender].unrealised) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#543)
		- returndata = address(token).functionCall(data,SafeERC20: low-level call failed) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#1124)
		- IERC20Upgradeable(clevCVX).safeTransfer(_recipient,_amount) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#788)
		- (success,returndata) = target.call{value: value}(data) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#1465)
	- _claim(_recipient) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#544)
		- returndata = address(token).functionCall(data,SafeERC20: low-level call failed) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#1124)
		- (success,returndata) = target.call{value: value}(data) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#1465)
		- IConvexCVXRewardPool(CVX_REWARD_POOL).withdraw(_amount - _balanceInContract,false) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#804)
		- IERC20Upgradeable(CVX).safeTransfer(_recipient,_amount) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#806)
		- ICLeverToken(clevCVX).burn(_amount) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#808)
	External calls sending eth:
	- _withdraw(_recipient,userInfo[msg.sender].unrealised) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#543)
		- (success,returndata) = target.call{value: value}(data) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#1465)
	- _claim(_recipient) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#544)
		- (success,returndata) = target.call{value: value}(data) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#1465)
	Event emitted after the call(s):
	- Claim(msg.sender,_recipient,_amount) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#810)
		- _claim(_recipient) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#544)
Reentrancy in Furnace.harvest(address,uint256) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#562-595):
	External calls:
	- IConvexCVXRewardPool(CVX_REWARD_POOL).getReward(false) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#564)
	- IERC20Upgradeable(CVXCRV).safeTransfer(zap,_amount) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#569)
	- _amount = IZap(zap).zap(CVXCRV,_amount,CVX,_minimumOut) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#570)
	Event emitted after the call(s):
	- Harvest(msg.sender,_amount) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#573)
Reentrancy in Furnace.harvest(address,uint256) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#562-595):
	External calls:
	- IConvexCVXRewardPool(CVX_REWARD_POOL).getReward(false) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#564)
	- IERC20Upgradeable(CVXCRV).safeTransfer(zap,_amount) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#569)
	- _amount = IZap(zap).zap(CVXCRV,_amount,CVX,_minimumOut) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#570)
	- IERC20Upgradeable(CVX).safeTransfer(platform,_platformFee) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#581)
	- IERC20Upgradeable(CVX).safeTransfer(_recipient,_harvestBounty) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#588)
	- _distribute(address(this),_distributeAmount) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#592)
		- returndata = address(token).functionCall(data,SafeERC20: low-level call failed) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#1124)
		- (success,returndata) = target.call{value: value}(data) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#1465)
		- IERC20Upgradeable(CVX).safeApprove(CVX_REWARD_POOL,0) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#845)
		- IERC20Upgradeable(CVX).safeApprove(CVX_REWARD_POOL,_toStake) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#846)
		- IConvexCVXRewardPool(CVX_REWARD_POOL).stake(_toStake) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#847)
	External calls sending eth:
	- _distribute(address(this),_distributeAmount) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#592)
		- (success,returndata) = target.call{value: value}(data) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#1465)
	Event emitted after the call(s):
	- Distribute(_origin,_amount) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#851)
		- _distribute(address(this),_distributeAmount) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#592)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3
INFO:Detectors:
Furnace.getUserInfo(address) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#452-468) uses timestamp for comparisons
	Dangerous comparisons:
	- _info.lastDistributeIndex < lastPaidOffDistributeIndex (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#454)
	- _newUnrealised >= _info.unrealised (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#462)
Furnace.totalCVXInPool() (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#472-485) uses timestamp for comparisons
	Dangerous comparisons:
	- _info.periodLength != 0 (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#475)
	- block.timestamp < _info.finishAt (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#476)
Furnace._updatePendingDistribution() (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#692-707) uses timestamp for comparisons
	Dangerous comparisons:
	- _info.periodLength > 0 (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#694)
	- _currentTime > block.timestamp (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#696)
	- _duration > 0 (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#700)
	- _currentTime >= _info.lastUpdate (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#699)
Furnace._updateUserInfo(address) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#711-741) uses timestamp for comparisons
	Dangerous comparisons:
	- _newUnrealised >= _info.unrealised (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#730)
Furnace._deposit(address,uint256) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#747-777) uses timestamp for comparisons
	Dangerous comparisons:
	- _freeCVX >= _amount (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#758)
Furnace._withdraw(address,uint256) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#782-791) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(_amount <= userInfo[msg.sender].unrealised,Furnace: clevCVX not enough) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#783)
Furnace._claim(address) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#795-811) uses timestamp for comparisons
	Dangerous comparisons:
	- _balanceInContract < _amount (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#802)
Furnace._distribute(address,uint256) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#816-852) uses timestamp for comparisons
	Dangerous comparisons:
	- _info.periodLength == 0 (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#822)
	- block.timestamp >= _info.finishAt (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#825)
	- _balanceStaked < _toStake (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#842)
	- _toStake >= stakeThreshold (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#844)
Furnace._reduceGlobalDebt(uint256) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#856-877) uses timestamp for comparisons
	Dangerous comparisons:
	- _amount >= _totalUnrealised (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#863)
Furnace._toU128(uint256) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#880-883) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(_value < 340282366920938463463374607431768211456,Furnace: overflow) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#881)
Furnace._mul128(uint128,uint128) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#886-890) uses timestamp for comparisons
	Dangerous comparisons:
	- _a == 0 (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#887)
	- _b == 0 (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#888)
Furnace._muldiv128(uint256,uint128,uint128) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#893-905) uses timestamp for comparisons
	Dangerous comparisons:
	- _b == 0 (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#898)
	- _c == 0 (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#899)
	- _c == 0 (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#902)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp
INFO:Detectors:
AddressUpgradeable.isContract(address) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#1372-1381) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#1379)
AddressUpgradeable._verifyCallResult(bool,bytes,string) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#1493-1510) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#1502-1505)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage
INFO:Detectors:
Different versions of Solidity are used:
	- Version used: ['>=0.4.24<0.8.0', '>=0.6.0<0.8.0', '^0.7.0', '^0.7.6']
	- >=0.4.24<0.8.0 (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#7)
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#61)
	- ^0.7.0 (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#143)
	- ^0.7.0 (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#219)
	- ^0.7.0 (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#980)
	- ^0.7.0 (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#1058)
	- ^0.7.0 (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#1134)
	- ^0.7.0 (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#1349)
	- ^0.7.6 (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#94)
	- ^0.7.6 (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#296)
	- ^0.7.6 (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#910)
	- ^0.7.6 (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#938)
	- ^0.7.6 (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#966)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#different-pragma-directives-are-used
INFO:Detectors:
AddressUpgradeable.functionCall(address,bytes) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#1425-1427) is never used and should be removed
AddressUpgradeable.functionCallWithValue(address,bytes,uint256) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#1450-1452) is never used and should be removed
AddressUpgradeable.functionStaticCall(address,bytes) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#1475-1477) is never used and should be removed
AddressUpgradeable.functionStaticCall(address,bytes,string) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#1485-1491) is never used and should be removed
AddressUpgradeable.sendValue(address,uint256) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#1399-1405) is never used and should be removed
ContextUpgradeable.__Context_init() (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#75-77) is never used and should be removed
ContextUpgradeable._msgData() (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#85-88) is never used and should be removed
SafeERC20Upgradeable.safeDecreaseAllowance(IERC20Upgradeable,address,uint256) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#1108-1111) is never used and should be removed
SafeERC20Upgradeable.safeIncreaseAllowance(IERC20Upgradeable,address,uint256) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#1103-1106) is never used and should be removed
SafeMathUpgradeable.div(uint256,uint256,string) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#1321-1324) is never used and should be removed
SafeMathUpgradeable.mod(uint256,uint256) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#1283-1286) is never used and should be removed
SafeMathUpgradeable.mod(uint256,uint256,string) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#1341-1344) is never used and should be removed
SafeMathUpgradeable.sub(uint256,uint256,string) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#1301-1304) is never used and should be removed
SafeMathUpgradeable.tryAdd(uint256,uint256) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#1155-1159) is never used and should be removed
SafeMathUpgradeable.tryDiv(uint256,uint256) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#1191-1194) is never used and should be removed
SafeMathUpgradeable.tryMod(uint256,uint256) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#1201-1204) is never used and should be removed
SafeMathUpgradeable.tryMul(uint256,uint256) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#1176-1184) is never used and should be removed
SafeMathUpgradeable.trySub(uint256,uint256) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#1166-1169) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code
INFO:Detectors:
Pragma version>=0.4.24<0.8.0 (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#7) is too complex
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#61) is too complex
Pragma version^0.7.6 (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#94) allows old versions
Pragma version^0.7.0 (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#143) allows old versions
Pragma version^0.7.0 (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#219) allows old versions
Pragma version^0.7.6 (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#296) allows old versions
Pragma version^0.7.6 (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#910) allows old versions
Pragma version^0.7.6 (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#938) allows old versions
Pragma version^0.7.6 (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#966) allows old versions
Pragma version^0.7.0 (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#980) allows old versions
Pragma version^0.7.0 (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#1058) allows old versions
Pragma version^0.7.0 (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#1134) allows old versions
Pragma version^0.7.0 (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#1349) allows old versions
solc-0.7.6 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity
INFO:Detectors:
Low level call in AddressUpgradeable.sendValue(address,uint256) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#1399-1405):
	- (success) = recipient.call{value: amount}() (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#1403)
Low level call in AddressUpgradeable.functionCallWithValue(address,bytes,uint256,string) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#1460-1467):
	- (success,returndata) = target.call{value: value}(data) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#1465)
Low level call in AddressUpgradeable.functionStaticCall(address,bytes,string) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#1485-1491):
	- (success,returndata) = target.staticcall(data) (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#1489)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls
INFO:Detectors:
Function ContextUpgradeable.__Context_init() (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#75-77) is not in mixedCase
Function ContextUpgradeable.__Context_init_unchained() (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#79-80) is not in mixedCase
Variable ContextUpgradeable.__gap (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#89) is not in mixedCase
Function OwnableUpgradeable.__Ownable_init() (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#167-170) is not in mixedCase
Function OwnableUpgradeable.__Ownable_init_unchained() (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#172-176) is not in mixedCase
Variable OwnableUpgradeable.__gap (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#214) is not in mixedCase
Parameter Furnace.initialize(address,address,address,address,uint256,uint256)._governor (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#422) is not in mixedCase
Parameter Furnace.initialize(address,address,address,address,uint256,uint256)._clevCVX (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#423) is not in mixedCase
Parameter Furnace.initialize(address,address,address,address,uint256,uint256)._zap (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#424) is not in mixedCase
Parameter Furnace.initialize(address,address,address,address,uint256,uint256)._platform (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#425) is not in mixedCase
Parameter Furnace.initialize(address,address,address,address,uint256,uint256)._platformFeePercentage (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#426) is not in mixedCase
Parameter Furnace.initialize(address,address,address,address,uint256,uint256)._harvestBountyPercentage (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#427) is not in mixedCase
Parameter Furnace.getUserInfo(address)._account (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#452) is not in mixedCase
Parameter Furnace.deposit(uint256)._amount (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#491) is not in mixedCase
Parameter Furnace.depositFor(address,uint256)._account (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#503) is not in mixedCase
Parameter Furnace.depositFor(address,uint256)._amount (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#503) is not in mixedCase
Parameter Furnace.withdraw(address,uint256)._recipient (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#515) is not in mixedCase
Parameter Furnace.withdraw(address,uint256)._amount (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#515) is not in mixedCase
Parameter Furnace.withdrawAll(address)._recipient (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#524) is not in mixedCase
Parameter Furnace.claim(address)._recipient (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#532) is not in mixedCase
Parameter Furnace.exit(address)._recipient (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#540) is not in mixedCase
Parameter Furnace.distribute(address,uint256)._origin (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#550) is not in mixedCase
Parameter Furnace.distribute(address,uint256)._amount (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#550) is not in mixedCase
Parameter Furnace.harvest(address,uint256)._recipient (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#562) is not in mixedCase
Parameter Furnace.harvest(address,uint256)._minimumOut (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#562) is not in mixedCase
Parameter Furnace.updateWhitelists(address[],bool)._whitelists (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#607) is not in mixedCase
Parameter Furnace.updateWhitelists(address[],bool)._status (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#607) is not in mixedCase
Parameter Furnace.updateGovernor(address)._governor (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#619) is not in mixedCase
Parameter Furnace.updateStakePercentage(uint256)._percentage (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#628) is not in mixedCase
Parameter Furnace.updateStakeThreshold(uint256)._threshold (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#637) is not in mixedCase
Parameter Furnace.updatePlatformFeePercentage(uint256)._feePercentage (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#645) is not in mixedCase
Parameter Furnace.updateHarvestBountyPercentage(uint256)._percentage (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#654) is not in mixedCase
Parameter Furnace.updatePlatform(address)._platform (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#663) is not in mixedCase
Parameter Furnace.updateZap(address)._zap (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#672) is not in mixedCase
Parameter Furnace.updatePeriodLength(uint32)._length (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#682) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions
INFO:Detectors:
Redundant expression "this (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#86)" inContextUpgradeable (../../sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol#74-90)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#redundant-statements
INFO:Slither:/bdata2/sc/dataset/mainnet/0x18fa0Ce2A350cC574F562fE3d02B885417c4F6C1.sol analyzed (13 contracts with 85 detectors), 107 result(s) found
