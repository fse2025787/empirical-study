Compilation warnings/errors on /bdata2/sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol:
Warning: Contract code size exceeds 24576 bytes (a limit introduced in Spurious Dragon). This contract may not be deployable on mainnet. Consider enabling the optimizer (with a low "runs" value!), turning off revert strings, or using libraries.
   --> /bdata2/sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol:666:1:
    |
666 | contract MasterChef is OwnableUpgradeable, ERC1155HolderUpgradeable {
    | ^ (Relevant source part starts here and spans across multiple lines).


INFO:Detectors:
MasterChef.withdrawAPW(address,uint256) (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#1055-1057) ignores return value by apw.transfer(_recipient,_amount) (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#1056)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unchecked-transfer
INFO:Detectors:
MasterChef.pendingAPW(uint256,address) (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#857-872) performs a multiplication on the result of a division:
	- apwReward = (block.number.sub(pool.lastRewardBlock)).mul(apwPerBlock).mul(pool.allocPoint).div(totalAllocPoint) (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#865-866)
	- accAPWPerShare = accAPWPerShare.add(apwReward.mul(TOKEN_PRECISION).div(lpSupply)) (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#868)
MasterChef.updatePool(uint256) (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#883-899) performs a multiplication on the result of a division:
	- pool.accAPWPerShare = pool.accAPWPerShare.add(apwReward.mul(TOKEN_PRECISION).div(lpSupply)) (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#897)
	- apwReward = (block.number.sub(pool.lastRewardBlock)).mul(apwPerBlock).mul(pool.allocPoint).div(totalAllocPoint) (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#893-896)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#divide-before-multiply
INFO:Detectors:
Reentrancy in MasterChef.deposit(uint256,uint256) (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#921-963):
	External calls:
	- _upgradePoolRewardsIfNeeded(ammId,pairId) (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#924)
		- rewarder.renewPool(previousLpTokenId,newLpTokenId) (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#913)
	State variables written after the call(s):
	- updatePool(_lpTokenId) (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#930)
		- pool.lastRewardBlock = block.number (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#890)
		- pool.accAPWPerShare = pool.accAPWPerShare.add(apwReward.mul(TOKEN_PRECISION).div(lpSupply)) (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#897)
		- pool.lastRewardBlock = block.number (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#898)
	MasterChef.poolInfo (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#720) can be used in cross function reentrancies:
	- MasterChef._add(uint256,uint256,IRewarder,bool) (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#790-821)
	- MasterChef._set(uint256,uint256,IRewarder,bool,bool) (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#839-854)
	- MasterChef.pendingAPW(uint256,address) (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#857-872)
	- MasterChef.poolInfo (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#720)
	- MasterChef.updatePool(uint256) (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#883-899)
Reentrancy in MasterChef.deposit(uint256,uint256) (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#921-963):
	External calls:
	- _upgradePoolRewardsIfNeeded(ammId,pairId) (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#924)
		- rewarder.renewPool(previousLpTokenId,newLpTokenId) (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#913)
	- require(bool,string)(safeAPWTransfer(msg.sender,pending),Masterchef: SafeTransfer APW failed) (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#943)
		- success = apw.transfer(_to,transferAmount) (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#1038)
	State variables written after the call(s):
	- user.amount = 0 (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#947)
	MasterChef.userInfo (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#705) can be used in cross function reentrancies:
	- MasterChef.pendingAPW(uint256,address) (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#857-872)
	- MasterChef.userInfo (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#705)
	- user.rewardDebt = 0 (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#948)
	MasterChef.userInfo (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#705) can be used in cross function reentrancies:
	- MasterChef.pendingAPW(uint256,address) (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#857-872)
	- MasterChef.userInfo (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#705)
	- user.periodId = periodOfToken (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#949)
	MasterChef.userInfo (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#705) can be used in cross function reentrancies:
	- MasterChef.pendingAPW(uint256,address) (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#857-872)
	- MasterChef.userInfo (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#705)
Reentrancy in MasterChef.deposit(uint256,uint256) (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#921-963):
	External calls:
	- _upgradePoolRewardsIfNeeded(ammId,pairId) (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#924)
		- rewarder.renewPool(previousLpTokenId,newLpTokenId) (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#913)
	- require(bool,string)(safeAPWTransfer(msg.sender,pending),Masterchef: SafeTransfer APW failed) (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#943)
		- success = apw.transfer(_to,transferAmount) (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#1038)
	- lpToken.safeTransferFrom(address(msg.sender),address(this),_lpTokenId,_amount,) (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#952)
	State variables written after the call(s):
	- user.amount = user.amount.add(_amount) (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#953)
	MasterChef.userInfo (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#705) can be used in cross function reentrancies:
	- MasterChef.pendingAPW(uint256,address) (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#857-872)
	- MasterChef.userInfo (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#705)
	- user.rewardDebt = user.amount.mul(pool.accAPWPerShare).div(TOKEN_PRECISION) (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#955)
	MasterChef.userInfo (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#705) can be used in cross function reentrancies:
	- MasterChef.pendingAPW(uint256,address) (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#857-872)
	- MasterChef.userInfo (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#705)
Reentrancy in MasterChef.withdraw(uint256,uint256) (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#966-984):
	External calls:
	- require(bool,string)(safeAPWTransfer(msg.sender,pending),Masterchef: SafeTransfer APW failed) (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#974)
		- success = apw.transfer(_to,transferAmount) (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#1038)
	State variables written after the call(s):
	- user.amount = user.amount.sub(_amount) (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#975)
	MasterChef.userInfo (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#705) can be used in cross function reentrancies:
	- MasterChef.pendingAPW(uint256,address) (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#857-872)
	- MasterChef.userInfo (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#705)
	- user.rewardDebt = user.amount.mul(pool.accAPWPerShare).div(TOKEN_PRECISION) (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#977)
	MasterChef.userInfo (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#705) can be used in cross function reentrancies:
	- MasterChef.pendingAPW(uint256,address) (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#857-872)
	- MasterChef.userInfo (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#705)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1
INFO:Detectors:
MasterChef._add(uint256,uint256,IRewarder,bool) (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#790-821) ignores return value by activePools.add(_lpTokenId) (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#819)
MasterChef._upgradePoolRewardsIfNeeded(uint64,uint256) (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#902-918) ignores return value by activePools.remove(previousLpTokenId) (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#910)
MasterChef.deposit(uint256,uint256) (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#921-963) ignores return value by userLpTokensIds[msg.sender].remove(IAMM(lpToken.amms(ammId)).getLPTokenId(ammId,pairId,user.periodId)) (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#946)
MasterChef.deposit(uint256,uint256) (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#921-963) ignores return value by userLpTokensIds[msg.sender].add(_lpTokenId) (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#954)
MasterChef.withdraw(uint256,uint256) (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#966-984) ignores return value by userLpTokensIds[msg.sender].remove(_lpTokenId) (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#976)
MasterChef.emergencyWithdraw(uint256) (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#1016-1032) ignores return value by userLpTokensIds[msg.sender].remove(_lpTokenId) (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#1030)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return
INFO:Detectors:
MasterChef.setAPWPerBlock(uint256) (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#1042-1046) should emit an event for: 
	- apwPerBlock = _apwPerBlock (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#1045) 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-arithmetic
INFO:Detectors:
MasterChef.validPool(uint256) (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#744-749) has external calls inside a loop: ammId = lpToken.getAMMId(_lpTokenId) (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#745)
MasterChef.validPool(uint256) (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#744-749) has external calls inside a loop: pairId = lpToken.getPairId(_lpTokenId) (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#746)
MasterChef.updatePool(uint256) (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#883-899) has external calls inside a loop: lpSupply = lpToken.balanceOf(address(this),_lpTokenId) (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#888)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation/#calls-inside-a-loop
INFO:Detectors:
AddressUpgradeable.isContract(address) (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#2258-2267) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#2265)
AddressUpgradeable._verifyCallResult(bool,bytes,string) (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#2379-2396) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#2388-2391)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage
INFO:Detectors:
Different versions of Solidity are used:
	- Version used: ['0.7.6', '>=0.4.24<0.8.0', '>=0.6.0<0.8.0', '>=0.6.2<0.8.0', '^0.7.6']
	- 0.7.6 (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#450)
	- 0.7.6 (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#585)
	- 0.7.6 (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#646)
	- 0.7.6 (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#1682)
	- 0.7.6 (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#1901)
	- 0.7.6 (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#2217)
	- 0.7.6 (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#2401)
	- 0.7.6 (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#2482)
	- 0.7.6 (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#2668)
	- >=0.4.24<0.8.0 (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#9)
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#64)
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#89)
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#147)
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#208)
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#286)
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#319)
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#345)
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#421)
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#1093)
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#1169)
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#1467)
	- >=0.6.2<0.8.0 (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#2235)
	- ABIEncoderV2 (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#3)
	- ^0.7.6 (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#1872)
	- v2 (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#2)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#different-pragma-directives-are-used
INFO:Detectors:
AddressUpgradeable._verifyCallResult(bool,bytes,string) (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#2379-2396) is never used and should be removed
AddressUpgradeable.functionCall(address,bytes) (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#2311-2313) is never used and should be removed
AddressUpgradeable.functionCall(address,bytes,string) (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#2321-2323) is never used and should be removed
AddressUpgradeable.functionCallWithValue(address,bytes,uint256) (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#2336-2338) is never used and should be removed
AddressUpgradeable.functionCallWithValue(address,bytes,uint256,string) (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#2346-2353) is never used and should be removed
AddressUpgradeable.functionStaticCall(address,bytes) (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#2361-2363) is never used and should be removed
AddressUpgradeable.functionStaticCall(address,bytes,string) (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#2371-2377) is never used and should be removed
AddressUpgradeable.sendValue(address,uint256) (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#2285-2291) is never used and should be removed
ContextUpgradeable.__Context_init() (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#300-302) is never used and should be removed
ContextUpgradeable._msgData() (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#310-313) is never used and should be removed
ERC1155HolderUpgradeable.__ERC1155Holder_init() (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#430-434) is never used and should be removed
ERC1155HolderUpgradeable.__ERC1155Holder_init_unchained() (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#436-437) is never used and should be removed
ERC1155ReceiverUpgradeable.__ERC1155Receiver_init() (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#329-332) is never used and should be removed
ERC1155ReceiverUpgradeable.__ERC1155Receiver_init_unchained() (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#334-339) is never used and should be removed
ERC165Upgradeable.__ERC165_init() (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#169-171) is never used and should be removed
ERC165Upgradeable.__ERC165_init_unchained() (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#173-177) is never used and should be removed
EnumerableSetUpgradeable.add(EnumerableSetUpgradeable.AddressSet,address) (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#1367-1369) is never used and should be removed
EnumerableSetUpgradeable.add(EnumerableSetUpgradeable.Bytes32Set,bytes32) (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#1313-1315) is never used and should be removed
EnumerableSetUpgradeable.at(EnumerableSetUpgradeable.AddressSet,uint256) (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#1405-1407) is never used and should be removed
EnumerableSetUpgradeable.at(EnumerableSetUpgradeable.Bytes32Set,uint256) (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#1351-1353) is never used and should be removed
EnumerableSetUpgradeable.contains(EnumerableSetUpgradeable.AddressSet,address) (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#1384-1386) is never used and should be removed
EnumerableSetUpgradeable.contains(EnumerableSetUpgradeable.Bytes32Set,bytes32) (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#1330-1332) is never used and should be removed
EnumerableSetUpgradeable.length(EnumerableSetUpgradeable.AddressSet) (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#1391-1393) is never used and should be removed
EnumerableSetUpgradeable.length(EnumerableSetUpgradeable.Bytes32Set) (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#1337-1339) is never used and should be removed
EnumerableSetUpgradeable.remove(EnumerableSetUpgradeable.AddressSet,address) (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#1377-1379) is never used and should be removed
EnumerableSetUpgradeable.remove(EnumerableSetUpgradeable.Bytes32Set,bytes32) (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#1323-1325) is never used and should be removed
SafeERC20Upgradeable._callOptionalReturn(IERC20Upgradeable,bytes) (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#1154-1164) is never used and should be removed
SafeERC20Upgradeable.safeApprove(IERC20Upgradeable,address,uint256) (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#1127-1136) is never used and should be removed
SafeERC20Upgradeable.safeDecreaseAllowance(IERC20Upgradeable,address,uint256) (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#1143-1146) is never used and should be removed
SafeERC20Upgradeable.safeIncreaseAllowance(IERC20Upgradeable,address,uint256) (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#1138-1141) is never used and should be removed
SafeERC20Upgradeable.safeTransfer(IERC20Upgradeable,address,uint256) (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#1112-1114) is never used and should be removed
SafeERC20Upgradeable.safeTransferFrom(IERC20Upgradeable,address,address,uint256) (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#1116-1118) is never used and should be removed
SafeMathUpgradeable.div(uint256,uint256,string) (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#1654-1657) is never used and should be removed
SafeMathUpgradeable.mod(uint256,uint256) (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#1616-1619) is never used and should be removed
SafeMathUpgradeable.mod(uint256,uint256,string) (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#1674-1677) is never used and should be removed
SafeMathUpgradeable.sub(uint256,uint256,string) (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#1634-1637) is never used and should be removed
SafeMathUpgradeable.tryAdd(uint256,uint256) (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#1488-1492) is never used and should be removed
SafeMathUpgradeable.tryDiv(uint256,uint256) (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#1524-1527) is never used and should be removed
SafeMathUpgradeable.tryMod(uint256,uint256) (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#1534-1537) is never used and should be removed
SafeMathUpgradeable.tryMul(uint256,uint256) (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#1509-1517) is never used and should be removed
SafeMathUpgradeable.trySub(uint256,uint256) (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#1499-1502) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code
INFO:Detectors:
Pragma version>=0.4.24<0.8.0 (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#9) is too complex
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#64) is too complex
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#89) is too complex
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#147) is too complex
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#208) is too complex
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#286) is too complex
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#319) is too complex
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#345) is too complex
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#421) is too complex
Pragma version0.7.6 (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#450) allows old versions
Pragma version0.7.6 (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#585) allows old versions
Pragma version0.7.6 (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#646) allows old versions
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#1093) is too complex
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#1169) is too complex
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#1467) is too complex
Pragma version0.7.6 (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#1682) allows old versions
Pragma version^0.7.6 (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#1872) allows old versions
Pragma version0.7.6 (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#1901) allows old versions
Pragma version0.7.6 (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#2217) allows old versions
Pragma version>=0.6.2<0.8.0 (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#2235) is too complex
Pragma version0.7.6 (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#2401) allows old versions
Pragma version0.7.6 (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#2482) allows old versions
Pragma version0.7.6 (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#2668) allows old versions
solc-0.7.6 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity
INFO:Detectors:
Low level call in AddressUpgradeable.sendValue(address,uint256) (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#2285-2291):
	- (success) = recipient.call{value: amount}() (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#2289)
Low level call in AddressUpgradeable.functionCallWithValue(address,bytes,uint256,string) (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#2346-2353):
	- (success,returndata) = target.call{value: value}(data) (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#2351)
Low level call in AddressUpgradeable.functionStaticCall(address,bytes,string) (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#2371-2377):
	- (success,returndata) = target.staticcall(data) (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#2375)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls
INFO:Detectors:
Function ERC165Upgradeable.__ERC165_init() (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#169-171) is not in mixedCase
Function ERC165Upgradeable.__ERC165_init_unchained() (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#173-177) is not in mixedCase
Variable ERC165Upgradeable.__gap (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#203) is not in mixedCase
Function ContextUpgradeable.__Context_init() (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#300-302) is not in mixedCase
Function ContextUpgradeable.__Context_init_unchained() (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#304-305) is not in mixedCase
Variable ContextUpgradeable.__gap (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#314) is not in mixedCase
Function ERC1155ReceiverUpgradeable.__ERC1155Receiver_init() (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#329-332) is not in mixedCase
Function ERC1155ReceiverUpgradeable.__ERC1155Receiver_init_unchained() (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#334-339) is not in mixedCase
Variable ERC1155ReceiverUpgradeable.__gap (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#340) is not in mixedCase
Function OwnableUpgradeable.__Ownable_init() (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#369-372) is not in mixedCase
Function OwnableUpgradeable.__Ownable_init_unchained() (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#374-378) is not in mixedCase
Variable OwnableUpgradeable.__gap (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#416) is not in mixedCase
Function ERC1155HolderUpgradeable.__ERC1155Holder_init() (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#430-434) is not in mixedCase
Function ERC1155HolderUpgradeable.__ERC1155Holder_init_unchained() (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#436-437) is not in mixedCase
Variable ERC1155HolderUpgradeable.__gap (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#445) is not in mixedCase
Function IERC1155.MINTER_ROLE() (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#565) is not in mixedCase
Parameter MasterChef.initialize(address,address,uint256,uint256)._apw (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#759) is not in mixedCase
Parameter MasterChef.initialize(address,address,uint256,uint256)._lpToken (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#760) is not in mixedCase
Parameter MasterChef.initialize(address,address,uint256,uint256)._apwPerBlock (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#761) is not in mixedCase
Parameter MasterChef.initialize(address,address,uint256,uint256)._startBlock (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#762) is not in mixedCase
Parameter MasterChef.add(uint256,uint256,IRewarder,bool)._allocPoint (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#781) is not in mixedCase
Parameter MasterChef.add(uint256,uint256,IRewarder,bool)._lpTokenId (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#782) is not in mixedCase
Parameter MasterChef.add(uint256,uint256,IRewarder,bool)._rewarder (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#783) is not in mixedCase
Parameter MasterChef.add(uint256,uint256,IRewarder,bool)._withUpdate (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#784) is not in mixedCase
Parameter MasterChef.set(uint256,uint256,IRewarder,bool,bool)._lpTokenId (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#829) is not in mixedCase
Parameter MasterChef.set(uint256,uint256,IRewarder,bool,bool)._allocPoint (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#830) is not in mixedCase
Parameter MasterChef.set(uint256,uint256,IRewarder,bool,bool)._rewarder (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#831) is not in mixedCase
Parameter MasterChef.set(uint256,uint256,IRewarder,bool,bool)._withUpdate (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#833) is not in mixedCase
Parameter MasterChef.pendingAPW(uint256,address)._lpTokenId (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#857) is not in mixedCase
Parameter MasterChef.pendingAPW(uint256,address)._user (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#857) is not in mixedCase
Parameter MasterChef.updatePool(uint256)._lpTokenId (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#883) is not in mixedCase
Parameter MasterChef.deposit(uint256,uint256)._lpTokenId (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#921) is not in mixedCase
Parameter MasterChef.deposit(uint256,uint256)._amount (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#921) is not in mixedCase
Parameter MasterChef.withdraw(uint256,uint256)._lpTokenId (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#966) is not in mixedCase
Parameter MasterChef.withdraw(uint256,uint256)._amount (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#966) is not in mixedCase
Parameter MasterChef.harvest(uint256,address)._lpTokenId (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#989) is not in mixedCase
Parameter MasterChef.emergencyWithdraw(uint256)._lpTokenId (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#1016) is not in mixedCase
Parameter MasterChef.safeAPWTransfer(address,uint256)._to (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#1035) is not in mixedCase
Parameter MasterChef.safeAPWTransfer(address,uint256)._amount (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#1035) is not in mixedCase
Parameter MasterChef.setAPWPerBlock(uint256)._apwPerBlock (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#1042) is not in mixedCase
Parameter MasterChef.setlpIDToFuture(uint256,address)._lpTokenId (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#1049) is not in mixedCase
Parameter MasterChef.withdrawAPW(address,uint256)._recipient (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#1055) is not in mixedCase
Parameter MasterChef.withdrawAPW(address,uint256)._amount (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#1055) is not in mixedCase
Parameter MasterChef.setNextUpgradeAllocPoint(uint256,uint256)._lpTokenId (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#1060) is not in mixedCase
Parameter MasterChef.setNextUpgradeAllocPoint(uint256,uint256)._nextAllocPoint (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#1060) is not in mixedCase
Parameter MasterChef.isRegisteredPoolId(uint256)._poolId (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#1069) is not in mixedCase
Parameter MasterChef.poolIdAt(uint256)._id (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#1077) is not in mixedCase
Parameter MasterChef.getUserLpTokenIdList(address)._user (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#1081) is not in mixedCase
Function IFutureVault.PERIOD_DURATION() (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#1925) is not in mixedCase
Function IFutureVault.PLATFORM_NAME() (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#1931) is not in mixedCase
Parameter IRegistry.setPTLogic(address)._PTLogic (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#2521) is not in mixedCase
Parameter IRegistry.setFYTLogic(address)._FYTLogic (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#2527) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions
INFO:Detectors:
Redundant expression "this (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#311)" inContextUpgradeable (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#299-315)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#redundant-statements
INFO:Detectors:
Variable MasterChef.getUserLpTokenIdList(address)._userLpTokenIds (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#1083) is too similar to MasterChef.userLpTokensIds (../../sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol#725)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#variable-names-too-similar
INFO:Slither:/bdata2/sc/dataset/mainnet/0xF5A16E84b014d7E2F91145eE6A30927aFC821FFe.sol analyzed (23 contracts with 85 detectors), 142 result(s) found
