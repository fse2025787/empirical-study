Compilation warnings/errors on /bdata2/sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol:
Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it "abstract" is sufficient.
   --> /bdata2/sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol:221:5:
    |
221 |     constructor () internal {
    |     ^ (Relevant source part starts here and spans across multiple lines).


INFO:Detectors:
DAOVault.migrateFunds() (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#1159-1185) uses arbitrary from in transferFrom: token.safeTransferFrom(address(strategy),pendingStrategy,_amount) (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#1172)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#arbitrary-from-in-transferfrom
INFO:Detectors:
DAOVault.deposit(uint256) (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#886-929) uses a dangerous strict equality:
	- totalSupply() == 0 (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#925-927)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dangerous-strict-equalities
INFO:Detectors:
Reentrancy in DAOVault.deposit(uint256) (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#886-929):
	External calls:
	- token.safeTransferFrom(msg.sender,address(this),_amount) (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#890)
	State variables written after the call(s):
	- _fees = _fees.add(_fee) (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#923)
	DAOVault._fees (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#787) can be used in cross function reentrancies:
	- DAOVault.deposit(uint256) (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#886-929)
	- DAOVault.invest() (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#978-988)
	- DAOVault.refund() (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#961-976)
	- DAOVault.withdraw(uint256) (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#937-952)
Reentrancy in DAOVault.invest() (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#978-988):
	External calls:
	- token.safeTransfer(treasuryWallet,_treasuryFee) (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#981)
	- token.safeTransfer(communityWallet,_fees.sub(_treasuryFee)) (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#982)
	State variables written after the call(s):
	- _fees = 0 (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#983)
	DAOVault._fees (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#787) can be used in cross function reentrancies:
	- DAOVault.deposit(uint256) (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#886-929)
	- DAOVault.invest() (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#978-988)
	- DAOVault.refund() (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#961-976)
	- DAOVault.withdraw(uint256) (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#937-952)
Reentrancy in DAOVault.migrateFunds() (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#1159-1185):
	External calls:
	- token.safeTransferFrom(address(strategy),pendingStrategy,_amount) (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#1172)
	State variables written after the call(s):
	- pendingStrategy = address(0) (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#1177)
	DAOVault.pendingStrategy (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#789) can be used in cross function reentrancies:
	- DAOVault.migrateFunds() (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#1159-1185)
	- DAOVault.pendingStrategy (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#789)
	- DAOVault.setPendingStrategy(address) (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#1135-1140)
	- strategy = IStrategy2(pendingStrategy) (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#1176)
	DAOVault.strategy (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#788) can be used in cross function reentrancies:
	- DAOVault.deposit(uint256) (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#886-929)
	- DAOVault.init(bytes32,address,address,address) (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#853-877)
	- DAOVault.invest() (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#978-988)
	- DAOVault.migrateFunds() (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#1159-1185)
	- DAOVault.refund() (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#961-976)
	- DAOVault.strategy (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#788)
	- DAOVault.withdraw(uint256) (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#937-952)
Reentrancy in DAOVault.migrateFunds() (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#1159-1185):
	External calls:
	- token.safeTransferFrom(address(strategy),pendingStrategy,_amount) (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#1172)
	- token.safeApprove(address(oldStrategy),0) (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#1180)
	- token.safeApprove(address(strategy),type()(uint256).max) (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#1181)
	State variables written after the call(s):
	- unlockTime = 0 (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#1183)
	DAOVault.unlockTime (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#792) can be used in cross function reentrancies:
	- DAOVault.migrateFunds() (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#1159-1185)
	- DAOVault.unlockMigrateFunds() (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#1147-1150)
	- DAOVault.unlockTime (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#792)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1
INFO:Detectors:
DAOVault.init(bytes32,address,address,address)._owner (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#857) shadows:
	- OwnableUpgradeable._owner (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#597) (state variable)
DAOVault.init(bytes32,address,address,address).decimals (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#868) shadows:
	- ERC20Upgradeable.decimals() (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#359-361) (function)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing
INFO:Detectors:
DAOVault.setAdmin(address) (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#1124-1126) should emit an event for: 
	- admin = _admin (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#1125) 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-access-control
INFO:Detectors:
DAOVaultFactory.constructor(address)._vaultTemplate (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#648) lacks a zero-check on :
		- vaultTemplate = _vaultTemplate (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#649)
DAOVault.init(bytes32,address,address,address)._owner (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#857) lacks a zero-check on :
		- admin = _owner (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#865)
DAOVault.setTreasuryWallet(address)._treasuryWallet (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#1104) lacks a zero-check on :
		- treasuryWallet = _treasuryWallet (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#1106)
DAOVault.setCommunityWallet(address)._communityWallet (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#1116) lacks a zero-check on :
		- communityWallet = _communityWallet (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#1118)
DAOVault.setAdmin(address)._admin (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#1124) lacks a zero-check on :
		- admin = _admin (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#1125)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation
INFO:Detectors:
Reentrancy in DAOVaultFactory.createVault(bytes32,address,address) (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#658-666):
	External calls:
	- vault.init(_vaultName,_token,_strategy,msg.sender) (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#664)
	State variables written after the call(s):
	- vaults.push(vault) (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#665)
Reentrancy in DAOVault.deposit(uint256) (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#886-929):
	External calls:
	- token.safeTransferFrom(msg.sender,address(this),_amount) (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#890)
	State variables written after the call(s):
	- _mint(msg.sender,_shares) (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#928)
		- _balances[account] = _balances[account].add(amount) (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#504)
	- _mint(msg.sender,_shares) (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#928)
		- _totalSupply = _totalSupply.add(amount) (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#503)
Reentrancy in DAOVault.migrateFunds() (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#1159-1185):
	External calls:
	- token.safeTransferFrom(address(strategy),pendingStrategy,_amount) (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#1172)
	State variables written after the call(s):
	- canSetPendingStrategy = true (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#1178)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2
INFO:Detectors:
Reentrancy in DAOVault.deposit(uint256) (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#886-929):
	External calls:
	- token.safeTransferFrom(msg.sender,address(this),_amount) (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#890)
	Event emitted after the call(s):
	- Transfer(address(0),account,amount) (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#505)
		- _mint(msg.sender,_shares) (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#928)
Reentrancy in DAOVault.migrateFunds() (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#1159-1185):
	External calls:
	- token.safeTransferFrom(address(strategy),pendingStrategy,_amount) (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#1172)
	- token.safeApprove(address(oldStrategy),0) (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#1180)
	- token.safeApprove(address(strategy),type()(uint256).max) (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#1181)
	Event emitted after the call(s):
	- MigrateFunds(oldStrategy,address(strategy),_amount) (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#1184)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3
INFO:Detectors:
DAOVault.migrateFunds() (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#1159-1185) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(unlockTime <= block.timestamp && unlockTime.add(86400) >= block.timestamp,Function locked) (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#1160-1164)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp
INFO:Detectors:
Clones.clone(address) (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#692-702) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#694-700)
Clones.cloneDeterministic(address,bytes32) (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#711-721) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#713-719)
Clones.predictDeterministicAddress(address,bytes32,address) (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#726-738) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#728-737)
AddressUpgradeable.isContract(address) (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#1289-1298) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#1296)
AddressUpgradeable._verifyCallResult(bool,bytes,string) (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#1410-1427) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#1419-1422)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage
INFO:Detectors:
Different versions of Solidity are used:
	- Version used: ['0.7.6', '>=0.4.24<0.8.0', '>=0.6.0<0.8.0', '>=0.6.2<0.8.0']
	- 0.7.6 (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#581)
	- 0.7.6 (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#636)
	- 0.7.6 (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#749)
	- 0.7.6 (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#1646)
	- >=0.4.24<0.8.0 (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#7)
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#62)
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#87)
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#165)
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#198)
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#267)
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#671)
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#1190)
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#1432)
	- >=0.6.2<0.8.0 (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#1266)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#different-pragma-directives-are-used
INFO:Detectors:
AddressUpgradeable.functionCall(address,bytes) (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#1342-1344) is never used and should be removed
AddressUpgradeable.functionCallWithValue(address,bytes,uint256) (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#1367-1369) is never used and should be removed
AddressUpgradeable.functionStaticCall(address,bytes) (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#1392-1394) is never used and should be removed
AddressUpgradeable.functionStaticCall(address,bytes,string) (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#1402-1408) is never used and should be removed
AddressUpgradeable.sendValue(address,uint256) (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#1316-1322) is never used and should be removed
Clones.cloneDeterministic(address,bytes32) (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#711-721) is never used and should be removed
Clones.predictDeterministicAddress(address,bytes32) (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#743-745) is never used and should be removed
Clones.predictDeterministicAddress(address,bytes32,address) (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#726-738) is never used and should be removed
Context._msgData() (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#79-82) is never used and should be removed
ContextUpgradeable.__Context_init() (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#179-181) is never used and should be removed
ContextUpgradeable._msgData() (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#189-192) is never used and should be removed
ERC20Upgradeable._setupDecimals(uint8) (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#557-559) is never used and should be removed
SafeERC20Upgradeable.safeDecreaseAllowance(IERC20Upgradeable,address,uint256) (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#1240-1243) is never used and should be removed
SafeERC20Upgradeable.safeIncreaseAllowance(IERC20Upgradeable,address,uint256) (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#1235-1238) is never used and should be removed
SafeMathUpgradeable.div(uint256,uint256,string) (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#1619-1622) is never used and should be removed
SafeMathUpgradeable.mod(uint256,uint256) (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#1581-1584) is never used and should be removed
SafeMathUpgradeable.mod(uint256,uint256,string) (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#1639-1642) is never used and should be removed
SafeMathUpgradeable.tryAdd(uint256,uint256) (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#1453-1457) is never used and should be removed
SafeMathUpgradeable.tryDiv(uint256,uint256) (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#1489-1492) is never used and should be removed
SafeMathUpgradeable.tryMod(uint256,uint256) (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#1499-1502) is never used and should be removed
SafeMathUpgradeable.tryMul(uint256,uint256) (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#1474-1482) is never used and should be removed
SafeMathUpgradeable.trySub(uint256,uint256) (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#1464-1467) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code
INFO:Detectors:
Pragma version>=0.4.24<0.8.0 (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#7) is too complex
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#62) is too complex
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#87) is too complex
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#165) is too complex
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#198) is too complex
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#267) is too complex
Pragma version0.7.6 (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#581) allows old versions
Pragma version0.7.6 (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#636) allows old versions
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#671) is too complex
Pragma version0.7.6 (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#749) allows old versions
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#1190) is too complex
Pragma version>=0.6.2<0.8.0 (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#1266) is too complex
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#1432) is too complex
Pragma version0.7.6 (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#1646) allows old versions
solc-0.7.6 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity
INFO:Detectors:
Low level call in AddressUpgradeable.sendValue(address,uint256) (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#1316-1322):
	- (success) = recipient.call{value: amount}() (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#1320)
Low level call in AddressUpgradeable.functionCallWithValue(address,bytes,uint256,string) (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#1377-1384):
	- (success,returndata) = target.call{value: value}(data) (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#1382)
Low level call in AddressUpgradeable.functionStaticCall(address,bytes,string) (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#1402-1408):
	- (success,returndata) = target.staticcall(data) (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#1406)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls
INFO:Detectors:
Function ContextUpgradeable.__Context_init() (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#179-181) is not in mixedCase
Function ContextUpgradeable.__Context_init_unchained() (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#183-184) is not in mixedCase
Variable ContextUpgradeable.__gap (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#193) is not in mixedCase
Function ERC20Upgradeable.__ERC20_init(string,string) (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#320-323) is not in mixedCase
Function ERC20Upgradeable.__ERC20_init_unchained(string,string) (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#325-329) is not in mixedCase
Variable ERC20Upgradeable.__gap (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#576) is not in mixedCase
Function OwnableUpgradeable.__Ownable_init(address) (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#604-607) is not in mixedCase
Variable OwnableUpgradeable.__gap (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#633) is not in mixedCase
Parameter DAOVaultFactory.createVault(bytes32,address,address)._vaultName (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#659) is not in mixedCase
Parameter DAOVaultFactory.createVault(bytes32,address,address)._token (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#660) is not in mixedCase
Parameter DAOVaultFactory.createVault(bytes32,address,address)._strategy (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#661) is not in mixedCase
Parameter DAOVault.init(bytes32,address,address,address)._vaultName (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#854) is not in mixedCase
Parameter DAOVault.init(bytes32,address,address,address)._token (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#855) is not in mixedCase
Parameter DAOVault.init(bytes32,address,address,address)._strategy (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#856) is not in mixedCase
Parameter DAOVault.init(bytes32,address,address,address)._owner (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#857) is not in mixedCase
Parameter DAOVault.deposit(uint256)._amount (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#886) is not in mixedCase
Parameter DAOVault.withdraw(uint256)._shares (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#937) is not in mixedCase
Parameter DAOVault.setNetworkFeeTier2(uint256[])._networkFeeTier2 (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#999) is not in mixedCase
Parameter DAOVault.setCustomNetworkFeeTier(uint256)._customNetworkFeeTier (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#1026) is not in mixedCase
Parameter DAOVault.setNetworkFeePercentage(uint256[])._networkFeePercentage (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#1051) is not in mixedCase
Parameter DAOVault.setCustomNetworkFeePercentage(uint256)._percentage (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#1081) is not in mixedCase
Parameter DAOVault.setTreasuryWallet(address)._treasuryWallet (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#1104) is not in mixedCase
Parameter DAOVault.setCommunityWallet(address)._communityWallet (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#1116) is not in mixedCase
Parameter DAOVault.setAdmin(address)._admin (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#1124) is not in mixedCase
Parameter DAOVault.setPendingStrategy(address)._pendingStrategy (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#1135) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions
INFO:Detectors:
Redundant expression "this (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#80)" inContext (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#74-83)
Redundant expression "this (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#190)" inContextUpgradeable (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#178-194)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#redundant-statements
INFO:Detectors:
Clones.clone(address) (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#692-702) uses literals with too many digits:
	- mstore(uint256,uint256)(ptr_clone_asm_0,0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000) (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#696)
Clones.clone(address) (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#692-702) uses literals with too many digits:
	- mstore(uint256,uint256)(ptr_clone_asm_0 + 0x28,0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000) (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#698)
Clones.cloneDeterministic(address,bytes32) (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#711-721) uses literals with too many digits:
	- mstore(uint256,uint256)(ptr_cloneDeterministic_asm_0,0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000) (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#715)
Clones.cloneDeterministic(address,bytes32) (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#711-721) uses literals with too many digits:
	- mstore(uint256,uint256)(ptr_cloneDeterministic_asm_0 + 0x28,0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000) (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#717)
Clones.predictDeterministicAddress(address,bytes32,address) (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#726-738) uses literals with too many digits:
	- mstore(uint256,uint256)(ptr_predictDeterministicAddress_asm_0,0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000) (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#730)
Clones.predictDeterministicAddress(address,bytes32,address) (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#726-738) uses literals with too many digits:
	- mstore(uint256,uint256)(ptr_predictDeterministicAddress_asm_0 + 0x28,0x5af43d82803e903d91602b57fd5bf3ff00000000000000000000000000000000) (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#732)
DAOVault.init(bytes32,address,address,address) (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#853-877) uses literals with too many digits:
	- networkFeeTier2 = (50000 * 10 ** decimals + 1,100000 * 10 ** decimals) (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#869)
DAOVault.init(bytes32,address,address,address) (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#853-877) uses literals with too many digits:
	- customNetworkFeeTier = 1000000 * 10 ** decimals (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#870)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits
INFO:Detectors:
DAOVaultFactory.vaultTemplate (../../sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol#646) should be immutable 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-immutable
INFO:Slither:/bdata2/sc/dataset/mainnet/0xFA47af8673BB5bee55ddcB11593ADa02271844f5.sol analyzed (14 contracts with 85 detectors), 102 result(s) found
