Compilation warnings/errors on /bdata2/sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol:
Warning: Contract code size exceeds 24576 bytes (a limit introduced in Spurious Dragon). This contract may not be deployable on mainnet. Consider enabling the optimizer (with a low "runs" value!), turning off revert strings, or using libraries.
    --> /bdata2/sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol:1133:1:
     |
1133 | contract SolvConvertibleMarket is ISolvICMarket, PriceManager {
     | ^ (Relevant source part starts here and spans across multiple lines).


INFO:Detectors:
VNFTTransferHelper.doTransferIn(address,address,uint256) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#865-872) uses arbitrary from in transferFrom: token.transferFrom(from,address(this),tokenId) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#871)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#arbitrary-from-in-transferfrom
INFO:Detectors:
PriceManager.price(PriceManager.PriceType,uint24) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#51-82) performs a multiplication on the result of a division:
	- lastPrice = price_.highest - ((block.timestamp - price_.startTime) / price_.interval) * ((price_.interval * (price_.highest - price_.lowest)) / price_.duration) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#69-72)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#divide-before-multiply
INFO:Detectors:
ERC721Interface (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#846-852) has incorrect ERC20 function interface:ERC721Interface.transferFrom(address,address,uint256) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#847-851)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-erc20-interface
INFO:Detectors:
SolvConvertibleMarket._buy(address,SolvConvertibleMarket.Sale,uint256,uint128,uint128,uint128) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#1574-1678) uses a dangerous strict equality:
	- units_ == IVNFT(sale_.icToken).unitsInToken(sale_.tokenId) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#1620)
SolvConvertibleMarket._buy(address,SolvConvertibleMarket.Sale,uint256,uint128,uint128,uint128) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#1574-1678) uses a dangerous strict equality:
	- sale_.units == 0 (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#1668)
SolvConvertibleMarket.buyByAmount(uint24,uint256) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#1488-1528) uses a dangerous strict equality:
	- require(bool,string)(err == 0,Solver: not allowed) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#1524)
SolvConvertibleMarket.buyByUnits(uint24,uint128) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#1530-1566) uses a dangerous strict equality:
	- require(bool,string)(err == 0,Solver: not allowed) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#1562)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dangerous-strict-equalities
INFO:Detectors:
Reentrancy in SolvConvertibleMarket._setSolver(ISolver) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#1900-1906):
	External calls:
	- require(bool,string)(newSolver_.isSolver(),invalid solver) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#1902)
	State variables written after the call(s):
	- solver = newSolver_ (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#1903)
	SolvConvertibleMarket.solver (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#1207) can be used in cross function reentrancies:
	- SolvConvertibleMarket._setSolver(ISolver) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#1900-1906)
	- SolvConvertibleMarket.solver (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#1207)
Reentrancy in SolvConvertibleMarket.initialize(ISolver) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#1249-1257):
	External calls:
	- _setSolver(solver_) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#1254)
		- require(bool,string)(newSolver_.isSolver(),invalid solver) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#1902)
	State variables written after the call(s):
	- initialized = true (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#1255)
	SolvConvertibleMarket.initialized (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#1212) can be used in cross function reentrancies:
	- SolvConvertibleMarket.initialize(ISolver) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#1249-1257)
	- SolvConvertibleMarket.initialized (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#1212)
Reentrancy in SolvConvertibleMarket.remove(uint24) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#1688-1715):
	External calls:
	- err = solver.removeAllow(sale.icToken,sale.tokenId,sale.saleId,sale.seller) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#1693-1698)
	- VNFTTransferHelper.doTransferOut(sale.icToken,sale.seller,sale.tokenId) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#1701-1705)
	State variables written after the call(s):
	- delete sales[saleId_] (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#1714)
	SolvConvertibleMarket.sales (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#1194) can be used in cross function reentrancies:
	- SolvConvertibleMarket.getPrice(uint24) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#1742-1750)
	- SolvConvertibleMarket.sales (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#1194)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1
INFO:Detectors:
SolvConvertibleMarket.publishDecliningPrice(address,uint24,address,uint128,uint128,uint32,bool,uint128,uint128,uint32,uint32).vars (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#1349) is a local variable never initialized
ERC20TransferHelper.doTransferOut(address,address,uint256).success_scope_0 (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#797) is a local variable never initialized
SolvConvertibleMarket._buy(address,SolvConvertibleMarket.Sale,uint256,uint128,uint128,uint128).vars (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#1601) is a local variable never initialized
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#uninitialized-local-variables
INFO:Detectors:
VNFTTransferHelper.doTransferIn(address,address,uint256,uint256) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#883-891) ignores return value by token.safeTransferFrom(from,address(this),tokenId,units,) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#890)
VNFTTransferHelper.doTransferOut(address,address,uint256,uint256) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#893-901) ignores return value by token.safeTransferFrom(address(this),to,tokenId,units,) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#900)
SolvConvertibleMarket._publish(address,address,uint24,address,PriceManager.PriceType,uint128,uint128,uint32,bool) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#1418-1486) ignores return value by _voucherSales[voucher_].add(saleId) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#1462)
SolvConvertibleMarket._buy(address,SolvConvertibleMarket.Sale,uint256,uint128,uint128,uint128) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#1574-1678) ignores return value by ERC20TransferHelper.doTransferIn(sale_.currency,buyer_,vars.transferInAmount) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#1614-1618)
SolvConvertibleMarket._addMarket(address,uint128,uint8,uint8,uint128,uint16) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#1780-1805) ignores return value by _vouchers.add(voucher_) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#1795)
SolvConvertibleMarket._removeMarket(address) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#1807-1811) ignores return value by _vouchers.remove(voucher_) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#1808)
SolvConvertibleMarket._setCurrency(address,bool) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#1813-1816) ignores return value by _currencies.add(currency_) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#1814)
SolvConvertibleMarket._addAllowAddress(address,address[],bool) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#1830-1849) ignores return value by set.remove(set.at(0)) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#1842)
SolvConvertibleMarket._addAllowAddress(address,address[],bool) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#1830-1849) ignores return value by set.add(addresses_[i]) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#1847)
SolvConvertibleMarket._removeAllowAddress(address,address[]) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#1851-1862) ignores return value by set.remove(addresses_[i]) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#1860)
SolvConvertibleMarket.setAllowAddressManager(address,address[],bool) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#1872-1890) ignores return value by set.remove(set.at(0)) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#1883)
SolvConvertibleMarket.setAllowAddressManager(address,address[],bool) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#1872-1890) ignores return value by set.add(managers_[i]) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#1888)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return
INFO:Detectors:
SolvConvertibleMarket.buyByAmount(uint24,uint256).price (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#1499) shadows:
	- PriceManager.price(PriceManager.PriceType,uint24) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#51-82) (function)
SolvConvertibleMarket.buyByUnits(uint24,uint128).price (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#1544) shadows:
	- PriceManager.price(PriceManager.PriceType,uint24) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#51-82) (function)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing
INFO:Detectors:
SolvConvertibleMarket.initialize(ISolver) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#1249-1257) should emit an event for: 
	- admin = msg.sender (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#1251) 
	- admin = msg.sender (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#1251) 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-access-control
INFO:Detectors:
SolvConvertibleMarket._setRepoFeeRate(uint16) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#1818-1820) should emit an event for: 
	- repoFeeRate = newRepoFeeRate_ (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#1819) 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-arithmetic
INFO:Detectors:
SolvConvertibleMarket._setPendingAdmin(address).newPendingAdmin (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#1908) lacks a zero-check on :
		- pendingAdmin = newPendingAdmin (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#1915)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation
INFO:Detectors:
Reentrancy in SolvConvertibleMarket._buy(address,SolvConvertibleMarket.Sale,uint256,uint128,uint128,uint128) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#1574-1678):
	External calls:
	- ERC20TransferHelper.doTransferIn(sale_.currency,buyer_,vars.transferInAmount) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#1614-1618)
	- VNFTTransferHelper.doTransferOut(sale_.icToken,buyer_,sale_.tokenId) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#1621-1625)
	- VNFTTransferHelper.doTransferOut(sale_.icToken,buyer_,sale_.tokenId,units_) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#1627-1632)
	- ERC20TransferHelper.doTransferOut(sale_.currency,address(sale_.seller),vars.transferOutAmount) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#1634-1638)
	State variables written after the call(s):
	- Traded(buyer_,sale_.saleId,sale_.icToken,sale_.tokenId,_generateNextTradeId(),uint32(block.timestamp),sale_.currency,uint8(sale_.priceType),price_,units_,amount_,uint8(vars.feePayType),fee_) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#1640-1654)
		- nextTradeId ++ (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#1777)
Reentrancy in SolvConvertibleMarket._buy(address,SolvConvertibleMarket.Sale,uint256,uint128,uint128,uint128) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#1574-1678):
	External calls:
	- ERC20TransferHelper.doTransferIn(sale_.currency,buyer_,vars.transferInAmount) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#1614-1618)
	- VNFTTransferHelper.doTransferOut(sale_.icToken,buyer_,sale_.tokenId) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#1621-1625)
	- VNFTTransferHelper.doTransferOut(sale_.icToken,buyer_,sale_.tokenId,units_) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#1627-1632)
	- ERC20TransferHelper.doTransferOut(sale_.currency,address(sale_.seller),vars.transferOutAmount) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#1634-1638)
	- solver.buyVerify(sale_.icToken,sale_.tokenId,sale_.saleId,buyer_,sale_.seller,amount_,units_,price_,fee_) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#1656-1666)
	State variables written after the call(s):
	- delete sales[sale_.saleId] (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#1676)
Reentrancy in SolvConvertibleMarket._publish(address,address,uint24,address,PriceManager.PriceType,uint128,uint128,uint32,bool) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#1418-1486):
	External calls:
	- VNFTTransferHelper.doTransferIn(voucher_,seller_,tokenId_) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#1441)
	State variables written after the call(s):
	- saleId = _generateNextSaleId() (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#1443)
		- nextSaleId ++ (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#1773)
	- sales[saleId] = Sale(saleId,msg.sender,tokenId_,uint128(units),uint128(units),startTime_,min_,max_,voucher_,currency_,priceType_,useAllowList_,true) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#1446-1460)
Reentrancy in SolvConvertibleMarket.initialize(ISolver) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#1249-1257):
	External calls:
	- _setSolver(solver_) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#1254)
		- require(bool,string)(newSolver_.isSolver(),invalid solver) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#1902)
	State variables written after the call(s):
	- _notEntered = true (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#1256)
Reentrancy in SolvConvertibleMarket.publishDecliningPrice(address,uint24,address,uint128,uint128,uint32,bool,uint128,uint128,uint32,uint32) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#1336-1416):
	External calls:
	- err = solver.publishDecliningPriceAllowed(vars.icToken,vars.tokenId,vars.seller,vars.currency,vars.min,vars.max,vars.startTime,vars.useAllowList,vars.highest,vars.lowest,vars.duration,vars.interval) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#1367-1380)
	- saleId = _publish(vars.seller,vars.icToken,vars.tokenId,vars.currency,priceType,vars.min,vars.max,vars.startTime,vars.useAllowList) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#1386-1396)
		- token.transferFrom(from,address(this),tokenId) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#871)
		- VNFTTransferHelper.doTransferIn(voucher_,seller_,tokenId_) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#1441)
		- solver.publishVerify(sale.icToken,sale.tokenId,sale.seller,sale.currency,sale.saleId,sale.units) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#1476-1483)
	State variables written after the call(s):
	- PriceManager.setDecliningPrice(saleId,vars.startTime,vars.highest,vars.lowest,vars.duration,vars.interval) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#1398-1405)
		- decliningPrices[saleId_].startTime = startTime_ (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#96)
		- decliningPrices[saleId_].highest = highest_ (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#97)
		- decliningPrices[saleId_].lowest = lowest_ (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#98)
		- decliningPrices[saleId_].duration = duration_ (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#99)
		- decliningPrices[saleId_].interval = interval_ (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#100)
Reentrancy in SolvConvertibleMarket.publishFixedPrice(address,uint24,address,uint128,uint128,uint32,bool,uint128) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#1273-1319):
	External calls:
	- err = solver.publishFixedPriceAllowed(voucher_,tokenId_,seller,currency_,min_,max_,startTime_,useAllowList_,price_) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#1285-1295)
	- saleId = _publish(seller,voucher_,tokenId_,currency_,priceType,min_,max_,startTime_,useAllowList_) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#1299-1309)
		- token.transferFrom(from,address(this),tokenId) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#871)
		- VNFTTransferHelper.doTransferIn(voucher_,seller_,tokenId_) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#1441)
		- solver.publishVerify(sale.icToken,sale.tokenId,sale.seller,sale.currency,sale.saleId,sale.units) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#1476-1483)
	State variables written after the call(s):
	- PriceManager.setFixedPrice(saleId,price_) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#1310)
		- fixedPrices[saleId_] = price_ (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#85)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2
INFO:Detectors:
Reentrancy in SolvConvertibleMarket._setSolver(ISolver) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#1900-1906):
	External calls:
	- require(bool,string)(newSolver_.isSolver(),invalid solver) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#1902)
	Event emitted after the call(s):
	- NewSolver(oldSolver,newSolver_) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#1905)
Reentrancy in SolvConvertibleMarket._withdrawFee(address,uint256) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#1822-1828):
	External calls:
	- ERC20TransferHelper.doTransferOut(currency_,admin,reduceAmount_) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#1826)
	Event emitted after the call(s):
	- WithdrawFee(currency_,reduceAmount_) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#1827)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3
INFO:Detectors:
PriceManager.price(PriceManager.PriceType,uint24) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#51-82) uses timestamp for comparisons
	Dangerous comparisons:
	- block.timestamp >= price_.startTime + price_.duration (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#62)
	- block.timestamp <= price_.startTime (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#65)
	- require(bool,string)(price256 <= uint128(- 1),price: exceeds uint128 max) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#76)
	- lastPrice < price_.lowest (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#73-75)
SolvConvertibleMarket.buyByAmount(uint24,uint256) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#1488-1528) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(units256 <= uint128(- 1),exceeds uint128 max) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#1511)
	- require(bool,string)(err == 0,Solver: not allowed) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#1524)
SolvConvertibleMarket.buyByUnits(uint24,uint128) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#1530-1566) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(err == 0,Solver: not allowed) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#1562)
SolvConvertibleMarket._buy(address,SolvConvertibleMarket.Sale,uint256,uint128,uint128,uint128) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#1574-1678) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(sale_.isValid,invalid saleId) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#1582)
	- require(bool,string)(block.timestamp >= sale_.startTime,not yet on sale) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#1583)
	- require(bool,string)(units_ >= sale_.min,min units not met) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#1585)
	- require(bool,string)(purchased <= sale_.max,exceeds purchase limit) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#1589)
	- require(bool,string)(_allowAddresses[sale_.icToken].contains(buyer_),not in allow list) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#1594-1597)
	- units_ == IVNFT(sale_.icToken).unitsInToken(sale_.tokenId) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#1620)
	- sale_.units == 0 (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#1668)
SolvConvertibleMarket._getFee(address,address,uint256) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#1717-1740) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(fee <= uint128(- 1),Fee: exceeds uint128 max) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#1724)
	- require(bool,string)(fee_scope_0 <= uint128(- 1),Fee: exceeds uint128 max) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#1735)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp
INFO:Detectors:
SolvConvertibleMarket.initialize(ISolver) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#1249-1257) compares to a boolean constant:
	-require(bool,string)(initialized == false,already initialized) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#1250)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#boolean-equality
INFO:Detectors:
Different versions of Solidity are used:
	- Version used: ['0.7.6', '>=0.6.0<0.8.0']
	- 0.7.6 (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#6)
	- 0.7.6 (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#106)
	- 0.7.6 (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#728)
	- 0.7.6 (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#829)
	- 0.7.6 (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#844)
	- 0.7.6 (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#1121)
	- 0.7.6 (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#1944)
	- 0.7.6 (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#2120)
	- 0.7.6 (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#2128)
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#215)
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#430)
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#906)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#different-pragma-directives-are-used
INFO:Detectors:
ERC20TransferHelper.getCashPrior(address) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#811-819) is never used and should be removed
ERC20TransferHelper.sub(uint256,uint256) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#821-824) is never used and should be removed
EnumerableSetUpgradeable.add(EnumerableSetUpgradeable.Bytes32Set,bytes32) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#574-576) is never used and should be removed
EnumerableSetUpgradeable.at(EnumerableSetUpgradeable.Bytes32Set,uint256) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#612-614) is never used and should be removed
EnumerableSetUpgradeable.contains(EnumerableSetUpgradeable.Bytes32Set,bytes32) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#591-593) is never used and should be removed
EnumerableSetUpgradeable.contains(EnumerableSetUpgradeable.UintSet,uint256) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#700-702) is never used and should be removed
EnumerableSetUpgradeable.length(EnumerableSetUpgradeable.Bytes32Set) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#598-600) is never used and should be removed
EnumerableSetUpgradeable.remove(EnumerableSetUpgradeable.Bytes32Set,bytes32) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#584-586) is never used and should be removed
EnumerableSetUpgradeable.remove(EnumerableSetUpgradeable.UintSet,uint256) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#693-695) is never used and should be removed
SafeMathUpgradeable.div(uint256,uint256,string) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#402-405) is never used and should be removed
SafeMathUpgradeable.mod(uint256,uint256) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#364-367) is never used and should be removed
SafeMathUpgradeable.mod(uint256,uint256,string) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#422-425) is never used and should be removed
SafeMathUpgradeable.sub(uint256,uint256) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#313-316) is never used and should be removed
SafeMathUpgradeable.tryAdd(uint256,uint256) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#236-240) is never used and should be removed
SafeMathUpgradeable.tryDiv(uint256,uint256) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#272-275) is never used and should be removed
SafeMathUpgradeable.tryMod(uint256,uint256) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#282-285) is never used and should be removed
SafeMathUpgradeable.tryMul(uint256,uint256) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#257-265) is never used and should be removed
SafeMathUpgradeable.trySub(uint256,uint256) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#247-250) is never used and should be removed
SafeMathUpgradeable128.div(uint128,uint128) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#1038-1041) is never used and should be removed
SafeMathUpgradeable128.div(uint128,uint128,string) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#1093-1096) is never used and should be removed
SafeMathUpgradeable128.mod(uint128,uint128) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#1055-1058) is never used and should be removed
SafeMathUpgradeable128.mod(uint128,uint128,string) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#1113-1116) is never used and should be removed
SafeMathUpgradeable128.mul(uint128,uint128) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#1019-1024) is never used and should be removed
SafeMathUpgradeable128.sub(uint128,uint128) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#1004-1007) is never used and should be removed
SafeMathUpgradeable128.tryAdd(uint128,uint128) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#927-931) is never used and should be removed
SafeMathUpgradeable128.tryDiv(uint128,uint128) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#963-966) is never used and should be removed
SafeMathUpgradeable128.tryMod(uint128,uint128) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#973-976) is never used and should be removed
SafeMathUpgradeable128.tryMul(uint128,uint128) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#948-956) is never used and should be removed
SafeMathUpgradeable128.trySub(uint128,uint128) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#938-941) is never used and should be removed
VNFTTransferHelper.doTransferIn(address,address,uint256,uint256) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#883-891) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code
INFO:Detectors:
Pragma version0.7.6 (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#6) allows old versions
Pragma version0.7.6 (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#106) allows old versions
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#215) is too complex
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#430) is too complex
Pragma version0.7.6 (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#728) allows old versions
Pragma version0.7.6 (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#829) allows old versions
Pragma version0.7.6 (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#844) allows old versions
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#906) is too complex
Pragma version0.7.6 (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#1121) allows old versions
Pragma version0.7.6 (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#1944) allows old versions
Pragma version0.7.6 (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#2120) allows old versions
Pragma version0.7.6 (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#2128) allows old versions
solc-0.7.6 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity
INFO:Detectors:
Low level call in ERC20TransferHelper.doTransferIn(address,address,uint256) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#747-786):
	- (success,data) = underlying.call(abi.encodeWithSelector(ERC20Interface.transferFrom.selector,from,address(this),amount)) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#763-770)
Low level call in ERC20TransferHelper.doTransferOut(address,address,uint256) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#788-809):
	- (success) = to.call{value: amount}(new bytes(0)) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#794)
	- (success,data) = underlying.call(abi.encodeWithSelector(ERC20Interface.transfer.selector,to,amount)) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#797-803)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls
INFO:Detectors:
Function SolvConvertibleMarket._addMarket(address,uint128,uint8,uint8,uint128,uint16) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#1780-1805) is not in mixedCase
Function SolvConvertibleMarket._removeMarket(address) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#1807-1811) is not in mixedCase
Function SolvConvertibleMarket._setCurrency(address,bool) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#1813-1816) is not in mixedCase
Function SolvConvertibleMarket._setRepoFeeRate(uint16) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#1818-1820) is not in mixedCase
Function SolvConvertibleMarket._withdrawFee(address,uint256) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#1822-1828) is not in mixedCase
Function SolvConvertibleMarket._addAllowAddress(address,address[],bool) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#1830-1849) is not in mixedCase
Function SolvConvertibleMarket._removeAllowAddress(address,address[]) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#1851-1862) is not in mixedCase
Function SolvConvertibleMarket._setSolver(ISolver) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#1900-1906) is not in mixedCase
Function SolvConvertibleMarket._setPendingAdmin(address) (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#1908-1919) is not in mixedCase
Function SolvConvertibleMarket._acceptAdmin() (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#1921-1939) is not in mixedCase
Variable SolvConvertibleMarket._currencies (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#1199) is not in mixedCase
Variable SolvConvertibleMarket._vouchers (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#1200) is not in mixedCase
Variable SolvConvertibleMarket._voucherSales (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#1203) is not in mixedCase
Variable SolvConvertibleMarket._allowAddresses (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#1204-1205) is not in mixedCase
Variable SolvConvertibleMarket._notEntered (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#1214) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions
INFO:Detectors:
Variable SolvConvertibleMarket._currencies (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#1199) is too similar to SolvConvertibleMarket.currencies().currencies_ (../../sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol#1259)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#variable-names-too-similar
INFO:Slither:/bdata2/sc/dataset/mainnet/0xd733040963d570DD6c5B4B42b66ee4a9E11b7684.sol analyzed (16 contracts with 85 detectors), 106 result(s) found
