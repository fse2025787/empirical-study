INFO:Detectors:
UniswapV2OracleLibrary.currentBlockTimestamp() (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#1044-1046) uses a weak PRNG: "uint32(uint256(block.timestamp) % (2 ** 32)) (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#1045)" 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#weak-PRNG
INFO:Detectors:
FullMath.fullDiv(uint256,uint256,uint256) (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#1083-1102) performs a multiplication on the result of a division:
	- d /= pow2 (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#1089)
	- r *= 2 - d * r (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#1093)
FullMath.fullDiv(uint256,uint256,uint256) (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#1083-1102) performs a multiplication on the result of a division:
	- d /= pow2 (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#1089)
	- r *= 2 - d * r (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#1094)
FullMath.fullDiv(uint256,uint256,uint256) (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#1083-1102) performs a multiplication on the result of a division:
	- d /= pow2 (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#1089)
	- r *= 2 - d * r (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#1095)
FullMath.fullDiv(uint256,uint256,uint256) (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#1083-1102) performs a multiplication on the result of a division:
	- d /= pow2 (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#1089)
	- r *= 2 - d * r (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#1096)
FullMath.fullDiv(uint256,uint256,uint256) (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#1083-1102) performs a multiplication on the result of a division:
	- d /= pow2 (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#1089)
	- r *= 2 - d * r (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#1097)
FullMath.fullDiv(uint256,uint256,uint256) (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#1083-1102) performs a multiplication on the result of a division:
	- d /= pow2 (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#1089)
	- r *= 2 - d * r (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#1098)
FullMath.fullDiv(uint256,uint256,uint256) (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#1083-1102) performs a multiplication on the result of a division:
	- d /= pow2 (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#1089)
	- r *= 2 - d * r (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#1099)
FullMath.fullDiv(uint256,uint256,uint256) (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#1083-1102) performs a multiplication on the result of a division:
	- d /= pow2 (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#1089)
	- r *= 2 - d * r (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#1100)
FullMath.fullDiv(uint256,uint256,uint256) (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#1083-1102) performs a multiplication on the result of a division:
	- l /= pow2 (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#1090)
	- l * r (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#1101)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#divide-before-multiply
INFO:Detectors:
UniswapV2OracleLibrary.currentCumulativePrices(address) (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#1049-1067) uses timestamp for comparisons
	Dangerous comparisons:
	- blockTimestampLast != blockTimestamp (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#1058)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp
INFO:Detectors:
ECDSAUpgradeable.recover(bytes32,bytes) (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#426-447) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#440-444)
AddressUpgradeable.isContract(address) (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#1287-1296) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#1294)
AddressUpgradeable._verifyCallResult(bool,bytes,string) (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#1408-1425) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#1417-1420)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage
INFO:Detectors:
Different versions of Solidity are used:
	- Version used: ['0.7.6', '>=0.4.0', '>=0.4.24<0.8.0', '>=0.5.0', '>=0.6.0<0.8.0', '>=0.6.2<0.8.0']
	- 0.7.6 (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#94)
	- 0.7.6 (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#188)
	- 0.7.6 (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#982)
	- 0.7.6 (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#1034)
	- >=0.4.0 (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#782)
	- >=0.4.0 (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#1071)
	- >=0.4.0 (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#1124)
	- >=0.4.24<0.8.0 (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#7)
	- >=0.5.0 (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#928)
	- >=0.5.0 (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#1177)
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#62)
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#403)
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#490)
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#705)
	- >=0.6.2<0.8.0 (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#1264)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#different-pragma-directives-are-used
INFO:Detectors:
AddressUpgradeable._verifyCallResult(bool,bytes,string) (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#1408-1425) is never used and should be removed
AddressUpgradeable.functionCall(address,bytes) (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#1340-1342) is never used and should be removed
AddressUpgradeable.functionCall(address,bytes,string) (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#1350-1352) is never used and should be removed
AddressUpgradeable.functionCallWithValue(address,bytes,uint256) (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#1365-1367) is never used and should be removed
AddressUpgradeable.functionCallWithValue(address,bytes,uint256,string) (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#1375-1382) is never used and should be removed
AddressUpgradeable.functionStaticCall(address,bytes) (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#1390-1392) is never used and should be removed
AddressUpgradeable.functionStaticCall(address,bytes,string) (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#1400-1406) is never used and should be removed
AddressUpgradeable.sendValue(address,uint256) (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#1314-1320) is never used and should be removed
Babylonian.sqrt(uint256) (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#1131-1173) is never used and should be removed
BitMath.leastSignificantBit(uint256) (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#1219-1259) is never used and should be removed
BitMath.mostSignificantBit(uint256) (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#1182-1214) is never used and should be removed
ContextUpgradeable.__Context_init() (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#76-78) is never used and should be removed
ContextUpgradeable._msgData() (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#86-89) is never used and should be removed
ECDSAUpgradeable.recover(bytes32,bytes) (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#426-447) is never used and should be removed
ECDSAUpgradeable.recover(bytes32,uint8,bytes32,bytes32) (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#453-471) is never used and should be removed
ECDSAUpgradeable.toEthSignedMessageHash(bytes32) (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#481-485) is never used and should be removed
FixedPoint.decode(FixedPoint.uq112x112) (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#818-820) is never used and should be removed
FixedPoint.divuq(FixedPoint.uq112x112,FixedPoint.uq112x112) (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#873-887) is never used and should be removed
FixedPoint.encode(uint112) (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#808-810) is never used and should be removed
FixedPoint.encode144(uint144) (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#813-815) is never used and should be removed
FixedPoint.muli(FixedPoint.uq112x112,int256) (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#837-841) is never used and should be removed
FixedPoint.muluq(FixedPoint.uq112x112,FixedPoint.uq112x112) (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#845-870) is never used and should be removed
FixedPoint.reciprocal(FixedPoint.uq112x112) (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#909-913) is never used and should be removed
FixedPoint.sqrt(FixedPoint.uq112x112) (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#917-925) is never used and should be removed
SafeMathUpgradeable.add(uint256,uint256) (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#572-576) is never used and should be removed
SafeMathUpgradeable.div(uint256,uint256,string) (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#677-680) is never used and should be removed
SafeMathUpgradeable.mod(uint256,uint256) (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#639-642) is never used and should be removed
SafeMathUpgradeable.mod(uint256,uint256,string) (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#697-700) is never used and should be removed
SafeMathUpgradeable.sub(uint256,uint256) (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#588-591) is never used and should be removed
SafeMathUpgradeable.sub(uint256,uint256,string) (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#657-660) is never used and should be removed
SafeMathUpgradeable.tryAdd(uint256,uint256) (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#511-515) is never used and should be removed
SafeMathUpgradeable.tryDiv(uint256,uint256) (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#547-550) is never used and should be removed
SafeMathUpgradeable.tryMod(uint256,uint256) (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#557-560) is never used and should be removed
SafeMathUpgradeable.tryMul(uint256,uint256) (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#532-540) is never used and should be removed
SafeMathUpgradeable.trySub(uint256,uint256) (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#522-525) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code
INFO:Detectors:
Pragma version>=0.4.24<0.8.0 (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#7) is too complex
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#62) is too complex
Pragma version0.7.6 (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#94) allows old versions
Pragma version0.7.6 (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#188) allows old versions
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#403) is too complex
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#490) is too complex
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#705) is too complex
Pragma version>=0.4.0 (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#782) allows old versions
Pragma version>=0.5.0 (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#928) allows old versions
Pragma version0.7.6 (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#982) allows old versions
Pragma version0.7.6 (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#1034) allows old versions
Pragma version>=0.4.0 (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#1071) allows old versions
Pragma version>=0.4.0 (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#1124) allows old versions
Pragma version>=0.5.0 (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#1177) allows old versions
Pragma version>=0.6.2<0.8.0 (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#1264) is too complex
solc-0.7.6 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity
INFO:Detectors:
Low level call in AddressUpgradeable.sendValue(address,uint256) (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#1314-1320):
	- (success) = recipient.call{value: amount}() (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#1318)
Low level call in AddressUpgradeable.functionCallWithValue(address,bytes,uint256,string) (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#1375-1382):
	- (success,returndata) = target.call{value: value}(data) (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#1380)
Low level call in AddressUpgradeable.functionStaticCall(address,bytes,string) (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#1400-1406):
	- (success,returndata) = target.staticcall(data) (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#1404)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls
INFO:Detectors:
Function ContextUpgradeable.__Context_init() (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#76-78) is not in mixedCase
Function ContextUpgradeable.__Context_init_unchained() (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#80-81) is not in mixedCase
Variable ContextUpgradeable.__gap (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#90) is not in mixedCase
Function OwnableUpgradeable.__Ownable_init(address) (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#120-123) is not in mixedCase
Parameter OwnableUpgradeable.__Ownable_init(address)._ownerAddress (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#120) is not in mixedCase
Function OwnableUpgradeable.__Ownable_init_unchained(address) (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#125-128) is not in mixedCase
Parameter OwnableUpgradeable.__Ownable_init_unchained(address)._ownerAddress (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#125) is not in mixedCase
Variable OwnableUpgradeable.__gap (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#185) is not in mixedCase
Parameter PriceOracleUpgradeable.initialize(address,address,address,bool,uint256,uint256)._ownerAddress (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#243) is not in mixedCase
Parameter PriceOracleUpgradeable.initialize(address,address,address,bool,uint256,uint256)._zoneTokenAddress (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#244) is not in mixedCase
Parameter PriceOracleUpgradeable.initialize(address,address,address,bool,uint256,uint256)._lpZoneEth (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#245) is not in mixedCase
Parameter PriceOracleUpgradeable.initialize(address,address,address,bool,uint256,uint256)._usePoolPrice (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#246) is not in mixedCase
Parameter PriceOracleUpgradeable.initialize(address,address,address,bool,uint256,uint256)._zoneReserveAmount (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#247) is not in mixedCase
Parameter PriceOracleUpgradeable.initialize(address,address,address,bool,uint256,uint256)._ethReserveAmount (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#248) is not in mixedCase
Parameter PriceOracleUpgradeable.activatePoolPrice(bool,uint256,uint256)._usePoolPrice (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#262) is not in mixedCase
Parameter PriceOracleUpgradeable.activatePoolPrice(bool,uint256,uint256)._zoneReserveAmount (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#262) is not in mixedCase
Parameter PriceOracleUpgradeable.activatePoolPrice(bool,uint256,uint256)._ethReserveAmount (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#262) is not in mixedCase
Parameter PriceOracleUpgradeable.setZoneEthLP(address)._lpZoneEth (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#283) is not in mixedCase
Parameter PriceOracleUpgradeable.mintPriceInZone(uint256)._mintPriceInEth (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#360) is not in mixedCase
Variable PriceOracleUpgradeable.__gap (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#398) is not in mixedCase
Struct FixedPoint.uq112x112 (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#792-794) is not in CapWords
Struct FixedPoint.uq144x112 (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#798-800) is not in CapWords
Function IUniswapV2Pair.DOMAIN_SEPARATOR() (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#945) is not in mixedCase
Function IUniswapV2Pair.PERMIT_TYPEHASH() (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#946) is not in mixedCase
Function IUniswapV2Pair.MINIMUM_LIQUIDITY() (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#963) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions
INFO:Detectors:
Redundant expression "this (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#87)" inContextUpgradeable (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#75-91)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#redundant-statements
INFO:Detectors:
Variable PriceOracleUpgradeable.getOutAmount(address,uint256).price0Average (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#338) is too similar to PriceOracleUpgradeable.getOutAmount(address,uint256).price1Average (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#339)
Variable PriceOracleUpgradeable.price0AverageLast (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#226) is too similar to PriceOracleUpgradeable.price1AverageLast (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#227)
Variable PriceOracleUpgradeable.update().price0Cumulative (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#309) is too similar to PriceOracleUpgradeable.update().price1Cumulative (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#309)
Variable PriceOracleUpgradeable._updateFirst().price0Cumulative (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#302) is too similar to PriceOracleUpgradeable.update().price1Cumulative (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#309)
Variable PriceOracleUpgradeable.getOutAmount(address,uint256).price0Cumulative (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#335) is too similar to PriceOracleUpgradeable.getOutAmount(address,uint256).price1Cumulative (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#335)
Variable PriceOracleUpgradeable.update().price0Cumulative (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#309) is too similar to PriceOracleUpgradeable._updateFirst().price1Cumulative (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#302)
Variable PriceOracleUpgradeable.update().price0Cumulative (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#309) is too similar to PriceOracleUpgradeable.getOutAmount(address,uint256).price1Cumulative (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#335)
Variable PriceOracleUpgradeable._updateFirst().price0Cumulative (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#302) is too similar to PriceOracleUpgradeable._updateFirst().price1Cumulative (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#302)
Variable PriceOracleUpgradeable.getOutAmount(address,uint256).price0Cumulative (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#335) is too similar to PriceOracleUpgradeable.update().price1Cumulative (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#309)
Variable PriceOracleUpgradeable.getOutAmount(address,uint256).price0Cumulative (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#335) is too similar to PriceOracleUpgradeable._updateFirst().price1Cumulative (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#302)
Variable PriceOracleUpgradeable.price0CumulativeLast (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#224) is too similar to PriceOracleUpgradeable.price1CumulativeLast (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#225)
Variable PriceOracleUpgradeable._updateFirst().price0Cumulative (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#302) is too similar to PriceOracleUpgradeable.getOutAmount(address,uint256).price1Cumulative (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#335)
Variable UniswapV2OracleLibrary.currentCumulativePrices(address).price0Cumulative (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#1051) is too similar to UniswapV2OracleLibrary.currentCumulativePrices(address).price1Cumulative (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#1051)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#variable-names-too-similar
INFO:Detectors:
FixedPoint.slitherConstructorConstantVariables() (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#789-926) uses literals with too many digits:
	- Q112 = 0x10000000000000000000000000000 (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#803)
FixedPoint.slitherConstructorConstantVariables() (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#789-926) uses literals with too many digits:
	- Q224 = 0x100000000000000000000000000000000000000000000000000000000 (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#804)
MathUtil.sqrt(uint256) (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#988-1030) uses literals with too many digits:
	- xx >= 0x100000000000000000000000000000000 (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#993)
MathUtil.sqrt(uint256) (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#988-1030) uses literals with too many digits:
	- xx >= 0x10000000000000000 (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#997)
MathUtil.sqrt(uint256) (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#988-1030) uses literals with too many digits:
	- xx >= 0x100000000 (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#1001)
Babylonian.sqrt(uint256) (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#1131-1173) uses literals with too many digits:
	- xx >= 0x100000000000000000000000000000000 (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#1137)
Babylonian.sqrt(uint256) (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#1131-1173) uses literals with too many digits:
	- xx >= 0x10000000000000000 (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#1141)
Babylonian.sqrt(uint256) (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#1131-1173) uses literals with too many digits:
	- xx >= 0x100000000 (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#1145)
BitMath.mostSignificantBit(uint256) (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#1182-1214) uses literals with too many digits:
	- x >= 0x100000000000000000000000000000000 (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#1185)
BitMath.mostSignificantBit(uint256) (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#1182-1214) uses literals with too many digits:
	- x >= 0x10000000000000000 (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#1189)
BitMath.mostSignificantBit(uint256) (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#1182-1214) uses literals with too many digits:
	- x >= 0x100000000 (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#1193)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits
INFO:Detectors:
PriceOracleUpgradeable.__gap (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#398) is never used in PriceOracleUpgradeable (../../sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol#204-399)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-state-variable
INFO:Slither:/bdata2/sc/dataset/mainnet/0x900AEb8D9F6BAdA3079cD2175C3977776645e05a.sol analyzed (15 contracts with 85 detectors), 120 result(s) found
