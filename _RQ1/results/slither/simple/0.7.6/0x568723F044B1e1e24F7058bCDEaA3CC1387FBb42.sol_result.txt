Compilation warnings/errors on /bdata2/sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol:
Warning: Contract code size exceeds 24576 bytes (a limit introduced in Spurious Dragon). This contract may not be deployable on mainnet. Consider enabling the optimizer (with a low "runs" value!), turning off revert strings, or using libraries.
   --> /bdata2/sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol:773:1:
    |
773 | contract TwapRelayer is ITwapRelayer {
    | ^ (Relevant source part starts here and spans across multiple lines).

Warning: Contract code size exceeds 24576 bytes (a limit introduced in Spurious Dragon). This contract may not be deployable on mainnet. Consider enabling the optimizer (with a low "runs" value!), turning off revert strings, or using libraries.
    --> /bdata2/sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol:1714:1:
     |
1714 | library Orders {
     | ^ (Relevant source part starts here and spans across multiple lines).


INFO:Detectors:
TwapRelayer.transferIn(address,uint256,bool) (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#1237-1260) sends eth to arbitrary user
	Dangerous calls:
	- IWETH(token).deposit{value: amount}() (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#1248)
TokenShares.amountToShares(TokenShares.Data,address,uint256,bool) (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#3124-3160) sends eth to arbitrary user
	Dangerous calls:
	- IWETH(token).deposit{value: amount}() (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#3136)
TokenShares.onUnwrapFailed(TokenShares.Data,address,uint256) (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#3162-3170) sends eth to arbitrary user
	Dangerous calls:
	- IWETH(data.weth).deposit{value: amount}() (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#3168)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#functions-that-send-ether-to-arbitrary-destinations
INFO:Detectors:
FullMath.mulDiv(uint256,uint256,uint256) (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#2745-2837) performs a multiplication on the result of a division:
	- denominator = denominator / twos (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#2798)
	- inv = (3 * denominator) ^ 2 (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#2818)
FullMath.mulDiv(uint256,uint256,uint256) (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#2745-2837) performs a multiplication on the result of a division:
	- denominator = denominator / twos (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#2798)
	- inv *= 2 - denominator * inv (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#2822)
FullMath.mulDiv(uint256,uint256,uint256) (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#2745-2837) performs a multiplication on the result of a division:
	- denominator = denominator / twos (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#2798)
	- inv *= 2 - denominator * inv (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#2823)
FullMath.mulDiv(uint256,uint256,uint256) (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#2745-2837) performs a multiplication on the result of a division:
	- denominator = denominator / twos (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#2798)
	- inv *= 2 - denominator * inv (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#2824)
FullMath.mulDiv(uint256,uint256,uint256) (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#2745-2837) performs a multiplication on the result of a division:
	- denominator = denominator / twos (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#2798)
	- inv *= 2 - denominator * inv (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#2825)
FullMath.mulDiv(uint256,uint256,uint256) (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#2745-2837) performs a multiplication on the result of a division:
	- denominator = denominator / twos (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#2798)
	- inv *= 2 - denominator * inv (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#2826)
FullMath.mulDiv(uint256,uint256,uint256) (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#2745-2837) performs a multiplication on the result of a division:
	- denominator = denominator / twos (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#2798)
	- inv *= 2 - denominator * inv (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#2827)
FullMath.mulDiv(uint256,uint256,uint256) (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#2745-2837) performs a multiplication on the result of a division:
	- prod0 = prod0 / twos (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#2803)
	- result = prod0 * inv (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#2835)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#divide-before-multiply
INFO:Detectors:
Orders.timestampToUint32(uint256) (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#2087-2092) uses a dangerous strict equality:
	- timestamp == type()(uint256).max (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#2088)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dangerous-strict-equalities
INFO:Detectors:
Orders.uintToFloat32(uint256).exponent (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#2111) is a local variable never initialized
OracleLibrary.getWeightedArithmeticMeanTick(OracleLibrary.WeightedTickData[]).i (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#3008) is a local variable never initialized
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#uninitialized-local-variables
INFO:Detectors:
TwapRelayer.constructor(address,address,address)._factory (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#795) lacks a zero-check on :
		- factory = _factory (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#799)
TwapRelayer.constructor(address,address,address)._delay (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#796) lacks a zero-check on :
		- delay = _delay (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#800)
TwapRelayer.constructor(address,address,address)._weth (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#797) lacks a zero-check on :
		- weth = _weth (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#801)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation
INFO:Detectors:
Reentrancy in TwapRelayer.approve(address,uint256,address) (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#1298-1307):
	External calls:
	- require(bool,string)(IERC20(token).approve(to,amount),TR2F) (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#1305)
	Event emitted after the call(s):
	- Approve(token,to,amount) (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#1306)
Reentrancy in TwapRelayer.buy(ITwapRelayer.BuyParams) (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#955-1014):
	External calls:
	- (amountIn,amountOut,fee) = swapExactOut(pair,inverted,buyParams.tokenIn,buyParams.tokenOut,buyParams.amountOut,buyParams.wrapUnwrap,buyParams.to) (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#972-980)
		- (success) = to.call{gas: gasLimit,value: value}() (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#2719)
		- (success,data) = token.call(abi.encodeWithSelector(0xa9059cbb,to,value)) (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#2699)
		- (success,data) = token.call(abi.encodeWithSelector(0x23b872dd,from,to,value)) (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#2710)
		- IWETH(token).deposit{value: amount}() (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#1248)
		- IWETH(token).withdraw(amount) (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#1275)
		- TransferHelper.safeTransferFrom(token,msg.sender,address(this),amount) (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#1250)
		- TransferHelper.safeTransferETH(to,amount,ethTransferGasCost) (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#1276)
		- TransferHelper.safeTransfer(token,to,amount) (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#1278)
		- TransferHelper.safeTransferFrom(token,msg.sender,address(this),amount) (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#1255)
		- TransferHelper.safeTransfer(token,to,amount) (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#1283)
	- orderId = ITwapDelay(delay).sell{value: calculatePrepay()}(Orders.SellParams(buyParams.tokenIn,buyParams.tokenOut,amountIn,0,false,address(this),executionGasLimit,buyParams.submitDeadline)) (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#983-994)
		- ITwapDelay(delay).gasPrice().mul(gasPriceMultiplier).mul(executionGasLimit).div(PRECISION) (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#1025)
	External calls sending eth:
	- (amountIn,amountOut,fee) = swapExactOut(pair,inverted,buyParams.tokenIn,buyParams.tokenOut,buyParams.amountOut,buyParams.wrapUnwrap,buyParams.to) (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#972-980)
		- (success) = to.call{gas: gasLimit,value: value}() (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#2719)
		- IWETH(token).deposit{value: amount}() (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#1248)
	- orderId = ITwapDelay(delay).sell{value: calculatePrepay()}(Orders.SellParams(buyParams.tokenIn,buyParams.tokenOut,amountIn,0,false,address(this),executionGasLimit,buyParams.submitDeadline)) (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#983-994)
	Event emitted after the call(s):
	- Swap(msg.sender,buyParams.tokenIn,buyParams.tokenOut,amountIn,amountOut,buyParams.wrapUnwrap,fee,buyParams.to,orderId) (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#996-1006)
Reentrancy in Orders.buy(Orders.Data,Orders.BuyParams,TokenShares.Data) (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#2488-2534):
	External calls:
	- allocateGasRefund(data,value,buyParams.gasLimit) (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#2512)
		- (success) = to.call{gas: gasLimit,value: value}() (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#2719)
		- TransferHelper.safeTransferETH(msg.sender,value.sub(futureFee),data.transferGasCosts[address(0)]) (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#2557)
	- shares = tokenShares.amountToShares(buyParams.tokenIn,buyParams.amountInMax,buyParams.wrapUnwrap) (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#2514)
	External calls sending eth:
	- allocateGasRefund(data,value,buyParams.gasLimit) (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#2512)
		- (success) = to.call{gas: gasLimit,value: value}() (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#2719)
	Event emitted after the call(s):
	- BuyEnqueued(data.newestOrderId,buyOrder.validAfterTimestamp,buyOrder.gasPrice) (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#2260)
		- enqueueBuyOrder(data,BuyOrder(pairId,inverted,shares,buyParams.amountOut,buyParams.wrapUnwrap,buyParams.to,data.gasPrice,buyParams.gasLimit,timestamp + data.delay,priceAccumulator,timestamp),buyParams.amountInMax) (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#2517-2533)
Reentrancy in Orders.deposit(Orders.Data,Orders.DepositParams,TokenShares.Data) (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#2306-2374):
	External calls:
	- allocateGasRefund(data,value,depositParams.gasLimit) (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#2339)
		- (success) = to.call{gas: gasLimit,value: value}() (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#2719)
		- TransferHelper.safeTransferETH(msg.sender,value.sub(futureFee),data.transferGasCosts[address(0)]) (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#2557)
	- shares0 = tokenShares.amountToShares(depositParams.token1,depositParams.amount1,depositParams.wrap) (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#2342-2346)
	- shares0 = tokenShares.amountToShares(depositParams.token0,depositParams.amount0,depositParams.wrap) (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#2342-2346)
	- shares1 = tokenShares.amountToShares(depositParams.token0,depositParams.amount0,depositParams.wrap) (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#2347-2351)
	- shares1 = tokenShares.amountToShares(depositParams.token1,depositParams.amount1,depositParams.wrap) (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#2347-2351)
	External calls sending eth:
	- allocateGasRefund(data,value,depositParams.gasLimit) (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#2339)
		- (success) = to.call{gas: gasLimit,value: value}() (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#2719)
	Event emitted after the call(s):
	- DepositEnqueued(data.newestOrderId,depositOrder.validAfterTimestamp,depositOrder.gasPrice) (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#2180)
		- enqueueDepositOrder(data,DepositOrder(pairId,shares0,shares1,depositParams.minSwapPrice,depositParams.maxSwapPrice,depositParams.wrap,depositParams.swap,depositParams.to,data.gasPrice,depositParams.gasLimit,timestamp + data.delay,priceAccumulator,timestamp),depositParams.amount0,depositParams.amount1) (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#2354-2373)
	- DepositEnqueued(data.newestOrderId,depositOrder.validAfterTimestamp,depositOrder.gasPrice) (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#2180)
		- enqueueDepositOrder(data,DepositOrder(pairId,shares0,shares1,depositParams.minSwapPrice,depositParams.maxSwapPrice,depositParams.wrap,depositParams.swap,depositParams.to,data.gasPrice,depositParams.gasLimit,timestamp + data.delay,priceAccumulator,timestamp),depositParams.amount1,depositParams.amount0) (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#2354-2373)
Reentrancy in Orders.refundLiquidity(address,address,uint256,bytes4) (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#2601-2617):
	External calls:
	- (success,data) = address(this).call{gas: PAIR_TRANSFER_COST}(abi.encodeWithSelector(selector,pair,to,liquidity,false)) (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#2610-2612)
	Event emitted after the call(s):
	- RefundFailed(to,pair,liquidity,data) (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#2614)
Reentrancy in TwapRelayer.sell(ITwapRelayer.SellParams) (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#901-953):
	External calls:
	- (amountIn,amountOut,fee) = swapExactIn(pair,inverted,sellParams.tokenIn,sellParams.tokenOut,sellParams.amountIn,sellParams.wrapUnwrap,sellParams.to) (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#918-926)
		- (success) = to.call{gas: gasLimit,value: value}() (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#2719)
		- (success,data) = token.call(abi.encodeWithSelector(0xa9059cbb,to,value)) (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#2699)
		- (success,data) = token.call(abi.encodeWithSelector(0x23b872dd,from,to,value)) (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#2710)
		- IWETH(token).deposit{value: amount}() (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#1248)
		- IWETH(token).withdraw(amount) (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#1275)
		- TransferHelper.safeTransferFrom(token,msg.sender,address(this),amount) (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#1250)
		- TransferHelper.safeTransferETH(to,amount,ethTransferGasCost) (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#1276)
		- TransferHelper.safeTransfer(token,to,amount) (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#1278)
		- TransferHelper.safeTransferFrom(token,msg.sender,address(this),amount) (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#1255)
		- TransferHelper.safeTransfer(token,to,amount) (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#1283)
	- orderId = ITwapDelay(delay).sell{value: calculatePrepay()}(Orders.SellParams(sellParams.tokenIn,sellParams.tokenOut,amountIn,0,false,address(this),executionGasLimit,sellParams.submitDeadline)) (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#929-940)
		- ITwapDelay(delay).gasPrice().mul(gasPriceMultiplier).mul(executionGasLimit).div(PRECISION) (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#1025)
	External calls sending eth:
	- (amountIn,amountOut,fee) = swapExactIn(pair,inverted,sellParams.tokenIn,sellParams.tokenOut,sellParams.amountIn,sellParams.wrapUnwrap,sellParams.to) (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#918-926)
		- (success) = to.call{gas: gasLimit,value: value}() (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#2719)
		- IWETH(token).deposit{value: amount}() (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#1248)
	- orderId = ITwapDelay(delay).sell{value: calculatePrepay()}(Orders.SellParams(sellParams.tokenIn,sellParams.tokenOut,amountIn,0,false,address(this),executionGasLimit,sellParams.submitDeadline)) (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#929-940)
	Event emitted after the call(s):
	- Swap(msg.sender,sellParams.tokenIn,sellParams.tokenOut,amountIn,amountOut,sellParams.wrapUnwrap,fee,sellParams.to,orderId) (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#942-952)
Reentrancy in Orders.sell(Orders.Data,Orders.SellParams,TokenShares.Data) (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#2429-2475):
	External calls:
	- allocateGasRefund(data,value,sellParams.gasLimit) (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#2453)
		- (success) = to.call{gas: gasLimit,value: value}() (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#2719)
		- TransferHelper.safeTransferETH(msg.sender,value.sub(futureFee),data.transferGasCosts[address(0)]) (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#2557)
	- shares = tokenShares.amountToShares(sellParams.tokenIn,sellParams.amountIn,sellParams.wrapUnwrap) (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#2455)
	External calls sending eth:
	- allocateGasRefund(data,value,sellParams.gasLimit) (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#2453)
		- (success) = to.call{gas: gasLimit,value: value}() (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#2719)
	Event emitted after the call(s):
	- SellEnqueued(data.newestOrderId,sellOrder.validAfterTimestamp,sellOrder.gasPrice) (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#2232)
		- enqueueSellOrder(data,SellOrder(pairId,inverted,shares,sellParams.amountOutMin,sellParams.wrapUnwrap,sellParams.to,data.gasPrice,sellParams.gasLimit,timestamp + data.delay,priceAccumulator,timestamp),sellParams.amountIn) (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#2458-2474)
Reentrancy in TwapRelayer.withdraw(address,uint256,address) (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#1309-1322):
	External calls:
	- TransferHelper.safeTransferETH(to,amount,ethTransferGasCost) (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#1317)
	- TransferHelper.safeTransfer(token,to,amount) (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#1319)
	Event emitted after the call(s):
	- Withdraw(token,to,amount) (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#1321)
Reentrancy in Orders.withdraw(Orders.Data,Orders.WithdrawParams) (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#2388-2416):
	External calls:
	- allocateGasRefund(data,msg.value,withdrawParams.gasLimit) (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#2400)
		- (success) = to.call{gas: gasLimit,value: value}() (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#2719)
		- TransferHelper.safeTransferETH(msg.sender,value.sub(futureFee),data.transferGasCosts[address(0)]) (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#2557)
	- pair.safeTransferFrom(msg.sender,address(this),withdrawParams.liquidity) (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#2401)
	External calls sending eth:
	- allocateGasRefund(data,msg.value,withdrawParams.gasLimit) (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#2400)
		- (success) = to.call{gas: gasLimit,value: value}() (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#2719)
	Event emitted after the call(s):
	- WithdrawEnqueued(data.newestOrderId,withdrawOrder.validAfterTimestamp,withdrawOrder.gasPrice) (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#2204)
		- enqueueWithdrawOrder(data,WithdrawOrder(pairId,withdrawParams.liquidity,withdrawParams.amount0Min,withdrawParams.amount1Min,withdrawParams.unwrap,withdrawParams.to,data.gasPrice,withdrawParams.gasLimit,timestampToUint32(block.timestamp) + data.delay)) (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#2402-2415)
	- WithdrawEnqueued(data.newestOrderId,withdrawOrder.validAfterTimestamp,withdrawOrder.gasPrice) (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#2204)
		- enqueueWithdrawOrder(data,WithdrawOrder(pairId,withdrawParams.liquidity,withdrawParams.amount1Min,withdrawParams.amount0Min,withdrawParams.unwrap,withdrawParams.to,data.gasPrice,withdrawParams.gasLimit,timestampToUint32(block.timestamp) + data.delay)) (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#2402-2415)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3
INFO:Detectors:
Orders.getOrderStatus(Orders.Data,uint256) (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#1910-1928) uses timestamp for comparisons
	Dangerous comparisons:
	- validAfterTimestamp >= block.timestamp (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#1924)
Orders.timestampToUint32(uint256) (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#2087-2092) uses timestamp for comparisons
	Dangerous comparisons:
	- timestamp == type()(uint256).max (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#2088)
Orders.checkOrderParams(Orders.Data,address,uint256,uint32,uint256) (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#2536-2547) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(submitDeadline >= block.timestamp,OS04) (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#2543)
OracleLibrary.getBlockStartingTickAndLiquidity(address) (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#2949-2982) uses timestamp for comparisons
	Dangerous comparisons:
	- observationTimestamp != uint32(block.timestamp) (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#2960)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp
INFO:Detectors:
FullMath.mulDiv(uint256,uint256,uint256) (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#2745-2837) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#2757-2761)
	- INLINE ASM (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#2766-2768)
	- INLINE ASM (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#2783-2785)
	- INLINE ASM (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#2787-2790)
	- INLINE ASM (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#2797-2799)
	- INLINE ASM (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#2802-2804)
	- INLINE ASM (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#2808-2810)
TickMath.getTickAtSqrtRatio(uint160) (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#3233-3376) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#3241-3245)
	- INLINE ASM (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#3246-3250)
	- INLINE ASM (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#3251-3255)
	- INLINE ASM (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#3256-3260)
	- INLINE ASM (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#3261-3265)
	- INLINE ASM (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#3266-3270)
	- INLINE ASM (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#3271-3275)
	- INLINE ASM (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#3276-3279)
	- INLINE ASM (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#3286-3291)
	- INLINE ASM (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#3292-3297)
	- INLINE ASM (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#3298-3303)
	- INLINE ASM (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#3304-3309)
	- INLINE ASM (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#3310-3315)
	- INLINE ASM (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#3316-3321)
	- INLINE ASM (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#3322-3327)
	- INLINE ASM (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#3328-3333)
	- INLINE ASM (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#3334-3339)
	- INLINE ASM (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#3340-3345)
	- INLINE ASM (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#3346-3351)
	- INLINE ASM (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#3352-3357)
	- INLINE ASM (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#3358-3363)
	- INLINE ASM (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#3364-3368)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage
INFO:Detectors:
Different versions of Solidity are used:
	- Version used: ['0.7.6', '>=0.4.0<0.8.0', '>=0.5.0', '>=0.5.0<0.8.0']
	- 0.7.6 (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#8)
	- 0.7.6 (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#40)
	- 0.7.6 (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#194)
	- 0.7.6 (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#278)
	- 0.7.6 (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#305)
	- 0.7.6 (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#758)
	- 0.7.6 (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#1330)
	- 0.7.6 (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#1433)
	- 0.7.6 (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#1446)
	- 0.7.6 (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#1534)
	- 0.7.6 (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#1604)
	- 0.7.6 (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#1704)
	- 0.7.6 (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#2666)
	- 0.7.6 (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#2679)
	- 0.7.6 (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#3041)
	- 0.7.6 (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#3072)
	- >=0.4.0<0.8.0 (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#2733)
	- >=0.5.0 (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#314)
	- >=0.5.0 (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#350)
	- >=0.5.0 (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#467)
	- >=0.5.0 (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#508)
	- >=0.5.0 (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#612)
	- >=0.5.0 (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#734)
	- >=0.5.0 (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#3380)
	- >=0.5.0<0.8.0 (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#2858)
	- >=0.5.0<0.8.0 (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#3174)
	- v2 (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#2)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#different-pragma-directives-are-used
INFO:Detectors:
TickMath.getSqrtRatioAtTick(int24) (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#3195-3226) has a high cyclomatic complexity (24).
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#cyclomatic-complexity
INFO:Detectors:
FullMath.mulDivRoundingUp(uint256,uint256,uint256) (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#2844-2854) is never used and should be removed
Math.max(uint256,uint256) (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#3050-3052) is never used and should be removed
Math.sqrt(uint256) (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#3055-3066) is never used and should be removed
OracleLibrary.consult(address,uint32) (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#2872-2897) is never used and should be removed
OracleLibrary.getBlockStartingTickAndLiquidity(address) (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#2949-2982) is never used and should be removed
OracleLibrary.getChainedPrice(address[],int24[]) (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#3024-3035) is never used and should be removed
OracleLibrary.getOldestObservationSecondsAgo(address) (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#2930-2944) is never used and should be removed
OracleLibrary.getQuoteAtTick(int24,uint128,address,address) (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#2905-2925) is never used and should be removed
OracleLibrary.getWeightedArithmeticMeanTick(OracleLibrary.WeightedTickData[]) (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#2996-3016) is never used and should be removed
Orders.decodeType(uint256) (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#1882-1898) is never used and should be removed
Orders.dequeueCanceledOrder(Orders.Data) (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#2623-2625) is never used and should be removed
Orders.forgetLastProcessedOrder(Orders.Data) (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#2658-2660) is never used and should be removed
Orders.forgetOrder(Orders.Data,uint256) (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#2654-2656) is never used and should be removed
Orders.getFailedOrderType(Orders.Data,uint256) (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#2070-2077) is never used and should be removed
Orders.getNextOrder(Orders.Data) (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#2619-2621) is never used and should be removed
Orders.getOrder(Orders.Data,uint256) (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#1900-1908) is never used and should be removed
Orders.getOrderStatus(Orders.Data,uint256) (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#1910-1928) is never used and should be removed
Orders.getPairInfo(Orders.Data,uint32) (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#1952-1965) is never used and should be removed
Orders.isRefundFailed(Orders.Data,uint256) (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#2282-2285) is never used and should be removed
Orders.markRefundFailed(Orders.Data) (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#2287-2290) is never used and should be removed
Orders.refundLiquidity(address,address,uint256,bytes4) (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#2601-2617) is never used and should be removed
SafeMath.add(int256,int256) (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#1660-1663) is never used and should be removed
SafeMath.div(int256,int256) (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#1684-1689) is never used and should be removed
SafeMath.mul(int256,int256) (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#1670-1682) is never used and should be removed
SafeMath.neg_floor_div(int256,int256) (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#1691-1698) is never used and should be removed
SafeMath.sub(int256,int256) (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#1665-1668) is never used and should be removed
SafeMath.toInt256(uint256) (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#1653-1656) is never used and should be removed
TickMath.getTickAtSqrtRatio(uint160) (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#3233-3376) is never used and should be removed
TransferHelper.safeApprove(address,address,uint256) (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#2683-2691) is never used and should be removed
TransferHelper.transferETH(address,uint256,uint256) (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#2723-2729) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code
INFO:Detectors:
Pragma version0.7.6 (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#8) allows old versions
Pragma version0.7.6 (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#40) allows old versions
Pragma version0.7.6 (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#194) allows old versions
Pragma version0.7.6 (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#278) allows old versions
Pragma version0.7.6 (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#305) allows old versions
Pragma version>=0.5.0 (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#314) allows old versions
Pragma version>=0.5.0 (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#350) allows old versions
Pragma version>=0.5.0 (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#467) allows old versions
Pragma version>=0.5.0 (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#508) allows old versions
Pragma version>=0.5.0 (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#612) allows old versions
Pragma version>=0.5.0 (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#734) allows old versions
Pragma version0.7.6 (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#758) allows old versions
Pragma version0.7.6 (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#1330) allows old versions
Pragma version0.7.6 (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#1433) allows old versions
Pragma version0.7.6 (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#1446) allows old versions
Pragma version0.7.6 (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#1534) allows old versions
Pragma version0.7.6 (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#1604) allows old versions
Pragma version0.7.6 (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#1704) allows old versions
Pragma version0.7.6 (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#2666) allows old versions
Pragma version0.7.6 (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#2679) allows old versions
Pragma version>=0.4.0<0.8.0 (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#2733) is too complex
Pragma version>=0.5.0<0.8.0 (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#2858) is too complex
Pragma version0.7.6 (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#3041) allows old versions
Pragma version0.7.6 (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#3072) allows old versions
Pragma version>=0.5.0<0.8.0 (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#3174) is too complex
Pragma version>=0.5.0 (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#3380) allows old versions
solc-0.7.6 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity
INFO:Detectors:
Low level call in Orders.refundLiquidity(address,address,uint256,bytes4) (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#2601-2617):
	- (success,data) = address(this).call{gas: PAIR_TRANSFER_COST}(abi.encodeWithSelector(selector,pair,to,liquidity,false)) (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#2610-2612)
Low level call in TransferHelper.safeApprove(address,address,uint256) (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#2683-2691):
	- (success,data) = token.call(abi.encodeWithSelector(0x095ea7b3,to,value)) (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#2689)
Low level call in TransferHelper.safeTransfer(address,address,uint256) (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#2693-2701):
	- (success,data) = token.call(abi.encodeWithSelector(0xa9059cbb,to,value)) (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#2699)
Low level call in TransferHelper.safeTransferFrom(address,address,address,uint256) (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#2703-2712):
	- (success,data) = token.call(abi.encodeWithSelector(0x23b872dd,from,to,value)) (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#2710)
Low level call in TransferHelper.safeTransferETH(address,uint256,uint256) (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#2714-2721):
	- (success) = to.call{gas: gasLimit,value: value}() (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#2719)
Low level call in TransferHelper.transferETH(address,uint256,uint256) (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#2723-2729):
	- (success,None) = to.call{gas: gasLimit,value: value}() (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#2728)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls
INFO:Detectors:
Function ITwapERC20.PERMIT_TYPEHASH() (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#283) is not in mixedCase
Parameter TwapRelayer.setDelay(address)._delay (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#818) is not in mixedCase
Parameter TwapRelayer.setOwner(address)._owner (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#826) is not in mixedCase
Parameter TwapRelayer.setTolerance(address,uint16)._tolerance (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#893) is not in mixedCase
Function ITwapPair.MINIMUM_LIQUIDITY() (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#1468) is not in mixedCase
Function SafeMath.ceil_div(uint256,uint256) (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#1636-1641) is not in mixedCase
Function SafeMath.neg_floor_div(int256,int256) (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#1691-1698) is not in mixedCase
Parameter Orders.setMaxGasLimit(Orders.Data,uint256)._maxGasLimit (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#2570) is not in mixedCase
Parameter Orders.setGasPriceInertia(Orders.Data,uint256)._gasPriceInertia (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#2577) is not in mixedCase
Parameter Orders.setMaxGasPriceImpact(Orders.Data,uint256)._maxGasPriceImpact (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#2584) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions
INFO:Detectors:
Variable IUniswapV3PoolState.positions(bytes32).feeGrowthInside0LastX128 (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#441) is too similar to IUniswapV3PoolState.positions(bytes32).feeGrowthInside1LastX128 (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#442)
Variable IUniswapV3PoolState.ticks(int24).feeGrowthOutside0X128 (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#418) is too similar to IUniswapV3PoolState.ticks(int24).feeGrowthOutside1X128 (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#419)
Variable IUniswapV3PoolState.positions(bytes32).tokensOwed0 (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#443) is too similar to IUniswapV3PoolState.positions(bytes32).tokensOwed1 (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#444)
Variable IUniswapV3PoolActions.collect(address,int24,int24,uint128,uint128).amount0Requested (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#553) is too similar to IUniswapV3PoolActions.collect(address,int24,int24,uint128,uint128).amount1Requested (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#554)
Variable IUniswapV3PoolOwnerActions.collectProtocol(address,uint128,uint128).amount0Requested (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#752) is too similar to IUniswapV3PoolOwnerActions.collectProtocol(address,uint128,uint128).amount1Requested (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#753)
Variable IUniswapV3PoolOwnerActions.setFeeProtocol(uint8,uint8).feeProtocol0 (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#742) is too similar to IUniswapV3PoolOwnerActions.setFeeProtocol(uint8,uint8).feeProtocol1 (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#742)
Variable ITwapPair.getDepositAmount0In(uint256,bytes).depositAmount0In (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#1526) is too similar to ITwapPair.getDepositAmount1In(uint256,bytes).depositAmount1In (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#1528)
Variable ITwapPair.getSwapAmount0Out(uint256,bytes).swapAmount0Out (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#1522) is too similar to ITwapPair.getSwapAmount1Out(uint256,bytes).swapAmount1Out (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#1524)
Variable ITwapPair.getSwapAmount0In(uint256,bytes).swapAmount0In (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#1518) is too similar to ITwapPair.getSwapAmount1In(uint256,bytes).swapAmount1In (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#1520)
Variable Orders.dequeueDepositOrder(Orders.Data).amountLimit0 (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#2631) is too similar to Orders.getDepositOrder(Orders.Data,uint256).amountLimit1 (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#1989)
Variable Orders.getDepositOrder(Orders.Data,uint256).amountLimit0 (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#1988) is too similar to Orders.getDepositOrder(Orders.Data,uint256).amountLimit1 (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#1989)
Variable Orders.getDepositOrder(Orders.Data,uint256).amountLimit0 (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#1988) is too similar to Orders.dequeueDepositOrder(Orders.Data).amountLimit1 (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#2632)
Variable Orders.dequeueDepositOrder(Orders.Data).amountLimit0 (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#2631) is too similar to Orders.dequeueDepositOrder(Orders.Data).amountLimit1 (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#2632)
Variable Orders.deposit(Orders.Data,Orders.DepositParams,TokenShares.Data).token0TransferCost (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#2313) is too similar to Orders.deposit(Orders.Data,Orders.DepositParams,TokenShares.Data).token1TransferCost (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#2314)
Variable IUniswapV3PoolActions.collect(address,int24,int24,uint128,uint128).amount0Requested (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#553) is too similar to IUniswapV3PoolOwnerActions.collectProtocol(address,uint128,uint128).amount1Requested (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#753)
Variable IUniswapV3PoolOwnerActions.collectProtocol(address,uint128,uint128).amount0Requested (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#752) is too similar to IUniswapV3PoolActions.collect(address,int24,int24,uint128,uint128).amount1Requested (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#554)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#variable-names-too-similar
INFO:Detectors:
Orders.setMaxGasLimit(Orders.Data,uint256) (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#2570-2575) uses literals with too many digits:
	- require(bool,string)(_maxGasLimit <= 10000000,OS2B) (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#2572)
TickMath.getSqrtRatioAtTick(int24) (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#3195-3226) uses literals with too many digits:
	- ratio = 0x100000000000000000000000000000000 (../../sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol#3199)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits
INFO:Slither:/bdata2/sc/dataset/mainnet/0x568723F044B1e1e24F7058bCDEaA3CC1387FBb42.sol analyzed (26 contracts with 85 detectors), 125 result(s) found
