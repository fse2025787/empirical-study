INFO:Detectors:
QueryHelper.getLiqCallData(IOpenLev,IV3Quoter,uint16,uint16,address,bool,bytes).callVars (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#186) is a local variable never initialized
QueryHelper.getTraderLiqs(IOpenLev,uint16,address[],bool[],bytes).reqVar (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#102) is a local variable never initialized
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#uninitialized-local-variables
INFO:Detectors:
QueryHelper.getTraderPositons(IOpenLev,uint16,address[],bool[],bytes) (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#68-85) has external calls inside a loop: trade = openLev.activeTrades(traders[i],marketId,longTokens[i]) (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#73)
QueryHelper.getTraderPositons(IOpenLev,uint16,address[],bool[],bytes) (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#68-85) has external calls inside a loop: (item.marginRatio,None,None,item.marginLimit) = openLev.marginRatio(traders[i],marketId,longTokens[i],dexData) (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#80)
QueryHelper.getTraderPositons(IOpenLev,uint16,address[],bool[],bytes) (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#68-85) has external calls inside a loop: item.borrowed = market.pool0.borrowBalanceCurrent(traders[i]) (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#81)
QueryHelper.getTraderPositons(IOpenLev,uint16,address[],bool[],bytes) (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#68-85) has external calls inside a loop: item.borrowed = market.pool1.borrowBalanceCurrent(traders[i]) (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#81)
QueryHelper.getTraderLiqs(IOpenLev,uint16,address[],bool[],bytes) (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#100-160) has external calls inside a loop: trade = reqVar.openLev.activeTrades(reqVar.owner,reqVar.marketId,reqVar.longToken) (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#118)
QueryHelper.getTraderLiqs(IOpenLev,uint16,address[],bool[],bytes) (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#100-160) has external calls inside a loop: (item.currentMarginRatio,item.cAvgMarginRatio,item.hAvgMarginRatio,item.marginLimit) = reqVar.openLev.marginRatio(reqVar.owner,reqVar.marketId,reqVar.longToken,reqVar.dexData) (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#125)
QueryHelper.getPoolDetails(IOpenLev,uint16[],LPoolInterface[]) (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#225-247) has external calls inside a loop: market = openLev.markets(marketIds[i]) (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#229)
QueryHelper.getPoolDetails(IOpenLev,uint16[],LPoolInterface[]) (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#225-247) has external calls inside a loop: item.cash = pool.getCash() (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#232)
QueryHelper.getPoolDetails(IOpenLev,uint16[],LPoolInterface[]) (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#225-247) has external calls inside a loop: item.totalBorrows = pool.totalBorrowsCurrent() (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#233)
QueryHelper.getPoolDetails(IOpenLev,uint16[],LPoolInterface[]) (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#225-247) has external calls inside a loop: item.totalReserves = pool.totalReserves() (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#234)
QueryHelper.getPoolDetails(IOpenLev,uint16[],LPoolInterface[]) (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#225-247) has external calls inside a loop: item.availableForBorrow = pool.availableForBorrow() (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#235)
QueryHelper.getPoolDetails(IOpenLev,uint16[],LPoolInterface[]) (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#225-247) has external calls inside a loop: item.supplyRatePerBlock = pool.supplyRatePerBlock() (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#236)
QueryHelper.getPoolDetails(IOpenLev,uint16[],LPoolInterface[]) (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#225-247) has external calls inside a loop: item.borrowRatePerBlock = pool.borrowRatePerBlock() (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#237)
QueryHelper.getPoolDetails(IOpenLev,uint16[],LPoolInterface[]) (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#225-247) has external calls inside a loop: item.reserveFactorMantissa = pool.reserveFactorMantissa() (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#238)
QueryHelper.getPoolDetails(IOpenLev,uint16[],LPoolInterface[]) (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#225-247) has external calls inside a loop: item.exchangeRate = pool.exchangeRateStored() (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#239)
QueryHelper.getPoolDetails(IOpenLev,uint16[],LPoolInterface[]) (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#225-247) has external calls inside a loop: item.baseRatePerBlock = pool.baseRatePerBlock() (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#240)
QueryHelper.getPoolDetails(IOpenLev,uint16[],LPoolInterface[]) (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#225-247) has external calls inside a loop: item.multiplierPerBlock = pool.multiplierPerBlock() (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#241)
QueryHelper.getPoolDetails(IOpenLev,uint16[],LPoolInterface[]) (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#225-247) has external calls inside a loop: item.jumpMultiplierPerBlock = pool.jumpMultiplierPerBlock() (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#242)
QueryHelper.getPoolDetails(IOpenLev,uint16[],LPoolInterface[]) (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#225-247) has external calls inside a loop: item.kink = pool.kink() (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#243)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation/#calls-inside-a-loop
INFO:Detectors:
QueryHelper.getTraderLiqs(IOpenLev,uint16,address[],bool[],bytes) (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#100-160) uses timestamp for comparisons
	Dangerous comparisons:
	- block.timestamp - calConf.twapDuration > item.lastUpdateTime (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#131)
	- block.timestamp - calConf.twapDuration > item.lastUpdateTime || item.hAvgMarginRatio < item.marginLimit (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#141)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp
INFO:Detectors:
DexData.toDex(bytes) (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#638-645) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#641-643)
DexData.toFee(bytes) (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#647-654) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#650-652)
DexData.toDexDetail(bytes) (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#656-670) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#659-661)
	- INLINE ASM (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#665-667)
DexData.toUniV3QuoteFlag(bytes) (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#672-679) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#675-677)
DexData.toUint24(bytes,uint256) (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#717-725) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#721-723)
DexData.toAddress(bytes,uint256) (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#727-735) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#731-733)
DexData.slice(bytes,uint256,uint256) (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#738-802) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#749-799)
Address.isContract(address) (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#932-941) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#939)
Address._verifyCallResult(bool,bytes,string) (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#1077-1094) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#1086-1089)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage
INFO:Detectors:
QueryHelper.getTraderLiqs(IOpenLev,uint16,address[],bool[],bytes) (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#100-160) compares to a boolean constant:
	-(longTokens[i] == false && reqVar.token0cAvgPrice > reqVar.token0price && reqVar.token0cAvgPrice.mul(100).div(reqVar.token0price) - 100 >= calConf.maxLiquidationPriceDiffientRatio) || (longTokens[i] == true && reqVar.token1cAvgPrice > reqVar.token1price && reqVar.token1cAvgPrice.mul(100).div(reqVar.token1price) - 100 >= calConf.maxLiquidationPriceDiffientRatio) (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#143-144)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#boolean-equality
INFO:Detectors:
Different versions of Solidity are used:
	- Version used: ['0.7.6', '>=0.6.0<0.8.0', '>=0.6.2<0.8.0']
	- 0.7.6 (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#5)
	- 0.7.6 (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#352)
	- 0.7.6 (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#807)
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#600)
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#1099)
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#1175)
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#1253)
	- >=0.6.2<0.8.0 (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#909)
	- ABIEncoderV2 (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#2)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#different-pragma-directives-are-used
INFO:Detectors:
QueryHelper.getLiqCallData(IOpenLev,IV3Quoter,uint16,uint16,address,bool,bytes) (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#181-223) has a high cyclomatic complexity (13).
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#cyclomatic-complexity
INFO:Detectors:
Address._verifyCallResult(bool,bytes,string) (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#1077-1094) is never used and should be removed
Address.functionCall(address,bytes) (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#985-987) is never used and should be removed
Address.functionCall(address,bytes,string) (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#995-997) is never used and should be removed
Address.functionCallWithValue(address,bytes,uint256) (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#1010-1012) is never used and should be removed
Address.functionCallWithValue(address,bytes,uint256,string) (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#1020-1027) is never used and should be removed
Address.functionDelegateCall(address,bytes) (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#1059-1061) is never used and should be removed
Address.functionDelegateCall(address,bytes,string) (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#1069-1075) is never used and should be removed
Address.functionStaticCall(address,bytes) (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#1035-1037) is never used and should be removed
Address.functionStaticCall(address,bytes,string) (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#1045-1051) is never used and should be removed
Address.isContract(address) (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#932-941) is never used and should be removed
Address.sendValue(address,uint256) (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#959-965) is never used and should be removed
DexData.numPools(bytes) (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#712-715) is never used and should be removed
DexData.slice(bytes,uint256,uint256) (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#738-802) is never used and should be removed
DexData.toAddress(bytes,uint256) (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#727-735) is never used and should be removed
DexData.toDex(bytes) (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#638-645) is never used and should be removed
DexData.toDexDetail(bytes) (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#656-670) is never used and should be removed
DexData.toUint24(bytes,uint256) (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#717-725) is never used and should be removed
DexData.toUniV2Path(bytes) (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#686-693) is never used and should be removed
DexData.toUniV3Path(bytes) (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#696-710) is never used and should be removed
DexData.toUniV3QuoteFlag(bytes) (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#672-679) is never used and should be removed
SafeERC20._callOptionalReturn(IERC20,bytes) (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#1160-1170) is never used and should be removed
SafeERC20.safeApprove(IERC20,address,uint256) (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#1133-1142) is never used and should be removed
SafeERC20.safeDecreaseAllowance(IERC20,address,uint256) (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#1149-1152) is never used and should be removed
SafeERC20.safeIncreaseAllowance(IERC20,address,uint256) (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#1144-1147) is never used and should be removed
SafeERC20.safeTransfer(IERC20,address,uint256) (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#1118-1120) is never used and should be removed
SafeERC20.safeTransferFrom(IERC20,address,address,uint256) (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#1122-1124) is never used and should be removed
SafeMath.div(uint256,uint256,string) (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#1440-1443) is never used and should be removed
SafeMath.mod(uint256,uint256) (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#1402-1405) is never used and should be removed
SafeMath.mod(uint256,uint256,string) (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#1460-1463) is never used and should be removed
SafeMath.sub(uint256,uint256,string) (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#1420-1423) is never used and should be removed
SafeMath.tryAdd(uint256,uint256) (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#1274-1278) is never used and should be removed
SafeMath.tryDiv(uint256,uint256) (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#1310-1313) is never used and should be removed
SafeMath.tryMod(uint256,uint256) (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#1320-1323) is never used and should be removed
SafeMath.tryMul(uint256,uint256) (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#1295-1303) is never used and should be removed
SafeMath.trySub(uint256,uint256) (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#1285-1288) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code
INFO:Detectors:
Pragma version0.7.6 (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#5) allows old versions
Pragma version0.7.6 (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#352) allows old versions
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#600) is too complex
Pragma version0.7.6 (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#807) allows old versions
Pragma version>=0.6.2<0.8.0 (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#909) is too complex
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#1099) is too complex
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#1175) is too complex
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#1253) is too complex
solc-0.7.6 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity
INFO:Detectors:
Low level call in Address.sendValue(address,uint256) (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#959-965):
	- (success) = recipient.call{value: amount}() (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#963)
Low level call in Address.functionCallWithValue(address,bytes,uint256,string) (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#1020-1027):
	- (success,returndata) = target.call{value: value}(data) (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#1025)
Low level call in Address.functionStaticCall(address,bytes,string) (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#1045-1051):
	- (success,returndata) = target.staticcall(data) (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#1049)
Low level call in Address.functionDelegateCall(address,bytes,string) (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#1069-1075):
	- (success,returndata) = target.delegatecall(data) (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#1073)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls
INFO:Detectors:
Variable LPoolStorage._notEntered (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#358) is not in mixedCase
Constant LPoolStorage.borrowRateMaxMantissa (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#389) is not in UPPER_CASE_WITH_UNDERSCORES
Parameter DexData.toUint24(bytes,uint256)._bytes (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#717) is not in mixedCase
Parameter DexData.toUint24(bytes,uint256)._start (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#717) is not in mixedCase
Parameter DexData.toAddress(bytes,uint256)._bytes (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#727) is not in mixedCase
Parameter DexData.toAddress(bytes,uint256)._start (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#727) is not in mixedCase
Parameter DexData.slice(bytes,uint256,uint256)._bytes (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#739) is not in mixedCase
Parameter DexData.slice(bytes,uint256,uint256)._start (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#740) is not in mixedCase
Parameter DexData.slice(bytes,uint256,uint256)._length (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#741) is not in mixedCase
Constant DexData.dexNameStart (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#612) is not in UPPER_CASE_WITH_UNDERSCORES
Constant DexData.dexNameLength (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#613) is not in UPPER_CASE_WITH_UNDERSCORES
Constant DexData.feeStart (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#614) is not in UPPER_CASE_WITH_UNDERSCORES
Constant DexData.feeLength (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#615) is not in UPPER_CASE_WITH_UNDERSCORES
Constant DexData.uniV3QuoteFlagStart (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#616) is not in UPPER_CASE_WITH_UNDERSCORES
Constant DexData.uniV3QuoteFlagLength (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#617) is not in UPPER_CASE_WITH_UNDERSCORES
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions
INFO:Detectors:
DexData.toAddress(bytes,uint256) (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#727-735) uses literals with too many digits:
	- tempAddress = mload(uint256)(_bytes + 0x20 + _start) / 0x1000000000000000000000000 (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#732)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits
INFO:Detectors:
DexData.MULTIPLE_POOLS_MIN_LENGTH (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#609) is never used in DexData (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#604-804)
DexData.DEX_UNIV2 (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#619) is never used in DexData (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#604-804)
DexData.DEX_UNIV3 (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#620) is never used in DexData (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#604-804)
DexData.DEX_PANCAKE (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#621) is never used in DexData (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#604-804)
DexData.DEX_SUSHI (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#622) is never used in DexData (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#604-804)
DexData.DEX_MDEX (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#623) is never used in DexData (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#604-804)
DexData.DEX_TRADERJOE (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#624) is never used in DexData (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#604-804)
DexData.DEX_SPOOKY (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#625) is never used in DexData (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#604-804)
DexData.DEX_QUICK (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#626) is never used in DexData (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#604-804)
DexData.DEX_SHIBA (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#627) is never used in DexData (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#604-804)
DexData.DEX_APE (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#628) is never used in DexData (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#604-804)
DexData.UNIV2 (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#630) is never used in DexData (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#604-804)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-state-variable
INFO:Detectors:
LPoolStorage._notEntered (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#358) should be constant 
LPoolStorage.accrualBlockNumber (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#407) should be constant 
LPoolStorage.baseRatePerBlock (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#442) should be constant 
LPoolStorage.borrowCapFactorMantissa (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#394) should be constant 
LPoolStorage.borrowIndex (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#412) should be constant 
LPoolStorage.controller (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#398) should be constant 
LPoolStorage.decimals (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#373) should be constant 
LPoolStorage.initialExchangeRateMantissa (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#402) should be constant 
LPoolStorage.isWethPool (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#430) should be constant 
LPoolStorage.jumpMultiplierPerBlock (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#444) should be constant 
LPoolStorage.kink (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#445) should be constant 
LPoolStorage.multiplierPerBlock (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#443) should be constant 
LPoolStorage.name (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#363) should be constant 
LPoolStorage.reserveFactorMantissa (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#424) should be constant 
LPoolStorage.symbol (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#368) should be constant 
LPoolStorage.totalBorrows (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#417) should be constant 
LPoolStorage.totalCash (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#419) should be constant 
LPoolStorage.totalReserves (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#426) should be constant 
LPoolStorage.totalSupply (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#378) should be constant 
LPoolStorage.underlying (../../sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol#428) should be constant 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant
INFO:Slither:/bdata2/sc/dataset/mainnet/0x51f53Be515FDdc0F3e95Fabad76063Ef2a0A6Cc5.sol analyzed (13 contracts with 85 detectors), 130 result(s) found
