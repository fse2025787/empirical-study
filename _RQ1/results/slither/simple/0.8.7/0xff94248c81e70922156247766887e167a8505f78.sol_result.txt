INFO:Detectors:
Reentrancy in KUNOICHI._transfer(address,address,uint256) (../../sc/dataset/mainnet/0xff94248c81e70922156247766887e167a8505f78.sol#221-253):
	External calls:
	- swapTokensForEth(contractTokenBalance) (../../sc/dataset/mainnet/0xff94248c81e70922156247766887e167a8505f78.sol#244)
		- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (../../sc/dataset/mainnet/0xff94248c81e70922156247766887e167a8505f78.sol#260-266)
	External calls sending eth:
	- sendETHToFee(address(this).balance) (../../sc/dataset/mainnet/0xff94248c81e70922156247766887e167a8505f78.sol#247)
		- _feeAddrWallet.transfer(amount) (../../sc/dataset/mainnet/0xff94248c81e70922156247766887e167a8505f78.sol#285)
	State variables written after the call(s):
	- _tokenTransfer(from,to,amount) (../../sc/dataset/mainnet/0xff94248c81e70922156247766887e167a8505f78.sol#252)
		- _rOwned[address(this)] = _rOwned[address(this)].add(rTeam) (../../sc/dataset/mainnet/0xff94248c81e70922156247766887e167a8505f78.sol#329)
		- _rOwned[sender] = _rOwned[sender].sub(rAmount) (../../sc/dataset/mainnet/0xff94248c81e70922156247766887e167a8505f78.sol#319)
		- _rOwned[recipient] = _rOwned[recipient].add(rTransferAmount) (../../sc/dataset/mainnet/0xff94248c81e70922156247766887e167a8505f78.sol#320)
	KUNOICHI._rOwned (../../sc/dataset/mainnet/0xff94248c81e70922156247766887e167a8505f78.sol#121) can be used in cross function reentrancies:
	- KUNOICHI._takeTeam(uint256) (../../sc/dataset/mainnet/0xff94248c81e70922156247766887e167a8505f78.sol#326-330)
	- KUNOICHI._transferStandard(address,address,uint256) (../../sc/dataset/mainnet/0xff94248c81e70922156247766887e167a8505f78.sol#317-324)
	- KUNOICHI.balanceOf(address) (../../sc/dataset/mainnet/0xff94248c81e70922156247766887e167a8505f78.sol#180-182)
	- KUNOICHI.constructor() (../../sc/dataset/mainnet/0xff94248c81e70922156247766887e167a8505f78.sol#155-162)
	- _tokenTransfer(from,to,amount) (../../sc/dataset/mainnet/0xff94248c81e70922156247766887e167a8505f78.sol#252)
		- _rTotal = _rTotal.sub(rFee) (../../sc/dataset/mainnet/0xff94248c81e70922156247766887e167a8505f78.sol#333)
	KUNOICHI._rTotal (../../sc/dataset/mainnet/0xff94248c81e70922156247766887e167a8505f78.sol#129) can be used in cross function reentrancies:
	- KUNOICHI._getCurrentSupply() (../../sc/dataset/mainnet/0xff94248c81e70922156247766887e167a8505f78.sol#379-384)
	- KUNOICHI._reflectFee(uint256,uint256) (../../sc/dataset/mainnet/0xff94248c81e70922156247766887e167a8505f78.sol#332-335)
	- KUNOICHI.constructor() (../../sc/dataset/mainnet/0xff94248c81e70922156247766887e167a8505f78.sol#155-162)
	- KUNOICHI.tokenFromReflection(uint256) (../../sc/dataset/mainnet/0xff94248c81e70922156247766887e167a8505f78.sol#208-212)
Reentrancy in KUNOICHI.openTrading() (../../sc/dataset/mainnet/0xff94248c81e70922156247766887e167a8505f78.sol#288-301):
	External calls:
	- uniswapV2Pair = IUniswapV2Factory(_uniswapV2Router.factory()).createPair(address(this),_uniswapV2Router.WETH()) (../../sc/dataset/mainnet/0xff94248c81e70922156247766887e167a8505f78.sol#293)
	- uniswapV2Router.addLiquidityETH{value: address(this).balance}(address(this),balanceOf(address(this)),0,0,owner(),block.timestamp) (../../sc/dataset/mainnet/0xff94248c81e70922156247766887e167a8505f78.sol#294)
	External calls sending eth:
	- uniswapV2Router.addLiquidityETH{value: address(this).balance}(address(this),balanceOf(address(this)),0,0,owner(),block.timestamp) (../../sc/dataset/mainnet/0xff94248c81e70922156247766887e167a8505f78.sol#294)
	State variables written after the call(s):
	- tradingOpen = true (../../sc/dataset/mainnet/0xff94248c81e70922156247766887e167a8505f78.sol#299)
	KUNOICHI.tradingOpen (../../sc/dataset/mainnet/0xff94248c81e70922156247766887e167a8505f78.sol#142) can be used in cross function reentrancies:
	- KUNOICHI.openTrading() (../../sc/dataset/mainnet/0xff94248c81e70922156247766887e167a8505f78.sol#288-301)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities
INFO:Detectors:
KUNOICHI.openTrading() (../../sc/dataset/mainnet/0xff94248c81e70922156247766887e167a8505f78.sol#288-301) ignores return value by uniswapV2Router.addLiquidityETH{value: address(this).balance}(address(this),balanceOf(address(this)),0,0,owner(),block.timestamp) (../../sc/dataset/mainnet/0xff94248c81e70922156247766887e167a8505f78.sol#294)
KUNOICHI.openTrading() (../../sc/dataset/mainnet/0xff94248c81e70922156247766887e167a8505f78.sol#288-301) ignores return value by IERC20(uniswapV2Pair).approve(address(uniswapV2Router),type()(uint256).max) (../../sc/dataset/mainnet/0xff94248c81e70922156247766887e167a8505f78.sol#300)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return
INFO:Detectors:
KUNOICHI.allowance(address,address).owner (../../sc/dataset/mainnet/0xff94248c81e70922156247766887e167a8505f78.sol#189) shadows:
	- Ownable.owner() (../../sc/dataset/mainnet/0xff94248c81e70922156247766887e167a8505f78.sol#79-81) (function)
KUNOICHI._approve(address,address,uint256).owner (../../sc/dataset/mainnet/0xff94248c81e70922156247766887e167a8505f78.sol#214) shadows:
	- Ownable.owner() (../../sc/dataset/mainnet/0xff94248c81e70922156247766887e167a8505f78.sol#79-81) (function)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing
INFO:Detectors:
KUNOICHI.changeMaxTxAmount(uint256) (../../sc/dataset/mainnet/0xff94248c81e70922156247766887e167a8505f78.sol#274-277) should emit an event for: 
	- _maxTxAmount = _tTotal.mul(percentage).div(100) (../../sc/dataset/mainnet/0xff94248c81e70922156247766887e167a8505f78.sol#276) 
KUNOICHI.changeMaxWalletSize(uint256) (../../sc/dataset/mainnet/0xff94248c81e70922156247766887e167a8505f78.sol#279-282) should emit an event for: 
	- _maxWalletSize = _tTotal.mul(percentage).div(100) (../../sc/dataset/mainnet/0xff94248c81e70922156247766887e167a8505f78.sol#281) 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-arithmetic
INFO:Detectors:
Reentrancy in KUNOICHI._transfer(address,address,uint256) (../../sc/dataset/mainnet/0xff94248c81e70922156247766887e167a8505f78.sol#221-253):
	External calls:
	- swapTokensForEth(contractTokenBalance) (../../sc/dataset/mainnet/0xff94248c81e70922156247766887e167a8505f78.sol#244)
		- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (../../sc/dataset/mainnet/0xff94248c81e70922156247766887e167a8505f78.sol#260-266)
	External calls sending eth:
	- sendETHToFee(address(this).balance) (../../sc/dataset/mainnet/0xff94248c81e70922156247766887e167a8505f78.sol#247)
		- _feeAddrWallet.transfer(amount) (../../sc/dataset/mainnet/0xff94248c81e70922156247766887e167a8505f78.sol#285)
	State variables written after the call(s):
	- _tokenTransfer(from,to,amount) (../../sc/dataset/mainnet/0xff94248c81e70922156247766887e167a8505f78.sol#252)
		- _tFeeTotal = _tFeeTotal.add(tFee) (../../sc/dataset/mainnet/0xff94248c81e70922156247766887e167a8505f78.sol#334)
Reentrancy in KUNOICHI.openTrading() (../../sc/dataset/mainnet/0xff94248c81e70922156247766887e167a8505f78.sol#288-301):
	External calls:
	- uniswapV2Pair = IUniswapV2Factory(_uniswapV2Router.factory()).createPair(address(this),_uniswapV2Router.WETH()) (../../sc/dataset/mainnet/0xff94248c81e70922156247766887e167a8505f78.sol#293)
	- uniswapV2Router.addLiquidityETH{value: address(this).balance}(address(this),balanceOf(address(this)),0,0,owner(),block.timestamp) (../../sc/dataset/mainnet/0xff94248c81e70922156247766887e167a8505f78.sol#294)
	External calls sending eth:
	- uniswapV2Router.addLiquidityETH{value: address(this).balance}(address(this),balanceOf(address(this)),0,0,owner(),block.timestamp) (../../sc/dataset/mainnet/0xff94248c81e70922156247766887e167a8505f78.sol#294)
	State variables written after the call(s):
	- _maxTxAmount = _tTotal.mul(2).div(100) (../../sc/dataset/mainnet/0xff94248c81e70922156247766887e167a8505f78.sol#297)
	- _maxWalletSize = _tTotal.mul(3).div(100) (../../sc/dataset/mainnet/0xff94248c81e70922156247766887e167a8505f78.sol#298)
	- cooldownEnabled = true (../../sc/dataset/mainnet/0xff94248c81e70922156247766887e167a8505f78.sol#296)
	- swapEnabled = true (../../sc/dataset/mainnet/0xff94248c81e70922156247766887e167a8505f78.sol#295)
Reentrancy in KUNOICHI.transferFrom(address,address,uint256) (../../sc/dataset/mainnet/0xff94248c81e70922156247766887e167a8505f78.sol#198-202):
	External calls:
	- _transfer(sender,recipient,amount) (../../sc/dataset/mainnet/0xff94248c81e70922156247766887e167a8505f78.sol#199)
		- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (../../sc/dataset/mainnet/0xff94248c81e70922156247766887e167a8505f78.sol#260-266)
	External calls sending eth:
	- _transfer(sender,recipient,amount) (../../sc/dataset/mainnet/0xff94248c81e70922156247766887e167a8505f78.sol#199)
		- _feeAddrWallet.transfer(amount) (../../sc/dataset/mainnet/0xff94248c81e70922156247766887e167a8505f78.sol#285)
	State variables written after the call(s):
	- _approve(sender,_msgSender(),_allowances[sender][_msgSender()].sub(amount,ERC20: transfer amount exceeds allowance)) (../../sc/dataset/mainnet/0xff94248c81e70922156247766887e167a8505f78.sol#200)
		- _allowances[owner][spender] = amount (../../sc/dataset/mainnet/0xff94248c81e70922156247766887e167a8505f78.sol#217)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2
INFO:Detectors:
Reentrancy in KUNOICHI._transfer(address,address,uint256) (../../sc/dataset/mainnet/0xff94248c81e70922156247766887e167a8505f78.sol#221-253):
	External calls:
	- swapTokensForEth(contractTokenBalance) (../../sc/dataset/mainnet/0xff94248c81e70922156247766887e167a8505f78.sol#244)
		- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (../../sc/dataset/mainnet/0xff94248c81e70922156247766887e167a8505f78.sol#260-266)
	External calls sending eth:
	- sendETHToFee(address(this).balance) (../../sc/dataset/mainnet/0xff94248c81e70922156247766887e167a8505f78.sol#247)
		- _feeAddrWallet.transfer(amount) (../../sc/dataset/mainnet/0xff94248c81e70922156247766887e167a8505f78.sol#285)
	Event emitted after the call(s):
	- Transfer(sender,recipient,tTransferAmount) (../../sc/dataset/mainnet/0xff94248c81e70922156247766887e167a8505f78.sol#323)
		- _tokenTransfer(from,to,amount) (../../sc/dataset/mainnet/0xff94248c81e70922156247766887e167a8505f78.sol#252)
Reentrancy in KUNOICHI.transferFrom(address,address,uint256) (../../sc/dataset/mainnet/0xff94248c81e70922156247766887e167a8505f78.sol#198-202):
	External calls:
	- _transfer(sender,recipient,amount) (../../sc/dataset/mainnet/0xff94248c81e70922156247766887e167a8505f78.sol#199)
		- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (../../sc/dataset/mainnet/0xff94248c81e70922156247766887e167a8505f78.sol#260-266)
	External calls sending eth:
	- _transfer(sender,recipient,amount) (../../sc/dataset/mainnet/0xff94248c81e70922156247766887e167a8505f78.sol#199)
		- _feeAddrWallet.transfer(amount) (../../sc/dataset/mainnet/0xff94248c81e70922156247766887e167a8505f78.sol#285)
	Event emitted after the call(s):
	- Approval(owner,spender,amount) (../../sc/dataset/mainnet/0xff94248c81e70922156247766887e167a8505f78.sol#218)
		- _approve(sender,_msgSender(),_allowances[sender][_msgSender()].sub(amount,ERC20: transfer amount exceeds allowance)) (../../sc/dataset/mainnet/0xff94248c81e70922156247766887e167a8505f78.sol#200)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3
INFO:Detectors:
KUNOICHI._transfer(address,address,uint256) (../../sc/dataset/mainnet/0xff94248c81e70922156247766887e167a8505f78.sol#221-253) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool)(cooldown[to] < block.timestamp) (../../sc/dataset/mainnet/0xff94248c81e70922156247766887e167a8505f78.sol#233)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp
INFO:Detectors:
Pragma version^0.8.7 (../../sc/dataset/mainnet/0xff94248c81e70922156247766887e167a8505f78.sol#11) allows old versions
solc-0.8.7 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity
INFO:Detectors:
Function IUniswapV2Router02.WETH() (../../sc/dataset/mainnet/0xff94248c81e70922156247766887e167a8505f78.sol#108) is not in mixedCase
Constant KUNOICHI._tTotal (../../sc/dataset/mainnet/0xff94248c81e70922156247766887e167a8505f78.sol#128) is not in UPPER_CASE_WITH_UNDERSCORES
Constant KUNOICHI._name (../../sc/dataset/mainnet/0xff94248c81e70922156247766887e167a8505f78.sol#136) is not in UPPER_CASE_WITH_UNDERSCORES
Constant KUNOICHI._symbol (../../sc/dataset/mainnet/0xff94248c81e70922156247766887e167a8505f78.sol#137) is not in UPPER_CASE_WITH_UNDERSCORES
Constant KUNOICHI._decimals (../../sc/dataset/mainnet/0xff94248c81e70922156247766887e167a8505f78.sol#138) is not in UPPER_CASE_WITH_UNDERSCORES
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions
INFO:Detectors:
Reentrancy in KUNOICHI._transfer(address,address,uint256) (../../sc/dataset/mainnet/0xff94248c81e70922156247766887e167a8505f78.sol#221-253):
	External calls:
	- sendETHToFee(address(this).balance) (../../sc/dataset/mainnet/0xff94248c81e70922156247766887e167a8505f78.sol#247)
		- _feeAddrWallet.transfer(amount) (../../sc/dataset/mainnet/0xff94248c81e70922156247766887e167a8505f78.sol#285)
	State variables written after the call(s):
	- _tokenTransfer(from,to,amount) (../../sc/dataset/mainnet/0xff94248c81e70922156247766887e167a8505f78.sol#252)
		- _rOwned[address(this)] = _rOwned[address(this)].add(rTeam) (../../sc/dataset/mainnet/0xff94248c81e70922156247766887e167a8505f78.sol#329)
		- _rOwned[sender] = _rOwned[sender].sub(rAmount) (../../sc/dataset/mainnet/0xff94248c81e70922156247766887e167a8505f78.sol#319)
		- _rOwned[recipient] = _rOwned[recipient].add(rTransferAmount) (../../sc/dataset/mainnet/0xff94248c81e70922156247766887e167a8505f78.sol#320)
	- _tokenTransfer(from,to,amount) (../../sc/dataset/mainnet/0xff94248c81e70922156247766887e167a8505f78.sol#252)
		- _rTotal = _rTotal.sub(rFee) (../../sc/dataset/mainnet/0xff94248c81e70922156247766887e167a8505f78.sol#333)
	- _tokenTransfer(from,to,amount) (../../sc/dataset/mainnet/0xff94248c81e70922156247766887e167a8505f78.sol#252)
		- _tFeeTotal = _tFeeTotal.add(tFee) (../../sc/dataset/mainnet/0xff94248c81e70922156247766887e167a8505f78.sol#334)
	Event emitted after the call(s):
	- Transfer(sender,recipient,tTransferAmount) (../../sc/dataset/mainnet/0xff94248c81e70922156247766887e167a8505f78.sol#323)
		- _tokenTransfer(from,to,amount) (../../sc/dataset/mainnet/0xff94248c81e70922156247766887e167a8505f78.sol#252)
Reentrancy in KUNOICHI.transferFrom(address,address,uint256) (../../sc/dataset/mainnet/0xff94248c81e70922156247766887e167a8505f78.sol#198-202):
	External calls:
	- _transfer(sender,recipient,amount) (../../sc/dataset/mainnet/0xff94248c81e70922156247766887e167a8505f78.sol#199)
		- _feeAddrWallet.transfer(amount) (../../sc/dataset/mainnet/0xff94248c81e70922156247766887e167a8505f78.sol#285)
	State variables written after the call(s):
	- _approve(sender,_msgSender(),_allowances[sender][_msgSender()].sub(amount,ERC20: transfer amount exceeds allowance)) (../../sc/dataset/mainnet/0xff94248c81e70922156247766887e167a8505f78.sol#200)
		- _allowances[owner][spender] = amount (../../sc/dataset/mainnet/0xff94248c81e70922156247766887e167a8505f78.sol#217)
	Event emitted after the call(s):
	- Approval(owner,spender,amount) (../../sc/dataset/mainnet/0xff94248c81e70922156247766887e167a8505f78.sol#218)
		- _approve(sender,_msgSender(),_allowances[sender][_msgSender()].sub(amount,ERC20: transfer amount exceeds allowance)) (../../sc/dataset/mainnet/0xff94248c81e70922156247766887e167a8505f78.sol#200)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-4
INFO:Detectors:
Variable KUNOICHI._getValues(uint256).rTransferAmount (../../sc/dataset/mainnet/0xff94248c81e70922156247766887e167a8505f78.sol#355) is too similar to KUNOICHI._getTValues(uint256,uint256,uint256).tTransferAmount (../../sc/dataset/mainnet/0xff94248c81e70922156247766887e167a8505f78.sol#362)
Variable KUNOICHI._getValues(uint256).rTransferAmount (../../sc/dataset/mainnet/0xff94248c81e70922156247766887e167a8505f78.sol#355) is too similar to KUNOICHI._getValues(uint256).tTransferAmount (../../sc/dataset/mainnet/0xff94248c81e70922156247766887e167a8505f78.sol#353)
Variable KUNOICHI._transferStandard(address,address,uint256).rTransferAmount (../../sc/dataset/mainnet/0xff94248c81e70922156247766887e167a8505f78.sol#318) is too similar to KUNOICHI._transferStandard(address,address,uint256).tTransferAmount (../../sc/dataset/mainnet/0xff94248c81e70922156247766887e167a8505f78.sol#318)
Variable KUNOICHI._transferStandard(address,address,uint256).rTransferAmount (../../sc/dataset/mainnet/0xff94248c81e70922156247766887e167a8505f78.sol#318) is too similar to KUNOICHI._getTValues(uint256,uint256,uint256).tTransferAmount (../../sc/dataset/mainnet/0xff94248c81e70922156247766887e167a8505f78.sol#362)
Variable KUNOICHI._transferStandard(address,address,uint256).rTransferAmount (../../sc/dataset/mainnet/0xff94248c81e70922156247766887e167a8505f78.sol#318) is too similar to KUNOICHI._getValues(uint256).tTransferAmount (../../sc/dataset/mainnet/0xff94248c81e70922156247766887e167a8505f78.sol#353)
Variable KUNOICHI._getValues(uint256).rTransferAmount (../../sc/dataset/mainnet/0xff94248c81e70922156247766887e167a8505f78.sol#355) is too similar to KUNOICHI._transferStandard(address,address,uint256).tTransferAmount (../../sc/dataset/mainnet/0xff94248c81e70922156247766887e167a8505f78.sol#318)
Variable KUNOICHI._getRValues(uint256,uint256,uint256,uint256).rTransferAmount (../../sc/dataset/mainnet/0xff94248c81e70922156247766887e167a8505f78.sol#370) is too similar to KUNOICHI._getValues(uint256).tTransferAmount (../../sc/dataset/mainnet/0xff94248c81e70922156247766887e167a8505f78.sol#353)
Variable KUNOICHI._getRValues(uint256,uint256,uint256,uint256).rTransferAmount (../../sc/dataset/mainnet/0xff94248c81e70922156247766887e167a8505f78.sol#370) is too similar to KUNOICHI._getTValues(uint256,uint256,uint256).tTransferAmount (../../sc/dataset/mainnet/0xff94248c81e70922156247766887e167a8505f78.sol#362)
Variable KUNOICHI._getRValues(uint256,uint256,uint256,uint256).rTransferAmount (../../sc/dataset/mainnet/0xff94248c81e70922156247766887e167a8505f78.sol#370) is too similar to KUNOICHI._transferStandard(address,address,uint256).tTransferAmount (../../sc/dataset/mainnet/0xff94248c81e70922156247766887e167a8505f78.sol#318)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#variable-names-too-similar
INFO:Detectors:
KUNOICHI.slitherConstructorConstantVariables() (../../sc/dataset/mainnet/0xff94248c81e70922156247766887e167a8505f78.sol#119-386) uses literals with too many digits:
	- _tTotal = 100000000000 * 10 ** 9 (../../sc/dataset/mainnet/0xff94248c81e70922156247766887e167a8505f78.sol#128)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits
INFO:Detectors:
KUNOICHI._tOwned (../../sc/dataset/mainnet/0xff94248c81e70922156247766887e167a8505f78.sol#122) is never used in KUNOICHI (../../sc/dataset/mainnet/0xff94248c81e70922156247766887e167a8505f78.sol#119-386)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-state-variable
INFO:Detectors:
KUNOICHI._feeAddrWallet (../../sc/dataset/mainnet/0xff94248c81e70922156247766887e167a8505f78.sol#134) should be immutable 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-immutable
INFO:Slither:/bdata2/sc/dataset/mainnet/0xff94248c81e70922156247766887e167a8505f78.sol analyzed (7 contracts with 85 detectors), 35 result(s) found
