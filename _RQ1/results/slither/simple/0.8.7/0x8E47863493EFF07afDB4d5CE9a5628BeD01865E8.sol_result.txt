Compilation warnings/errors on /bdata2/sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol:
Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    --> /bdata2/sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol:2252:26:
     |
2252 |     function royaltyInfo(uint256 _tokenId, uint256 _salePrice) external view override
     |                          ^^^^^^^^^^^^^^^^


INFO:Detectors:
Reentrancy in SOMFactory.mint(uint256) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2218-2250):
	External calls:
	- _safeMint(msg.sender,tokenId) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2238)
		- IERC721ReceiverUpgradeable(to).onERC721Received(_msgSender(),from,tokenId,data) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#946-957)
	- CowardGambit(CowardAddress).setJoinItems(soms[tokenId].tokenId,soms[tokenId].state) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2245)
	External calls sending eth:
	- address(BankAddress).transfer(MINT_PRICE * _mintAmount * 95 / DENOMINATOR) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2229)
	- address(devAddress).transfer(MINT_PRICE * _mintAmount * 5 / DENOMINATOR) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2230)
	- address(msg.sender).transfer(restAmount) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2231)
	State variables written after the call(s):
	- NFTcountPerAddress[msg.sender] ++ (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2246)
	SOMFactory.NFTcountPerAddress (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2105) can be used in cross function reentrancies:
	- SOMFactory.NFTcountPerAddress (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2105)
	- SOMFactory.mint(uint256) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2218-2250)
	- TotalMintCount ++ (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2244)
	SOMFactory.TotalMintCount (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2095) can be used in cross function reentrancies:
	- SOMFactory.TotalMintCount (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2095)
	- SOMFactory.mint(uint256) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2218-2250)
	- _safeMint(msg.sender,tokenId) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2238)
		- _allTokens.push(tokenId) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1343)
		- _allTokens[tokenIndex] = lastTokenId (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1391)
		- _allTokens.pop() (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1396)
	ERC721EnumerableUpgradeable._allTokens (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1230) can be used in cross function reentrancies:
	- ERC721EnumerableUpgradeable._addTokenToAllTokensEnumeration(uint256) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1341-1344)
	- ERC721EnumerableUpgradeable._removeTokenFromAllTokensEnumeration(uint256) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1379-1397)
	- ERC721EnumerableUpgradeable.tokenByIndex(uint256) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1260-1263)
	- ERC721EnumerableUpgradeable.totalSupply() (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1253-1255)
	- _safeMint(msg.sender,tokenId) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2238)
		- _allTokensIndex[tokenId] = _allTokens.length (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1342)
		- _allTokensIndex[lastTokenId] = tokenIndex (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1392)
		- delete _allTokensIndex[tokenId] (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1395)
	ERC721EnumerableUpgradeable._allTokensIndex (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1233) can be used in cross function reentrancies:
	- ERC721EnumerableUpgradeable._addTokenToAllTokensEnumeration(uint256) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1341-1344)
	- ERC721EnumerableUpgradeable._removeTokenFromAllTokensEnumeration(uint256) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1379-1397)
	- _safeMint(msg.sender,tokenId) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2238)
		- _balances[to] += 1 (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#810)
	ERC721Upgradeable._balances (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#539) can be used in cross function reentrancies:
	- ERC721Upgradeable._burn(uint256) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#831-852)
	- ERC721Upgradeable._mint(address,uint256) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#796-818)
	- ERC721Upgradeable._transfer(address,address,uint256) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#865-895)
	- ERC721Upgradeable.balanceOf(address) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#572-575)
	- _safeMint(msg.sender,tokenId) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2238)
		- _ownedTokens[to][length] = tokenId (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1333)
		- _ownedTokens[from][tokenIndex] = lastTokenId (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1365)
		- delete _ownedTokens[from][lastTokenIndex] (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1371)
	ERC721EnumerableUpgradeable._ownedTokens (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1224) can be used in cross function reentrancies:
	- ERC721EnumerableUpgradeable._addTokenToOwnerEnumeration(address,uint256) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1331-1335)
	- ERC721EnumerableUpgradeable._removeTokenFromOwnerEnumeration(address,uint256) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1354-1372)
	- ERC721EnumerableUpgradeable.tokenOfOwnerByIndex(address,uint256) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1245-1248)
	- _safeMint(msg.sender,tokenId) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2238)
		- _ownedTokensIndex[tokenId] = length (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1334)
		- _ownedTokensIndex[lastTokenId] = tokenIndex (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1366)
		- delete _ownedTokensIndex[tokenId] (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1370)
	ERC721EnumerableUpgradeable._ownedTokensIndex (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1227) can be used in cross function reentrancies:
	- ERC721EnumerableUpgradeable._addTokenToOwnerEnumeration(address,uint256) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1331-1335)
	- ERC721EnumerableUpgradeable._removeTokenFromOwnerEnumeration(address,uint256) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1354-1372)
	- _safeMint(msg.sender,tokenId) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2238)
		- _owners[tokenId] = to (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#813)
	ERC721Upgradeable._owners (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#536) can be used in cross function reentrancies:
	- ERC721Upgradeable._burn(uint256) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#831-852)
	- ERC721Upgradeable._mint(address,uint256) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#796-818)
	- ERC721Upgradeable._ownerOf(uint256) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#726-728)
	- ERC721Upgradeable._transfer(address,address,uint256) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#865-895)
	- soms[tokenId] = SOM(tokenId,1) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2239-2242)
	SOMFactory.soms (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2116) can be used in cross function reentrancies:
	- SOMFactory.fetchMySOMs(address) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2288-2309)
	- SOMFactory.fetchSOMs() (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2277-2287)
	- SOMFactory.getSOMarray(uint256) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2208-2210)
	- SOMFactory.mint(uint256) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2218-2250)
	- SOMFactory.setSOMarray(uint256,uint256) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2212-2214)
	- SOMFactory.soms (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2116)
	- SOMFactory.tokenURI(uint256) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2187-2200)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities
INFO:Detectors:
MathUpgradeable.mulDiv(uint256,uint256,uint256) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#3065-3145) performs a multiplication on the result of a division:
	- denominator = denominator / twos (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#3112)
	- inverse = (3 * denominator) ^ 2 (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#3127)
MathUpgradeable.mulDiv(uint256,uint256,uint256) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#3065-3145) performs a multiplication on the result of a division:
	- denominator = denominator / twos (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#3112)
	- inverse *= 2 - denominator * inverse (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#3131)
MathUpgradeable.mulDiv(uint256,uint256,uint256) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#3065-3145) performs a multiplication on the result of a division:
	- denominator = denominator / twos (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#3112)
	- inverse *= 2 - denominator * inverse (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#3132)
MathUpgradeable.mulDiv(uint256,uint256,uint256) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#3065-3145) performs a multiplication on the result of a division:
	- denominator = denominator / twos (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#3112)
	- inverse *= 2 - denominator * inverse (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#3133)
MathUpgradeable.mulDiv(uint256,uint256,uint256) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#3065-3145) performs a multiplication on the result of a division:
	- denominator = denominator / twos (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#3112)
	- inverse *= 2 - denominator * inverse (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#3134)
MathUpgradeable.mulDiv(uint256,uint256,uint256) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#3065-3145) performs a multiplication on the result of a division:
	- denominator = denominator / twos (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#3112)
	- inverse *= 2 - denominator * inverse (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#3135)
MathUpgradeable.mulDiv(uint256,uint256,uint256) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#3065-3145) performs a multiplication on the result of a division:
	- denominator = denominator / twos (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#3112)
	- inverse *= 2 - denominator * inverse (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#3136)
MathUpgradeable.mulDiv(uint256,uint256,uint256) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#3065-3145) performs a multiplication on the result of a division:
	- prod0 = prod0 / twos (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#3115)
	- result = prod0 * inverse (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#3142)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#divide-before-multiply
INFO:Detectors:
Reentrancy in CowardGambit.endRound() (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1788-1847):
	External calls:
	- updateCowardList() (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1792)
		- SOMFactory(SomAddress).setSOMarray(CowardTokenIDs[i],15) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1864)
	State variables written after the call(s):
	- currentRoundId ++ (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1796)
	CowardGambit.currentRoundId (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1724) can be used in cross function reentrancies:
	- CowardGambit.currentRoundId (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1724)
	- CowardGambit.endRound() (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1788-1847)
	- CowardGambit.setCoward(uint256) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1849-1856)
	- CowardGambit.setMars(uint256) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1887-1897)
Reentrancy in CowardGambit.endRound() (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1788-1847):
	External calls:
	- updateCowardList() (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1792)
		- SOMFactory(SomAddress).setSOMarray(CowardTokenIDs[i],15) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1864)
	- SOMFactory(SomAddress).setSOMarray(MainWinner,19) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1803)
	- SOMFactory(SomAddress).setSOMarray(MainWinner,18) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1805)
	State variables written after the call(s):
	- joinItems[index] = joinItems[joinItems.length - 1] (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1807)
	CowardGambit.joinItems (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1720) can be used in cross function reentrancies:
	- CowardGambit.endRound() (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1788-1847)
	- CowardGambit.fetchTotalAliveAmount() (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1926-1928)
	- CowardGambit.joinItems (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1720)
	- CowardGambit.setFinishMars() (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1899-1916)
	- CowardGambit.setJoinItems(uint256,uint256) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1781-1786)
	- CowardGambit.updateCowardList() (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1858-1874)
	- joinItems.pop() (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1808)
	CowardGambit.joinItems (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1720) can be used in cross function reentrancies:
	- CowardGambit.endRound() (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1788-1847)
	- CowardGambit.fetchTotalAliveAmount() (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1926-1928)
	- CowardGambit.joinItems (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1720)
	- CowardGambit.setFinishMars() (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1899-1916)
	- CowardGambit.setJoinItems(uint256,uint256) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1781-1786)
	- CowardGambit.updateCowardList() (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1858-1874)
Reentrancy in CowardGambit.endRound() (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1788-1847):
	External calls:
	- updateCowardList() (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1792)
		- SOMFactory(SomAddress).setSOMarray(CowardTokenIDs[i],15) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1864)
	- SOMFactory(SomAddress).setSOMarray(MainWinner,19) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1803)
	- SOMFactory(SomAddress).setSOMarray(MainWinner,18) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1805)
	- SOMFactory(SomAddress).setSOMarray(joinItems[dead_index].tokenId,12) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1813)
	State variables written after the call(s):
	- i < deathAmount (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1810)
	CowardGambit.joinItems (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1720) can be used in cross function reentrancies:
	- CowardGambit.endRound() (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1788-1847)
	- CowardGambit.fetchTotalAliveAmount() (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1926-1928)
	- CowardGambit.joinItems (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1720)
	- CowardGambit.setFinishMars() (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1899-1916)
	- CowardGambit.setJoinItems(uint256,uint256) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1781-1786)
	- CowardGambit.updateCowardList() (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1858-1874)
	- joinItems[dead_index] = joinItems[joinItems.length - 1] (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1815)
	CowardGambit.joinItems (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1720) can be used in cross function reentrancies:
	- CowardGambit.endRound() (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1788-1847)
	- CowardGambit.fetchTotalAliveAmount() (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1926-1928)
	- CowardGambit.joinItems (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1720)
	- CowardGambit.setFinishMars() (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1899-1916)
	- CowardGambit.setJoinItems(uint256,uint256) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1781-1786)
	- CowardGambit.updateCowardList() (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1858-1874)
	- joinItems.pop() (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1816)
	CowardGambit.joinItems (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1720) can be used in cross function reentrancies:
	- CowardGambit.endRound() (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1788-1847)
	- CowardGambit.fetchTotalAliveAmount() (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1926-1928)
	- CowardGambit.joinItems (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1720)
	- CowardGambit.setFinishMars() (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1899-1916)
	- CowardGambit.setJoinItems(uint256,uint256) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1781-1786)
	- CowardGambit.updateCowardList() (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1858-1874)
	- joinItems.push(SOM(MainWinner,1)) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1818-1821)
	CowardGambit.joinItems (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1720) can be used in cross function reentrancies:
	- CowardGambit.endRound() (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1788-1847)
	- CowardGambit.fetchTotalAliveAmount() (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1926-1928)
	- CowardGambit.joinItems (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1720)
	- CowardGambit.setFinishMars() (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1899-1916)
	- CowardGambit.setJoinItems(uint256,uint256) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1781-1786)
	- CowardGambit.updateCowardList() (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1858-1874)
Reentrancy in CowardGambit.endRound() (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1788-1847):
	External calls:
	- updateCowardList() (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1792)
		- SOMFactory(SomAddress).setSOMarray(CowardTokenIDs[i],15) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1864)
	- SOMFactory(SomAddress).setSOMarray(joinItems[index_scope_2].tokenId,6) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1826)
	- SOMFactory(SomAddress).setSOMarray(joinItems[index_scope_2].tokenId,5) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1827)
	- SOMFactory(SomAddress).setSOMarray(joinItems[index_scope_2].tokenId,8) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1829)
	- SOMFactory(SomAddress).setSOMarray(joinItems[index_scope_2].tokenId,7) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1830)
	- SOMFactory(SomAddress).setSOMarray(joinItems[index_scope_2].tokenId,9) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1833)
	- SOMFactory(SomAddress).setSOMarray(joinItems[index_scope_2].tokenId,10) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1834)
	- SOMFactory(SomAddress).setSOMarray(joinItems[index_scope_2].tokenId,3) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1837)
	- SOMFactory(SomAddress).setSOMarray(joinItems[index_scope_2].tokenId,11) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1838)
	State variables written after the call(s):
	- currentRoundId ++ (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1844)
	CowardGambit.currentRoundId (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1724) can be used in cross function reentrancies:
	- CowardGambit.currentRoundId (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1724)
	- CowardGambit.endRound() (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1788-1847)
	- CowardGambit.setCoward(uint256) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1849-1856)
	- CowardGambit.setMars(uint256) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1887-1897)
	- joinItems[index_scope_2] = joinItems[joinItems.length - 1] (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1840)
	CowardGambit.joinItems (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1720) can be used in cross function reentrancies:
	- CowardGambit.endRound() (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1788-1847)
	- CowardGambit.fetchTotalAliveAmount() (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1926-1928)
	- CowardGambit.joinItems (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1720)
	- CowardGambit.setFinishMars() (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1899-1916)
	- CowardGambit.setJoinItems(uint256,uint256) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1781-1786)
	- CowardGambit.updateCowardList() (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1858-1874)
	- joinItems.pop() (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1841)
	CowardGambit.joinItems (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1720) can be used in cross function reentrancies:
	- CowardGambit.endRound() (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1788-1847)
	- CowardGambit.fetchTotalAliveAmount() (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1926-1928)
	- CowardGambit.joinItems (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1720)
	- CowardGambit.setFinishMars() (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1899-1916)
	- CowardGambit.setJoinItems(uint256,uint256) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1781-1786)
	- CowardGambit.updateCowardList() (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1858-1874)
Reentrancy in CowardGambit.setFinishMars() (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1899-1916):
	External calls:
	- SOMFactory(SomAddress).Burn(Mars[index].tokenId) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1905)
	- SOMFactory(SomAddress).setSOMarray(Mars[index].tokenId,20) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1906)
	State variables written after the call(s):
	- Mars[index] = Mars[Mars.length - 1] (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1907)
	CowardGambit.Mars (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1722) can be used in cross function reentrancies:
	- CowardGambit.Mars (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1722)
	- CowardGambit.fetchMarsAmount() (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1922-1924)
	- CowardGambit.setFinishMars() (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1899-1916)
	- CowardGambit.setMars(uint256) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1887-1897)
	- Mars.pop() (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1908)
	CowardGambit.Mars (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1722) can be used in cross function reentrancies:
	- CowardGambit.Mars (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1722)
	- CowardGambit.fetchMarsAmount() (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1922-1924)
	- CowardGambit.setFinishMars() (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1899-1916)
	- CowardGambit.setMars(uint256) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1887-1897)
Reentrancy in CowardGambit.setFinishMars() (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1899-1916):
	External calls:
	- SOMFactory(SomAddress).Burn(Mars[index].tokenId) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1905)
	- SOMFactory(SomAddress).setSOMarray(Mars[index].tokenId,20) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1906)
	- SOMFactory(SomAddress).setSOMarray(Mars[i_scope_0].tokenId,17) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1912)
	State variables written after the call(s):
	- Mars[i_scope_0].state = 17 (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1913)
	CowardGambit.Mars (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1722) can be used in cross function reentrancies:
	- CowardGambit.Mars (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1722)
	- CowardGambit.fetchMarsAmount() (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1922-1924)
	- CowardGambit.setFinishMars() (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1899-1916)
	- CowardGambit.setMars(uint256) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1887-1897)
	- joinItems.push(Mars[i_scope_0]) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1914)
	CowardGambit.joinItems (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1720) can be used in cross function reentrancies:
	- CowardGambit.endRound() (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1788-1847)
	- CowardGambit.fetchTotalAliveAmount() (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1926-1928)
	- CowardGambit.joinItems (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1720)
	- CowardGambit.setFinishMars() (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1899-1916)
	- CowardGambit.setJoinItems(uint256,uint256) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1781-1786)
	- CowardGambit.updateCowardList() (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1858-1874)
Reentrancy in CowardGambit.updateCowardList() (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1858-1874):
	External calls:
	- SOMFactory(SomAddress).setSOMarray(CowardTokenIDs[i],15) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1864)
	State variables written after the call(s):
	- Coward.push(SOM(CowardTokenIDs[i],15)) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1860-1863)
	CowardGambit.Coward (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1721) can be used in cross function reentrancies:
	- CowardGambit.Coward (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1721)
	- CowardGambit.fetchCowardAmount() (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1918-1920)
	- CowardGambit.setFinishCoward() (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1876-1885)
	- CowardGambit.updateCowardList() (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1858-1874)
	- CowardIndex = CowardTokenIDs.length (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1873)
	CowardGambit.CowardIndex (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1729) can be used in cross function reentrancies:
	- CowardGambit.CowardIndex (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1729)
	- CowardGambit.updateCowardList() (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1858-1874)
	- joinItems[j] = joinItems[joinItems.length - 1] (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1867)
	CowardGambit.joinItems (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1720) can be used in cross function reentrancies:
	- CowardGambit.endRound() (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1788-1847)
	- CowardGambit.fetchTotalAliveAmount() (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1926-1928)
	- CowardGambit.joinItems (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1720)
	- CowardGambit.setFinishMars() (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1899-1916)
	- CowardGambit.setJoinItems(uint256,uint256) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1781-1786)
	- CowardGambit.updateCowardList() (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1858-1874)
	- joinItems.pop() (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1868)
	CowardGambit.joinItems (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1720) can be used in cross function reentrancies:
	- CowardGambit.endRound() (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1788-1847)
	- CowardGambit.fetchTotalAliveAmount() (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1926-1928)
	- CowardGambit.joinItems (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1720)
	- CowardGambit.setFinishMars() (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1899-1916)
	- CowardGambit.setJoinItems(uint256,uint256) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1781-1786)
	- CowardGambit.updateCowardList() (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1858-1874)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1
INFO:Detectors:
ERC721Upgradeable._checkOnERC721Received(address,address,uint256,bytes) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#939-961) ignores return value by IERC721ReceiverUpgradeable(to).onERC721Received(_msgSender(),from,tokenId,data) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#946-957)
VRFConsumerBase.requestRandomness(bytes32,uint256) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1642-1656) ignores return value by LINK.transferAndCall(vrfCoordinator,_fee,abi.encode(_keyHash,USER_SEED_PLACEHOLDER)) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1643)
CowardGambit.endRound() (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1788-1847) ignores return value by RandomGenerator(randomNumberAddress).requestRandomNumber() (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1798)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return
INFO:Detectors:
SOMFactory.fetchMySOMs(address).owner (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2293) shadows:
	- OwnableUpgradeable.owner() (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1128-1130) (function)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing
INFO:Detectors:
CowardGambit.setSOMAddress(address) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1742-1744) should emit an event for: 
	- SomAddress = _address (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1743) 
RandomGenerator.setSOMAddress(address) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2048-2054) should emit an event for: 
	- SOMAddress = _SOMAddr (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2053) 
SOMFactory.setCowardAddress(address) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2204-2206) should emit an event for: 
	- CowardAddress = _address (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2205) 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-access-control
INFO:Detectors:
CowardGambit.setSOMAddress(address)._address (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1742) lacks a zero-check on :
		- SomAddress = _address (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1743)
CowardGambit.initialize(address,address)._randomNumberAddress (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1757) lacks a zero-check on :
		- randomNumberAddress = _randomNumberAddress (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1761)
CowardGambit.initialize(address,address)._adminAddress (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1758) lacks a zero-check on :
		- adminAddress = _adminAddress (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1762)
SOMFactory.initialize(string,string,address,address,address,uint256[])._adminAddress (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2123) lacks a zero-check on :
		- adminAddress = _adminAddress (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2133)
SOMFactory.initialize(string,string,address,address,address,uint256[])._BankAddress (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2124) lacks a zero-check on :
		- BankAddress = _BankAddress (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2134)
SOMFactory.initialize(string,string,address,address,address,uint256[])._devAddress (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2125) lacks a zero-check on :
		- devAddress = _devAddress (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2135)
SOMFactory.setCowardAddress(address)._address (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2204) lacks a zero-check on :
		- CowardAddress = _address (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2205)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation
INFO:Detectors:
CowardGambit.endRound() (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1788-1847) has external calls inside a loop: SOMFactory(SomAddress).getSOMarray(joinItems[dead_index].tokenId) != 17 (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1812)
CowardGambit.endRound() (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1788-1847) has external calls inside a loop: SOMFactory(SomAddress).setSOMarray(joinItems[dead_index].tokenId,12) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1813)
CowardGambit.endRound() (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1788-1847) has external calls inside a loop: SOMFactory(SomAddress).setSOMarray(joinItems[index_scope_2].tokenId,6) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1826)
CowardGambit.endRound() (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1788-1847) has external calls inside a loop: SOMFactory(SomAddress).setSOMarray(joinItems[index_scope_2].tokenId,5) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1827)
CowardGambit.endRound() (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1788-1847) has external calls inside a loop: SOMFactory(SomAddress).setSOMarray(joinItems[index_scope_2].tokenId,8) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1829)
CowardGambit.endRound() (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1788-1847) has external calls inside a loop: SOMFactory(SomAddress).setSOMarray(joinItems[index_scope_2].tokenId,9) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1833)
CowardGambit.endRound() (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1788-1847) has external calls inside a loop: SOMFactory(SomAddress).setSOMarray(joinItems[index_scope_2].tokenId,3) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1837)
CowardGambit.endRound() (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1788-1847) has external calls inside a loop: SOMFactory(SomAddress).setSOMarray(joinItems[index_scope_2].tokenId,11) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1838)
CowardGambit.endRound() (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1788-1847) has external calls inside a loop: SOMFactory(SomAddress).setSOMarray(joinItems[index_scope_2].tokenId,10) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1834)
CowardGambit.endRound() (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1788-1847) has external calls inside a loop: SOMFactory(SomAddress).setSOMarray(joinItems[index_scope_2].tokenId,7) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1830)
CowardGambit.updateCowardList() (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1858-1874) has external calls inside a loop: SOMFactory(SomAddress).setSOMarray(CowardTokenIDs[i],15) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1864)
CowardGambit.setFinishMars() (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1899-1916) has external calls inside a loop: SOMFactory(SomAddress).Burn(Mars[index].tokenId) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1905)
CowardGambit.setFinishMars() (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1899-1916) has external calls inside a loop: SOMFactory(SomAddress).setSOMarray(Mars[index].tokenId,20) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1906)
CowardGambit.setFinishMars() (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1899-1916) has external calls inside a loop: SOMFactory(SomAddress).setSOMarray(Mars[i_scope_0].tokenId,17) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1912)
ERC721Upgradeable._checkOnERC721Received(address,address,uint256,bytes) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#939-961) has external calls inside a loop: IERC721ReceiverUpgradeable(to).onERC721Received(_msgSender(),from,tokenId,data) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#946-957)
SOMFactory.mint(uint256) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2218-2250) has external calls inside a loop: CowardGambit(CowardAddress).setJoinItems(soms[tokenId].tokenId,soms[tokenId].state) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2245)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation/#calls-inside-a-loop
INFO:Detectors:
Reentrancy in CowardGambit.endRound() (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1788-1847):
	External calls:
	- updateCowardList() (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1792)
		- SOMFactory(SomAddress).setSOMarray(CowardTokenIDs[i],15) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1864)
	State variables written after the call(s):
	- MainWinner = 0 (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1795)
	- MainWinner = joinItems[index].tokenId (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1801)
	- isRandomNumber = false (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1794)
Reentrancy in CowardGambit.endRound() (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1788-1847):
	External calls:
	- updateCowardList() (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1792)
		- SOMFactory(SomAddress).setSOMarray(CowardTokenIDs[i],15) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1864)
	- RandomGenerator(randomNumberAddress).requestRandomNumber() (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1798)
	- SOMFactory(SomAddress).setSOMarray(MainWinner,19) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1803)
	- SOMFactory(SomAddress).setSOMarray(MainWinner,18) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1805)
	- SOMFactory(SomAddress).setSOMarray(joinItems[dead_index].tokenId,12) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1813)
	- SOMFactory(SomAddress).setSOMarray(joinItems[index_scope_2].tokenId,6) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1826)
	- SOMFactory(SomAddress).setSOMarray(joinItems[index_scope_2].tokenId,5) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1827)
	- SOMFactory(SomAddress).setSOMarray(joinItems[index_scope_2].tokenId,8) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1829)
	- SOMFactory(SomAddress).setSOMarray(joinItems[index_scope_2].tokenId,7) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1830)
	- SOMFactory(SomAddress).setSOMarray(joinItems[index_scope_2].tokenId,9) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1833)
	- SOMFactory(SomAddress).setSOMarray(joinItems[index_scope_2].tokenId,10) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1834)
	- SOMFactory(SomAddress).setSOMarray(joinItems[index_scope_2].tokenId,3) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1837)
	- SOMFactory(SomAddress).setSOMarray(joinItems[index_scope_2].tokenId,11) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1838)
	State variables written after the call(s):
	- roundStarted = false (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1846)
Reentrancy in RandomGenerator.requestRandomNumber() (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1995-2009):
	External calls:
	- currentRequestID = requestRandomness(keyHash,fee) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2005)
		- LINK.transferAndCall(vrfCoordinator,_fee,abi.encode(_keyHash,USER_SEED_PLACEHOLDER)) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1643)
	State variables written after the call(s):
	- hasReturned[currentRequestID] = false (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2006)
Reentrancy in VRFConsumerBase.requestRandomness(bytes32,uint256) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1642-1656):
	External calls:
	- LINK.transferAndCall(vrfCoordinator,_fee,abi.encode(_keyHash,USER_SEED_PLACEHOLDER)) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1643)
	State variables written after the call(s):
	- nonces[_keyHash] = nonces[_keyHash] + 1 (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1654)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2
INFO:Detectors:
Reentrancy in RandomGenerator.fulfillRandomness(bytes32,uint256) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2015-2025):
	External calls:
	- CowardGambit(CowardAddress).numbersDrawn(_randomness) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2021-2023)
	Event emitted after the call(s):
	- randomNumberArrived(true,_randomness,requestID) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2024)
Reentrancy in SOMFactory.mint(uint256) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2218-2250):
	External calls:
	- _safeMint(msg.sender,tokenId) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2238)
		- IERC721ReceiverUpgradeable(to).onERC721Received(_msgSender(),from,tokenId,data) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#946-957)
	- CowardGambit(CowardAddress).setJoinItems(soms[tokenId].tokenId,soms[tokenId].state) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2245)
	External calls sending eth:
	- address(BankAddress).transfer(MINT_PRICE * _mintAmount * 95 / DENOMINATOR) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2229)
	- address(devAddress).transfer(MINT_PRICE * _mintAmount * 5 / DENOMINATOR) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2230)
	- address(msg.sender).transfer(restAmount) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2231)
	Event emitted after the call(s):
	- SOMMinted() (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2249)
	- Transfer(address(0),to,tokenId) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#815)
		- _safeMint(msg.sender,tokenId) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2238)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3
INFO:Detectors:
ERC721Upgradeable._checkOnERC721Received(address,address,uint256,bytes) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#939-961) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#953-955)
Address.verifyCallResult(bool,bytes,string) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2632-2652) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2644-2647)
AddressUpgradeable._revert(bytes,string) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2860-2872) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2865-2868)
StringsUpgradeable.toString(uint256) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2929-2949) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2935-2937)
	- INLINE ASM (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2941-2943)
MathUpgradeable.mulDiv(uint256,uint256,uint256) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#3065-3145) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#3076-3080)
	- INLINE ASM (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#3096-3103)
	- INLINE ASM (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#3110-3119)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage
INFO:Detectors:
CowardGambit.setCoward(uint256) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1849-1856) compares to a boolean constant:
	-require(bool,string)(CowardFlg[_tokenId] == false,Already joined!) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1853)
CowardGambit.setMars(uint256) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1887-1897) compares to a boolean constant:
	-require(bool,string)(MarsFlg[_tokenId] == false,Already joined!) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1888)
RandomGenerator.getVerifiedRandomNumber(bytes32) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2031-2042) compares to a boolean constant:
	-require(bool,string)(hasReturned[_reqeustId] == true,RandomGenerator: Random number is not arrived yet) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2037-2040)
RandomGenerator.setSOMAddress(address) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2048-2054) compares to a boolean constant:
	-require(bool,string)(_SOMAddr.isContract() == true,RandomGenerator: This is not a Contract Address) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2049-2052)
RandomGenerator.setCowardAddress(address) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2056-2062) compares to a boolean constant:
	-require(bool,string)(_address.isContract() == true,RandomGenerator: This is not a Contract Address) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2057-2060)
SOMFactory.tokenURI(uint256) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2187-2200) compares to a boolean constant:
	-isRevealed == true (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2190)
SOMFactory.mint(uint256) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2218-2250) compares to a boolean constant:
	-require(bool,string)(WhiteList[msg.sender] == true,You didn't join WhiteList!) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2221)
SOMFactory.mint(uint256) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2218-2250) compares to a boolean constant:
	-PublicSaleStarted == false (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2220)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#boolean-equality
INFO:Detectors:
Different versions of Solidity are used:
	- Version used: ['^0.8.0', '^0.8.1', '^0.8.2', '^0.8.4', '^0.8.6']
	- ^0.8.0 (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#7)
	- ^0.8.0 (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#199)
	- ^0.8.0 (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#345)
	- ^0.8.0 (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#383)
	- ^0.8.0 (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#426)
	- ^0.8.0 (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#454)
	- ^0.8.0 (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#479)
	- ^0.8.0 (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#509)
	- ^0.8.0 (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1041)
	- ^0.8.0 (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1084)
	- ^0.8.0 (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1180)
	- ^0.8.0 (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1206)
	- ^0.8.0 (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1410)
	- ^0.8.0 (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1492)
	- ^0.8.0 (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2315)
	- ^0.8.0 (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2359)
	- ^0.8.0 (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2876)
	- ^0.8.0 (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2915)
	- ^0.8.0 (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2986)
	- ^0.8.0 (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#3014)
	- ^0.8.1 (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2435)
	- ^0.8.1 (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2658)
	- ^0.8.2 (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#33)
	- ^0.8.4 (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1688)
	- ^0.8.4 (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2069)
	- ^0.8.6 (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1932)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#different-pragma-directives-are-used
INFO:Detectors:
CowardGambit.endRound() (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1788-1847) has costly operations inside a loop:
	- joinItems.pop() (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1816)
CowardGambit.endRound() (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1788-1847) has costly operations inside a loop:
	- joinItems.pop() (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1841)
CowardGambit.updateCowardList() (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1858-1874) has costly operations inside a loop:
	- joinItems.pop() (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1868)
CowardGambit.setFinishMars() (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1899-1916) has costly operations inside a loop:
	- Mars.pop() (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1908)
ERC721EnumerableUpgradeable._removeTokenFromAllTokensEnumeration(uint256) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1379-1397) has costly operations inside a loop:
	- delete _allTokensIndex[tokenId] (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1395)
ERC721EnumerableUpgradeable._removeTokenFromAllTokensEnumeration(uint256) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1379-1397) has costly operations inside a loop:
	- _allTokens.pop() (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1396)
ERC721EnumerableUpgradeable._removeTokenFromOwnerEnumeration(address,uint256) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1354-1372) has costly operations inside a loop:
	- delete _ownedTokensIndex[tokenId] (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1370)
SOMFactory.mint(uint256) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2218-2250) has costly operations inside a loop:
	- TotalMintCount ++ (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2244)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#costly-operations-inside-a-loop
INFO:Detectors:
CowardGambit.endRound() (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1788-1847) has a high cyclomatic complexity (15).
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#cyclomatic-complexity
INFO:Detectors:
Address.functionCall(address,bytes) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2516-2518) is never used and should be removed
Address.functionCall(address,bytes,string) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2526-2532) is never used and should be removed
Address.functionCallWithValue(address,bytes,uint256) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2545-2551) is never used and should be removed
Address.functionCallWithValue(address,bytes,uint256,string) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2559-2570) is never used and should be removed
Address.functionDelegateCall(address,bytes) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2605-2607) is never used and should be removed
Address.functionDelegateCall(address,bytes,string) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2615-2624) is never used and should be removed
Address.functionStaticCall(address,bytes) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2578-2580) is never used and should be removed
Address.functionStaticCall(address,bytes,string) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2588-2597) is never used and should be removed
Address.sendValue(address,uint256) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2491-2496) is never used and should be removed
Address.verifyCallResult(bool,bytes,string) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2632-2652) is never used and should be removed
AddressUpgradeable._revert(bytes,string) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2860-2872) is never used and should be removed
AddressUpgradeable.functionCall(address,bytes) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2739-2741) is never used and should be removed
AddressUpgradeable.functionCall(address,bytes,string) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2749-2755) is never used and should be removed
AddressUpgradeable.functionCallWithValue(address,bytes,uint256) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2768-2774) is never used and should be removed
AddressUpgradeable.functionCallWithValue(address,bytes,uint256,string) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2782-2791) is never used and should be removed
AddressUpgradeable.functionStaticCall(address,bytes) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2799-2801) is never used and should be removed
AddressUpgradeable.functionStaticCall(address,bytes,string) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2809-2816) is never used and should be removed
AddressUpgradeable.sendValue(address,uint256) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2714-2719) is never used and should be removed
AddressUpgradeable.verifyCallResult(bool,bytes,string) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2848-2858) is never used and should be removed
AddressUpgradeable.verifyCallResultFromTarget(address,bool,bytes,string) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2824-2840) is never used and should be removed
Context._msgData() (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#471-473) is never used and should be removed
ContextUpgradeable.__Context_init() (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#359-360) is never used and should be removed
ContextUpgradeable.__Context_init_unchained() (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#362-363) is never used and should be removed
ContextUpgradeable._msgData() (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#368-370) is never used and should be removed
Counters.decrement(Counters.Counter) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2343-2349) is never used and should be removed
Counters.reset(Counters.Counter) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2351-2353) is never used and should be removed
ERC165Upgradeable.__ERC165_init() (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#403-404) is never used and should be removed
ERC165Upgradeable.__ERC165_init_unchained() (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#406-407) is never used and should be removed
ERC721EnumerableUpgradeable.__ERC721Enumerable_init() (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1218-1219) is never used and should be removed
ERC721EnumerableUpgradeable.__ERC721Enumerable_init_unchained() (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1221-1222) is never used and should be removed
ERC721EnumerableUpgradeable._beforeConsecutiveTokenTransfer(address,address,uint256,uint96) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1313-1324) is never used and should be removed
ERC721Upgradeable._afterConsecutiveTokenTransfer(address,address,uint256,uint96) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1025-1030) is never used and should be removed
ERC721Upgradeable._baseURI() (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#615-617) is never used and should be removed
ERC721Upgradeable._beforeConsecutiveTokenTransfer(address,address,uint256,uint96) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1007-1019) is never used and should be removed
Initializable._disableInitializers() (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#173-179) is never used and should be removed
Initializable._getInitializedVersion() (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#184-186) is never used and should be removed
Initializable._isInitializing() (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#191-193) is never used and should be removed
MathUpgradeable.average(uint256,uint256) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#3044-3047) is never used and should be removed
MathUpgradeable.ceilDiv(uint256,uint256) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#3055-3058) is never used and should be removed
MathUpgradeable.log10(uint256) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#3268-3300) is never used and should be removed
MathUpgradeable.log10(uint256,MathUpgradeable.Rounding) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#3306-3311) is never used and should be removed
MathUpgradeable.log2(uint256) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#3215-3251) is never used and should be removed
MathUpgradeable.log2(uint256,MathUpgradeable.Rounding) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#3257-3262) is never used and should be removed
MathUpgradeable.log256(uint256) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#3319-3343) is never used and should be removed
MathUpgradeable.log256(uint256,MathUpgradeable.Rounding) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#3349-3354) is never used and should be removed
MathUpgradeable.max(uint256,uint256) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#3029-3031) is never used and should be removed
MathUpgradeable.min(uint256,uint256) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#3036-3038) is never used and should be removed
MathUpgradeable.mulDiv(uint256,uint256,uint256) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#3065-3145) is never used and should be removed
MathUpgradeable.mulDiv(uint256,uint256,uint256,MathUpgradeable.Rounding) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#3150-3161) is never used and should be removed
MathUpgradeable.sqrt(uint256) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#3168-3199) is never used and should be removed
MathUpgradeable.sqrt(uint256,MathUpgradeable.Rounding) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#3204-3209) is never used and should be removed
Strings.toHexString(address) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2427-2429) is never used and should be removed
Strings.toHexString(uint256) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2396-2407) is never used and should be removed
Strings.toHexString(uint256,uint256) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2412-2422) is never used and should be removed
StringsUpgradeable.toHexString(address) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2978-2980) is never used and should be removed
StringsUpgradeable.toHexString(uint256) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2954-2958) is never used and should be removed
StringsUpgradeable.toHexString(uint256,uint256) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2963-2973) is never used and should be removed
StringsUpgradeable.toString(uint256) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2929-2949) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code
INFO:Detectors:
Pragma version^0.8.0 (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#7) allows old versions
Pragma version^0.8.2 (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#33) allows old versions
Pragma version^0.8.0 (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#199) allows old versions
Pragma version^0.8.0 (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#345) allows old versions
Pragma version^0.8.0 (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#383) allows old versions
Pragma version^0.8.0 (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#426) allows old versions
Pragma version^0.8.0 (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#454) allows old versions
Pragma version^0.8.0 (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#479) allows old versions
Pragma version^0.8.0 (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#509) allows old versions
Pragma version^0.8.0 (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1041) allows old versions
Pragma version^0.8.0 (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1084) allows old versions
Pragma version^0.8.0 (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1180) allows old versions
Pragma version^0.8.0 (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1206) allows old versions
Pragma version^0.8.0 (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1410) allows old versions
Pragma version^0.8.0 (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1492) allows old versions
Pragma version^0.8.4 (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1688) allows old versions
Pragma version^0.8.6 (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1932) allows old versions
Pragma version^0.8.4 (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2069) allows old versions
Pragma version^0.8.0 (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2315) allows old versions
Pragma version^0.8.0 (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2359) allows old versions
Pragma version^0.8.1 (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2435) allows old versions
Pragma version^0.8.1 (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2658) allows old versions
Pragma version^0.8.0 (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2876) allows old versions
Pragma version^0.8.0 (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2915) allows old versions
Pragma version^0.8.0 (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2986) allows old versions
Pragma version^0.8.0 (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#3014) allows old versions
solc-0.8.7 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity
INFO:Detectors:
Low level call in Address.sendValue(address,uint256) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2491-2496):
	- (success) = recipient.call{value: amount}() (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2494)
Low level call in Address.functionCallWithValue(address,bytes,uint256,string) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2559-2570):
	- (success,returndata) = target.call{value: value}(data) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2568)
Low level call in Address.functionStaticCall(address,bytes,string) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2588-2597):
	- (success,returndata) = target.staticcall(data) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2595)
Low level call in Address.functionDelegateCall(address,bytes,string) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2615-2624):
	- (success,returndata) = target.delegatecall(data) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2622)
Low level call in AddressUpgradeable.sendValue(address,uint256) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2714-2719):
	- (success) = recipient.call{value: amount}() (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2717)
Low level call in AddressUpgradeable.functionCallWithValue(address,bytes,uint256,string) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2782-2791):
	- (success,returndata) = target.call{value: value}(data) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2789)
Low level call in AddressUpgradeable.functionStaticCall(address,bytes,string) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2809-2816):
	- (success,returndata) = target.staticcall(data) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2814)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls
INFO:Detectors:
Function ContextUpgradeable.__Context_init() (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#359-360) is not in mixedCase
Function ContextUpgradeable.__Context_init_unchained() (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#362-363) is not in mixedCase
Variable ContextUpgradeable.__gap (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#377) is not in mixedCase
Function ERC165Upgradeable.__ERC165_init() (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#403-404) is not in mixedCase
Function ERC165Upgradeable.__ERC165_init_unchained() (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#406-407) is not in mixedCase
Variable ERC165Upgradeable.__gap (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#420) is not in mixedCase
Function ERC721Upgradeable.__ERC721_init(string,string) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#550-552) is not in mixedCase
Function ERC721Upgradeable.__ERC721_init_unchained(string,string) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#554-557) is not in mixedCase
Variable ERC721Upgradeable.__gap (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1037) is not in mixedCase
Parameter VRFRequestIDBase.makeVRFInputSeed(bytes32,uint256,address,uint256)._keyHash (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1059) is not in mixedCase
Parameter VRFRequestIDBase.makeVRFInputSeed(bytes32,uint256,address,uint256)._userSeed (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1060) is not in mixedCase
Parameter VRFRequestIDBase.makeVRFInputSeed(bytes32,uint256,address,uint256)._requester (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1061) is not in mixedCase
Parameter VRFRequestIDBase.makeVRFInputSeed(bytes32,uint256,address,uint256)._nonce (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1062) is not in mixedCase
Parameter VRFRequestIDBase.makeRequestId(bytes32,uint256)._keyHash (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1076) is not in mixedCase
Parameter VRFRequestIDBase.makeRequestId(bytes32,uint256)._vRFInputSeed (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1076) is not in mixedCase
Function OwnableUpgradeable.__Ownable_init() (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1109-1111) is not in mixedCase
Function OwnableUpgradeable.__Ownable_init_unchained() (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1113-1115) is not in mixedCase
Variable OwnableUpgradeable.__gap (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1174) is not in mixedCase
Function ERC721EnumerableUpgradeable.__ERC721Enumerable_init() (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1218-1219) is not in mixedCase
Function ERC721EnumerableUpgradeable.__ERC721Enumerable_init_unchained() (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1221-1222) is not in mixedCase
Variable ERC721EnumerableUpgradeable.__gap (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1404) is not in mixedCase
Parameter VRFConsumerBase.requestRandomness(bytes32,uint256)._keyHash (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1642) is not in mixedCase
Parameter VRFConsumerBase.requestRandomness(bytes32,uint256)._fee (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1642) is not in mixedCase
Variable VRFConsumerBase.LINK (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1658) is not in mixedCase
Event CowardGambitsetRandomNumber() (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1740) is not in CapWords
Parameter CowardGambit.setSOMAddress(address)._address (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1742) is not in mixedCase
Parameter CowardGambit.numbersDrawn(uint256)._randomNumber (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1747) is not in mixedCase
Parameter CowardGambit.initialize(address,address)._randomNumberAddress (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1757) is not in mixedCase
Parameter CowardGambit.initialize(address,address)._adminAddress (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1758) is not in mixedCase
Parameter CowardGambit.setJoinItems(uint256,uint256)._tokenId (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1781) is not in mixedCase
Parameter CowardGambit.setJoinItems(uint256,uint256)._state (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1781) is not in mixedCase
Parameter CowardGambit.setCoward(uint256)._tokenId (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1849) is not in mixedCase
Parameter CowardGambit.setMars(uint256)._tokenId (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1887) is not in mixedCase
Variable CowardGambit.SomAddress (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1699) is not in mixedCase
Variable CowardGambit.Coward (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1721) is not in mixedCase
Variable CowardGambit.Mars (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1722) is not in mixedCase
Variable CowardGambit.TimeLineID (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1725) is not in mixedCase
Variable CowardGambit.ROUND_COUNT (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1726) is not in mixedCase
Variable CowardGambit.MainWinner (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1728) is not in mixedCase
Variable CowardGambit.CowardIndex (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1729) is not in mixedCase
Variable CowardGambit.CowardTokenIDs (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1731) is not in mixedCase
Variable CowardGambit.CowardFlg (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1732) is not in mixedCase
Variable CowardGambit.MarsFlg (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1733) is not in mixedCase
Variable CowardGambit.CowardHasWinner (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1734) is not in mixedCase
Variable CowardGambit.CowardWinner (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1735) is not in mixedCase
Variable CowardGambit.CowardFinished (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1736) is not in mixedCase
Variable CowardGambit.MarsFinished (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1737) is not in mixedCase
Event RandomGeneratornewSOM(address) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1955) is not in CapWords
Event RandomGeneratorrandomNumberArrived(bool,uint256,bytes32) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1958-1962) is not in CapWords
Parameter RandomGenerator.fulfillRandomness(bytes32,uint256)._randomness (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2015) is not in mixedCase
Parameter RandomGenerator.getVerifiedRandomNumber(bytes32)._reqeustId (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2031) is not in mixedCase
Parameter RandomGenerator.setSOMAddress(address)._SOMAddr (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2048) is not in mixedCase
Parameter RandomGenerator.setCowardAddress(address)._address (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2056) is not in mixedCase
Variable RandomGenerator.SOMAddress (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1946) is not in mixedCase
Variable RandomGenerator.CowardAddress (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1947) is not in mixedCase
Parameter SOMFactory.initialize(string,string,address,address,address,uint256[])._adminAddress (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2123) is not in mixedCase
Parameter SOMFactory.initialize(string,string,address,address,address,uint256[])._BankAddress (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2124) is not in mixedCase
Parameter SOMFactory.initialize(string,string,address,address,address,uint256[])._devAddress (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2125) is not in mixedCase
Parameter SOMFactory.setWhiteList(address[])._addresses (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2172) is not in mixedCase
Parameter SOMFactory.setCowardAddress(address)._address (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2204) is not in mixedCase
Parameter SOMFactory.getSOMarray(uint256)._tokenId (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2208) is not in mixedCase
Parameter SOMFactory.setSOMarray(uint256,uint256)._tokenId (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2212) is not in mixedCase
Parameter SOMFactory.setSOMarray(uint256,uint256)._state (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2212) is not in mixedCase
Parameter SOMFactory.mint(uint256)._mintAmount (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2218) is not in mixedCase
Parameter SOMFactory.royaltyInfo(uint256,uint256)._salePrice (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2252) is not in mixedCase
Function SOMFactory.Burn(uint256) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2273-2275) is not in mixedCase
Parameter SOMFactory.Burn(uint256)._tokenId (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2273) is not in mixedCase
Parameter SOMFactory.fetchMySOMs(address)._address (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2288) is not in mixedCase
Variable SOMFactory.CowardAddress (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2080) is not in mixedCase
Variable SOMFactory.TotalMintCount (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2095) is not in mixedCase
Variable SOMFactory.MINT_PRICE (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2098) is not in mixedCase
Variable SOMFactory.BankAddress (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2100) is not in mixedCase
Variable SOMFactory.Randomorder (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2104) is not in mixedCase
Variable SOMFactory.NFTcountPerAddress (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2105) is not in mixedCase
Variable SOMFactory.WhiteList (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2106) is not in mixedCase
Variable SOMFactory._baseTokenURI (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2109) is not in mixedCase
Variable SOMFactory._unrevealedURI (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2110) is not in mixedCase
Variable SOMFactory.PublicSaleStarted (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2113) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions
INFO:Detectors:
Reentrancy in SOMFactory.mint(uint256) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2218-2250):
	External calls:
	- address(BankAddress).transfer(MINT_PRICE * _mintAmount * 95 / DENOMINATOR) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2229)
	- address(devAddress).transfer(MINT_PRICE * _mintAmount * 5 / DENOMINATOR) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2230)
	- address(msg.sender).transfer(restAmount) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2231)
	State variables written after the call(s):
	- NFTcountPerAddress[msg.sender] ++ (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2246)
	- TotalMintCount ++ (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2244)
	- _safeMint(msg.sender,tokenId) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2238)
		- _allTokens.push(tokenId) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1343)
		- _allTokens[tokenIndex] = lastTokenId (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1391)
		- _allTokens.pop() (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1396)
	- _safeMint(msg.sender,tokenId) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2238)
		- _allTokensIndex[tokenId] = _allTokens.length (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1342)
		- _allTokensIndex[lastTokenId] = tokenIndex (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1392)
		- delete _allTokensIndex[tokenId] (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1395)
	- _safeMint(msg.sender,tokenId) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2238)
		- _balances[to] += 1 (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#810)
	- _safeMint(msg.sender,tokenId) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2238)
		- _ownedTokens[to][length] = tokenId (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1333)
		- _ownedTokens[from][tokenIndex] = lastTokenId (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1365)
		- delete _ownedTokens[from][lastTokenIndex] (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1371)
	- _safeMint(msg.sender,tokenId) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2238)
		- _ownedTokensIndex[tokenId] = length (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1334)
		- _ownedTokensIndex[lastTokenId] = tokenIndex (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1366)
		- delete _ownedTokensIndex[tokenId] (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1370)
	- _safeMint(msg.sender,tokenId) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2238)
		- _owners[tokenId] = to (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#813)
	- soms[tokenId] = SOM(tokenId,1) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2239-2242)
	Event emitted after the call(s):
	- SOMMinted() (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2249)
	- Transfer(address(0),to,tokenId) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#815)
		- _safeMint(msg.sender,tokenId) (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2238)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-4
INFO:Detectors:
Variable SOMFactory._baseTokenURI (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2109) is too similar to SOMFactory.initialize(string,string,address,address,address,uint256[]).baseTokenURI_ (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2121)
Variable SOMFactory._unrevealedURI (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2110) is too similar to SOMFactory.initialize(string,string,address,address,address,uint256[]).unrevealedURI_ (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2122)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#variable-names-too-similar
INFO:Detectors:
SOMFactory.slitherConstructorVariables() (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2079-2310) uses literals with too many digits:
	- MINT_PRICE = 2500000000000000 (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2098)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits
INFO:Detectors:
CowardGambit.ROUND_COUNT (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1726) should be constant 
SOMFactory.MINT_PRICE (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#2098) should be constant 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant
INFO:Detectors:
RandomGenerator.fee (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1944) should be immutable 
RandomGenerator.keyHash (../../sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol#1943) should be immutable 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-immutable
INFO:Slither:/bdata2/sc/dataset/mainnet/0x8E47863493EFF07afDB4d5CE9a5628BeD01865E8.sol analyzed (26 contracts with 85 detectors), 253 result(s) found
