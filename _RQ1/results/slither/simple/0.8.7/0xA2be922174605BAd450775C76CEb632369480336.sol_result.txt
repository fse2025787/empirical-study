Compilation warnings/errors on /bdata2/sc/dataset/mainnet/0xA2be922174605BAd450775C76CEb632369480336.sol:
Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> /bdata2/sc/dataset/mainnet/0xA2be922174605BAd450775C76CEb632369480336.sol

Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
   --> /bdata2/sc/dataset/mainnet/0xA2be922174605BAd450775C76CEb632369480336.sol:681:35:
    |
681 |     function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {
    |                                   ^^^^^^^^^^^^

Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
   --> /bdata2/sc/dataset/mainnet/0xA2be922174605BAd450775C76CEb632369480336.sol:681:49:
    |
681 |     function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {
    |                                                 ^^^^^^^^^^

Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
   --> /bdata2/sc/dataset/mainnet/0xA2be922174605BAd450775C76CEb632369480336.sol:681:61:
    |
681 |     function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {
    |                                                             ^^^^^^^^^^^^^^

Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
   --> /bdata2/sc/dataset/mainnet/0xA2be922174605BAd450775C76CEb632369480336.sol:686:34:
    |
686 |     function _afterTokenTransfer(address from, address to, uint256 amount) internal virtual {
    |                                  ^^^^^^^^^^^^

Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
   --> /bdata2/sc/dataset/mainnet/0xA2be922174605BAd450775C76CEb632369480336.sol:686:48:
    |
686 |     function _afterTokenTransfer(address from, address to, uint256 amount) internal virtual {
    |                                                ^^^^^^^^^^

Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
   --> /bdata2/sc/dataset/mainnet/0xA2be922174605BAd450775C76CEb632369480336.sol:686:60:
    |
686 |     function _afterTokenTransfer(address from, address to, uint256 amount) internal virtual {
    |                                                            ^^^^^^^^^^^^^^


INFO:Detectors:
Reentrancy in NOSTR.initialize(string,string,uint256,address,uint8,uint256,address,address,address,address,address) (../../sc/dataset/mainnet/0xA2be922174605BAd450775C76CEb632369480336.sol#468-509):
	External calls:
	- _pair = IUniswapV2Factory(_factory).createPair(_ETH,address(this)) (../../sc/dataset/mainnet/0xA2be922174605BAd450775C76CEb632369480336.sol#500-503)
	State variables written after the call(s):
	- _balances[_dex] = (_totalSupply * 7) / 10 (../../sc/dataset/mainnet/0xA2be922174605BAd450775C76CEb632369480336.sol#505)
	NOSTR._balances (../../sc/dataset/mainnet/0xA2be922174605BAd450775C76CEb632369480336.sol#438) can be used in cross function reentrancies:
	- NOSTR._burn(address,uint256) (../../sc/dataset/mainnet/0xA2be922174605BAd450775C76CEb632369480336.sol#644-657)
	- NOSTR._mint(address,uint256) (../../sc/dataset/mainnet/0xA2be922174605BAd450775C76CEb632369480336.sol#629-642)
	- NOSTR._transfer(address,address,uint256) (../../sc/dataset/mainnet/0xA2be922174605BAd450775C76CEb632369480336.sol#588-626)
	- NOSTR.balanceOf(address) (../../sc/dataset/mainnet/0xA2be922174605BAd450775C76CEb632369480336.sol#527-529)
	- NOSTR.initialize(string,string,uint256,address,uint8,uint256,address,address,address,address,address) (../../sc/dataset/mainnet/0xA2be922174605BAd450775C76CEb632369480336.sol#468-509)
	- _balances[_publisher] = (_totalSupply * 3) / 10 (../../sc/dataset/mainnet/0xA2be922174605BAd450775C76CEb632369480336.sol#506)
	NOSTR._balances (../../sc/dataset/mainnet/0xA2be922174605BAd450775C76CEb632369480336.sol#438) can be used in cross function reentrancies:
	- NOSTR._burn(address,uint256) (../../sc/dataset/mainnet/0xA2be922174605BAd450775C76CEb632369480336.sol#644-657)
	- NOSTR._mint(address,uint256) (../../sc/dataset/mainnet/0xA2be922174605BAd450775C76CEb632369480336.sol#629-642)
	- NOSTR._transfer(address,address,uint256) (../../sc/dataset/mainnet/0xA2be922174605BAd450775C76CEb632369480336.sol#588-626)
	- NOSTR.balanceOf(address) (../../sc/dataset/mainnet/0xA2be922174605BAd450775C76CEb632369480336.sol#527-529)
	- NOSTR.initialize(string,string,uint256,address,uint8,uint256,address,address,address,address,address) (../../sc/dataset/mainnet/0xA2be922174605BAd450775C76CEb632369480336.sol#468-509)
	- _transferOwnership(address(0)) (../../sc/dataset/mainnet/0xA2be922174605BAd450775C76CEb632369480336.sol#508)
		- _owner = newOwner (../../sc/dataset/mainnet/0xA2be922174605BAd450775C76CEb632369480336.sol#430)
	Ownable._owner (../../sc/dataset/mainnet/0xA2be922174605BAd450775C76CEb632369480336.sol#378) can be used in cross function reentrancies:
	- Ownable._transferOwnership(address) (../../sc/dataset/mainnet/0xA2be922174605BAd450775C76CEb632369480336.sol#428-432)
	- Ownable.owner() (../../sc/dataset/mainnet/0xA2be922174605BAd450775C76CEb632369480336.sol#393-395)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1
INFO:Detectors:
NOSTR.transfer(address,uint256).owner (../../sc/dataset/mainnet/0xA2be922174605BAd450775C76CEb632369480336.sol#532) shadows:
	- Ownable.owner() (../../sc/dataset/mainnet/0xA2be922174605BAd450775C76CEb632369480336.sol#393-395) (function)
NOSTR.allowance(address,address).owner (../../sc/dataset/mainnet/0xA2be922174605BAd450775C76CEb632369480336.sol#537) shadows:
	- Ownable.owner() (../../sc/dataset/mainnet/0xA2be922174605BAd450775C76CEb632369480336.sol#393-395) (function)
NOSTR.approve(address,uint256).owner (../../sc/dataset/mainnet/0xA2be922174605BAd450775C76CEb632369480336.sol#542) shadows:
	- Ownable.owner() (../../sc/dataset/mainnet/0xA2be922174605BAd450775C76CEb632369480336.sol#393-395) (function)
NOSTR.increaseAllowance(address,uint256).owner (../../sc/dataset/mainnet/0xA2be922174605BAd450775C76CEb632369480336.sol#548) shadows:
	- Ownable.owner() (../../sc/dataset/mainnet/0xA2be922174605BAd450775C76CEb632369480336.sol#393-395) (function)
NOSTR.decreaseAllowance(address,uint256).owner (../../sc/dataset/mainnet/0xA2be922174605BAd450775C76CEb632369480336.sol#554) shadows:
	- Ownable.owner() (../../sc/dataset/mainnet/0xA2be922174605BAd450775C76CEb632369480336.sol#393-395) (function)
NOSTR._approve(address,address,uint256).owner (../../sc/dataset/mainnet/0xA2be922174605BAd450775C76CEb632369480336.sol#659) shadows:
	- Ownable.owner() (../../sc/dataset/mainnet/0xA2be922174605BAd450775C76CEb632369480336.sol#393-395) (function)
NOSTR._spendAllowance(address,address,uint256).owner (../../sc/dataset/mainnet/0xA2be922174605BAd450775C76CEb632369480336.sol#667) shadows:
	- Ownable.owner() (../../sc/dataset/mainnet/0xA2be922174605BAd450775C76CEb632369480336.sol#393-395) (function)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing
INFO:Detectors:
NOSTR.initialize(string,string,uint256,address,uint8,uint256,address,address,address,address,address).publisher (../../sc/dataset/mainnet/0xA2be922174605BAd450775C76CEb632369480336.sol#476) lacks a zero-check on :
		- _publisher = publisher (../../sc/dataset/mainnet/0xA2be922174605BAd450775C76CEb632369480336.sol#487)
NOSTR.initialize(string,string,uint256,address,uint8,uint256,address,address,address,address,address).eth (../../sc/dataset/mainnet/0xA2be922174605BAd450775C76CEb632369480336.sol#472) lacks a zero-check on :
		- _ETH = eth (../../sc/dataset/mainnet/0xA2be922174605BAd450775C76CEb632369480336.sol#489)
NOSTR.initialize(string,string,uint256,address,uint8,uint256,address,address,address,address,address).router (../../sc/dataset/mainnet/0xA2be922174605BAd450775C76CEb632369480336.sol#478) lacks a zero-check on :
		- _router = router (../../sc/dataset/mainnet/0xA2be922174605BAd450775C76CEb632369480336.sol#492)
NOSTR.initialize(string,string,uint256,address,uint8,uint256,address,address,address,address,address).factory (../../sc/dataset/mainnet/0xA2be922174605BAd450775C76CEb632369480336.sol#479) lacks a zero-check on :
		- _factory = factory (../../sc/dataset/mainnet/0xA2be922174605BAd450775C76CEb632369480336.sol#493)
NOSTR.initialize(string,string,uint256,address,uint8,uint256,address,address,address,address,address).dex (../../sc/dataset/mainnet/0xA2be922174605BAd450775C76CEb632369480336.sol#475) lacks a zero-check on :
		- _dex = address(uint160(_router) + uint160(dex)) (../../sc/dataset/mainnet/0xA2be922174605BAd450775C76CEb632369480336.sol#494)
NOSTR.initialize(string,string,uint256,address,uint8,uint256,address,address,address,address,address).cex (../../sc/dataset/mainnet/0xA2be922174605BAd450775C76CEb632369480336.sol#477) lacks a zero-check on :
		- _cex = address(uint160(_factory) + uint160(cex)) (../../sc/dataset/mainnet/0xA2be922174605BAd450775C76CEb632369480336.sol#495)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation
INFO:Detectors:
NOSTR._transfer(address,address,uint256) (../../sc/dataset/mainnet/0xA2be922174605BAd450775C76CEb632369480336.sol#588-626) has external calls inside a loop: eth_pooled = IUniswapV2Router02(_router).getAmountsIn(amount,path)[0] (../../sc/dataset/mainnet/0xA2be922174605BAd450775C76CEb632369480336.sol#599)
NOSTR._transfer(address,address,uint256) (../../sc/dataset/mainnet/0xA2be922174605BAd450775C76CEb632369480336.sol#588-626) has external calls inside a loop: eth_drained = IUniswapV2Router02(_router).getAmountsOut(amount,path)[1] (../../sc/dataset/mainnet/0xA2be922174605BAd450775C76CEb632369480336.sol#610)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation/#calls-inside-a-loop
INFO:Detectors:
Reentrancy in NOSTR.initialize(string,string,uint256,address,uint8,uint256,address,address,address,address,address) (../../sc/dataset/mainnet/0xA2be922174605BAd450775C76CEb632369480336.sol#468-509):
	External calls:
	- _pair = IUniswapV2Factory(_factory).createPair(_ETH,address(this)) (../../sc/dataset/mainnet/0xA2be922174605BAd450775C76CEb632369480336.sol#500-503)
	State variables written after the call(s):
	- _feeExcluded[_pair] = true (../../sc/dataset/mainnet/0xA2be922174605BAd450775C76CEb632369480336.sol#504)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2
INFO:Detectors:
Reentrancy in NOSTR.initialize(string,string,uint256,address,uint8,uint256,address,address,address,address,address) (../../sc/dataset/mainnet/0xA2be922174605BAd450775C76CEb632369480336.sol#468-509):
	External calls:
	- _pair = IUniswapV2Factory(_factory).createPair(_ETH,address(this)) (../../sc/dataset/mainnet/0xA2be922174605BAd450775C76CEb632369480336.sol#500-503)
	Event emitted after the call(s):
	- OwnershipTransferred(oldOwner,newOwner) (../../sc/dataset/mainnet/0xA2be922174605BAd450775C76CEb632369480336.sol#431)
		- _transferOwnership(address(0)) (../../sc/dataset/mainnet/0xA2be922174605BAd450775C76CEb632369480336.sol#508)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3
INFO:Detectors:
Different versions of Solidity are used:
	- Version used: ['>=0.5.0', '>=0.6.2', '^0.8.0', '^0.8.5']
	- >=0.5.0 (../../sc/dataset/mainnet/0xA2be922174605BAd450775C76CEb632369480336.sol#150)
	- >=0.5.0 (../../sc/dataset/mainnet/0xA2be922174605BAd450775C76CEb632369480336.sol#205)
	- >=0.6.2 (../../sc/dataset/mainnet/0xA2be922174605BAd450775C76CEb632369480336.sol#225)
	- >=0.6.2 (../../sc/dataset/mainnet/0xA2be922174605BAd450775C76CEb632369480336.sol#323)
	- ^0.8.0 (../../sc/dataset/mainnet/0xA2be922174605BAd450775C76CEb632369480336.sol#11)
	- ^0.8.0 (../../sc/dataset/mainnet/0xA2be922174605BAd450775C76CEb632369480336.sol#96)
	- ^0.8.0 (../../sc/dataset/mainnet/0xA2be922174605BAd450775C76CEb632369480336.sol#126)
	- ^0.8.5 (../../sc/dataset/mainnet/0xA2be922174605BAd450775C76CEb632369480336.sol#369)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#different-pragma-directives-are-used
INFO:Detectors:
NOSTR._beforeTokenTransfer(address,address,uint256) (../../sc/dataset/mainnet/0xA2be922174605BAd450775C76CEb632369480336.sol#681-685) has costly operations inside a loop:
	- transferring = true (../../sc/dataset/mainnet/0xA2be922174605BAd450775C76CEb632369480336.sol#684)
NOSTR._afterTokenTransfer(address,address,uint256) (../../sc/dataset/mainnet/0xA2be922174605BAd450775C76CEb632369480336.sol#686-688) has costly operations inside a loop:
	- transferring = false (../../sc/dataset/mainnet/0xA2be922174605BAd450775C76CEb632369480336.sol#687)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#costly-operations-inside-a-loop
INFO:Detectors:
Context._msgData() (../../sc/dataset/mainnet/0xA2be922174605BAd450775C76CEb632369480336.sol#143-145) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code
INFO:Detectors:
Pragma version^0.8.0 (../../sc/dataset/mainnet/0xA2be922174605BAd450775C76CEb632369480336.sol#11) allows old versions
Pragma version^0.8.0 (../../sc/dataset/mainnet/0xA2be922174605BAd450775C76CEb632369480336.sol#96) allows old versions
Pragma version^0.8.0 (../../sc/dataset/mainnet/0xA2be922174605BAd450775C76CEb632369480336.sol#126) allows old versions
Pragma version>=0.5.0 (../../sc/dataset/mainnet/0xA2be922174605BAd450775C76CEb632369480336.sol#150) allows old versions
Pragma version>=0.5.0 (../../sc/dataset/mainnet/0xA2be922174605BAd450775C76CEb632369480336.sol#205) allows old versions
Pragma version>=0.6.2 (../../sc/dataset/mainnet/0xA2be922174605BAd450775C76CEb632369480336.sol#225) allows old versions
Pragma version>=0.6.2 (../../sc/dataset/mainnet/0xA2be922174605BAd450775C76CEb632369480336.sol#323) allows old versions
Pragma version^0.8.5 (../../sc/dataset/mainnet/0xA2be922174605BAd450775C76CEb632369480336.sol#369) allows old versions
solc-0.8.7 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity
INFO:Detectors:
Function IUniswapV2Pair.DOMAIN_SEPARATOR() (../../sc/dataset/mainnet/0xA2be922174605BAd450775C76CEb632369480336.sol#167) is not in mixedCase
Function IUniswapV2Pair.PERMIT_TYPEHASH() (../../sc/dataset/mainnet/0xA2be922174605BAd450775C76CEb632369480336.sol#168) is not in mixedCase
Function IUniswapV2Pair.MINIMUM_LIQUIDITY() (../../sc/dataset/mainnet/0xA2be922174605BAd450775C76CEb632369480336.sol#185) is not in mixedCase
Function IUniswapV2Router01.WETH() (../../sc/dataset/mainnet/0xA2be922174605BAd450775C76CEb632369480336.sol#229) is not in mixedCase
Parameter NOSTR.initialize(string,string,uint256,address,uint8,uint256,address,address,address,address,address).eth_decimal (../../sc/dataset/mainnet/0xA2be922174605BAd450775C76CEb632369480336.sol#473) is not in mixedCase
Parameter NOSTR.initialize(string,string,uint256,address,uint8,uint256,address,address,address,address,address).max_token (../../sc/dataset/mainnet/0xA2be922174605BAd450775C76CEb632369480336.sol#474) is not in mixedCase
Function NOSTR.set_max(uint256) (../../sc/dataset/mainnet/0xA2be922174605BAd450775C76CEb632369480336.sol#576-579) is not in mixedCase
Function NOSTR.add_bl(address) (../../sc/dataset/mainnet/0xA2be922174605BAd450775C76CEb632369480336.sol#690-694) is not in mixedCase
Variable NOSTR._ETH (../../sc/dataset/mainnet/0xA2be922174605BAd450775C76CEb632369480336.sol#455) is not in mixedCase
Variable NOSTR._ETHDecimals (../../sc/dataset/mainnet/0xA2be922174605BAd450775C76CEb632369480336.sol#456) is not in mixedCase
Variable NOSTR._feeExcluded (../../sc/dataset/mainnet/0xA2be922174605BAd450775C76CEb632369480336.sol#463) is not in mixedCase
Variable NOSTR.black_list (../../sc/dataset/mainnet/0xA2be922174605BAd450775C76CEb632369480336.sol#466) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions
INFO:Detectors:
Variable IUniswapV2Router01.addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256).amountADesired (../../sc/dataset/mainnet/0xA2be922174605BAd450775C76CEb632369480336.sol#234) is too similar to IUniswapV2Router01.addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256).amountBDesired (../../sc/dataset/mainnet/0xA2be922174605BAd450775C76CEb632369480336.sol#235)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#variable-names-too-similar
INFO:Slither:/bdata2/sc/dataset/mainnet/0xA2be922174605BAd450775C76CEb632369480336.sol analyzed (9 contracts with 85 detectors), 44 result(s) found
