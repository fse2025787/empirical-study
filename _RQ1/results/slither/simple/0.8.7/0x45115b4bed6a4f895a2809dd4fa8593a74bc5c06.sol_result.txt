INFO:Detectors:
Masklab.sendETHToFee(uint256) (../../sc/dataset/mainnet/0x45115b4bed6a4f895a2809dd4fa8593a74bc5c06.sol#306-308) sends eth to arbitrary user
	Dangerous calls:
	- _feeAddrWallet.transfer(amount) (../../sc/dataset/mainnet/0x45115b4bed6a4f895a2809dd4fa8593a74bc5c06.sol#307)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#functions-that-send-ether-to-arbitrary-destinations
INFO:Detectors:
Reentrancy in Masklab._transfer(address,address,uint256) (../../sc/dataset/mainnet/0x45115b4bed6a4f895a2809dd4fa8593a74bc5c06.sol#248-280):
	External calls:
	- swapTokensForEth(contractTokenBalance) (../../sc/dataset/mainnet/0x45115b4bed6a4f895a2809dd4fa8593a74bc5c06.sol#268)
		- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (../../sc/dataset/mainnet/0x45115b4bed6a4f895a2809dd4fa8593a74bc5c06.sol#287-293)
	External calls sending eth:
	- sendETHToFee(address(this).balance) (../../sc/dataset/mainnet/0x45115b4bed6a4f895a2809dd4fa8593a74bc5c06.sol#271)
		- _feeAddrWallet.transfer(amount) (../../sc/dataset/mainnet/0x45115b4bed6a4f895a2809dd4fa8593a74bc5c06.sol#307)
	State variables written after the call(s):
	- _tokenTransfer(from,to,amount) (../../sc/dataset/mainnet/0x45115b4bed6a4f895a2809dd4fa8593a74bc5c06.sol#279)
		- _rOwned[address(this)] = _rOwned[address(this)].add(rTeam) (../../sc/dataset/mainnet/0x45115b4bed6a4f895a2809dd4fa8593a74bc5c06.sol#346)
		- _rOwned[sender] = _rOwned[sender].sub(rAmount) (../../sc/dataset/mainnet/0x45115b4bed6a4f895a2809dd4fa8593a74bc5c06.sol#336)
		- _rOwned[recipient] = _rOwned[recipient].add(rTransferAmount) (../../sc/dataset/mainnet/0x45115b4bed6a4f895a2809dd4fa8593a74bc5c06.sol#337)
	Masklab._rOwned (../../sc/dataset/mainnet/0x45115b4bed6a4f895a2809dd4fa8593a74bc5c06.sol#145) can be used in cross function reentrancies:
	- Masklab._takeTeam(uint256) (../../sc/dataset/mainnet/0x45115b4bed6a4f895a2809dd4fa8593a74bc5c06.sol#343-347)
	- Masklab._transferStandard(address,address,uint256) (../../sc/dataset/mainnet/0x45115b4bed6a4f895a2809dd4fa8593a74bc5c06.sol#334-341)
	- Masklab.balanceOf(address) (../../sc/dataset/mainnet/0x45115b4bed6a4f895a2809dd4fa8593a74bc5c06.sol#207-209)
	- Masklab.constructor() (../../sc/dataset/mainnet/0x45115b4bed6a4f895a2809dd4fa8593a74bc5c06.sol#180-189)
	- _tokenTransfer(from,to,amount) (../../sc/dataset/mainnet/0x45115b4bed6a4f895a2809dd4fa8593a74bc5c06.sol#279)
		- _rTotal = _rTotal.sub(rFee) (../../sc/dataset/mainnet/0x45115b4bed6a4f895a2809dd4fa8593a74bc5c06.sol#350)
	Masklab._rTotal (../../sc/dataset/mainnet/0x45115b4bed6a4f895a2809dd4fa8593a74bc5c06.sol#153) can be used in cross function reentrancies:
	- Masklab._getCurrentSupply() (../../sc/dataset/mainnet/0x45115b4bed6a4f895a2809dd4fa8593a74bc5c06.sol#396-401)
	- Masklab._reflectFee(uint256,uint256) (../../sc/dataset/mainnet/0x45115b4bed6a4f895a2809dd4fa8593a74bc5c06.sol#349-352)
	- Masklab.constructor() (../../sc/dataset/mainnet/0x45115b4bed6a4f895a2809dd4fa8593a74bc5c06.sol#180-189)
	- Masklab.tokenFromReflection(uint256) (../../sc/dataset/mainnet/0x45115b4bed6a4f895a2809dd4fa8593a74bc5c06.sol#235-239)
Reentrancy in Masklab.openTrading() (../../sc/dataset/mainnet/0x45115b4bed6a4f895a2809dd4fa8593a74bc5c06.sol#310-322):
	External calls:
	- uniswapV2Pair = IUniswapV2Factory(_uniswapV2Router.factory()).createPair(address(this),_uniswapV2Router.WETH()) (../../sc/dataset/mainnet/0x45115b4bed6a4f895a2809dd4fa8593a74bc5c06.sol#315)
	- uniswapV2Router.addLiquidityETH{value: address(this).balance}(address(this),balanceOf(address(this)),0,0,owner(),block.timestamp) (../../sc/dataset/mainnet/0x45115b4bed6a4f895a2809dd4fa8593a74bc5c06.sol#316)
	External calls sending eth:
	- uniswapV2Router.addLiquidityETH{value: address(this).balance}(address(this),balanceOf(address(this)),0,0,owner(),block.timestamp) (../../sc/dataset/mainnet/0x45115b4bed6a4f895a2809dd4fa8593a74bc5c06.sol#316)
	State variables written after the call(s):
	- tradingOpen = true (../../sc/dataset/mainnet/0x45115b4bed6a4f895a2809dd4fa8593a74bc5c06.sol#320)
	Masklab.tradingOpen (../../sc/dataset/mainnet/0x45115b4bed6a4f895a2809dd4fa8593a74bc5c06.sol#167) can be used in cross function reentrancies:
	- Masklab.openTrading() (../../sc/dataset/mainnet/0x45115b4bed6a4f895a2809dd4fa8593a74bc5c06.sol#310-322)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities
INFO:Detectors:
Masklab.openTrading() (../../sc/dataset/mainnet/0x45115b4bed6a4f895a2809dd4fa8593a74bc5c06.sol#310-322) ignores return value by uniswapV2Router.addLiquidityETH{value: address(this).balance}(address(this),balanceOf(address(this)),0,0,owner(),block.timestamp) (../../sc/dataset/mainnet/0x45115b4bed6a4f895a2809dd4fa8593a74bc5c06.sol#316)
Masklab.openTrading() (../../sc/dataset/mainnet/0x45115b4bed6a4f895a2809dd4fa8593a74bc5c06.sol#310-322) ignores return value by IERC20(uniswapV2Pair).approve(address(uniswapV2Router),type()(uint256).max) (../../sc/dataset/mainnet/0x45115b4bed6a4f895a2809dd4fa8593a74bc5c06.sol#321)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return
INFO:Detectors:
Masklab.allowance(address,address).owner (../../sc/dataset/mainnet/0x45115b4bed6a4f895a2809dd4fa8593a74bc5c06.sol#216) shadows:
	- Ownable.owner() (../../sc/dataset/mainnet/0x45115b4bed6a4f895a2809dd4fa8593a74bc5c06.sol#103-105) (function)
Masklab._approve(address,address,uint256).owner (../../sc/dataset/mainnet/0x45115b4bed6a4f895a2809dd4fa8593a74bc5c06.sol#241) shadows:
	- Ownable.owner() (../../sc/dataset/mainnet/0x45115b4bed6a4f895a2809dd4fa8593a74bc5c06.sol#103-105) (function)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing
INFO:Detectors:
Masklab.setStandardTax(uint256) (../../sc/dataset/mainnet/0x45115b4bed6a4f895a2809dd4fa8593a74bc5c06.sol#296-299) should emit an event for: 
	- _standardTax = newTax (../../sc/dataset/mainnet/0x45115b4bed6a4f895a2809dd4fa8593a74bc5c06.sol#298) 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-arithmetic
INFO:Detectors:
Reentrancy in Masklab._transfer(address,address,uint256) (../../sc/dataset/mainnet/0x45115b4bed6a4f895a2809dd4fa8593a74bc5c06.sol#248-280):
	External calls:
	- swapTokensForEth(contractTokenBalance) (../../sc/dataset/mainnet/0x45115b4bed6a4f895a2809dd4fa8593a74bc5c06.sol#268)
		- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (../../sc/dataset/mainnet/0x45115b4bed6a4f895a2809dd4fa8593a74bc5c06.sol#287-293)
	External calls sending eth:
	- sendETHToFee(address(this).balance) (../../sc/dataset/mainnet/0x45115b4bed6a4f895a2809dd4fa8593a74bc5c06.sol#271)
		- _feeAddrWallet.transfer(amount) (../../sc/dataset/mainnet/0x45115b4bed6a4f895a2809dd4fa8593a74bc5c06.sol#307)
	State variables written after the call(s):
	- _tokenTransfer(from,to,amount) (../../sc/dataset/mainnet/0x45115b4bed6a4f895a2809dd4fa8593a74bc5c06.sol#279)
		- _tFeeTotal = _tFeeTotal.add(tFee) (../../sc/dataset/mainnet/0x45115b4bed6a4f895a2809dd4fa8593a74bc5c06.sol#351)
Reentrancy in Masklab.openTrading() (../../sc/dataset/mainnet/0x45115b4bed6a4f895a2809dd4fa8593a74bc5c06.sol#310-322):
	External calls:
	- uniswapV2Pair = IUniswapV2Factory(_uniswapV2Router.factory()).createPair(address(this),_uniswapV2Router.WETH()) (../../sc/dataset/mainnet/0x45115b4bed6a4f895a2809dd4fa8593a74bc5c06.sol#315)
	- uniswapV2Router.addLiquidityETH{value: address(this).balance}(address(this),balanceOf(address(this)),0,0,owner(),block.timestamp) (../../sc/dataset/mainnet/0x45115b4bed6a4f895a2809dd4fa8593a74bc5c06.sol#316)
	External calls sending eth:
	- uniswapV2Router.addLiquidityETH{value: address(this).balance}(address(this),balanceOf(address(this)),0,0,owner(),block.timestamp) (../../sc/dataset/mainnet/0x45115b4bed6a4f895a2809dd4fa8593a74bc5c06.sol#316)
	State variables written after the call(s):
	- cooldownEnabled = true (../../sc/dataset/mainnet/0x45115b4bed6a4f895a2809dd4fa8593a74bc5c06.sol#318)
	- swapEnabled = true (../../sc/dataset/mainnet/0x45115b4bed6a4f895a2809dd4fa8593a74bc5c06.sol#317)
Reentrancy in Masklab.transferFrom(address,address,uint256) (../../sc/dataset/mainnet/0x45115b4bed6a4f895a2809dd4fa8593a74bc5c06.sol#225-229):
	External calls:
	- _transfer(sender,recipient,amount) (../../sc/dataset/mainnet/0x45115b4bed6a4f895a2809dd4fa8593a74bc5c06.sol#226)
		- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (../../sc/dataset/mainnet/0x45115b4bed6a4f895a2809dd4fa8593a74bc5c06.sol#287-293)
	External calls sending eth:
	- _transfer(sender,recipient,amount) (../../sc/dataset/mainnet/0x45115b4bed6a4f895a2809dd4fa8593a74bc5c06.sol#226)
		- _feeAddrWallet.transfer(amount) (../../sc/dataset/mainnet/0x45115b4bed6a4f895a2809dd4fa8593a74bc5c06.sol#307)
	State variables written after the call(s):
	- _approve(sender,_msgSender(),_allowances[sender][_msgSender()].sub(amount,ERC20: transfer amount exceeds allowance)) (../../sc/dataset/mainnet/0x45115b4bed6a4f895a2809dd4fa8593a74bc5c06.sol#227)
		- _allowances[owner][spender] = amount (../../sc/dataset/mainnet/0x45115b4bed6a4f895a2809dd4fa8593a74bc5c06.sol#244)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2
INFO:Detectors:
Reentrancy in Masklab._transfer(address,address,uint256) (../../sc/dataset/mainnet/0x45115b4bed6a4f895a2809dd4fa8593a74bc5c06.sol#248-280):
	External calls:
	- swapTokensForEth(contractTokenBalance) (../../sc/dataset/mainnet/0x45115b4bed6a4f895a2809dd4fa8593a74bc5c06.sol#268)
		- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (../../sc/dataset/mainnet/0x45115b4bed6a4f895a2809dd4fa8593a74bc5c06.sol#287-293)
	External calls sending eth:
	- sendETHToFee(address(this).balance) (../../sc/dataset/mainnet/0x45115b4bed6a4f895a2809dd4fa8593a74bc5c06.sol#271)
		- _feeAddrWallet.transfer(amount) (../../sc/dataset/mainnet/0x45115b4bed6a4f895a2809dd4fa8593a74bc5c06.sol#307)
	Event emitted after the call(s):
	- Transfer(sender,recipient,tTransferAmount) (../../sc/dataset/mainnet/0x45115b4bed6a4f895a2809dd4fa8593a74bc5c06.sol#340)
		- _tokenTransfer(from,to,amount) (../../sc/dataset/mainnet/0x45115b4bed6a4f895a2809dd4fa8593a74bc5c06.sol#279)
Reentrancy in Masklab.transferFrom(address,address,uint256) (../../sc/dataset/mainnet/0x45115b4bed6a4f895a2809dd4fa8593a74bc5c06.sol#225-229):
	External calls:
	- _transfer(sender,recipient,amount) (../../sc/dataset/mainnet/0x45115b4bed6a4f895a2809dd4fa8593a74bc5c06.sol#226)
		- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (../../sc/dataset/mainnet/0x45115b4bed6a4f895a2809dd4fa8593a74bc5c06.sol#287-293)
	External calls sending eth:
	- _transfer(sender,recipient,amount) (../../sc/dataset/mainnet/0x45115b4bed6a4f895a2809dd4fa8593a74bc5c06.sol#226)
		- _feeAddrWallet.transfer(amount) (../../sc/dataset/mainnet/0x45115b4bed6a4f895a2809dd4fa8593a74bc5c06.sol#307)
	Event emitted after the call(s):
	- Approval(owner,spender,amount) (../../sc/dataset/mainnet/0x45115b4bed6a4f895a2809dd4fa8593a74bc5c06.sol#245)
		- _approve(sender,_msgSender(),_allowances[sender][_msgSender()].sub(amount,ERC20: transfer amount exceeds allowance)) (../../sc/dataset/mainnet/0x45115b4bed6a4f895a2809dd4fa8593a74bc5c06.sol#227)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3
INFO:Detectors:
Pragma version0.8.7 (../../sc/dataset/mainnet/0x45115b4bed6a4f895a2809dd4fa8593a74bc5c06.sol#34) allows old versions
solc-0.8.7 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity
INFO:Detectors:
Function IUniswapV2Router02.WETH() (../../sc/dataset/mainnet/0x45115b4bed6a4f895a2809dd4fa8593a74bc5c06.sol#132) is not in mixedCase
Constant Masklab._tTotal (../../sc/dataset/mainnet/0x45115b4bed6a4f895a2809dd4fa8593a74bc5c06.sol#152) is not in UPPER_CASE_WITH_UNDERSCORES
Constant Masklab._name (../../sc/dataset/mainnet/0x45115b4bed6a4f895a2809dd4fa8593a74bc5c06.sol#161) is not in UPPER_CASE_WITH_UNDERSCORES
Constant Masklab._symbol (../../sc/dataset/mainnet/0x45115b4bed6a4f895a2809dd4fa8593a74bc5c06.sol#162) is not in UPPER_CASE_WITH_UNDERSCORES
Constant Masklab._decimals (../../sc/dataset/mainnet/0x45115b4bed6a4f895a2809dd4fa8593a74bc5c06.sol#163) is not in UPPER_CASE_WITH_UNDERSCORES
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions
INFO:Detectors:
Reentrancy in Masklab._transfer(address,address,uint256) (../../sc/dataset/mainnet/0x45115b4bed6a4f895a2809dd4fa8593a74bc5c06.sol#248-280):
	External calls:
	- sendETHToFee(address(this).balance) (../../sc/dataset/mainnet/0x45115b4bed6a4f895a2809dd4fa8593a74bc5c06.sol#271)
		- _feeAddrWallet.transfer(amount) (../../sc/dataset/mainnet/0x45115b4bed6a4f895a2809dd4fa8593a74bc5c06.sol#307)
	State variables written after the call(s):
	- _tokenTransfer(from,to,amount) (../../sc/dataset/mainnet/0x45115b4bed6a4f895a2809dd4fa8593a74bc5c06.sol#279)
		- _rOwned[address(this)] = _rOwned[address(this)].add(rTeam) (../../sc/dataset/mainnet/0x45115b4bed6a4f895a2809dd4fa8593a74bc5c06.sol#346)
		- _rOwned[sender] = _rOwned[sender].sub(rAmount) (../../sc/dataset/mainnet/0x45115b4bed6a4f895a2809dd4fa8593a74bc5c06.sol#336)
		- _rOwned[recipient] = _rOwned[recipient].add(rTransferAmount) (../../sc/dataset/mainnet/0x45115b4bed6a4f895a2809dd4fa8593a74bc5c06.sol#337)
	- _tokenTransfer(from,to,amount) (../../sc/dataset/mainnet/0x45115b4bed6a4f895a2809dd4fa8593a74bc5c06.sol#279)
		- _rTotal = _rTotal.sub(rFee) (../../sc/dataset/mainnet/0x45115b4bed6a4f895a2809dd4fa8593a74bc5c06.sol#350)
	- _tokenTransfer(from,to,amount) (../../sc/dataset/mainnet/0x45115b4bed6a4f895a2809dd4fa8593a74bc5c06.sol#279)
		- _tFeeTotal = _tFeeTotal.add(tFee) (../../sc/dataset/mainnet/0x45115b4bed6a4f895a2809dd4fa8593a74bc5c06.sol#351)
	Event emitted after the call(s):
	- Transfer(sender,recipient,tTransferAmount) (../../sc/dataset/mainnet/0x45115b4bed6a4f895a2809dd4fa8593a74bc5c06.sol#340)
		- _tokenTransfer(from,to,amount) (../../sc/dataset/mainnet/0x45115b4bed6a4f895a2809dd4fa8593a74bc5c06.sol#279)
Reentrancy in Masklab.transferFrom(address,address,uint256) (../../sc/dataset/mainnet/0x45115b4bed6a4f895a2809dd4fa8593a74bc5c06.sol#225-229):
	External calls:
	- _transfer(sender,recipient,amount) (../../sc/dataset/mainnet/0x45115b4bed6a4f895a2809dd4fa8593a74bc5c06.sol#226)
		- _feeAddrWallet.transfer(amount) (../../sc/dataset/mainnet/0x45115b4bed6a4f895a2809dd4fa8593a74bc5c06.sol#307)
	State variables written after the call(s):
	- _approve(sender,_msgSender(),_allowances[sender][_msgSender()].sub(amount,ERC20: transfer amount exceeds allowance)) (../../sc/dataset/mainnet/0x45115b4bed6a4f895a2809dd4fa8593a74bc5c06.sol#227)
		- _allowances[owner][spender] = amount (../../sc/dataset/mainnet/0x45115b4bed6a4f895a2809dd4fa8593a74bc5c06.sol#244)
	Event emitted after the call(s):
	- Approval(owner,spender,amount) (../../sc/dataset/mainnet/0x45115b4bed6a4f895a2809dd4fa8593a74bc5c06.sol#245)
		- _approve(sender,_msgSender(),_allowances[sender][_msgSender()].sub(amount,ERC20: transfer amount exceeds allowance)) (../../sc/dataset/mainnet/0x45115b4bed6a4f895a2809dd4fa8593a74bc5c06.sol#227)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-4
INFO:Detectors:
Variable Masklab._getValues(uint256).rTransferAmount (../../sc/dataset/mainnet/0x45115b4bed6a4f895a2809dd4fa8593a74bc5c06.sol#372) is too similar to Masklab._getValues(uint256).tTransferAmount (../../sc/dataset/mainnet/0x45115b4bed6a4f895a2809dd4fa8593a74bc5c06.sol#370)
Variable Masklab._transferStandard(address,address,uint256).rTransferAmount (../../sc/dataset/mainnet/0x45115b4bed6a4f895a2809dd4fa8593a74bc5c06.sol#335) is too similar to Masklab._transferStandard(address,address,uint256).tTransferAmount (../../sc/dataset/mainnet/0x45115b4bed6a4f895a2809dd4fa8593a74bc5c06.sol#335)
Variable Masklab._transferStandard(address,address,uint256).rTransferAmount (../../sc/dataset/mainnet/0x45115b4bed6a4f895a2809dd4fa8593a74bc5c06.sol#335) is too similar to Masklab._getTValues(uint256,uint256,uint256).tTransferAmount (../../sc/dataset/mainnet/0x45115b4bed6a4f895a2809dd4fa8593a74bc5c06.sol#379)
Variable Masklab._getRValues(uint256,uint256,uint256,uint256).rTransferAmount (../../sc/dataset/mainnet/0x45115b4bed6a4f895a2809dd4fa8593a74bc5c06.sol#387) is too similar to Masklab._getValues(uint256).tTransferAmount (../../sc/dataset/mainnet/0x45115b4bed6a4f895a2809dd4fa8593a74bc5c06.sol#370)
Variable Masklab._getRValues(uint256,uint256,uint256,uint256).rTransferAmount (../../sc/dataset/mainnet/0x45115b4bed6a4f895a2809dd4fa8593a74bc5c06.sol#387) is too similar to Masklab._transferStandard(address,address,uint256).tTransferAmount (../../sc/dataset/mainnet/0x45115b4bed6a4f895a2809dd4fa8593a74bc5c06.sol#335)
Variable Masklab._transferStandard(address,address,uint256).rTransferAmount (../../sc/dataset/mainnet/0x45115b4bed6a4f895a2809dd4fa8593a74bc5c06.sol#335) is too similar to Masklab._getValues(uint256).tTransferAmount (../../sc/dataset/mainnet/0x45115b4bed6a4f895a2809dd4fa8593a74bc5c06.sol#370)
Variable Masklab._getRValues(uint256,uint256,uint256,uint256).rTransferAmount (../../sc/dataset/mainnet/0x45115b4bed6a4f895a2809dd4fa8593a74bc5c06.sol#387) is too similar to Masklab._getTValues(uint256,uint256,uint256).tTransferAmount (../../sc/dataset/mainnet/0x45115b4bed6a4f895a2809dd4fa8593a74bc5c06.sol#379)
Variable Masklab._getValues(uint256).rTransferAmount (../../sc/dataset/mainnet/0x45115b4bed6a4f895a2809dd4fa8593a74bc5c06.sol#372) is too similar to Masklab._getTValues(uint256,uint256,uint256).tTransferAmount (../../sc/dataset/mainnet/0x45115b4bed6a4f895a2809dd4fa8593a74bc5c06.sol#379)
Variable Masklab._getValues(uint256).rTransferAmount (../../sc/dataset/mainnet/0x45115b4bed6a4f895a2809dd4fa8593a74bc5c06.sol#372) is too similar to Masklab._transferStandard(address,address,uint256).tTransferAmount (../../sc/dataset/mainnet/0x45115b4bed6a4f895a2809dd4fa8593a74bc5c06.sol#335)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#variable-names-too-similar
INFO:Detectors:
Masklab.slitherConstructorConstantVariables() (../../sc/dataset/mainnet/0x45115b4bed6a4f895a2809dd4fa8593a74bc5c06.sol#143-403) uses literals with too many digits:
	- _tTotal = 100000000 * 10 ** 9 (../../sc/dataset/mainnet/0x45115b4bed6a4f895a2809dd4fa8593a74bc5c06.sol#152)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits
INFO:Detectors:
Masklab._tOwned (../../sc/dataset/mainnet/0x45115b4bed6a4f895a2809dd4fa8593a74bc5c06.sol#146) is never used in Masklab (../../sc/dataset/mainnet/0x45115b4bed6a4f895a2809dd4fa8593a74bc5c06.sol#143-403)
Masklab.cooldown (../../sc/dataset/mainnet/0x45115b4bed6a4f895a2809dd4fa8593a74bc5c06.sol#150) is never used in Masklab (../../sc/dataset/mainnet/0x45115b4bed6a4f895a2809dd4fa8593a74bc5c06.sol#143-403)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-state-variable
INFO:Detectors:
Masklab._feeAddrWallet (../../sc/dataset/mainnet/0x45115b4bed6a4f895a2809dd4fa8593a74bc5c06.sol#159) should be immutable 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-immutable
INFO:Slither:/bdata2/sc/dataset/mainnet/0x45115b4bed6a4f895a2809dd4fa8593a74bc5c06.sol analyzed (7 contracts with 85 detectors), 35 result(s) found
