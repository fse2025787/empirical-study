INFO:Detectors:
RAGNAROKU.sendETHToFee(uint256) (../../sc/dataset/mainnet/0xa797ae0f99d538d9a7f98236abe9159bdaa2f76c.sol#296-298) sends eth to arbitrary user
	Dangerous calls:
	- _feeAddrWallet.transfer(amount) (../../sc/dataset/mainnet/0xa797ae0f99d538d9a7f98236abe9159bdaa2f76c.sol#297)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#functions-that-send-ether-to-arbitrary-destinations
INFO:Detectors:
Reentrancy in RAGNAROKU._transfer(address,address,uint256) (../../sc/dataset/mainnet/0xa797ae0f99d538d9a7f98236abe9159bdaa2f76c.sol#242-274):
	External calls:
	- swapTokensForEth(contractTokenBalance) (../../sc/dataset/mainnet/0xa797ae0f99d538d9a7f98236abe9159bdaa2f76c.sol#262)
		- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (../../sc/dataset/mainnet/0xa797ae0f99d538d9a7f98236abe9159bdaa2f76c.sol#281-287)
	External calls sending eth:
	- sendETHToFee(address(this).balance) (../../sc/dataset/mainnet/0xa797ae0f99d538d9a7f98236abe9159bdaa2f76c.sol#265)
		- _feeAddrWallet.transfer(amount) (../../sc/dataset/mainnet/0xa797ae0f99d538d9a7f98236abe9159bdaa2f76c.sol#297)
	State variables written after the call(s):
	- _tokenTransfer(from,to,amount) (../../sc/dataset/mainnet/0xa797ae0f99d538d9a7f98236abe9159bdaa2f76c.sol#273)
		- _rOwned[address(this)] = _rOwned[address(this)].add(rTeam) (../../sc/dataset/mainnet/0xa797ae0f99d538d9a7f98236abe9159bdaa2f76c.sol#330)
		- _rOwned[sender] = _rOwned[sender].sub(rAmount) (../../sc/dataset/mainnet/0xa797ae0f99d538d9a7f98236abe9159bdaa2f76c.sol#320)
		- _rOwned[recipient] = _rOwned[recipient].add(rTransferAmount) (../../sc/dataset/mainnet/0xa797ae0f99d538d9a7f98236abe9159bdaa2f76c.sol#321)
	RAGNAROKU._rOwned (../../sc/dataset/mainnet/0xa797ae0f99d538d9a7f98236abe9159bdaa2f76c.sol#128) can be used in cross function reentrancies:
	- RAGNAROKU._takeTeam(uint256) (../../sc/dataset/mainnet/0xa797ae0f99d538d9a7f98236abe9159bdaa2f76c.sol#327-331)
	- RAGNAROKU._transferStandard(address,address,uint256) (../../sc/dataset/mainnet/0xa797ae0f99d538d9a7f98236abe9159bdaa2f76c.sol#318-325)
	- RAGNAROKU.balanceOf(address) (../../sc/dataset/mainnet/0xa797ae0f99d538d9a7f98236abe9159bdaa2f76c.sol#201-203)
	- RAGNAROKU.constructor() (../../sc/dataset/mainnet/0xa797ae0f99d538d9a7f98236abe9159bdaa2f76c.sol#171-183)
	- _tokenTransfer(from,to,amount) (../../sc/dataset/mainnet/0xa797ae0f99d538d9a7f98236abe9159bdaa2f76c.sol#273)
		- _rTotal = _rTotal.sub(rFee) (../../sc/dataset/mainnet/0xa797ae0f99d538d9a7f98236abe9159bdaa2f76c.sol#334)
	RAGNAROKU._rTotal (../../sc/dataset/mainnet/0xa797ae0f99d538d9a7f98236abe9159bdaa2f76c.sol#137) can be used in cross function reentrancies:
	- RAGNAROKU._getCurrentSupply() (../../sc/dataset/mainnet/0xa797ae0f99d538d9a7f98236abe9159bdaa2f76c.sol#408-413)
	- RAGNAROKU._reflectFee(uint256,uint256) (../../sc/dataset/mainnet/0xa797ae0f99d538d9a7f98236abe9159bdaa2f76c.sol#333-336)
	- RAGNAROKU.constructor() (../../sc/dataset/mainnet/0xa797ae0f99d538d9a7f98236abe9159bdaa2f76c.sol#171-183)
	- RAGNAROKU.tokenFromReflection(uint256) (../../sc/dataset/mainnet/0xa797ae0f99d538d9a7f98236abe9159bdaa2f76c.sol#229-233)
Reentrancy in RAGNAROKU.openTrading() (../../sc/dataset/mainnet/0xa797ae0f99d538d9a7f98236abe9159bdaa2f76c.sol#300-312):
	External calls:
	- uniswapV2Pair = IUniswapV2Factory(_uniswapV2Router.factory()).createPair(address(this),_uniswapV2Router.WETH()) (../../sc/dataset/mainnet/0xa797ae0f99d538d9a7f98236abe9159bdaa2f76c.sol#305)
	- uniswapV2Router.addLiquidityETH{value: address(this).balance}(address(this),balanceOf(address(this)),0,0,owner(),block.timestamp) (../../sc/dataset/mainnet/0xa797ae0f99d538d9a7f98236abe9159bdaa2f76c.sol#306)
	External calls sending eth:
	- uniswapV2Router.addLiquidityETH{value: address(this).balance}(address(this),balanceOf(address(this)),0,0,owner(),block.timestamp) (../../sc/dataset/mainnet/0xa797ae0f99d538d9a7f98236abe9159bdaa2f76c.sol#306)
	State variables written after the call(s):
	- tradingOpen = true (../../sc/dataset/mainnet/0xa797ae0f99d538d9a7f98236abe9159bdaa2f76c.sol#310)
	RAGNAROKU.tradingOpen (../../sc/dataset/mainnet/0xa797ae0f99d538d9a7f98236abe9159bdaa2f76c.sol#154) can be used in cross function reentrancies:
	- RAGNAROKU.openTrading() (../../sc/dataset/mainnet/0xa797ae0f99d538d9a7f98236abe9159bdaa2f76c.sol#300-312)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities
INFO:Detectors:
RAGNAROKU.openTrading() (../../sc/dataset/mainnet/0xa797ae0f99d538d9a7f98236abe9159bdaa2f76c.sol#300-312) ignores return value by uniswapV2Router.addLiquidityETH{value: address(this).balance}(address(this),balanceOf(address(this)),0,0,owner(),block.timestamp) (../../sc/dataset/mainnet/0xa797ae0f99d538d9a7f98236abe9159bdaa2f76c.sol#306)
RAGNAROKU.openTrading() (../../sc/dataset/mainnet/0xa797ae0f99d538d9a7f98236abe9159bdaa2f76c.sol#300-312) ignores return value by IERC20(uniswapV2Pair).approve(address(uniswapV2Router),type()(uint256).max) (../../sc/dataset/mainnet/0xa797ae0f99d538d9a7f98236abe9159bdaa2f76c.sol#311)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return
INFO:Detectors:
RAGNAROKU.allowance(address,address).owner (../../sc/dataset/mainnet/0xa797ae0f99d538d9a7f98236abe9159bdaa2f76c.sol#210) shadows:
	- Ownable.owner() (../../sc/dataset/mainnet/0xa797ae0f99d538d9a7f98236abe9159bdaa2f76c.sol#86-88) (function)
RAGNAROKU._approve(address,address,uint256).owner (../../sc/dataset/mainnet/0xa797ae0f99d538d9a7f98236abe9159bdaa2f76c.sol#235) shadows:
	- Ownable.owner() (../../sc/dataset/mainnet/0xa797ae0f99d538d9a7f98236abe9159bdaa2f76c.sol#86-88) (function)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing
INFO:Detectors:
Reentrancy in RAGNAROKU._transfer(address,address,uint256) (../../sc/dataset/mainnet/0xa797ae0f99d538d9a7f98236abe9159bdaa2f76c.sol#242-274):
	External calls:
	- swapTokensForEth(contractTokenBalance) (../../sc/dataset/mainnet/0xa797ae0f99d538d9a7f98236abe9159bdaa2f76c.sol#262)
		- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (../../sc/dataset/mainnet/0xa797ae0f99d538d9a7f98236abe9159bdaa2f76c.sol#281-287)
	External calls sending eth:
	- sendETHToFee(address(this).balance) (../../sc/dataset/mainnet/0xa797ae0f99d538d9a7f98236abe9159bdaa2f76c.sol#265)
		- _feeAddrWallet.transfer(amount) (../../sc/dataset/mainnet/0xa797ae0f99d538d9a7f98236abe9159bdaa2f76c.sol#297)
	State variables written after the call(s):
	- _tokenTransfer(from,to,amount) (../../sc/dataset/mainnet/0xa797ae0f99d538d9a7f98236abe9159bdaa2f76c.sol#273)
		- _tFeeTotal = _tFeeTotal.add(tFee) (../../sc/dataset/mainnet/0xa797ae0f99d538d9a7f98236abe9159bdaa2f76c.sol#335)
Reentrancy in RAGNAROKU.openTrading() (../../sc/dataset/mainnet/0xa797ae0f99d538d9a7f98236abe9159bdaa2f76c.sol#300-312):
	External calls:
	- uniswapV2Pair = IUniswapV2Factory(_uniswapV2Router.factory()).createPair(address(this),_uniswapV2Router.WETH()) (../../sc/dataset/mainnet/0xa797ae0f99d538d9a7f98236abe9159bdaa2f76c.sol#305)
	- uniswapV2Router.addLiquidityETH{value: address(this).balance}(address(this),balanceOf(address(this)),0,0,owner(),block.timestamp) (../../sc/dataset/mainnet/0xa797ae0f99d538d9a7f98236abe9159bdaa2f76c.sol#306)
	External calls sending eth:
	- uniswapV2Router.addLiquidityETH{value: address(this).balance}(address(this),balanceOf(address(this)),0,0,owner(),block.timestamp) (../../sc/dataset/mainnet/0xa797ae0f99d538d9a7f98236abe9159bdaa2f76c.sol#306)
	State variables written after the call(s):
	- cooldownEnabled = true (../../sc/dataset/mainnet/0xa797ae0f99d538d9a7f98236abe9159bdaa2f76c.sol#308)
	- swapEnabled = true (../../sc/dataset/mainnet/0xa797ae0f99d538d9a7f98236abe9159bdaa2f76c.sol#307)
Reentrancy in RAGNAROKU.transferFrom(address,address,uint256) (../../sc/dataset/mainnet/0xa797ae0f99d538d9a7f98236abe9159bdaa2f76c.sol#219-223):
	External calls:
	- _transfer(sender,recipient,amount) (../../sc/dataset/mainnet/0xa797ae0f99d538d9a7f98236abe9159bdaa2f76c.sol#220)
		- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (../../sc/dataset/mainnet/0xa797ae0f99d538d9a7f98236abe9159bdaa2f76c.sol#281-287)
	External calls sending eth:
	- _transfer(sender,recipient,amount) (../../sc/dataset/mainnet/0xa797ae0f99d538d9a7f98236abe9159bdaa2f76c.sol#220)
		- _feeAddrWallet.transfer(amount) (../../sc/dataset/mainnet/0xa797ae0f99d538d9a7f98236abe9159bdaa2f76c.sol#297)
	State variables written after the call(s):
	- _approve(sender,_msgSender(),_allowances[sender][_msgSender()].sub(amount,ERC20: transfer amount exceeds allowance)) (../../sc/dataset/mainnet/0xa797ae0f99d538d9a7f98236abe9159bdaa2f76c.sol#221)
		- _allowances[owner][spender] = amount (../../sc/dataset/mainnet/0xa797ae0f99d538d9a7f98236abe9159bdaa2f76c.sol#238)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2
INFO:Detectors:
Reentrancy in RAGNAROKU._transfer(address,address,uint256) (../../sc/dataset/mainnet/0xa797ae0f99d538d9a7f98236abe9159bdaa2f76c.sol#242-274):
	External calls:
	- swapTokensForEth(contractTokenBalance) (../../sc/dataset/mainnet/0xa797ae0f99d538d9a7f98236abe9159bdaa2f76c.sol#262)
		- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (../../sc/dataset/mainnet/0xa797ae0f99d538d9a7f98236abe9159bdaa2f76c.sol#281-287)
	External calls sending eth:
	- sendETHToFee(address(this).balance) (../../sc/dataset/mainnet/0xa797ae0f99d538d9a7f98236abe9159bdaa2f76c.sol#265)
		- _feeAddrWallet.transfer(amount) (../../sc/dataset/mainnet/0xa797ae0f99d538d9a7f98236abe9159bdaa2f76c.sol#297)
	Event emitted after the call(s):
	- Transfer(sender,recipient,tTransferAmount) (../../sc/dataset/mainnet/0xa797ae0f99d538d9a7f98236abe9159bdaa2f76c.sol#324)
		- _tokenTransfer(from,to,amount) (../../sc/dataset/mainnet/0xa797ae0f99d538d9a7f98236abe9159bdaa2f76c.sol#273)
Reentrancy in RAGNAROKU.transferFrom(address,address,uint256) (../../sc/dataset/mainnet/0xa797ae0f99d538d9a7f98236abe9159bdaa2f76c.sol#219-223):
	External calls:
	- _transfer(sender,recipient,amount) (../../sc/dataset/mainnet/0xa797ae0f99d538d9a7f98236abe9159bdaa2f76c.sol#220)
		- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (../../sc/dataset/mainnet/0xa797ae0f99d538d9a7f98236abe9159bdaa2f76c.sol#281-287)
	External calls sending eth:
	- _transfer(sender,recipient,amount) (../../sc/dataset/mainnet/0xa797ae0f99d538d9a7f98236abe9159bdaa2f76c.sol#220)
		- _feeAddrWallet.transfer(amount) (../../sc/dataset/mainnet/0xa797ae0f99d538d9a7f98236abe9159bdaa2f76c.sol#297)
	Event emitted after the call(s):
	- Approval(owner,spender,amount) (../../sc/dataset/mainnet/0xa797ae0f99d538d9a7f98236abe9159bdaa2f76c.sol#239)
		- _approve(sender,_msgSender(),_allowances[sender][_msgSender()].sub(amount,ERC20: transfer amount exceeds allowance)) (../../sc/dataset/mainnet/0xa797ae0f99d538d9a7f98236abe9159bdaa2f76c.sol#221)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3
INFO:Detectors:
RAGNAROKU.unBLa() (../../sc/dataset/mainnet/0xa797ae0f99d538d9a7f98236abe9159bdaa2f76c.sol#368-377) compares to a boolean constant:
	-bots[bbot] == true (../../sc/dataset/mainnet/0xa797ae0f99d538d9a7f98236abe9159bdaa2f76c.sol#373)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#boolean-equality
INFO:Detectors:
Pragma version0.8.7 (../../sc/dataset/mainnet/0xa797ae0f99d538d9a7f98236abe9159bdaa2f76c.sol#18) allows old versions
solc-0.8.7 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity
INFO:Detectors:
Function IUniswapV2Router02.WETH() (../../sc/dataset/mainnet/0xa797ae0f99d538d9a7f98236abe9159bdaa2f76c.sol#115) is not in mixedCase
Constant RAGNAROKU._tTotal (../../sc/dataset/mainnet/0xa797ae0f99d538d9a7f98236abe9159bdaa2f76c.sol#136) is not in UPPER_CASE_WITH_UNDERSCORES
Constant RAGNAROKU._name (../../sc/dataset/mainnet/0xa797ae0f99d538d9a7f98236abe9159bdaa2f76c.sol#148) is not in UPPER_CASE_WITH_UNDERSCORES
Constant RAGNAROKU._symbol (../../sc/dataset/mainnet/0xa797ae0f99d538d9a7f98236abe9159bdaa2f76c.sol#149) is not in UPPER_CASE_WITH_UNDERSCORES
Constant RAGNAROKU._decimals (../../sc/dataset/mainnet/0xa797ae0f99d538d9a7f98236abe9159bdaa2f76c.sol#150) is not in UPPER_CASE_WITH_UNDERSCORES
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions
INFO:Detectors:
Reentrancy in RAGNAROKU._transfer(address,address,uint256) (../../sc/dataset/mainnet/0xa797ae0f99d538d9a7f98236abe9159bdaa2f76c.sol#242-274):
	External calls:
	- sendETHToFee(address(this).balance) (../../sc/dataset/mainnet/0xa797ae0f99d538d9a7f98236abe9159bdaa2f76c.sol#265)
		- _feeAddrWallet.transfer(amount) (../../sc/dataset/mainnet/0xa797ae0f99d538d9a7f98236abe9159bdaa2f76c.sol#297)
	State variables written after the call(s):
	- _tokenTransfer(from,to,amount) (../../sc/dataset/mainnet/0xa797ae0f99d538d9a7f98236abe9159bdaa2f76c.sol#273)
		- _rOwned[address(this)] = _rOwned[address(this)].add(rTeam) (../../sc/dataset/mainnet/0xa797ae0f99d538d9a7f98236abe9159bdaa2f76c.sol#330)
		- _rOwned[sender] = _rOwned[sender].sub(rAmount) (../../sc/dataset/mainnet/0xa797ae0f99d538d9a7f98236abe9159bdaa2f76c.sol#320)
		- _rOwned[recipient] = _rOwned[recipient].add(rTransferAmount) (../../sc/dataset/mainnet/0xa797ae0f99d538d9a7f98236abe9159bdaa2f76c.sol#321)
	- _tokenTransfer(from,to,amount) (../../sc/dataset/mainnet/0xa797ae0f99d538d9a7f98236abe9159bdaa2f76c.sol#273)
		- _rTotal = _rTotal.sub(rFee) (../../sc/dataset/mainnet/0xa797ae0f99d538d9a7f98236abe9159bdaa2f76c.sol#334)
	- _tokenTransfer(from,to,amount) (../../sc/dataset/mainnet/0xa797ae0f99d538d9a7f98236abe9159bdaa2f76c.sol#273)
		- _tFeeTotal = _tFeeTotal.add(tFee) (../../sc/dataset/mainnet/0xa797ae0f99d538d9a7f98236abe9159bdaa2f76c.sol#335)
	Event emitted after the call(s):
	- Transfer(sender,recipient,tTransferAmount) (../../sc/dataset/mainnet/0xa797ae0f99d538d9a7f98236abe9159bdaa2f76c.sol#324)
		- _tokenTransfer(from,to,amount) (../../sc/dataset/mainnet/0xa797ae0f99d538d9a7f98236abe9159bdaa2f76c.sol#273)
Reentrancy in RAGNAROKU.transferFrom(address,address,uint256) (../../sc/dataset/mainnet/0xa797ae0f99d538d9a7f98236abe9159bdaa2f76c.sol#219-223):
	External calls:
	- _transfer(sender,recipient,amount) (../../sc/dataset/mainnet/0xa797ae0f99d538d9a7f98236abe9159bdaa2f76c.sol#220)
		- _feeAddrWallet.transfer(amount) (../../sc/dataset/mainnet/0xa797ae0f99d538d9a7f98236abe9159bdaa2f76c.sol#297)
	State variables written after the call(s):
	- _approve(sender,_msgSender(),_allowances[sender][_msgSender()].sub(amount,ERC20: transfer amount exceeds allowance)) (../../sc/dataset/mainnet/0xa797ae0f99d538d9a7f98236abe9159bdaa2f76c.sol#221)
		- _allowances[owner][spender] = amount (../../sc/dataset/mainnet/0xa797ae0f99d538d9a7f98236abe9159bdaa2f76c.sol#238)
	Event emitted after the call(s):
	- Approval(owner,spender,amount) (../../sc/dataset/mainnet/0xa797ae0f99d538d9a7f98236abe9159bdaa2f76c.sol#239)
		- _approve(sender,_msgSender(),_allowances[sender][_msgSender()].sub(amount,ERC20: transfer amount exceeds allowance)) (../../sc/dataset/mainnet/0xa797ae0f99d538d9a7f98236abe9159bdaa2f76c.sol#221)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-4
INFO:Detectors:
Variable RAGNAROKU._getRValues(uint256,uint256,uint256,uint256).rTransferAmount (../../sc/dataset/mainnet/0xa797ae0f99d538d9a7f98236abe9159bdaa2f76c.sol#399) is too similar to RAGNAROKU._getTValues(uint256,uint256,uint256).tTransferAmount (../../sc/dataset/mainnet/0xa797ae0f99d538d9a7f98236abe9159bdaa2f76c.sol#391)
Variable RAGNAROKU._transferStandard(address,address,uint256).rTransferAmount (../../sc/dataset/mainnet/0xa797ae0f99d538d9a7f98236abe9159bdaa2f76c.sol#319) is too similar to RAGNAROKU._getValues(uint256).tTransferAmount (../../sc/dataset/mainnet/0xa797ae0f99d538d9a7f98236abe9159bdaa2f76c.sol#382)
Variable RAGNAROKU._getValues(uint256).rTransferAmount (../../sc/dataset/mainnet/0xa797ae0f99d538d9a7f98236abe9159bdaa2f76c.sol#384) is too similar to RAGNAROKU._getTValues(uint256,uint256,uint256).tTransferAmount (../../sc/dataset/mainnet/0xa797ae0f99d538d9a7f98236abe9159bdaa2f76c.sol#391)
Variable RAGNAROKU._transferStandard(address,address,uint256).rTransferAmount (../../sc/dataset/mainnet/0xa797ae0f99d538d9a7f98236abe9159bdaa2f76c.sol#319) is too similar to RAGNAROKU._transferStandard(address,address,uint256).tTransferAmount (../../sc/dataset/mainnet/0xa797ae0f99d538d9a7f98236abe9159bdaa2f76c.sol#319)
Variable RAGNAROKU._getRValues(uint256,uint256,uint256,uint256).rTransferAmount (../../sc/dataset/mainnet/0xa797ae0f99d538d9a7f98236abe9159bdaa2f76c.sol#399) is too similar to RAGNAROKU._getValues(uint256).tTransferAmount (../../sc/dataset/mainnet/0xa797ae0f99d538d9a7f98236abe9159bdaa2f76c.sol#382)
Variable RAGNAROKU._getValues(uint256).rTransferAmount (../../sc/dataset/mainnet/0xa797ae0f99d538d9a7f98236abe9159bdaa2f76c.sol#384) is too similar to RAGNAROKU._getValues(uint256).tTransferAmount (../../sc/dataset/mainnet/0xa797ae0f99d538d9a7f98236abe9159bdaa2f76c.sol#382)
Variable RAGNAROKU._getValues(uint256).rTransferAmount (../../sc/dataset/mainnet/0xa797ae0f99d538d9a7f98236abe9159bdaa2f76c.sol#384) is too similar to RAGNAROKU._transferStandard(address,address,uint256).tTransferAmount (../../sc/dataset/mainnet/0xa797ae0f99d538d9a7f98236abe9159bdaa2f76c.sol#319)
Variable RAGNAROKU._transferStandard(address,address,uint256).rTransferAmount (../../sc/dataset/mainnet/0xa797ae0f99d538d9a7f98236abe9159bdaa2f76c.sol#319) is too similar to RAGNAROKU._getTValues(uint256,uint256,uint256).tTransferAmount (../../sc/dataset/mainnet/0xa797ae0f99d538d9a7f98236abe9159bdaa2f76c.sol#391)
Variable RAGNAROKU._getRValues(uint256,uint256,uint256,uint256).rTransferAmount (../../sc/dataset/mainnet/0xa797ae0f99d538d9a7f98236abe9159bdaa2f76c.sol#399) is too similar to RAGNAROKU._transferStandard(address,address,uint256).tTransferAmount (../../sc/dataset/mainnet/0xa797ae0f99d538d9a7f98236abe9159bdaa2f76c.sol#319)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#variable-names-too-similar
INFO:Detectors:
RAGNAROKU._tOwned (../../sc/dataset/mainnet/0xa797ae0f99d538d9a7f98236abe9159bdaa2f76c.sol#129) is never used in RAGNAROKU (../../sc/dataset/mainnet/0xa797ae0f99d538d9a7f98236abe9159bdaa2f76c.sol#126-415)
RAGNAROKU.cooldown (../../sc/dataset/mainnet/0xa797ae0f99d538d9a7f98236abe9159bdaa2f76c.sol#134) is never used in RAGNAROKU (../../sc/dataset/mainnet/0xa797ae0f99d538d9a7f98236abe9159bdaa2f76c.sol#126-415)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-state-variable
INFO:Detectors:
RAGNAROKU._deployer (../../sc/dataset/mainnet/0xa797ae0f99d538d9a7f98236abe9159bdaa2f76c.sol#139) should be immutable 
RAGNAROKU._feeAddrWallet (../../sc/dataset/mainnet/0xa797ae0f99d538d9a7f98236abe9159bdaa2f76c.sol#146) should be immutable 
RAGNAROKU._finalTax (../../sc/dataset/mainnet/0xa797ae0f99d538d9a7f98236abe9159bdaa2f76c.sol#144) should be immutable 
RAGNAROKU._initialTax (../../sc/dataset/mainnet/0xa797ae0f99d538d9a7f98236abe9159bdaa2f76c.sol#143) should be immutable 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-immutable
INFO:Slither:/bdata2/sc/dataset/mainnet/0xa797ae0f99d538d9a7f98236abe9159bdaa2f76c.sol analyzed (7 contracts with 85 detectors), 37 result(s) found
