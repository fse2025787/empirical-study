INFO:Detectors:
Reentrancy in BobsBurgers._transfer(address,address,uint256) (../../sc/dataset/mainnet/0x8e048022512770b4c88672eb8705cd78374db931.sol#227-258):
	External calls:
	- swapTokensForEth(contractTokenBalance) (../../sc/dataset/mainnet/0x8e048022512770b4c88672eb8705cd78374db931.sol#249)
		- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (../../sc/dataset/mainnet/0x8e048022512770b4c88672eb8705cd78374db931.sol#265-271)
	External calls sending eth:
	- sendETHToFee(address(this).balance) (../../sc/dataset/mainnet/0x8e048022512770b4c88672eb8705cd78374db931.sol#252)
		- _feeAddrWallet1.transfer(amount.div(2)) (../../sc/dataset/mainnet/0x8e048022512770b4c88672eb8705cd78374db931.sol#275)
		- _feeAddrWallet2.transfer(amount.div(2)) (../../sc/dataset/mainnet/0x8e048022512770b4c88672eb8705cd78374db931.sol#276)
	State variables written after the call(s):
	- _tokenTransfer(from,to,amount) (../../sc/dataset/mainnet/0x8e048022512770b4c88672eb8705cd78374db931.sol#257)
		- _rOwned[address(this)] = _rOwned[address(this)].add(rTeam) (../../sc/dataset/mainnet/0x8e048022512770b4c88672eb8705cd78374db931.sol#319)
		- _rOwned[sender] = _rOwned[sender].sub(rAmount) (../../sc/dataset/mainnet/0x8e048022512770b4c88672eb8705cd78374db931.sol#309)
		- _rOwned[recipient] = _rOwned[recipient].add(rTransferAmount) (../../sc/dataset/mainnet/0x8e048022512770b4c88672eb8705cd78374db931.sol#310)
	BobsBurgers._rOwned (../../sc/dataset/mainnet/0x8e048022512770b4c88672eb8705cd78374db931.sol#126) can be used in cross function reentrancies:
	- BobsBurgers._takeTeam(uint256) (../../sc/dataset/mainnet/0x8e048022512770b4c88672eb8705cd78374db931.sol#316-320)
	- BobsBurgers._transferStandard(address,address,uint256) (../../sc/dataset/mainnet/0x8e048022512770b4c88672eb8705cd78374db931.sol#307-314)
	- BobsBurgers.balanceOf(address) (../../sc/dataset/mainnet/0x8e048022512770b4c88672eb8705cd78374db931.sol#186-188)
	- BobsBurgers.constructor() (../../sc/dataset/mainnet/0x8e048022512770b4c88672eb8705cd78374db931.sol#159-168)
	- _tokenTransfer(from,to,amount) (../../sc/dataset/mainnet/0x8e048022512770b4c88672eb8705cd78374db931.sol#257)
		- _rTotal = _rTotal.sub(rFee) (../../sc/dataset/mainnet/0x8e048022512770b4c88672eb8705cd78374db931.sol#323)
	BobsBurgers._rTotal (../../sc/dataset/mainnet/0x8e048022512770b4c88672eb8705cd78374db931.sol#134) can be used in cross function reentrancies:
	- BobsBurgers._getCurrentSupply() (../../sc/dataset/mainnet/0x8e048022512770b4c88672eb8705cd78374db931.sol#369-374)
	- BobsBurgers._reflectFee(uint256,uint256) (../../sc/dataset/mainnet/0x8e048022512770b4c88672eb8705cd78374db931.sol#322-325)
	- BobsBurgers.constructor() (../../sc/dataset/mainnet/0x8e048022512770b4c88672eb8705cd78374db931.sol#159-168)
	- BobsBurgers.tokenFromReflection(uint256) (../../sc/dataset/mainnet/0x8e048022512770b4c88672eb8705cd78374db931.sol#214-218)
Reentrancy in BobsBurgers.openTrading() (../../sc/dataset/mainnet/0x8e048022512770b4c88672eb8705cd78374db931.sol#279-291):
	External calls:
	- uniswapV2Pair = IUniswapV2Factory(_uniswapV2Router.factory()).createPair(address(this),_uniswapV2Router.WETH()) (../../sc/dataset/mainnet/0x8e048022512770b4c88672eb8705cd78374db931.sol#284)
	- uniswapV2Router.addLiquidityETH{value: address(this).balance}(address(this),balanceOf(address(this)),0,0,owner(),block.timestamp) (../../sc/dataset/mainnet/0x8e048022512770b4c88672eb8705cd78374db931.sol#285)
	External calls sending eth:
	- uniswapV2Router.addLiquidityETH{value: address(this).balance}(address(this),balanceOf(address(this)),0,0,owner(),block.timestamp) (../../sc/dataset/mainnet/0x8e048022512770b4c88672eb8705cd78374db931.sol#285)
	State variables written after the call(s):
	- tradingOpen = true (../../sc/dataset/mainnet/0x8e048022512770b4c88672eb8705cd78374db931.sol#289)
	BobsBurgers.tradingOpen (../../sc/dataset/mainnet/0x8e048022512770b4c88672eb8705cd78374db931.sol#148) can be used in cross function reentrancies:
	- BobsBurgers.openTrading() (../../sc/dataset/mainnet/0x8e048022512770b4c88672eb8705cd78374db931.sol#279-291)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities
INFO:Detectors:
BobsBurgers.openTrading() (../../sc/dataset/mainnet/0x8e048022512770b4c88672eb8705cd78374db931.sol#279-291) ignores return value by uniswapV2Router.addLiquidityETH{value: address(this).balance}(address(this),balanceOf(address(this)),0,0,owner(),block.timestamp) (../../sc/dataset/mainnet/0x8e048022512770b4c88672eb8705cd78374db931.sol#285)
BobsBurgers.openTrading() (../../sc/dataset/mainnet/0x8e048022512770b4c88672eb8705cd78374db931.sol#279-291) ignores return value by IERC20(uniswapV2Pair).approve(address(uniswapV2Router),type()(uint256).max) (../../sc/dataset/mainnet/0x8e048022512770b4c88672eb8705cd78374db931.sol#290)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return
INFO:Detectors:
BobsBurgers.allowance(address,address).owner (../../sc/dataset/mainnet/0x8e048022512770b4c88672eb8705cd78374db931.sol#195) shadows:
	- Ownable.owner() (../../sc/dataset/mainnet/0x8e048022512770b4c88672eb8705cd78374db931.sol#84-86) (function)
BobsBurgers._approve(address,address,uint256).owner (../../sc/dataset/mainnet/0x8e048022512770b4c88672eb8705cd78374db931.sol#220) shadows:
	- Ownable.owner() (../../sc/dataset/mainnet/0x8e048022512770b4c88672eb8705cd78374db931.sol#84-86) (function)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing
INFO:Detectors:
Reentrancy in BobsBurgers._transfer(address,address,uint256) (../../sc/dataset/mainnet/0x8e048022512770b4c88672eb8705cd78374db931.sol#227-258):
	External calls:
	- swapTokensForEth(contractTokenBalance) (../../sc/dataset/mainnet/0x8e048022512770b4c88672eb8705cd78374db931.sol#249)
		- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (../../sc/dataset/mainnet/0x8e048022512770b4c88672eb8705cd78374db931.sol#265-271)
	External calls sending eth:
	- sendETHToFee(address(this).balance) (../../sc/dataset/mainnet/0x8e048022512770b4c88672eb8705cd78374db931.sol#252)
		- _feeAddrWallet1.transfer(amount.div(2)) (../../sc/dataset/mainnet/0x8e048022512770b4c88672eb8705cd78374db931.sol#275)
		- _feeAddrWallet2.transfer(amount.div(2)) (../../sc/dataset/mainnet/0x8e048022512770b4c88672eb8705cd78374db931.sol#276)
	State variables written after the call(s):
	- _tokenTransfer(from,to,amount) (../../sc/dataset/mainnet/0x8e048022512770b4c88672eb8705cd78374db931.sol#257)
		- _tFeeTotal = _tFeeTotal.add(tFee) (../../sc/dataset/mainnet/0x8e048022512770b4c88672eb8705cd78374db931.sol#324)
Reentrancy in BobsBurgers.openTrading() (../../sc/dataset/mainnet/0x8e048022512770b4c88672eb8705cd78374db931.sol#279-291):
	External calls:
	- uniswapV2Pair = IUniswapV2Factory(_uniswapV2Router.factory()).createPair(address(this),_uniswapV2Router.WETH()) (../../sc/dataset/mainnet/0x8e048022512770b4c88672eb8705cd78374db931.sol#284)
	- uniswapV2Router.addLiquidityETH{value: address(this).balance}(address(this),balanceOf(address(this)),0,0,owner(),block.timestamp) (../../sc/dataset/mainnet/0x8e048022512770b4c88672eb8705cd78374db931.sol#285)
	External calls sending eth:
	- uniswapV2Router.addLiquidityETH{value: address(this).balance}(address(this),balanceOf(address(this)),0,0,owner(),block.timestamp) (../../sc/dataset/mainnet/0x8e048022512770b4c88672eb8705cd78374db931.sol#285)
	State variables written after the call(s):
	- _maxTxAmount = 50000000000000000 * 10 ** 9 (../../sc/dataset/mainnet/0x8e048022512770b4c88672eb8705cd78374db931.sol#288)
	- cooldownEnabled = true (../../sc/dataset/mainnet/0x8e048022512770b4c88672eb8705cd78374db931.sol#287)
	- swapEnabled = true (../../sc/dataset/mainnet/0x8e048022512770b4c88672eb8705cd78374db931.sol#286)
Reentrancy in BobsBurgers.transferFrom(address,address,uint256) (../../sc/dataset/mainnet/0x8e048022512770b4c88672eb8705cd78374db931.sol#204-208):
	External calls:
	- _transfer(sender,recipient,amount) (../../sc/dataset/mainnet/0x8e048022512770b4c88672eb8705cd78374db931.sol#205)
		- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (../../sc/dataset/mainnet/0x8e048022512770b4c88672eb8705cd78374db931.sol#265-271)
	External calls sending eth:
	- _transfer(sender,recipient,amount) (../../sc/dataset/mainnet/0x8e048022512770b4c88672eb8705cd78374db931.sol#205)
		- _feeAddrWallet1.transfer(amount.div(2)) (../../sc/dataset/mainnet/0x8e048022512770b4c88672eb8705cd78374db931.sol#275)
		- _feeAddrWallet2.transfer(amount.div(2)) (../../sc/dataset/mainnet/0x8e048022512770b4c88672eb8705cd78374db931.sol#276)
	State variables written after the call(s):
	- _approve(sender,_msgSender(),_allowances[sender][_msgSender()].sub(amount,ERC20: transfer amount exceeds allowance)) (../../sc/dataset/mainnet/0x8e048022512770b4c88672eb8705cd78374db931.sol#206)
		- _allowances[owner][spender] = amount (../../sc/dataset/mainnet/0x8e048022512770b4c88672eb8705cd78374db931.sol#223)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2
INFO:Detectors:
Reentrancy in BobsBurgers._transfer(address,address,uint256) (../../sc/dataset/mainnet/0x8e048022512770b4c88672eb8705cd78374db931.sol#227-258):
	External calls:
	- swapTokensForEth(contractTokenBalance) (../../sc/dataset/mainnet/0x8e048022512770b4c88672eb8705cd78374db931.sol#249)
		- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (../../sc/dataset/mainnet/0x8e048022512770b4c88672eb8705cd78374db931.sol#265-271)
	External calls sending eth:
	- sendETHToFee(address(this).balance) (../../sc/dataset/mainnet/0x8e048022512770b4c88672eb8705cd78374db931.sol#252)
		- _feeAddrWallet1.transfer(amount.div(2)) (../../sc/dataset/mainnet/0x8e048022512770b4c88672eb8705cd78374db931.sol#275)
		- _feeAddrWallet2.transfer(amount.div(2)) (../../sc/dataset/mainnet/0x8e048022512770b4c88672eb8705cd78374db931.sol#276)
	Event emitted after the call(s):
	- Transfer(sender,recipient,tTransferAmount) (../../sc/dataset/mainnet/0x8e048022512770b4c88672eb8705cd78374db931.sol#313)
		- _tokenTransfer(from,to,amount) (../../sc/dataset/mainnet/0x8e048022512770b4c88672eb8705cd78374db931.sol#257)
Reentrancy in BobsBurgers.transferFrom(address,address,uint256) (../../sc/dataset/mainnet/0x8e048022512770b4c88672eb8705cd78374db931.sol#204-208):
	External calls:
	- _transfer(sender,recipient,amount) (../../sc/dataset/mainnet/0x8e048022512770b4c88672eb8705cd78374db931.sol#205)
		- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (../../sc/dataset/mainnet/0x8e048022512770b4c88672eb8705cd78374db931.sol#265-271)
	External calls sending eth:
	- _transfer(sender,recipient,amount) (../../sc/dataset/mainnet/0x8e048022512770b4c88672eb8705cd78374db931.sol#205)
		- _feeAddrWallet1.transfer(amount.div(2)) (../../sc/dataset/mainnet/0x8e048022512770b4c88672eb8705cd78374db931.sol#275)
		- _feeAddrWallet2.transfer(amount.div(2)) (../../sc/dataset/mainnet/0x8e048022512770b4c88672eb8705cd78374db931.sol#276)
	Event emitted after the call(s):
	- Approval(owner,spender,amount) (../../sc/dataset/mainnet/0x8e048022512770b4c88672eb8705cd78374db931.sol#224)
		- _approve(sender,_msgSender(),_allowances[sender][_msgSender()].sub(amount,ERC20: transfer amount exceeds allowance)) (../../sc/dataset/mainnet/0x8e048022512770b4c88672eb8705cd78374db931.sol#206)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3
INFO:Detectors:
BobsBurgers._transfer(address,address,uint256) (../../sc/dataset/mainnet/0x8e048022512770b4c88672eb8705cd78374db931.sol#227-258) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool)(cooldown[to] < block.timestamp) (../../sc/dataset/mainnet/0x8e048022512770b4c88672eb8705cd78374db931.sol#238)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp
INFO:Detectors:
Pragma version^0.8.4 (../../sc/dataset/mainnet/0x8e048022512770b4c88672eb8705cd78374db931.sol#16) allows old versions
solc-0.8.7 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity
INFO:Detectors:
Function IUniswapV2Router02.WETH() (../../sc/dataset/mainnet/0x8e048022512770b4c88672eb8705cd78374db931.sol#113) is not in mixedCase
Constant BobsBurgers._tTotal (../../sc/dataset/mainnet/0x8e048022512770b4c88672eb8705cd78374db931.sol#133) is not in UPPER_CASE_WITH_UNDERSCORES
Constant BobsBurgers._name (../../sc/dataset/mainnet/0x8e048022512770b4c88672eb8705cd78374db931.sol#142) is not in UPPER_CASE_WITH_UNDERSCORES
Constant BobsBurgers._symbol (../../sc/dataset/mainnet/0x8e048022512770b4c88672eb8705cd78374db931.sol#143) is not in UPPER_CASE_WITH_UNDERSCORES
Constant BobsBurgers._decimals (../../sc/dataset/mainnet/0x8e048022512770b4c88672eb8705cd78374db931.sol#144) is not in UPPER_CASE_WITH_UNDERSCORES
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions
INFO:Detectors:
Reentrancy in BobsBurgers._transfer(address,address,uint256) (../../sc/dataset/mainnet/0x8e048022512770b4c88672eb8705cd78374db931.sol#227-258):
	External calls:
	- sendETHToFee(address(this).balance) (../../sc/dataset/mainnet/0x8e048022512770b4c88672eb8705cd78374db931.sol#252)
		- _feeAddrWallet1.transfer(amount.div(2)) (../../sc/dataset/mainnet/0x8e048022512770b4c88672eb8705cd78374db931.sol#275)
		- _feeAddrWallet2.transfer(amount.div(2)) (../../sc/dataset/mainnet/0x8e048022512770b4c88672eb8705cd78374db931.sol#276)
	State variables written after the call(s):
	- _tokenTransfer(from,to,amount) (../../sc/dataset/mainnet/0x8e048022512770b4c88672eb8705cd78374db931.sol#257)
		- _rOwned[address(this)] = _rOwned[address(this)].add(rTeam) (../../sc/dataset/mainnet/0x8e048022512770b4c88672eb8705cd78374db931.sol#319)
		- _rOwned[sender] = _rOwned[sender].sub(rAmount) (../../sc/dataset/mainnet/0x8e048022512770b4c88672eb8705cd78374db931.sol#309)
		- _rOwned[recipient] = _rOwned[recipient].add(rTransferAmount) (../../sc/dataset/mainnet/0x8e048022512770b4c88672eb8705cd78374db931.sol#310)
	- _tokenTransfer(from,to,amount) (../../sc/dataset/mainnet/0x8e048022512770b4c88672eb8705cd78374db931.sol#257)
		- _rTotal = _rTotal.sub(rFee) (../../sc/dataset/mainnet/0x8e048022512770b4c88672eb8705cd78374db931.sol#323)
	- _tokenTransfer(from,to,amount) (../../sc/dataset/mainnet/0x8e048022512770b4c88672eb8705cd78374db931.sol#257)
		- _tFeeTotal = _tFeeTotal.add(tFee) (../../sc/dataset/mainnet/0x8e048022512770b4c88672eb8705cd78374db931.sol#324)
	Event emitted after the call(s):
	- Transfer(sender,recipient,tTransferAmount) (../../sc/dataset/mainnet/0x8e048022512770b4c88672eb8705cd78374db931.sol#313)
		- _tokenTransfer(from,to,amount) (../../sc/dataset/mainnet/0x8e048022512770b4c88672eb8705cd78374db931.sol#257)
Reentrancy in BobsBurgers.transferFrom(address,address,uint256) (../../sc/dataset/mainnet/0x8e048022512770b4c88672eb8705cd78374db931.sol#204-208):
	External calls:
	- _transfer(sender,recipient,amount) (../../sc/dataset/mainnet/0x8e048022512770b4c88672eb8705cd78374db931.sol#205)
		- _feeAddrWallet1.transfer(amount.div(2)) (../../sc/dataset/mainnet/0x8e048022512770b4c88672eb8705cd78374db931.sol#275)
		- _feeAddrWallet2.transfer(amount.div(2)) (../../sc/dataset/mainnet/0x8e048022512770b4c88672eb8705cd78374db931.sol#276)
	State variables written after the call(s):
	- _approve(sender,_msgSender(),_allowances[sender][_msgSender()].sub(amount,ERC20: transfer amount exceeds allowance)) (../../sc/dataset/mainnet/0x8e048022512770b4c88672eb8705cd78374db931.sol#206)
		- _allowances[owner][spender] = amount (../../sc/dataset/mainnet/0x8e048022512770b4c88672eb8705cd78374db931.sol#223)
	Event emitted after the call(s):
	- Approval(owner,spender,amount) (../../sc/dataset/mainnet/0x8e048022512770b4c88672eb8705cd78374db931.sol#224)
		- _approve(sender,_msgSender(),_allowances[sender][_msgSender()].sub(amount,ERC20: transfer amount exceeds allowance)) (../../sc/dataset/mainnet/0x8e048022512770b4c88672eb8705cd78374db931.sol#206)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-4
INFO:Detectors:
Variable BobsBurgers._feeAddrWallet1 (../../sc/dataset/mainnet/0x8e048022512770b4c88672eb8705cd78374db931.sol#139) is too similar to BobsBurgers._feeAddrWallet2 (../../sc/dataset/mainnet/0x8e048022512770b4c88672eb8705cd78374db931.sol#140)
Variable BobsBurgers._getValues(uint256).rTransferAmount (../../sc/dataset/mainnet/0x8e048022512770b4c88672eb8705cd78374db931.sol#345) is too similar to BobsBurgers._getTValues(uint256,uint256,uint256).tTransferAmount (../../sc/dataset/mainnet/0x8e048022512770b4c88672eb8705cd78374db931.sol#352)
Variable BobsBurgers._transferStandard(address,address,uint256).rTransferAmount (../../sc/dataset/mainnet/0x8e048022512770b4c88672eb8705cd78374db931.sol#308) is too similar to BobsBurgers._getTValues(uint256,uint256,uint256).tTransferAmount (../../sc/dataset/mainnet/0x8e048022512770b4c88672eb8705cd78374db931.sol#352)
Variable BobsBurgers._transferStandard(address,address,uint256).rTransferAmount (../../sc/dataset/mainnet/0x8e048022512770b4c88672eb8705cd78374db931.sol#308) is too similar to BobsBurgers._transferStandard(address,address,uint256).tTransferAmount (../../sc/dataset/mainnet/0x8e048022512770b4c88672eb8705cd78374db931.sol#308)
Variable BobsBurgers._getRValues(uint256,uint256,uint256,uint256).rTransferAmount (../../sc/dataset/mainnet/0x8e048022512770b4c88672eb8705cd78374db931.sol#360) is too similar to BobsBurgers._getTValues(uint256,uint256,uint256).tTransferAmount (../../sc/dataset/mainnet/0x8e048022512770b4c88672eb8705cd78374db931.sol#352)
Variable BobsBurgers._getRValues(uint256,uint256,uint256,uint256).rTransferAmount (../../sc/dataset/mainnet/0x8e048022512770b4c88672eb8705cd78374db931.sol#360) is too similar to BobsBurgers._transferStandard(address,address,uint256).tTransferAmount (../../sc/dataset/mainnet/0x8e048022512770b4c88672eb8705cd78374db931.sol#308)
Variable BobsBurgers._transferStandard(address,address,uint256).rTransferAmount (../../sc/dataset/mainnet/0x8e048022512770b4c88672eb8705cd78374db931.sol#308) is too similar to BobsBurgers._getValues(uint256).tTransferAmount (../../sc/dataset/mainnet/0x8e048022512770b4c88672eb8705cd78374db931.sol#343)
Variable BobsBurgers._getValues(uint256).rTransferAmount (../../sc/dataset/mainnet/0x8e048022512770b4c88672eb8705cd78374db931.sol#345) is too similar to BobsBurgers._transferStandard(address,address,uint256).tTransferAmount (../../sc/dataset/mainnet/0x8e048022512770b4c88672eb8705cd78374db931.sol#308)
Variable BobsBurgers._getValues(uint256).rTransferAmount (../../sc/dataset/mainnet/0x8e048022512770b4c88672eb8705cd78374db931.sol#345) is too similar to BobsBurgers._getValues(uint256).tTransferAmount (../../sc/dataset/mainnet/0x8e048022512770b4c88672eb8705cd78374db931.sol#343)
Variable BobsBurgers._getRValues(uint256,uint256,uint256,uint256).rTransferAmount (../../sc/dataset/mainnet/0x8e048022512770b4c88672eb8705cd78374db931.sol#360) is too similar to BobsBurgers._getValues(uint256).tTransferAmount (../../sc/dataset/mainnet/0x8e048022512770b4c88672eb8705cd78374db931.sol#343)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#variable-names-too-similar
INFO:Detectors:
BobsBurgers.openTrading() (../../sc/dataset/mainnet/0x8e048022512770b4c88672eb8705cd78374db931.sol#279-291) uses literals with too many digits:
	- _maxTxAmount = 50000000000000000 * 10 ** 9 (../../sc/dataset/mainnet/0x8e048022512770b4c88672eb8705cd78374db931.sol#288)
BobsBurgers.slitherConstructorConstantVariables() (../../sc/dataset/mainnet/0x8e048022512770b4c88672eb8705cd78374db931.sol#124-376) uses literals with too many digits:
	- _tTotal = 1000000000000000000 * 10 ** 9 (../../sc/dataset/mainnet/0x8e048022512770b4c88672eb8705cd78374db931.sol#133)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits
INFO:Detectors:
BobsBurgers._tOwned (../../sc/dataset/mainnet/0x8e048022512770b4c88672eb8705cd78374db931.sol#127) is never used in BobsBurgers (../../sc/dataset/mainnet/0x8e048022512770b4c88672eb8705cd78374db931.sol#124-376)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-state-variable
INFO:Detectors:
BobsBurgers._feeAddrWallet1 (../../sc/dataset/mainnet/0x8e048022512770b4c88672eb8705cd78374db931.sol#139) should be immutable 
BobsBurgers._feeAddrWallet2 (../../sc/dataset/mainnet/0x8e048022512770b4c88672eb8705cd78374db931.sol#140) should be immutable 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-immutable
INFO:Slither:/bdata2/sc/dataset/mainnet/0x8e048022512770b4c88672eb8705cd78374db931.sol analyzed (7 contracts with 85 detectors), 36 result(s) found
