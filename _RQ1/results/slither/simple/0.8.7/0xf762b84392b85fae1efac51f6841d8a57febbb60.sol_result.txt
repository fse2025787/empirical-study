INFO:Detectors:
BrainLetCapitalDAO.swapBack() (../../sc/dataset/mainnet/0xf762b84392b85fae1efac51f6841d8a57febbb60.sol#439-461) sends eth to arbitrary user
	Dangerous calls:
	- address(marketingWallet).transfer(amountMarketing) (../../sc/dataset/mainnet/0xf762b84392b85fae1efac51f6841d8a57febbb60.sol#459)
	- address(treasury).transfer(amountTreasury) (../../sc/dataset/mainnet/0xf762b84392b85fae1efac51f6841d8a57febbb60.sol#460)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#functions-that-send-ether-to-arbitrary-destinations
INFO:Detectors:
Reentrancy in BrainLetCapitalDAO._transferFrom(address,address,uint256) (../../sc/dataset/mainnet/0xf762b84392b85fae1efac51f6841d8a57febbb60.sol#388-415):
	External calls:
	- swapBack() (../../sc/dataset/mainnet/0xf762b84392b85fae1efac51f6841d8a57febbb60.sol#402)
		- router.swapExactTokensForETHSupportingFeeOnTransferTokens(amountToSwap,0,path,address(this),block.timestamp) (../../sc/dataset/mainnet/0xf762b84392b85fae1efac51f6841d8a57febbb60.sol#447-453)
	External calls sending eth:
	- swapBack() (../../sc/dataset/mainnet/0xf762b84392b85fae1efac51f6841d8a57febbb60.sol#402)
		- address(marketingWallet).transfer(amountMarketing) (../../sc/dataset/mainnet/0xf762b84392b85fae1efac51f6841d8a57febbb60.sol#459)
		- address(treasury).transfer(amountTreasury) (../../sc/dataset/mainnet/0xf762b84392b85fae1efac51f6841d8a57febbb60.sol#460)
	State variables written after the call(s):
	- _balances[sender] = _balances[sender].sub(amount,Insufficient Balance) (../../sc/dataset/mainnet/0xf762b84392b85fae1efac51f6841d8a57febbb60.sol#404)
	BrainLetCapitalDAO._balances (../../sc/dataset/mainnet/0xf762b84392b85fae1efac51f6841d8a57febbb60.sol#299) can be used in cross function reentrancies:
	- BrainLetCapitalDAO._basicTransfer(address,address,uint256) (../../sc/dataset/mainnet/0xf762b84392b85fae1efac51f6841d8a57febbb60.sol#417-422)
	- BrainLetCapitalDAO._setIsDividendExempt(address,bool) (../../sc/dataset/mainnet/0xf762b84392b85fae1efac51f6841d8a57febbb60.sol#479-487)
	- BrainLetCapitalDAO._transferFrom(address,address,uint256) (../../sc/dataset/mainnet/0xf762b84392b85fae1efac51f6841d8a57febbb60.sol#388-415)
	- BrainLetCapitalDAO.balanceOf(address) (../../sc/dataset/mainnet/0xf762b84392b85fae1efac51f6841d8a57febbb60.sol#363)
	- BrainLetCapitalDAO.constructor(address) (../../sc/dataset/mainnet/0xf762b84392b85fae1efac51f6841d8a57febbb60.sol#330-354)
	- BrainLetCapitalDAO.takeFee(address,uint256) (../../sc/dataset/mainnet/0xf762b84392b85fae1efac51f6841d8a57febbb60.sol#429-436)
	- _balances[recipient] = _balances[recipient].add(amountReceived) (../../sc/dataset/mainnet/0xf762b84392b85fae1efac51f6841d8a57febbb60.sol#408)
	BrainLetCapitalDAO._balances (../../sc/dataset/mainnet/0xf762b84392b85fae1efac51f6841d8a57febbb60.sol#299) can be used in cross function reentrancies:
	- BrainLetCapitalDAO._basicTransfer(address,address,uint256) (../../sc/dataset/mainnet/0xf762b84392b85fae1efac51f6841d8a57febbb60.sol#417-422)
	- BrainLetCapitalDAO._setIsDividendExempt(address,bool) (../../sc/dataset/mainnet/0xf762b84392b85fae1efac51f6841d8a57febbb60.sol#479-487)
	- BrainLetCapitalDAO._transferFrom(address,address,uint256) (../../sc/dataset/mainnet/0xf762b84392b85fae1efac51f6841d8a57febbb60.sol#388-415)
	- BrainLetCapitalDAO.balanceOf(address) (../../sc/dataset/mainnet/0xf762b84392b85fae1efac51f6841d8a57febbb60.sol#363)
	- BrainLetCapitalDAO.constructor(address) (../../sc/dataset/mainnet/0xf762b84392b85fae1efac51f6841d8a57febbb60.sol#330-354)
	- BrainLetCapitalDAO.takeFee(address,uint256) (../../sc/dataset/mainnet/0xf762b84392b85fae1efac51f6841d8a57febbb60.sol#429-436)
	- amountReceived = takeFee(sender,amount) (../../sc/dataset/mainnet/0xf762b84392b85fae1efac51f6841d8a57febbb60.sol#406)
		- _balances[address(this)] = _balances[address(this)].add(feeAmount) (../../sc/dataset/mainnet/0xf762b84392b85fae1efac51f6841d8a57febbb60.sol#432)
	BrainLetCapitalDAO._balances (../../sc/dataset/mainnet/0xf762b84392b85fae1efac51f6841d8a57febbb60.sol#299) can be used in cross function reentrancies:
	- BrainLetCapitalDAO._basicTransfer(address,address,uint256) (../../sc/dataset/mainnet/0xf762b84392b85fae1efac51f6841d8a57febbb60.sol#417-422)
	- BrainLetCapitalDAO._setIsDividendExempt(address,bool) (../../sc/dataset/mainnet/0xf762b84392b85fae1efac51f6841d8a57febbb60.sol#479-487)
	- BrainLetCapitalDAO._transferFrom(address,address,uint256) (../../sc/dataset/mainnet/0xf762b84392b85fae1efac51f6841d8a57febbb60.sol#388-415)
	- BrainLetCapitalDAO.balanceOf(address) (../../sc/dataset/mainnet/0xf762b84392b85fae1efac51f6841d8a57febbb60.sol#363)
	- BrainLetCapitalDAO.constructor(address) (../../sc/dataset/mainnet/0xf762b84392b85fae1efac51f6841d8a57febbb60.sol#330-354)
	- BrainLetCapitalDAO.takeFee(address,uint256) (../../sc/dataset/mainnet/0xf762b84392b85fae1efac51f6841d8a57febbb60.sol#429-436)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities
INFO:Detectors:
DividendDistributor.setShare(address,uint256) (../../sc/dataset/mainnet/0xf762b84392b85fae1efac51f6841d8a57febbb60.sol#202-216) should emit an event for: 
	- totalShares = totalShares.sub(shares[shareholder].amount).add(amount) (../../sc/dataset/mainnet/0xf762b84392b85fae1efac51f6841d8a57febbb60.sol#213) 
BrainLetCapitalDAO.setFee(uint256) (../../sc/dataset/mainnet/0xf762b84392b85fae1efac51f6841d8a57febbb60.sol#497-500) should emit an event for: 
	- totalFee = _fee (../../sc/dataset/mainnet/0xf762b84392b85fae1efac51f6841d8a57febbb60.sol#499) 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-arithmetic
INFO:Detectors:
DividendDistributor.constructor(address,address).owner (../../sc/dataset/mainnet/0xf762b84392b85fae1efac51f6841d8a57febbb60.sol#194) lacks a zero-check on :
		- _owner = address(owner) (../../sc/dataset/mainnet/0xf762b84392b85fae1efac51f6841d8a57febbb60.sol#196)
DividendDistributor.constructor(address,address).treasury (../../sc/dataset/mainnet/0xf762b84392b85fae1efac51f6841d8a57febbb60.sol#194) lacks a zero-check on :
		- _treasury = address(treasury) (../../sc/dataset/mainnet/0xf762b84392b85fae1efac51f6841d8a57febbb60.sol#197)
DividendDistributor.manualSend(uint256,address).holder (../../sc/dataset/mainnet/0xf762b84392b85fae1efac51f6841d8a57febbb60.sol#268) lacks a zero-check on :
		- address(holder).transfer(amount) (../../sc/dataset/mainnet/0xf762b84392b85fae1efac51f6841d8a57febbb60.sol#270)
		- address(holder).transfer(contractETHBalance) (../../sc/dataset/mainnet/0xf762b84392b85fae1efac51f6841d8a57febbb60.sol#270)
DividendDistributor.setTreasury(address).treasury (../../sc/dataset/mainnet/0xf762b84392b85fae1efac51f6841d8a57febbb60.sol#273) lacks a zero-check on :
		- _treasury = address(treasury) (../../sc/dataset/mainnet/0xf762b84392b85fae1efac51f6841d8a57febbb60.sol#274)
Auth.transferOwnership(address).adr (../../sc/dataset/mainnet/0xf762b84392b85fae1efac51f6841d8a57febbb60.sol#94) lacks a zero-check on :
		- owner = adr (../../sc/dataset/mainnet/0xf762b84392b85fae1efac51f6841d8a57febbb60.sol#95)
BrainLetCapitalDAO.setMarketingWallet(address)._marketingWallet (../../sc/dataset/mainnet/0xf762b84392b85fae1efac51f6841d8a57febbb60.sol#528) lacks a zero-check on :
		- marketingWallet = address(_marketingWallet) (../../sc/dataset/mainnet/0xf762b84392b85fae1efac51f6841d8a57febbb60.sol#529)
BrainLetCapitalDAO.setTreasury(address)._treasury (../../sc/dataset/mainnet/0xf762b84392b85fae1efac51f6841d8a57febbb60.sol#532) lacks a zero-check on :
		- treasury = address(_treasury) (../../sc/dataset/mainnet/0xf762b84392b85fae1efac51f6841d8a57febbb60.sol#533)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation
INFO:Detectors:
Reentrancy in BrainLetCapitalDAO._transferFrom(address,address,uint256) (../../sc/dataset/mainnet/0xf762b84392b85fae1efac51f6841d8a57febbb60.sol#388-415):
	External calls:
	- swapBack() (../../sc/dataset/mainnet/0xf762b84392b85fae1efac51f6841d8a57febbb60.sol#402)
		- router.swapExactTokensForETHSupportingFeeOnTransferTokens(amountToSwap,0,path,address(this),block.timestamp) (../../sc/dataset/mainnet/0xf762b84392b85fae1efac51f6841d8a57febbb60.sol#447-453)
	- distributor.setShare(sender,_balances[sender]) (../../sc/dataset/mainnet/0xf762b84392b85fae1efac51f6841d8a57febbb60.sol#410)
	- distributor.setShare(recipient,_balances[recipient]) (../../sc/dataset/mainnet/0xf762b84392b85fae1efac51f6841d8a57febbb60.sol#411)
	External calls sending eth:
	- swapBack() (../../sc/dataset/mainnet/0xf762b84392b85fae1efac51f6841d8a57febbb60.sol#402)
		- address(marketingWallet).transfer(amountMarketing) (../../sc/dataset/mainnet/0xf762b84392b85fae1efac51f6841d8a57febbb60.sol#459)
		- address(treasury).transfer(amountTreasury) (../../sc/dataset/mainnet/0xf762b84392b85fae1efac51f6841d8a57febbb60.sol#460)
	Event emitted after the call(s):
	- Transfer(sender,recipient,amountReceived) (../../sc/dataset/mainnet/0xf762b84392b85fae1efac51f6841d8a57febbb60.sol#413)
Reentrancy in BrainLetCapitalDAO._transferFrom(address,address,uint256) (../../sc/dataset/mainnet/0xf762b84392b85fae1efac51f6841d8a57febbb60.sol#388-415):
	External calls:
	- swapBack() (../../sc/dataset/mainnet/0xf762b84392b85fae1efac51f6841d8a57febbb60.sol#402)
		- router.swapExactTokensForETHSupportingFeeOnTransferTokens(amountToSwap,0,path,address(this),block.timestamp) (../../sc/dataset/mainnet/0xf762b84392b85fae1efac51f6841d8a57febbb60.sol#447-453)
	External calls sending eth:
	- swapBack() (../../sc/dataset/mainnet/0xf762b84392b85fae1efac51f6841d8a57febbb60.sol#402)
		- address(marketingWallet).transfer(amountMarketing) (../../sc/dataset/mainnet/0xf762b84392b85fae1efac51f6841d8a57febbb60.sol#459)
		- address(treasury).transfer(amountTreasury) (../../sc/dataset/mainnet/0xf762b84392b85fae1efac51f6841d8a57febbb60.sol#460)
	Event emitted after the call(s):
	- Transfer(sender,address(this),feeAmount) (../../sc/dataset/mainnet/0xf762b84392b85fae1efac51f6841d8a57febbb60.sol#433)
		- amountReceived = takeFee(sender,amount) (../../sc/dataset/mainnet/0xf762b84392b85fae1efac51f6841d8a57febbb60.sol#406)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3
INFO:Detectors:
BrainLetCapitalDAO._transferFrom(address,address,uint256) (../../sc/dataset/mainnet/0xf762b84392b85fae1efac51f6841d8a57febbb60.sol#388-415) has a high cyclomatic complexity (13).
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#cyclomatic-complexity
INFO:Detectors:
BrainLetCapitalDAO._maxTxAmountBuy (../../sc/dataset/mainnet/0xf762b84392b85fae1efac51f6841d8a57febbb60.sol#296) is set pre-construction with a non-constant function or state variable:
	- _totalSupply
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#function-initializing-state
INFO:Detectors:
Pragma version^0.8.7 (../../sc/dataset/mainnet/0xf762b84392b85fae1efac51f6841d8a57febbb60.sol#5) allows old versions
solc-0.8.7 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity
INFO:Detectors:
Function IDEXRouter.WETH() (../../sc/dataset/mainnet/0xf762b84392b85fae1efac51f6841d8a57febbb60.sol#108) is not in mixedCase
Variable DividendDistributor._token (../../sc/dataset/mainnet/0xf762b84392b85fae1efac51f6841d8a57febbb60.sol#165) is not in mixedCase
Variable DividendDistributor._owner (../../sc/dataset/mainnet/0xf762b84392b85fae1efac51f6841d8a57febbb60.sol#166) is not in mixedCase
Variable DividendDistributor._treasury (../../sc/dataset/mainnet/0xf762b84392b85fae1efac51f6841d8a57febbb60.sol#167) is not in mixedCase
Parameter BrainLetCapitalDAO.setBot(address,bool)._address (../../sc/dataset/mainnet/0xf762b84392b85fae1efac51f6841d8a57febbb60.sol#470) is not in mixedCase
Parameter BrainLetCapitalDAO.isInBot(address)._address (../../sc/dataset/mainnet/0xf762b84392b85fae1efac51f6841d8a57febbb60.sol#475) is not in mixedCase
Parameter BrainLetCapitalDAO.setFee(uint256)._fee (../../sc/dataset/mainnet/0xf762b84392b85fae1efac51f6841d8a57febbb60.sol#497) is not in mixedCase
Parameter BrainLetCapitalDAO.setMarketingWallet(address)._marketingWallet (../../sc/dataset/mainnet/0xf762b84392b85fae1efac51f6841d8a57febbb60.sol#528) is not in mixedCase
Parameter BrainLetCapitalDAO.setTreasury(address)._treasury (../../sc/dataset/mainnet/0xf762b84392b85fae1efac51f6841d8a57febbb60.sol#532) is not in mixedCase
Variable BrainLetCapitalDAO.WETH (../../sc/dataset/mainnet/0xf762b84392b85fae1efac51f6841d8a57febbb60.sol#287) is not in mixedCase
Variable BrainLetCapitalDAO.DEAD (../../sc/dataset/mainnet/0xf762b84392b85fae1efac51f6841d8a57febbb60.sol#288) is not in mixedCase
Variable BrainLetCapitalDAO.ZERO (../../sc/dataset/mainnet/0xf762b84392b85fae1efac51f6841d8a57febbb60.sol#289) is not in mixedCase
Constant BrainLetCapitalDAO._name (../../sc/dataset/mainnet/0xf762b84392b85fae1efac51f6841d8a57febbb60.sol#291) is not in UPPER_CASE_WITH_UNDERSCORES
Constant BrainLetCapitalDAO._symbol (../../sc/dataset/mainnet/0xf762b84392b85fae1efac51f6841d8a57febbb60.sol#292) is not in UPPER_CASE_WITH_UNDERSCORES
Constant BrainLetCapitalDAO._decimals (../../sc/dataset/mainnet/0xf762b84392b85fae1efac51f6841d8a57febbb60.sol#293) is not in UPPER_CASE_WITH_UNDERSCORES
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions
INFO:Detectors:
Reentrancy in BrainLetCapitalDAO._transferFrom(address,address,uint256) (../../sc/dataset/mainnet/0xf762b84392b85fae1efac51f6841d8a57febbb60.sol#388-415):
	External calls:
	- swapBack() (../../sc/dataset/mainnet/0xf762b84392b85fae1efac51f6841d8a57febbb60.sol#402)
		- address(marketingWallet).transfer(amountMarketing) (../../sc/dataset/mainnet/0xf762b84392b85fae1efac51f6841d8a57febbb60.sol#459)
		- address(treasury).transfer(amountTreasury) (../../sc/dataset/mainnet/0xf762b84392b85fae1efac51f6841d8a57febbb60.sol#460)
	State variables written after the call(s):
	- _balances[sender] = _balances[sender].sub(amount,Insufficient Balance) (../../sc/dataset/mainnet/0xf762b84392b85fae1efac51f6841d8a57febbb60.sol#404)
	- _balances[recipient] = _balances[recipient].add(amountReceived) (../../sc/dataset/mainnet/0xf762b84392b85fae1efac51f6841d8a57febbb60.sol#408)
	- amountReceived = takeFee(sender,amount) (../../sc/dataset/mainnet/0xf762b84392b85fae1efac51f6841d8a57febbb60.sol#406)
		- _balances[address(this)] = _balances[address(this)].add(feeAmount) (../../sc/dataset/mainnet/0xf762b84392b85fae1efac51f6841d8a57febbb60.sol#432)
	Event emitted after the call(s):
	- Transfer(sender,address(this),feeAmount) (../../sc/dataset/mainnet/0xf762b84392b85fae1efac51f6841d8a57febbb60.sol#433)
		- amountReceived = takeFee(sender,amount) (../../sc/dataset/mainnet/0xf762b84392b85fae1efac51f6841d8a57febbb60.sol#406)
	- Transfer(sender,recipient,amountReceived) (../../sc/dataset/mainnet/0xf762b84392b85fae1efac51f6841d8a57febbb60.sol#413)
Reentrancy in DividendDistributor.setShare(address,uint256) (../../sc/dataset/mainnet/0xf762b84392b85fae1efac51f6841d8a57febbb60.sol#202-216):
	External calls:
	- distributeDividend(shareholder) (../../sc/dataset/mainnet/0xf762b84392b85fae1efac51f6841d8a57febbb60.sol#204)
		- address(shareholder).transfer(amount) (../../sc/dataset/mainnet/0xf762b84392b85fae1efac51f6841d8a57febbb60.sol#234)
	State variables written after the call(s):
	- addShareholder(shareholder) (../../sc/dataset/mainnet/0xf762b84392b85fae1efac51f6841d8a57febbb60.sol#208)
		- shareholderIndexes[shareholder] = shareholders.length (../../sc/dataset/mainnet/0xf762b84392b85fae1efac51f6841d8a57febbb60.sol#258)
	- removeShareholder(shareholder) (../../sc/dataset/mainnet/0xf762b84392b85fae1efac51f6841d8a57febbb60.sol#210)
		- shareholderIndexes[shareholders[shareholders.length - 1]] = shareholderIndexes[shareholder] (../../sc/dataset/mainnet/0xf762b84392b85fae1efac51f6841d8a57febbb60.sol#264)
	- addShareholder(shareholder) (../../sc/dataset/mainnet/0xf762b84392b85fae1efac51f6841d8a57febbb60.sol#208)
		- shareholders.push(shareholder) (../../sc/dataset/mainnet/0xf762b84392b85fae1efac51f6841d8a57febbb60.sol#259)
	- removeShareholder(shareholder) (../../sc/dataset/mainnet/0xf762b84392b85fae1efac51f6841d8a57febbb60.sol#210)
		- shareholders[shareholderIndexes[shareholder]] = shareholders[shareholders.length - 1] (../../sc/dataset/mainnet/0xf762b84392b85fae1efac51f6841d8a57febbb60.sol#263)
		- shareholders.pop() (../../sc/dataset/mainnet/0xf762b84392b85fae1efac51f6841d8a57febbb60.sol#265)
	- shares[shareholder].amount = amount (../../sc/dataset/mainnet/0xf762b84392b85fae1efac51f6841d8a57febbb60.sol#214)
	- shares[shareholder].totalExcluded = getCumulativeDividends(shares[shareholder].amount) (../../sc/dataset/mainnet/0xf762b84392b85fae1efac51f6841d8a57febbb60.sol#215)
	- totalShares = totalShares.sub(shares[shareholder].amount).add(amount) (../../sc/dataset/mainnet/0xf762b84392b85fae1efac51f6841d8a57febbb60.sol#213)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-4
INFO:Detectors:
Variable IDEXRouter.addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256).amountADesired (../../sc/dataset/mainnet/0xf762b84392b85fae1efac51f6841d8a57febbb60.sol#113) is too similar to IDEXRouter.addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256).amountBDesired (../../sc/dataset/mainnet/0xf762b84392b85fae1efac51f6841d8a57febbb60.sol#114)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#variable-names-too-similar
INFO:Detectors:
BrainLetCapitalDAO.slitherConstructorVariables() (../../sc/dataset/mainnet/0xf762b84392b85fae1efac51f6841d8a57febbb60.sol#284-553) uses literals with too many digits:
	- _totalSupply = 1000000000000 * (10 ** _decimals) (../../sc/dataset/mainnet/0xf762b84392b85fae1efac51f6841d8a57febbb60.sol#295)
BrainLetCapitalDAO.slitherConstructorVariables() (../../sc/dataset/mainnet/0xf762b84392b85fae1efac51f6841d8a57febbb60.sol#284-553) uses literals with too many digits:
	- maxBuy = 5000000000 * (10 ** _decimals) (../../sc/dataset/mainnet/0xf762b84392b85fae1efac51f6841d8a57febbb60.sol#320)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits
INFO:Detectors:
BrainLetCapitalDAO._maxTxAmountBuy (../../sc/dataset/mainnet/0xf762b84392b85fae1efac51f6841d8a57febbb60.sol#296) is never used in BrainLetCapitalDAO (../../sc/dataset/mainnet/0xf762b84392b85fae1efac51f6841d8a57febbb60.sol#284-553)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-state-variable
INFO:Detectors:
BrainLetCapitalDAO.DEAD (../../sc/dataset/mainnet/0xf762b84392b85fae1efac51f6841d8a57febbb60.sol#288) should be constant 
BrainLetCapitalDAO.ZERO (../../sc/dataset/mainnet/0xf762b84392b85fae1efac51f6841d8a57febbb60.sol#289) should be constant 
BrainLetCapitalDAO._totalSupply (../../sc/dataset/mainnet/0xf762b84392b85fae1efac51f6841d8a57febbb60.sol#295) should be constant 
BrainLetCapitalDAO.feeDenominator (../../sc/dataset/mainnet/0xf762b84392b85fae1efac51f6841d8a57febbb60.sol#309) should be constant 
BrainLetCapitalDAO.maxBuy (../../sc/dataset/mainnet/0xf762b84392b85fae1efac51f6841d8a57febbb60.sol#320) should be constant 
DividendDistributor.dividendsPerShareAccuracyFactor (../../sc/dataset/mainnet/0xf762b84392b85fae1efac51f6841d8a57febbb60.sol#184) should be constant 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant
INFO:Detectors:
BrainLetCapitalDAO.WETH (../../sc/dataset/mainnet/0xf762b84392b85fae1efac51f6841d8a57febbb60.sol#287) should be immutable 
BrainLetCapitalDAO._maxTxAmountBuy (../../sc/dataset/mainnet/0xf762b84392b85fae1efac51f6841d8a57febbb60.sol#296) should be immutable 
BrainLetCapitalDAO.distributor (../../sc/dataset/mainnet/0xf762b84392b85fae1efac51f6841d8a57febbb60.sol#322) should be immutable 
BrainLetCapitalDAO.pair (../../sc/dataset/mainnet/0xf762b84392b85fae1efac51f6841d8a57febbb60.sol#315) should be immutable 
BrainLetCapitalDAO.router (../../sc/dataset/mainnet/0xf762b84392b85fae1efac51f6841d8a57febbb60.sol#314) should be immutable 
DividendDistributor._owner (../../sc/dataset/mainnet/0xf762b84392b85fae1efac51f6841d8a57febbb60.sol#166) should be immutable 
DividendDistributor._token (../../sc/dataset/mainnet/0xf762b84392b85fae1efac51f6841d8a57febbb60.sol#165) should be immutable 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-immutable
INFO:Slither:/bdata2/sc/dataset/mainnet/0xf762b84392b85fae1efac51f6841d8a57febbb60.sol analyzed (8 contracts with 85 detectors), 51 result(s) found
