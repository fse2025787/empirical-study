Compilation warnings/errors on /bdata2/sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol:
Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> /bdata2/sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol


INFO:Detectors:
MonkeyBrainCapitalDAO.swapBack() (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#447-469) sends eth to arbitrary user
	Dangerous calls:
	- address(marketingWallet).transfer(amountMarketing) (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#467)
	- address(treasury).transfer(amountTreasury) (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#468)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#functions-that-send-ether-to-arbitrary-destinations
INFO:Detectors:
Reentrancy in MonkeyBrainCapitalDAO._transferFrom(address,address,uint256) (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#396-423):
	External calls:
	- swapBack() (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#410)
		- router.swapExactTokensForETHSupportingFeeOnTransferTokens(amountToSwap,0,path,address(this),block.timestamp) (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#455-461)
	External calls sending eth:
	- swapBack() (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#410)
		- address(marketingWallet).transfer(amountMarketing) (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#467)
		- address(treasury).transfer(amountTreasury) (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#468)
	State variables written after the call(s):
	- _balances[sender] = _balances[sender].sub(amount,Insufficient Balance) (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#412)
	MonkeyBrainCapitalDAO._balances (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#310) can be used in cross function reentrancies:
	- MonkeyBrainCapitalDAO._basicTransfer(address,address,uint256) (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#425-430)
	- MonkeyBrainCapitalDAO._setIsDividendExempt(address,bool) (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#504-512)
	- MonkeyBrainCapitalDAO._transferFrom(address,address,uint256) (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#396-423)
	- MonkeyBrainCapitalDAO.balanceOf(address) (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#371)
	- MonkeyBrainCapitalDAO.constructor() (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#339-362)
	- MonkeyBrainCapitalDAO.takeFee(address,uint256) (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#437-444)
	- _balances[recipient] = _balances[recipient].add(amountReceived) (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#416)
	MonkeyBrainCapitalDAO._balances (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#310) can be used in cross function reentrancies:
	- MonkeyBrainCapitalDAO._basicTransfer(address,address,uint256) (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#425-430)
	- MonkeyBrainCapitalDAO._setIsDividendExempt(address,bool) (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#504-512)
	- MonkeyBrainCapitalDAO._transferFrom(address,address,uint256) (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#396-423)
	- MonkeyBrainCapitalDAO.balanceOf(address) (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#371)
	- MonkeyBrainCapitalDAO.constructor() (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#339-362)
	- MonkeyBrainCapitalDAO.takeFee(address,uint256) (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#437-444)
	- amountReceived = takeFee(sender,amount) (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#414)
		- _balances[address(this)] = _balances[address(this)].add(feeAmount) (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#440)
	MonkeyBrainCapitalDAO._balances (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#310) can be used in cross function reentrancies:
	- MonkeyBrainCapitalDAO._basicTransfer(address,address,uint256) (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#425-430)
	- MonkeyBrainCapitalDAO._setIsDividendExempt(address,bool) (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#504-512)
	- MonkeyBrainCapitalDAO._transferFrom(address,address,uint256) (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#396-423)
	- MonkeyBrainCapitalDAO.balanceOf(address) (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#371)
	- MonkeyBrainCapitalDAO.constructor() (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#339-362)
	- MonkeyBrainCapitalDAO.takeFee(address,uint256) (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#437-444)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities
INFO:Detectors:
DividendDistributor.setShare(address,uint256) (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#213-227) should emit an event for: 
	- totalShares = totalShares.sub(shares[shareholder].amount).add(amount) (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#224) 
MonkeyBrainCapitalDAO.setFee(uint256) (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#522-525) should emit an event for: 
	- totalFee = _fee (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#524) 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-arithmetic
INFO:Detectors:
DividendDistributor.constructor(address,address).owner (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#205) lacks a zero-check on :
		- _owner = address(owner) (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#207)
DividendDistributor.constructor(address,address).treasury (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#205) lacks a zero-check on :
		- _treasury = address(treasury) (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#208)
DividendDistributor.manualSend(uint256,address).holder (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#279) lacks a zero-check on :
		- address(holder).transfer(amount) (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#281)
		- address(holder).transfer(contractETHBalance) (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#281)
DividendDistributor.setTreasury(address).treasury (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#284) lacks a zero-check on :
		- _treasury = address(treasury) (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#285)
Auth.transferOwnership(address).adr (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#105) lacks a zero-check on :
		- owner = adr (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#106)
MonkeyBrainCapitalDAO.setMarketingWallet(address)._marketingWallet (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#553) lacks a zero-check on :
		- marketingWallet = address(_marketingWallet) (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#554)
MonkeyBrainCapitalDAO.setTreasury(address)._treasury (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#557) lacks a zero-check on :
		- treasury = address(_treasury) (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#558)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation
INFO:Detectors:
MonkeyBrainCapitalDAO._setIsDividendExempt(address,bool) (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#504-512) has external calls inside a loop: distributor.setShare(holder,0) (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#508)
MonkeyBrainCapitalDAO._setIsDividendExempt(address,bool) (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#504-512) has external calls inside a loop: distributor.setShare(holder,_balances[holder]) (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#510)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation/#calls-inside-a-loop
INFO:Detectors:
Reentrancy in MonkeyBrainCapitalDAO.delBulkBots(address[]) (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#492-498):
	External calls:
	- _setIsDividendExempt(bots_[i],false) (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#495)
		- distributor.setShare(holder,0) (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#508)
		- distributor.setShare(holder,_balances[holder]) (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#510)
	State variables written after the call(s):
	- isBot[bots_[i]] = false (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#494)
Reentrancy in MonkeyBrainCapitalDAO.setBulkBots(address[]) (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#483-489):
	External calls:
	- _setIsDividendExempt(bots_[i],true) (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#486)
		- distributor.setShare(holder,0) (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#508)
		- distributor.setShare(holder,_balances[holder]) (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#510)
	State variables written after the call(s):
	- isBot[bots_[i]] = true (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#485)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2
INFO:Detectors:
Reentrancy in MonkeyBrainCapitalDAO._transferFrom(address,address,uint256) (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#396-423):
	External calls:
	- swapBack() (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#410)
		- router.swapExactTokensForETHSupportingFeeOnTransferTokens(amountToSwap,0,path,address(this),block.timestamp) (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#455-461)
	- distributor.setShare(sender,_balances[sender]) (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#418)
	- distributor.setShare(recipient,_balances[recipient]) (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#419)
	External calls sending eth:
	- swapBack() (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#410)
		- address(marketingWallet).transfer(amountMarketing) (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#467)
		- address(treasury).transfer(amountTreasury) (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#468)
	Event emitted after the call(s):
	- Transfer(sender,recipient,amountReceived) (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#421)
Reentrancy in MonkeyBrainCapitalDAO._transferFrom(address,address,uint256) (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#396-423):
	External calls:
	- swapBack() (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#410)
		- router.swapExactTokensForETHSupportingFeeOnTransferTokens(amountToSwap,0,path,address(this),block.timestamp) (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#455-461)
	External calls sending eth:
	- swapBack() (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#410)
		- address(marketingWallet).transfer(amountMarketing) (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#467)
		- address(treasury).transfer(amountTreasury) (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#468)
	Event emitted after the call(s):
	- Transfer(sender,address(this),feeAmount) (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#441)
		- amountReceived = takeFee(sender,amount) (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#414)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3
INFO:Detectors:
MonkeyBrainCapitalDAO._transferFrom(address,address,uint256) (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#396-423) has a high cyclomatic complexity (13).
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#cyclomatic-complexity
INFO:Detectors:
MonkeyBrainCapitalDAO._maxTxAmountBuy (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#307) is set pre-construction with a non-constant function or state variable:
	- _totalSupply
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#function-initializing-state
INFO:Detectors:
Pragma version^0.8.7 (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#16) allows old versions
solc-0.8.7 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity
INFO:Detectors:
Function IDEXRouter.WETH() (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#119) is not in mixedCase
Variable DividendDistributor._token (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#176) is not in mixedCase
Variable DividendDistributor._owner (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#177) is not in mixedCase
Variable DividendDistributor._treasury (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#178) is not in mixedCase
Parameter MonkeyBrainCapitalDAO.setBot(address)._address (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#478) is not in mixedCase
Parameter MonkeyBrainCapitalDAO.isInBot(address)._address (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#500) is not in mixedCase
Parameter MonkeyBrainCapitalDAO.setFee(uint256)._fee (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#522) is not in mixedCase
Parameter MonkeyBrainCapitalDAO.setMarketingWallet(address)._marketingWallet (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#553) is not in mixedCase
Parameter MonkeyBrainCapitalDAO.setTreasury(address)._treasury (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#557) is not in mixedCase
Variable MonkeyBrainCapitalDAO.WETH (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#298) is not in mixedCase
Variable MonkeyBrainCapitalDAO.DEAD (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#299) is not in mixedCase
Variable MonkeyBrainCapitalDAO.ZERO (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#300) is not in mixedCase
Constant MonkeyBrainCapitalDAO._name (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#302) is not in UPPER_CASE_WITH_UNDERSCORES
Constant MonkeyBrainCapitalDAO._symbol (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#303) is not in UPPER_CASE_WITH_UNDERSCORES
Constant MonkeyBrainCapitalDAO._decimals (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#304) is not in UPPER_CASE_WITH_UNDERSCORES
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions
INFO:Detectors:
Reentrancy in MonkeyBrainCapitalDAO._transferFrom(address,address,uint256) (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#396-423):
	External calls:
	- swapBack() (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#410)
		- address(marketingWallet).transfer(amountMarketing) (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#467)
		- address(treasury).transfer(amountTreasury) (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#468)
	State variables written after the call(s):
	- _balances[sender] = _balances[sender].sub(amount,Insufficient Balance) (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#412)
	- _balances[recipient] = _balances[recipient].add(amountReceived) (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#416)
	- amountReceived = takeFee(sender,amount) (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#414)
		- _balances[address(this)] = _balances[address(this)].add(feeAmount) (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#440)
	Event emitted after the call(s):
	- Transfer(sender,address(this),feeAmount) (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#441)
		- amountReceived = takeFee(sender,amount) (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#414)
	- Transfer(sender,recipient,amountReceived) (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#421)
Reentrancy in DividendDistributor.setShare(address,uint256) (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#213-227):
	External calls:
	- distributeDividend(shareholder) (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#215)
		- address(shareholder).transfer(amount) (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#245)
	State variables written after the call(s):
	- addShareholder(shareholder) (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#219)
		- shareholderIndexes[shareholder] = shareholders.length (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#269)
	- removeShareholder(shareholder) (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#221)
		- shareholderIndexes[shareholders[shareholders.length - 1]] = shareholderIndexes[shareholder] (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#275)
	- addShareholder(shareholder) (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#219)
		- shareholders.push(shareholder) (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#270)
	- removeShareholder(shareholder) (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#221)
		- shareholders[shareholderIndexes[shareholder]] = shareholders[shareholders.length - 1] (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#274)
		- shareholders.pop() (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#276)
	- shares[shareholder].amount = amount (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#225)
	- shares[shareholder].totalExcluded = getCumulativeDividends(shares[shareholder].amount) (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#226)
	- totalShares = totalShares.sub(shares[shareholder].amount).add(amount) (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#224)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-4
INFO:Detectors:
Variable IDEXRouter.addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256).amountADesired (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#124) is too similar to IDEXRouter.addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256).amountBDesired (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#125)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#variable-names-too-similar
INFO:Detectors:
MonkeyBrainCapitalDAO.slitherConstructorVariables() (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#295-578) uses literals with too many digits:
	- _totalSupply = 1000000000000 * (10 ** _decimals) (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#306)
MonkeyBrainCapitalDAO.slitherConstructorVariables() (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#295-578) uses literals with too many digits:
	- maxBuy = 10000000000 * (10 ** _decimals) (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#329)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits
INFO:Detectors:
MonkeyBrainCapitalDAO._maxTxAmountBuy (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#307) is never used in MonkeyBrainCapitalDAO (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#295-578)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-state-variable
INFO:Detectors:
DividendDistributor.dividendsPerShareAccuracyFactor (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#195) should be constant 
MonkeyBrainCapitalDAO.DEAD (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#299) should be constant 
MonkeyBrainCapitalDAO.ZERO (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#300) should be constant 
MonkeyBrainCapitalDAO._totalSupply (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#306) should be constant 
MonkeyBrainCapitalDAO.feeDenominator (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#318) should be constant 
MonkeyBrainCapitalDAO.maxBuy (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#329) should be constant 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant
INFO:Detectors:
DividendDistributor._owner (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#177) should be immutable 
DividendDistributor._token (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#176) should be immutable 
MonkeyBrainCapitalDAO.WETH (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#298) should be immutable 
MonkeyBrainCapitalDAO._maxTxAmountBuy (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#307) should be immutable 
MonkeyBrainCapitalDAO.distributor (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#331) should be immutable 
MonkeyBrainCapitalDAO.pair (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#324) should be immutable 
MonkeyBrainCapitalDAO.router (../../sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol#323) should be immutable 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-immutable
INFO:Slither:/bdata2/sc/dataset/mainnet/0xCAC98eBe79d9F2C5154EF0a96eCA431F868E5237.sol analyzed (8 contracts with 85 detectors), 55 result(s) found
