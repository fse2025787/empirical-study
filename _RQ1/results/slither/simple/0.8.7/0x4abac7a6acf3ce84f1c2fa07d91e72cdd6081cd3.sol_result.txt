INFO:Detectors:
Reentrancy in AKAMARU._transfer(address,address,uint256) (../../sc/dataset/mainnet/0x4abac7a6acf3ce84f1c2fa07d91e72cdd6081cd3.sol#220-251):
	External calls:
	- swapTokensForEth(contractTokenBalance) (../../sc/dataset/mainnet/0x4abac7a6acf3ce84f1c2fa07d91e72cdd6081cd3.sol#242)
		- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (../../sc/dataset/mainnet/0x4abac7a6acf3ce84f1c2fa07d91e72cdd6081cd3.sol#258-264)
	External calls sending eth:
	- sendETHToFee(address(this).balance) (../../sc/dataset/mainnet/0x4abac7a6acf3ce84f1c2fa07d91e72cdd6081cd3.sol#245)
		- _feeAddrWallet1.transfer(amount.div(2)) (../../sc/dataset/mainnet/0x4abac7a6acf3ce84f1c2fa07d91e72cdd6081cd3.sol#268)
		- _feeAddrWallet2.transfer(amount.div(2)) (../../sc/dataset/mainnet/0x4abac7a6acf3ce84f1c2fa07d91e72cdd6081cd3.sol#269)
	State variables written after the call(s):
	- _tokenTransfer(from,to,amount) (../../sc/dataset/mainnet/0x4abac7a6acf3ce84f1c2fa07d91e72cdd6081cd3.sol#250)
		- _rOwned[address(this)] = _rOwned[address(this)].add(rTeam) (../../sc/dataset/mainnet/0x4abac7a6acf3ce84f1c2fa07d91e72cdd6081cd3.sol#316)
		- _rOwned[sender] = _rOwned[sender].sub(rAmount) (../../sc/dataset/mainnet/0x4abac7a6acf3ce84f1c2fa07d91e72cdd6081cd3.sol#306)
		- _rOwned[recipient] = _rOwned[recipient].add(rTransferAmount) (../../sc/dataset/mainnet/0x4abac7a6acf3ce84f1c2fa07d91e72cdd6081cd3.sol#307)
	AKAMARU._rOwned (../../sc/dataset/mainnet/0x4abac7a6acf3ce84f1c2fa07d91e72cdd6081cd3.sol#119) can be used in cross function reentrancies:
	- AKAMARU._takeTeam(uint256) (../../sc/dataset/mainnet/0x4abac7a6acf3ce84f1c2fa07d91e72cdd6081cd3.sol#313-317)
	- AKAMARU._transferStandard(address,address,uint256) (../../sc/dataset/mainnet/0x4abac7a6acf3ce84f1c2fa07d91e72cdd6081cd3.sol#304-311)
	- AKAMARU.balanceOf(address) (../../sc/dataset/mainnet/0x4abac7a6acf3ce84f1c2fa07d91e72cdd6081cd3.sol#179-181)
	- AKAMARU.constructor() (../../sc/dataset/mainnet/0x4abac7a6acf3ce84f1c2fa07d91e72cdd6081cd3.sol#152-161)
	- _tokenTransfer(from,to,amount) (../../sc/dataset/mainnet/0x4abac7a6acf3ce84f1c2fa07d91e72cdd6081cd3.sol#250)
		- _rTotal = _rTotal.sub(rFee) (../../sc/dataset/mainnet/0x4abac7a6acf3ce84f1c2fa07d91e72cdd6081cd3.sol#320)
	AKAMARU._rTotal (../../sc/dataset/mainnet/0x4abac7a6acf3ce84f1c2fa07d91e72cdd6081cd3.sol#127) can be used in cross function reentrancies:
	- AKAMARU._getCurrentSupply() (../../sc/dataset/mainnet/0x4abac7a6acf3ce84f1c2fa07d91e72cdd6081cd3.sol#366-371)
	- AKAMARU._reflectFee(uint256,uint256) (../../sc/dataset/mainnet/0x4abac7a6acf3ce84f1c2fa07d91e72cdd6081cd3.sol#319-322)
	- AKAMARU.constructor() (../../sc/dataset/mainnet/0x4abac7a6acf3ce84f1c2fa07d91e72cdd6081cd3.sol#152-161)
	- AKAMARU.tokenFromReflection(uint256) (../../sc/dataset/mainnet/0x4abac7a6acf3ce84f1c2fa07d91e72cdd6081cd3.sol#207-211)
Reentrancy in AKAMARU.openTrading() (../../sc/dataset/mainnet/0x4abac7a6acf3ce84f1c2fa07d91e72cdd6081cd3.sol#272-284):
	External calls:
	- uniswapV2Pair = IUniswapV2Factory(_uniswapV2Router.factory()).createPair(address(this),_uniswapV2Router.WETH()) (../../sc/dataset/mainnet/0x4abac7a6acf3ce84f1c2fa07d91e72cdd6081cd3.sol#277)
	- uniswapV2Router.addLiquidityETH{value: address(this).balance}(address(this),balanceOf(address(this)),0,0,owner(),block.timestamp) (../../sc/dataset/mainnet/0x4abac7a6acf3ce84f1c2fa07d91e72cdd6081cd3.sol#278)
	External calls sending eth:
	- uniswapV2Router.addLiquidityETH{value: address(this).balance}(address(this),balanceOf(address(this)),0,0,owner(),block.timestamp) (../../sc/dataset/mainnet/0x4abac7a6acf3ce84f1c2fa07d91e72cdd6081cd3.sol#278)
	State variables written after the call(s):
	- tradingOpen = true (../../sc/dataset/mainnet/0x4abac7a6acf3ce84f1c2fa07d91e72cdd6081cd3.sol#282)
	AKAMARU.tradingOpen (../../sc/dataset/mainnet/0x4abac7a6acf3ce84f1c2fa07d91e72cdd6081cd3.sol#141) can be used in cross function reentrancies:
	- AKAMARU.openTrading() (../../sc/dataset/mainnet/0x4abac7a6acf3ce84f1c2fa07d91e72cdd6081cd3.sol#272-284)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities
INFO:Detectors:
AKAMARU.openTrading() (../../sc/dataset/mainnet/0x4abac7a6acf3ce84f1c2fa07d91e72cdd6081cd3.sol#272-284) ignores return value by uniswapV2Router.addLiquidityETH{value: address(this).balance}(address(this),balanceOf(address(this)),0,0,owner(),block.timestamp) (../../sc/dataset/mainnet/0x4abac7a6acf3ce84f1c2fa07d91e72cdd6081cd3.sol#278)
AKAMARU.openTrading() (../../sc/dataset/mainnet/0x4abac7a6acf3ce84f1c2fa07d91e72cdd6081cd3.sol#272-284) ignores return value by IERC20(uniswapV2Pair).approve(address(uniswapV2Router),type()(uint256).max) (../../sc/dataset/mainnet/0x4abac7a6acf3ce84f1c2fa07d91e72cdd6081cd3.sol#283)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return
INFO:Detectors:
AKAMARU.allowance(address,address).owner (../../sc/dataset/mainnet/0x4abac7a6acf3ce84f1c2fa07d91e72cdd6081cd3.sol#188) shadows:
	- Ownable.owner() (../../sc/dataset/mainnet/0x4abac7a6acf3ce84f1c2fa07d91e72cdd6081cd3.sol#77-79) (function)
AKAMARU._approve(address,address,uint256).owner (../../sc/dataset/mainnet/0x4abac7a6acf3ce84f1c2fa07d91e72cdd6081cd3.sol#213) shadows:
	- Ownable.owner() (../../sc/dataset/mainnet/0x4abac7a6acf3ce84f1c2fa07d91e72cdd6081cd3.sol#77-79) (function)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing
INFO:Detectors:
Reentrancy in AKAMARU._transfer(address,address,uint256) (../../sc/dataset/mainnet/0x4abac7a6acf3ce84f1c2fa07d91e72cdd6081cd3.sol#220-251):
	External calls:
	- swapTokensForEth(contractTokenBalance) (../../sc/dataset/mainnet/0x4abac7a6acf3ce84f1c2fa07d91e72cdd6081cd3.sol#242)
		- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (../../sc/dataset/mainnet/0x4abac7a6acf3ce84f1c2fa07d91e72cdd6081cd3.sol#258-264)
	External calls sending eth:
	- sendETHToFee(address(this).balance) (../../sc/dataset/mainnet/0x4abac7a6acf3ce84f1c2fa07d91e72cdd6081cd3.sol#245)
		- _feeAddrWallet1.transfer(amount.div(2)) (../../sc/dataset/mainnet/0x4abac7a6acf3ce84f1c2fa07d91e72cdd6081cd3.sol#268)
		- _feeAddrWallet2.transfer(amount.div(2)) (../../sc/dataset/mainnet/0x4abac7a6acf3ce84f1c2fa07d91e72cdd6081cd3.sol#269)
	State variables written after the call(s):
	- _tokenTransfer(from,to,amount) (../../sc/dataset/mainnet/0x4abac7a6acf3ce84f1c2fa07d91e72cdd6081cd3.sol#250)
		- _tFeeTotal = _tFeeTotal.add(tFee) (../../sc/dataset/mainnet/0x4abac7a6acf3ce84f1c2fa07d91e72cdd6081cd3.sol#321)
Reentrancy in AKAMARU.openTrading() (../../sc/dataset/mainnet/0x4abac7a6acf3ce84f1c2fa07d91e72cdd6081cd3.sol#272-284):
	External calls:
	- uniswapV2Pair = IUniswapV2Factory(_uniswapV2Router.factory()).createPair(address(this),_uniswapV2Router.WETH()) (../../sc/dataset/mainnet/0x4abac7a6acf3ce84f1c2fa07d91e72cdd6081cd3.sol#277)
	- uniswapV2Router.addLiquidityETH{value: address(this).balance}(address(this),balanceOf(address(this)),0,0,owner(),block.timestamp) (../../sc/dataset/mainnet/0x4abac7a6acf3ce84f1c2fa07d91e72cdd6081cd3.sol#278)
	External calls sending eth:
	- uniswapV2Router.addLiquidityETH{value: address(this).balance}(address(this),balanceOf(address(this)),0,0,owner(),block.timestamp) (../../sc/dataset/mainnet/0x4abac7a6acf3ce84f1c2fa07d91e72cdd6081cd3.sol#278)
	State variables written after the call(s):
	- _maxTxAmount = 1e12 * 10 ** 9 (../../sc/dataset/mainnet/0x4abac7a6acf3ce84f1c2fa07d91e72cdd6081cd3.sol#281)
	- cooldownEnabled = true (../../sc/dataset/mainnet/0x4abac7a6acf3ce84f1c2fa07d91e72cdd6081cd3.sol#280)
	- swapEnabled = true (../../sc/dataset/mainnet/0x4abac7a6acf3ce84f1c2fa07d91e72cdd6081cd3.sol#279)
Reentrancy in AKAMARU.transferFrom(address,address,uint256) (../../sc/dataset/mainnet/0x4abac7a6acf3ce84f1c2fa07d91e72cdd6081cd3.sol#197-201):
	External calls:
	- _transfer(sender,recipient,amount) (../../sc/dataset/mainnet/0x4abac7a6acf3ce84f1c2fa07d91e72cdd6081cd3.sol#198)
		- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (../../sc/dataset/mainnet/0x4abac7a6acf3ce84f1c2fa07d91e72cdd6081cd3.sol#258-264)
	External calls sending eth:
	- _transfer(sender,recipient,amount) (../../sc/dataset/mainnet/0x4abac7a6acf3ce84f1c2fa07d91e72cdd6081cd3.sol#198)
		- _feeAddrWallet1.transfer(amount.div(2)) (../../sc/dataset/mainnet/0x4abac7a6acf3ce84f1c2fa07d91e72cdd6081cd3.sol#268)
		- _feeAddrWallet2.transfer(amount.div(2)) (../../sc/dataset/mainnet/0x4abac7a6acf3ce84f1c2fa07d91e72cdd6081cd3.sol#269)
	State variables written after the call(s):
	- _approve(sender,_msgSender(),_allowances[sender][_msgSender()].sub(amount,ERC20: transfer amount exceeds allowance)) (../../sc/dataset/mainnet/0x4abac7a6acf3ce84f1c2fa07d91e72cdd6081cd3.sol#199)
		- _allowances[owner][spender] = amount (../../sc/dataset/mainnet/0x4abac7a6acf3ce84f1c2fa07d91e72cdd6081cd3.sol#216)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2
INFO:Detectors:
Reentrancy in AKAMARU._transfer(address,address,uint256) (../../sc/dataset/mainnet/0x4abac7a6acf3ce84f1c2fa07d91e72cdd6081cd3.sol#220-251):
	External calls:
	- swapTokensForEth(contractTokenBalance) (../../sc/dataset/mainnet/0x4abac7a6acf3ce84f1c2fa07d91e72cdd6081cd3.sol#242)
		- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (../../sc/dataset/mainnet/0x4abac7a6acf3ce84f1c2fa07d91e72cdd6081cd3.sol#258-264)
	External calls sending eth:
	- sendETHToFee(address(this).balance) (../../sc/dataset/mainnet/0x4abac7a6acf3ce84f1c2fa07d91e72cdd6081cd3.sol#245)
		- _feeAddrWallet1.transfer(amount.div(2)) (../../sc/dataset/mainnet/0x4abac7a6acf3ce84f1c2fa07d91e72cdd6081cd3.sol#268)
		- _feeAddrWallet2.transfer(amount.div(2)) (../../sc/dataset/mainnet/0x4abac7a6acf3ce84f1c2fa07d91e72cdd6081cd3.sol#269)
	Event emitted after the call(s):
	- Transfer(sender,recipient,tTransferAmount) (../../sc/dataset/mainnet/0x4abac7a6acf3ce84f1c2fa07d91e72cdd6081cd3.sol#310)
		- _tokenTransfer(from,to,amount) (../../sc/dataset/mainnet/0x4abac7a6acf3ce84f1c2fa07d91e72cdd6081cd3.sol#250)
Reentrancy in AKAMARU.transferFrom(address,address,uint256) (../../sc/dataset/mainnet/0x4abac7a6acf3ce84f1c2fa07d91e72cdd6081cd3.sol#197-201):
	External calls:
	- _transfer(sender,recipient,amount) (../../sc/dataset/mainnet/0x4abac7a6acf3ce84f1c2fa07d91e72cdd6081cd3.sol#198)
		- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (../../sc/dataset/mainnet/0x4abac7a6acf3ce84f1c2fa07d91e72cdd6081cd3.sol#258-264)
	External calls sending eth:
	- _transfer(sender,recipient,amount) (../../sc/dataset/mainnet/0x4abac7a6acf3ce84f1c2fa07d91e72cdd6081cd3.sol#198)
		- _feeAddrWallet1.transfer(amount.div(2)) (../../sc/dataset/mainnet/0x4abac7a6acf3ce84f1c2fa07d91e72cdd6081cd3.sol#268)
		- _feeAddrWallet2.transfer(amount.div(2)) (../../sc/dataset/mainnet/0x4abac7a6acf3ce84f1c2fa07d91e72cdd6081cd3.sol#269)
	Event emitted after the call(s):
	- Approval(owner,spender,amount) (../../sc/dataset/mainnet/0x4abac7a6acf3ce84f1c2fa07d91e72cdd6081cd3.sol#217)
		- _approve(sender,_msgSender(),_allowances[sender][_msgSender()].sub(amount,ERC20: transfer amount exceeds allowance)) (../../sc/dataset/mainnet/0x4abac7a6acf3ce84f1c2fa07d91e72cdd6081cd3.sol#199)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3
INFO:Detectors:
AKAMARU._transfer(address,address,uint256) (../../sc/dataset/mainnet/0x4abac7a6acf3ce84f1c2fa07d91e72cdd6081cd3.sol#220-251) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool)(cooldown[to] < block.timestamp) (../../sc/dataset/mainnet/0x4abac7a6acf3ce84f1c2fa07d91e72cdd6081cd3.sol#231)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp
INFO:Detectors:
Pragma version^0.8.4 (../../sc/dataset/mainnet/0x4abac7a6acf3ce84f1c2fa07d91e72cdd6081cd3.sol#9) allows old versions
solc-0.8.7 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity
INFO:Detectors:
Function IUniswapV2Router02.WETH() (../../sc/dataset/mainnet/0x4abac7a6acf3ce84f1c2fa07d91e72cdd6081cd3.sol#106) is not in mixedCase
Constant AKAMARU._tTotal (../../sc/dataset/mainnet/0x4abac7a6acf3ce84f1c2fa07d91e72cdd6081cd3.sol#126) is not in UPPER_CASE_WITH_UNDERSCORES
Constant AKAMARU._name (../../sc/dataset/mainnet/0x4abac7a6acf3ce84f1c2fa07d91e72cdd6081cd3.sol#135) is not in UPPER_CASE_WITH_UNDERSCORES
Constant AKAMARU._symbol (../../sc/dataset/mainnet/0x4abac7a6acf3ce84f1c2fa07d91e72cdd6081cd3.sol#136) is not in UPPER_CASE_WITH_UNDERSCORES
Constant AKAMARU._decimals (../../sc/dataset/mainnet/0x4abac7a6acf3ce84f1c2fa07d91e72cdd6081cd3.sol#137) is not in UPPER_CASE_WITH_UNDERSCORES
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions
INFO:Detectors:
Reentrancy in AKAMARU._transfer(address,address,uint256) (../../sc/dataset/mainnet/0x4abac7a6acf3ce84f1c2fa07d91e72cdd6081cd3.sol#220-251):
	External calls:
	- sendETHToFee(address(this).balance) (../../sc/dataset/mainnet/0x4abac7a6acf3ce84f1c2fa07d91e72cdd6081cd3.sol#245)
		- _feeAddrWallet1.transfer(amount.div(2)) (../../sc/dataset/mainnet/0x4abac7a6acf3ce84f1c2fa07d91e72cdd6081cd3.sol#268)
		- _feeAddrWallet2.transfer(amount.div(2)) (../../sc/dataset/mainnet/0x4abac7a6acf3ce84f1c2fa07d91e72cdd6081cd3.sol#269)
	State variables written after the call(s):
	- _tokenTransfer(from,to,amount) (../../sc/dataset/mainnet/0x4abac7a6acf3ce84f1c2fa07d91e72cdd6081cd3.sol#250)
		- _rOwned[address(this)] = _rOwned[address(this)].add(rTeam) (../../sc/dataset/mainnet/0x4abac7a6acf3ce84f1c2fa07d91e72cdd6081cd3.sol#316)
		- _rOwned[sender] = _rOwned[sender].sub(rAmount) (../../sc/dataset/mainnet/0x4abac7a6acf3ce84f1c2fa07d91e72cdd6081cd3.sol#306)
		- _rOwned[recipient] = _rOwned[recipient].add(rTransferAmount) (../../sc/dataset/mainnet/0x4abac7a6acf3ce84f1c2fa07d91e72cdd6081cd3.sol#307)
	- _tokenTransfer(from,to,amount) (../../sc/dataset/mainnet/0x4abac7a6acf3ce84f1c2fa07d91e72cdd6081cd3.sol#250)
		- _rTotal = _rTotal.sub(rFee) (../../sc/dataset/mainnet/0x4abac7a6acf3ce84f1c2fa07d91e72cdd6081cd3.sol#320)
	- _tokenTransfer(from,to,amount) (../../sc/dataset/mainnet/0x4abac7a6acf3ce84f1c2fa07d91e72cdd6081cd3.sol#250)
		- _tFeeTotal = _tFeeTotal.add(tFee) (../../sc/dataset/mainnet/0x4abac7a6acf3ce84f1c2fa07d91e72cdd6081cd3.sol#321)
	Event emitted after the call(s):
	- Transfer(sender,recipient,tTransferAmount) (../../sc/dataset/mainnet/0x4abac7a6acf3ce84f1c2fa07d91e72cdd6081cd3.sol#310)
		- _tokenTransfer(from,to,amount) (../../sc/dataset/mainnet/0x4abac7a6acf3ce84f1c2fa07d91e72cdd6081cd3.sol#250)
Reentrancy in AKAMARU.transferFrom(address,address,uint256) (../../sc/dataset/mainnet/0x4abac7a6acf3ce84f1c2fa07d91e72cdd6081cd3.sol#197-201):
	External calls:
	- _transfer(sender,recipient,amount) (../../sc/dataset/mainnet/0x4abac7a6acf3ce84f1c2fa07d91e72cdd6081cd3.sol#198)
		- _feeAddrWallet1.transfer(amount.div(2)) (../../sc/dataset/mainnet/0x4abac7a6acf3ce84f1c2fa07d91e72cdd6081cd3.sol#268)
		- _feeAddrWallet2.transfer(amount.div(2)) (../../sc/dataset/mainnet/0x4abac7a6acf3ce84f1c2fa07d91e72cdd6081cd3.sol#269)
	State variables written after the call(s):
	- _approve(sender,_msgSender(),_allowances[sender][_msgSender()].sub(amount,ERC20: transfer amount exceeds allowance)) (../../sc/dataset/mainnet/0x4abac7a6acf3ce84f1c2fa07d91e72cdd6081cd3.sol#199)
		- _allowances[owner][spender] = amount (../../sc/dataset/mainnet/0x4abac7a6acf3ce84f1c2fa07d91e72cdd6081cd3.sol#216)
	Event emitted after the call(s):
	- Approval(owner,spender,amount) (../../sc/dataset/mainnet/0x4abac7a6acf3ce84f1c2fa07d91e72cdd6081cd3.sol#217)
		- _approve(sender,_msgSender(),_allowances[sender][_msgSender()].sub(amount,ERC20: transfer amount exceeds allowance)) (../../sc/dataset/mainnet/0x4abac7a6acf3ce84f1c2fa07d91e72cdd6081cd3.sol#199)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-4
INFO:Detectors:
Variable AKAMARU._feeAddrWallet1 (../../sc/dataset/mainnet/0x4abac7a6acf3ce84f1c2fa07d91e72cdd6081cd3.sol#132) is too similar to AKAMARU._feeAddrWallet2 (../../sc/dataset/mainnet/0x4abac7a6acf3ce84f1c2fa07d91e72cdd6081cd3.sol#133)
Variable AKAMARU._getRValues(uint256,uint256,uint256,uint256).rTransferAmount (../../sc/dataset/mainnet/0x4abac7a6acf3ce84f1c2fa07d91e72cdd6081cd3.sol#357) is too similar to AKAMARU._getValues(uint256).tTransferAmount (../../sc/dataset/mainnet/0x4abac7a6acf3ce84f1c2fa07d91e72cdd6081cd3.sol#340)
Variable AKAMARU._transferStandard(address,address,uint256).rTransferAmount (../../sc/dataset/mainnet/0x4abac7a6acf3ce84f1c2fa07d91e72cdd6081cd3.sol#305) is too similar to AKAMARU._getValues(uint256).tTransferAmount (../../sc/dataset/mainnet/0x4abac7a6acf3ce84f1c2fa07d91e72cdd6081cd3.sol#340)
Variable AKAMARU._transferStandard(address,address,uint256).rTransferAmount (../../sc/dataset/mainnet/0x4abac7a6acf3ce84f1c2fa07d91e72cdd6081cd3.sol#305) is too similar to AKAMARU._transferStandard(address,address,uint256).tTransferAmount (../../sc/dataset/mainnet/0x4abac7a6acf3ce84f1c2fa07d91e72cdd6081cd3.sol#305)
Variable AKAMARU._getValues(uint256).rTransferAmount (../../sc/dataset/mainnet/0x4abac7a6acf3ce84f1c2fa07d91e72cdd6081cd3.sol#342) is too similar to AKAMARU._getValues(uint256).tTransferAmount (../../sc/dataset/mainnet/0x4abac7a6acf3ce84f1c2fa07d91e72cdd6081cd3.sol#340)
Variable AKAMARU._transferStandard(address,address,uint256).rTransferAmount (../../sc/dataset/mainnet/0x4abac7a6acf3ce84f1c2fa07d91e72cdd6081cd3.sol#305) is too similar to AKAMARU._getTValues(uint256,uint256,uint256).tTransferAmount (../../sc/dataset/mainnet/0x4abac7a6acf3ce84f1c2fa07d91e72cdd6081cd3.sol#349)
Variable AKAMARU._getValues(uint256).rTransferAmount (../../sc/dataset/mainnet/0x4abac7a6acf3ce84f1c2fa07d91e72cdd6081cd3.sol#342) is too similar to AKAMARU._getTValues(uint256,uint256,uint256).tTransferAmount (../../sc/dataset/mainnet/0x4abac7a6acf3ce84f1c2fa07d91e72cdd6081cd3.sol#349)
Variable AKAMARU._getRValues(uint256,uint256,uint256,uint256).rTransferAmount (../../sc/dataset/mainnet/0x4abac7a6acf3ce84f1c2fa07d91e72cdd6081cd3.sol#357) is too similar to AKAMARU._getTValues(uint256,uint256,uint256).tTransferAmount (../../sc/dataset/mainnet/0x4abac7a6acf3ce84f1c2fa07d91e72cdd6081cd3.sol#349)
Variable AKAMARU._getRValues(uint256,uint256,uint256,uint256).rTransferAmount (../../sc/dataset/mainnet/0x4abac7a6acf3ce84f1c2fa07d91e72cdd6081cd3.sol#357) is too similar to AKAMARU._transferStandard(address,address,uint256).tTransferAmount (../../sc/dataset/mainnet/0x4abac7a6acf3ce84f1c2fa07d91e72cdd6081cd3.sol#305)
Variable AKAMARU._getValues(uint256).rTransferAmount (../../sc/dataset/mainnet/0x4abac7a6acf3ce84f1c2fa07d91e72cdd6081cd3.sol#342) is too similar to AKAMARU._transferStandard(address,address,uint256).tTransferAmount (../../sc/dataset/mainnet/0x4abac7a6acf3ce84f1c2fa07d91e72cdd6081cd3.sol#305)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#variable-names-too-similar
INFO:Detectors:
AKAMARU._tOwned (../../sc/dataset/mainnet/0x4abac7a6acf3ce84f1c2fa07d91e72cdd6081cd3.sol#120) is never used in AKAMARU (../../sc/dataset/mainnet/0x4abac7a6acf3ce84f1c2fa07d91e72cdd6081cd3.sol#117-373)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-state-variable
INFO:Detectors:
AKAMARU._feeAddrWallet1 (../../sc/dataset/mainnet/0x4abac7a6acf3ce84f1c2fa07d91e72cdd6081cd3.sol#132) should be immutable 
AKAMARU._feeAddrWallet2 (../../sc/dataset/mainnet/0x4abac7a6acf3ce84f1c2fa07d91e72cdd6081cd3.sol#133) should be immutable 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-immutable
INFO:Slither:/bdata2/sc/dataset/mainnet/0x4abac7a6acf3ce84f1c2fa07d91e72cdd6081cd3.sol analyzed (7 contracts with 85 detectors), 34 result(s) found
