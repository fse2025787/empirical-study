INFO:Detectors:
Reentrancy in Shaman._transfer(address,address,uint256) (../../sc/dataset/mainnet/0xeedd890bf35d24846909f6dc2a01fe8d4461f3c4.sol#222-253):
	External calls:
	- swapTokensForEth(contractTokenBalance) (../../sc/dataset/mainnet/0xeedd890bf35d24846909f6dc2a01fe8d4461f3c4.sol#244)
		- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (../../sc/dataset/mainnet/0xeedd890bf35d24846909f6dc2a01fe8d4461f3c4.sol#260-266)
	External calls sending eth:
	- sendETHToFee(address(this).balance) (../../sc/dataset/mainnet/0xeedd890bf35d24846909f6dc2a01fe8d4461f3c4.sol#247)
		- _feeAddrWallet1.transfer(amount.div(2)) (../../sc/dataset/mainnet/0xeedd890bf35d24846909f6dc2a01fe8d4461f3c4.sol#270)
		- _feeAddrWallet2.transfer(amount.div(2)) (../../sc/dataset/mainnet/0xeedd890bf35d24846909f6dc2a01fe8d4461f3c4.sol#271)
	State variables written after the call(s):
	- _tokenTransfer(from,to,amount) (../../sc/dataset/mainnet/0xeedd890bf35d24846909f6dc2a01fe8d4461f3c4.sol#252)
		- _rOwned[address(this)] = _rOwned[address(this)].add(rTeam) (../../sc/dataset/mainnet/0xeedd890bf35d24846909f6dc2a01fe8d4461f3c4.sol#314)
		- _rOwned[sender] = _rOwned[sender].sub(rAmount) (../../sc/dataset/mainnet/0xeedd890bf35d24846909f6dc2a01fe8d4461f3c4.sol#304)
		- _rOwned[recipient] = _rOwned[recipient].add(rTransferAmount) (../../sc/dataset/mainnet/0xeedd890bf35d24846909f6dc2a01fe8d4461f3c4.sol#305)
	Shaman._rOwned (../../sc/dataset/mainnet/0xeedd890bf35d24846909f6dc2a01fe8d4461f3c4.sol#121) can be used in cross function reentrancies:
	- Shaman._takeTeam(uint256) (../../sc/dataset/mainnet/0xeedd890bf35d24846909f6dc2a01fe8d4461f3c4.sol#311-315)
	- Shaman._transferStandard(address,address,uint256) (../../sc/dataset/mainnet/0xeedd890bf35d24846909f6dc2a01fe8d4461f3c4.sol#302-309)
	- Shaman.balanceOf(address) (../../sc/dataset/mainnet/0xeedd890bf35d24846909f6dc2a01fe8d4461f3c4.sol#181-183)
	- Shaman.constructor() (../../sc/dataset/mainnet/0xeedd890bf35d24846909f6dc2a01fe8d4461f3c4.sol#154-163)
	- _tokenTransfer(from,to,amount) (../../sc/dataset/mainnet/0xeedd890bf35d24846909f6dc2a01fe8d4461f3c4.sol#252)
		- _rTotal = _rTotal.sub(rFee) (../../sc/dataset/mainnet/0xeedd890bf35d24846909f6dc2a01fe8d4461f3c4.sol#318)
	Shaman._rTotal (../../sc/dataset/mainnet/0xeedd890bf35d24846909f6dc2a01fe8d4461f3c4.sol#129) can be used in cross function reentrancies:
	- Shaman._getCurrentSupply() (../../sc/dataset/mainnet/0xeedd890bf35d24846909f6dc2a01fe8d4461f3c4.sol#364-369)
	- Shaman._reflectFee(uint256,uint256) (../../sc/dataset/mainnet/0xeedd890bf35d24846909f6dc2a01fe8d4461f3c4.sol#317-320)
	- Shaman.constructor() (../../sc/dataset/mainnet/0xeedd890bf35d24846909f6dc2a01fe8d4461f3c4.sol#154-163)
	- Shaman.tokenFromReflection(uint256) (../../sc/dataset/mainnet/0xeedd890bf35d24846909f6dc2a01fe8d4461f3c4.sol#209-213)
Reentrancy in Shaman.openTrading() (../../sc/dataset/mainnet/0xeedd890bf35d24846909f6dc2a01fe8d4461f3c4.sol#274-286):
	External calls:
	- uniswapV2Pair = IUniswapV2Factory(_uniswapV2Router.factory()).createPair(address(this),_uniswapV2Router.WETH()) (../../sc/dataset/mainnet/0xeedd890bf35d24846909f6dc2a01fe8d4461f3c4.sol#279)
	- uniswapV2Router.addLiquidityETH{value: address(this).balance}(address(this),balanceOf(address(this)),0,0,owner(),block.timestamp) (../../sc/dataset/mainnet/0xeedd890bf35d24846909f6dc2a01fe8d4461f3c4.sol#280)
	External calls sending eth:
	- uniswapV2Router.addLiquidityETH{value: address(this).balance}(address(this),balanceOf(address(this)),0,0,owner(),block.timestamp) (../../sc/dataset/mainnet/0xeedd890bf35d24846909f6dc2a01fe8d4461f3c4.sol#280)
	State variables written after the call(s):
	- tradingOpen = true (../../sc/dataset/mainnet/0xeedd890bf35d24846909f6dc2a01fe8d4461f3c4.sol#284)
	Shaman.tradingOpen (../../sc/dataset/mainnet/0xeedd890bf35d24846909f6dc2a01fe8d4461f3c4.sol#143) can be used in cross function reentrancies:
	- Shaman.openTrading() (../../sc/dataset/mainnet/0xeedd890bf35d24846909f6dc2a01fe8d4461f3c4.sol#274-286)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities
INFO:Detectors:
Shaman.openTrading() (../../sc/dataset/mainnet/0xeedd890bf35d24846909f6dc2a01fe8d4461f3c4.sol#274-286) ignores return value by uniswapV2Router.addLiquidityETH{value: address(this).balance}(address(this),balanceOf(address(this)),0,0,owner(),block.timestamp) (../../sc/dataset/mainnet/0xeedd890bf35d24846909f6dc2a01fe8d4461f3c4.sol#280)
Shaman.openTrading() (../../sc/dataset/mainnet/0xeedd890bf35d24846909f6dc2a01fe8d4461f3c4.sol#274-286) ignores return value by IERC20(uniswapV2Pair).approve(address(uniswapV2Router),type()(uint256).max) (../../sc/dataset/mainnet/0xeedd890bf35d24846909f6dc2a01fe8d4461f3c4.sol#285)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return
INFO:Detectors:
Shaman.allowance(address,address).owner (../../sc/dataset/mainnet/0xeedd890bf35d24846909f6dc2a01fe8d4461f3c4.sol#190) shadows:
	- Ownable.owner() (../../sc/dataset/mainnet/0xeedd890bf35d24846909f6dc2a01fe8d4461f3c4.sol#79-81) (function)
Shaman._approve(address,address,uint256).owner (../../sc/dataset/mainnet/0xeedd890bf35d24846909f6dc2a01fe8d4461f3c4.sol#215) shadows:
	- Ownable.owner() (../../sc/dataset/mainnet/0xeedd890bf35d24846909f6dc2a01fe8d4461f3c4.sol#79-81) (function)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing
INFO:Detectors:
Reentrancy in Shaman._transfer(address,address,uint256) (../../sc/dataset/mainnet/0xeedd890bf35d24846909f6dc2a01fe8d4461f3c4.sol#222-253):
	External calls:
	- swapTokensForEth(contractTokenBalance) (../../sc/dataset/mainnet/0xeedd890bf35d24846909f6dc2a01fe8d4461f3c4.sol#244)
		- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (../../sc/dataset/mainnet/0xeedd890bf35d24846909f6dc2a01fe8d4461f3c4.sol#260-266)
	External calls sending eth:
	- sendETHToFee(address(this).balance) (../../sc/dataset/mainnet/0xeedd890bf35d24846909f6dc2a01fe8d4461f3c4.sol#247)
		- _feeAddrWallet1.transfer(amount.div(2)) (../../sc/dataset/mainnet/0xeedd890bf35d24846909f6dc2a01fe8d4461f3c4.sol#270)
		- _feeAddrWallet2.transfer(amount.div(2)) (../../sc/dataset/mainnet/0xeedd890bf35d24846909f6dc2a01fe8d4461f3c4.sol#271)
	State variables written after the call(s):
	- _tokenTransfer(from,to,amount) (../../sc/dataset/mainnet/0xeedd890bf35d24846909f6dc2a01fe8d4461f3c4.sol#252)
		- _tFeeTotal = _tFeeTotal.add(tFee) (../../sc/dataset/mainnet/0xeedd890bf35d24846909f6dc2a01fe8d4461f3c4.sol#319)
Reentrancy in Shaman.openTrading() (../../sc/dataset/mainnet/0xeedd890bf35d24846909f6dc2a01fe8d4461f3c4.sol#274-286):
	External calls:
	- uniswapV2Pair = IUniswapV2Factory(_uniswapV2Router.factory()).createPair(address(this),_uniswapV2Router.WETH()) (../../sc/dataset/mainnet/0xeedd890bf35d24846909f6dc2a01fe8d4461f3c4.sol#279)
	- uniswapV2Router.addLiquidityETH{value: address(this).balance}(address(this),balanceOf(address(this)),0,0,owner(),block.timestamp) (../../sc/dataset/mainnet/0xeedd890bf35d24846909f6dc2a01fe8d4461f3c4.sol#280)
	External calls sending eth:
	- uniswapV2Router.addLiquidityETH{value: address(this).balance}(address(this),balanceOf(address(this)),0,0,owner(),block.timestamp) (../../sc/dataset/mainnet/0xeedd890bf35d24846909f6dc2a01fe8d4461f3c4.sol#280)
	State variables written after the call(s):
	- _maxTxAmount = 30000000000 * 10 ** 9 (../../sc/dataset/mainnet/0xeedd890bf35d24846909f6dc2a01fe8d4461f3c4.sol#283)
	- cooldownEnabled = true (../../sc/dataset/mainnet/0xeedd890bf35d24846909f6dc2a01fe8d4461f3c4.sol#282)
	- swapEnabled = true (../../sc/dataset/mainnet/0xeedd890bf35d24846909f6dc2a01fe8d4461f3c4.sol#281)
Reentrancy in Shaman.transferFrom(address,address,uint256) (../../sc/dataset/mainnet/0xeedd890bf35d24846909f6dc2a01fe8d4461f3c4.sol#199-203):
	External calls:
	- _transfer(sender,recipient,amount) (../../sc/dataset/mainnet/0xeedd890bf35d24846909f6dc2a01fe8d4461f3c4.sol#200)
		- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (../../sc/dataset/mainnet/0xeedd890bf35d24846909f6dc2a01fe8d4461f3c4.sol#260-266)
	External calls sending eth:
	- _transfer(sender,recipient,amount) (../../sc/dataset/mainnet/0xeedd890bf35d24846909f6dc2a01fe8d4461f3c4.sol#200)
		- _feeAddrWallet1.transfer(amount.div(2)) (../../sc/dataset/mainnet/0xeedd890bf35d24846909f6dc2a01fe8d4461f3c4.sol#270)
		- _feeAddrWallet2.transfer(amount.div(2)) (../../sc/dataset/mainnet/0xeedd890bf35d24846909f6dc2a01fe8d4461f3c4.sol#271)
	State variables written after the call(s):
	- _approve(sender,_msgSender(),_allowances[sender][_msgSender()].sub(amount,ERC20: transfer amount exceeds allowance)) (../../sc/dataset/mainnet/0xeedd890bf35d24846909f6dc2a01fe8d4461f3c4.sol#201)
		- _allowances[owner][spender] = amount (../../sc/dataset/mainnet/0xeedd890bf35d24846909f6dc2a01fe8d4461f3c4.sol#218)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2
INFO:Detectors:
Reentrancy in Shaman._transfer(address,address,uint256) (../../sc/dataset/mainnet/0xeedd890bf35d24846909f6dc2a01fe8d4461f3c4.sol#222-253):
	External calls:
	- swapTokensForEth(contractTokenBalance) (../../sc/dataset/mainnet/0xeedd890bf35d24846909f6dc2a01fe8d4461f3c4.sol#244)
		- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (../../sc/dataset/mainnet/0xeedd890bf35d24846909f6dc2a01fe8d4461f3c4.sol#260-266)
	External calls sending eth:
	- sendETHToFee(address(this).balance) (../../sc/dataset/mainnet/0xeedd890bf35d24846909f6dc2a01fe8d4461f3c4.sol#247)
		- _feeAddrWallet1.transfer(amount.div(2)) (../../sc/dataset/mainnet/0xeedd890bf35d24846909f6dc2a01fe8d4461f3c4.sol#270)
		- _feeAddrWallet2.transfer(amount.div(2)) (../../sc/dataset/mainnet/0xeedd890bf35d24846909f6dc2a01fe8d4461f3c4.sol#271)
	Event emitted after the call(s):
	- Transfer(sender,recipient,tTransferAmount) (../../sc/dataset/mainnet/0xeedd890bf35d24846909f6dc2a01fe8d4461f3c4.sol#308)
		- _tokenTransfer(from,to,amount) (../../sc/dataset/mainnet/0xeedd890bf35d24846909f6dc2a01fe8d4461f3c4.sol#252)
Reentrancy in Shaman.transferFrom(address,address,uint256) (../../sc/dataset/mainnet/0xeedd890bf35d24846909f6dc2a01fe8d4461f3c4.sol#199-203):
	External calls:
	- _transfer(sender,recipient,amount) (../../sc/dataset/mainnet/0xeedd890bf35d24846909f6dc2a01fe8d4461f3c4.sol#200)
		- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (../../sc/dataset/mainnet/0xeedd890bf35d24846909f6dc2a01fe8d4461f3c4.sol#260-266)
	External calls sending eth:
	- _transfer(sender,recipient,amount) (../../sc/dataset/mainnet/0xeedd890bf35d24846909f6dc2a01fe8d4461f3c4.sol#200)
		- _feeAddrWallet1.transfer(amount.div(2)) (../../sc/dataset/mainnet/0xeedd890bf35d24846909f6dc2a01fe8d4461f3c4.sol#270)
		- _feeAddrWallet2.transfer(amount.div(2)) (../../sc/dataset/mainnet/0xeedd890bf35d24846909f6dc2a01fe8d4461f3c4.sol#271)
	Event emitted after the call(s):
	- Approval(owner,spender,amount) (../../sc/dataset/mainnet/0xeedd890bf35d24846909f6dc2a01fe8d4461f3c4.sol#219)
		- _approve(sender,_msgSender(),_allowances[sender][_msgSender()].sub(amount,ERC20: transfer amount exceeds allowance)) (../../sc/dataset/mainnet/0xeedd890bf35d24846909f6dc2a01fe8d4461f3c4.sol#201)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3
INFO:Detectors:
Shaman._transfer(address,address,uint256) (../../sc/dataset/mainnet/0xeedd890bf35d24846909f6dc2a01fe8d4461f3c4.sol#222-253) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool)(cooldown[to] < block.timestamp) (../../sc/dataset/mainnet/0xeedd890bf35d24846909f6dc2a01fe8d4461f3c4.sol#233)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp
INFO:Detectors:
Pragma version^0.8.4 (../../sc/dataset/mainnet/0xeedd890bf35d24846909f6dc2a01fe8d4461f3c4.sol#11) allows old versions
solc-0.8.7 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity
INFO:Detectors:
Function IUniswapV2Router02.WETH() (../../sc/dataset/mainnet/0xeedd890bf35d24846909f6dc2a01fe8d4461f3c4.sol#108) is not in mixedCase
Constant Shaman._tTotal (../../sc/dataset/mainnet/0xeedd890bf35d24846909f6dc2a01fe8d4461f3c4.sol#128) is not in UPPER_CASE_WITH_UNDERSCORES
Constant Shaman._name (../../sc/dataset/mainnet/0xeedd890bf35d24846909f6dc2a01fe8d4461f3c4.sol#137) is not in UPPER_CASE_WITH_UNDERSCORES
Constant Shaman._symbol (../../sc/dataset/mainnet/0xeedd890bf35d24846909f6dc2a01fe8d4461f3c4.sol#138) is not in UPPER_CASE_WITH_UNDERSCORES
Constant Shaman._decimals (../../sc/dataset/mainnet/0xeedd890bf35d24846909f6dc2a01fe8d4461f3c4.sol#139) is not in UPPER_CASE_WITH_UNDERSCORES
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions
INFO:Detectors:
Reentrancy in Shaman._transfer(address,address,uint256) (../../sc/dataset/mainnet/0xeedd890bf35d24846909f6dc2a01fe8d4461f3c4.sol#222-253):
	External calls:
	- sendETHToFee(address(this).balance) (../../sc/dataset/mainnet/0xeedd890bf35d24846909f6dc2a01fe8d4461f3c4.sol#247)
		- _feeAddrWallet1.transfer(amount.div(2)) (../../sc/dataset/mainnet/0xeedd890bf35d24846909f6dc2a01fe8d4461f3c4.sol#270)
		- _feeAddrWallet2.transfer(amount.div(2)) (../../sc/dataset/mainnet/0xeedd890bf35d24846909f6dc2a01fe8d4461f3c4.sol#271)
	State variables written after the call(s):
	- _tokenTransfer(from,to,amount) (../../sc/dataset/mainnet/0xeedd890bf35d24846909f6dc2a01fe8d4461f3c4.sol#252)
		- _rOwned[address(this)] = _rOwned[address(this)].add(rTeam) (../../sc/dataset/mainnet/0xeedd890bf35d24846909f6dc2a01fe8d4461f3c4.sol#314)
		- _rOwned[sender] = _rOwned[sender].sub(rAmount) (../../sc/dataset/mainnet/0xeedd890bf35d24846909f6dc2a01fe8d4461f3c4.sol#304)
		- _rOwned[recipient] = _rOwned[recipient].add(rTransferAmount) (../../sc/dataset/mainnet/0xeedd890bf35d24846909f6dc2a01fe8d4461f3c4.sol#305)
	- _tokenTransfer(from,to,amount) (../../sc/dataset/mainnet/0xeedd890bf35d24846909f6dc2a01fe8d4461f3c4.sol#252)
		- _rTotal = _rTotal.sub(rFee) (../../sc/dataset/mainnet/0xeedd890bf35d24846909f6dc2a01fe8d4461f3c4.sol#318)
	- _tokenTransfer(from,to,amount) (../../sc/dataset/mainnet/0xeedd890bf35d24846909f6dc2a01fe8d4461f3c4.sol#252)
		- _tFeeTotal = _tFeeTotal.add(tFee) (../../sc/dataset/mainnet/0xeedd890bf35d24846909f6dc2a01fe8d4461f3c4.sol#319)
	Event emitted after the call(s):
	- Transfer(sender,recipient,tTransferAmount) (../../sc/dataset/mainnet/0xeedd890bf35d24846909f6dc2a01fe8d4461f3c4.sol#308)
		- _tokenTransfer(from,to,amount) (../../sc/dataset/mainnet/0xeedd890bf35d24846909f6dc2a01fe8d4461f3c4.sol#252)
Reentrancy in Shaman.transferFrom(address,address,uint256) (../../sc/dataset/mainnet/0xeedd890bf35d24846909f6dc2a01fe8d4461f3c4.sol#199-203):
	External calls:
	- _transfer(sender,recipient,amount) (../../sc/dataset/mainnet/0xeedd890bf35d24846909f6dc2a01fe8d4461f3c4.sol#200)
		- _feeAddrWallet1.transfer(amount.div(2)) (../../sc/dataset/mainnet/0xeedd890bf35d24846909f6dc2a01fe8d4461f3c4.sol#270)
		- _feeAddrWallet2.transfer(amount.div(2)) (../../sc/dataset/mainnet/0xeedd890bf35d24846909f6dc2a01fe8d4461f3c4.sol#271)
	State variables written after the call(s):
	- _approve(sender,_msgSender(),_allowances[sender][_msgSender()].sub(amount,ERC20: transfer amount exceeds allowance)) (../../sc/dataset/mainnet/0xeedd890bf35d24846909f6dc2a01fe8d4461f3c4.sol#201)
		- _allowances[owner][spender] = amount (../../sc/dataset/mainnet/0xeedd890bf35d24846909f6dc2a01fe8d4461f3c4.sol#218)
	Event emitted after the call(s):
	- Approval(owner,spender,amount) (../../sc/dataset/mainnet/0xeedd890bf35d24846909f6dc2a01fe8d4461f3c4.sol#219)
		- _approve(sender,_msgSender(),_allowances[sender][_msgSender()].sub(amount,ERC20: transfer amount exceeds allowance)) (../../sc/dataset/mainnet/0xeedd890bf35d24846909f6dc2a01fe8d4461f3c4.sol#201)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-4
INFO:Detectors:
Variable Shaman._feeAddrWallet1 (../../sc/dataset/mainnet/0xeedd890bf35d24846909f6dc2a01fe8d4461f3c4.sol#134) is too similar to Shaman._feeAddrWallet2 (../../sc/dataset/mainnet/0xeedd890bf35d24846909f6dc2a01fe8d4461f3c4.sol#135)
Variable Shaman._getRValues(uint256,uint256,uint256,uint256).rTransferAmount (../../sc/dataset/mainnet/0xeedd890bf35d24846909f6dc2a01fe8d4461f3c4.sol#355) is too similar to Shaman._getValues(uint256).tTransferAmount (../../sc/dataset/mainnet/0xeedd890bf35d24846909f6dc2a01fe8d4461f3c4.sol#338)
Variable Shaman._getRValues(uint256,uint256,uint256,uint256).rTransferAmount (../../sc/dataset/mainnet/0xeedd890bf35d24846909f6dc2a01fe8d4461f3c4.sol#355) is too similar to Shaman._transferStandard(address,address,uint256).tTransferAmount (../../sc/dataset/mainnet/0xeedd890bf35d24846909f6dc2a01fe8d4461f3c4.sol#303)
Variable Shaman._transferStandard(address,address,uint256).rTransferAmount (../../sc/dataset/mainnet/0xeedd890bf35d24846909f6dc2a01fe8d4461f3c4.sol#303) is too similar to Shaman._transferStandard(address,address,uint256).tTransferAmount (../../sc/dataset/mainnet/0xeedd890bf35d24846909f6dc2a01fe8d4461f3c4.sol#303)
Variable Shaman._getValues(uint256).rTransferAmount (../../sc/dataset/mainnet/0xeedd890bf35d24846909f6dc2a01fe8d4461f3c4.sol#340) is too similar to Shaman._getValues(uint256).tTransferAmount (../../sc/dataset/mainnet/0xeedd890bf35d24846909f6dc2a01fe8d4461f3c4.sol#338)
Variable Shaman._transferStandard(address,address,uint256).rTransferAmount (../../sc/dataset/mainnet/0xeedd890bf35d24846909f6dc2a01fe8d4461f3c4.sol#303) is too similar to Shaman._getTValues(uint256,uint256,uint256).tTransferAmount (../../sc/dataset/mainnet/0xeedd890bf35d24846909f6dc2a01fe8d4461f3c4.sol#347)
Variable Shaman._transferStandard(address,address,uint256).rTransferAmount (../../sc/dataset/mainnet/0xeedd890bf35d24846909f6dc2a01fe8d4461f3c4.sol#303) is too similar to Shaman._getValues(uint256).tTransferAmount (../../sc/dataset/mainnet/0xeedd890bf35d24846909f6dc2a01fe8d4461f3c4.sol#338)
Variable Shaman._getRValues(uint256,uint256,uint256,uint256).rTransferAmount (../../sc/dataset/mainnet/0xeedd890bf35d24846909f6dc2a01fe8d4461f3c4.sol#355) is too similar to Shaman._getTValues(uint256,uint256,uint256).tTransferAmount (../../sc/dataset/mainnet/0xeedd890bf35d24846909f6dc2a01fe8d4461f3c4.sol#347)
Variable Shaman._getValues(uint256).rTransferAmount (../../sc/dataset/mainnet/0xeedd890bf35d24846909f6dc2a01fe8d4461f3c4.sol#340) is too similar to Shaman._transferStandard(address,address,uint256).tTransferAmount (../../sc/dataset/mainnet/0xeedd890bf35d24846909f6dc2a01fe8d4461f3c4.sol#303)
Variable Shaman._getValues(uint256).rTransferAmount (../../sc/dataset/mainnet/0xeedd890bf35d24846909f6dc2a01fe8d4461f3c4.sol#340) is too similar to Shaman._getTValues(uint256,uint256,uint256).tTransferAmount (../../sc/dataset/mainnet/0xeedd890bf35d24846909f6dc2a01fe8d4461f3c4.sol#347)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#variable-names-too-similar
INFO:Detectors:
Shaman.openTrading() (../../sc/dataset/mainnet/0xeedd890bf35d24846909f6dc2a01fe8d4461f3c4.sol#274-286) uses literals with too many digits:
	- _maxTxAmount = 30000000000 * 10 ** 9 (../../sc/dataset/mainnet/0xeedd890bf35d24846909f6dc2a01fe8d4461f3c4.sol#283)
Shaman.slitherConstructorConstantVariables() (../../sc/dataset/mainnet/0xeedd890bf35d24846909f6dc2a01fe8d4461f3c4.sol#119-371) uses literals with too many digits:
	- _tTotal = 1000000000000 * 10 ** 9 (../../sc/dataset/mainnet/0xeedd890bf35d24846909f6dc2a01fe8d4461f3c4.sol#128)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits
INFO:Detectors:
Shaman._tOwned (../../sc/dataset/mainnet/0xeedd890bf35d24846909f6dc2a01fe8d4461f3c4.sol#122) is never used in Shaman (../../sc/dataset/mainnet/0xeedd890bf35d24846909f6dc2a01fe8d4461f3c4.sol#119-371)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-state-variable
INFO:Detectors:
Shaman._feeAddrWallet1 (../../sc/dataset/mainnet/0xeedd890bf35d24846909f6dc2a01fe8d4461f3c4.sol#134) should be immutable 
Shaman._feeAddrWallet2 (../../sc/dataset/mainnet/0xeedd890bf35d24846909f6dc2a01fe8d4461f3c4.sol#135) should be immutable 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-immutable
INFO:Slither:/bdata2/sc/dataset/mainnet/0xeedd890bf35d24846909f6dc2a01fe8d4461f3c4.sol analyzed (7 contracts with 85 detectors), 36 result(s) found
