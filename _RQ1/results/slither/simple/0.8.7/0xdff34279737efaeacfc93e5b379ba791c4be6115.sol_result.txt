Compilation warnings/errors on /bdata2/sc/dataset/mainnet/0xdff34279737efaeacfc93e5b379ba791c4be6115.sol:
Warning: Unused local variable.
   --> /bdata2/sc/dataset/mainnet/0xdff34279737efaeacfc93e5b379ba791c4be6115.sol:979:9:
    |
979 |         uint256 mintedId = clonexContract.mintTransfer(msg.sender); // Mint the ERC-721 token
    |         ^^^^^^^^^^^^^^^^


INFO:Detectors:
Reentrancy in Mintvial.airdropGiveaway(address[],uint256[]) (../../sc/dataset/mainnet/0xdff34279737efaeacfc93e5b379ba791c4be6115.sol#955-962):
	External calls:
	- _mint(msg.sender,tokenId,amountToMint[i],) (../../sc/dataset/mainnet/0xdff34279737efaeacfc93e5b379ba791c4be6115.sol#958)
		- IERC1155Receiver(to).onERC1155Received(operator,from,id,amount,data) (../../sc/dataset/mainnet/0xdff34279737efaeacfc93e5b379ba791c4be6115.sol#637-645)
	State variables written after the call(s):
	- amountMinted = amountMinted + amountToMint[i] (../../sc/dataset/mainnet/0xdff34279737efaeacfc93e5b379ba791c4be6115.sol#960)
	Mintvial.amountMinted (../../sc/dataset/mainnet/0xdff34279737efaeacfc93e5b379ba791c4be6115.sol#830) can be used in cross function reentrancies:
	- Mintvial.airdropGiveaway(address[],uint256[]) (../../sc/dataset/mainnet/0xdff34279737efaeacfc93e5b379ba791c4be6115.sol#955-962)
	- Mintvial.getAmountMinted() (../../sc/dataset/mainnet/0xdff34279737efaeacfc93e5b379ba791c4be6115.sol#998-1000)
	- Mintvial.mint(address[],uint256[],uint256) (../../sc/dataset/mainnet/0xdff34279737efaeacfc93e5b379ba791c4be6115.sol#907-952)
	- tokenId ++ (../../sc/dataset/mainnet/0xdff34279737efaeacfc93e5b379ba791c4be6115.sol#959)
	Mintvial.tokenId (../../sc/dataset/mainnet/0xdff34279737efaeacfc93e5b379ba791c4be6115.sol#829) can be used in cross function reentrancies:
	- Mintvial.airdropGiveaway(address[],uint256[]) (../../sc/dataset/mainnet/0xdff34279737efaeacfc93e5b379ba791c4be6115.sol#955-962)
	- Mintvial.mint(address[],uint256[],uint256) (../../sc/dataset/mainnet/0xdff34279737efaeacfc93e5b379ba791c4be6115.sol#907-952)
Reentrancy in Mintvial.mint(address[],uint256[],uint256) (../../sc/dataset/mainnet/0xdff34279737efaeacfc93e5b379ba791c4be6115.sol#907-952):
	External calls:
	- _mint(msg.sender,tokenId,amount,) (../../sc/dataset/mainnet/0xdff34279737efaeacfc93e5b379ba791c4be6115.sol#946)
		- IERC1155Receiver(to).onERC1155Received(operator,from,id,amount,data) (../../sc/dataset/mainnet/0xdff34279737efaeacfc93e5b379ba791c4be6115.sol#637-645)
	State variables written after the call(s):
	- amountMinted = amountMinted + amount (../../sc/dataset/mainnet/0xdff34279737efaeacfc93e5b379ba791c4be6115.sol#950)
	Mintvial.amountMinted (../../sc/dataset/mainnet/0xdff34279737efaeacfc93e5b379ba791c4be6115.sol#830) can be used in cross function reentrancies:
	- Mintvial.airdropGiveaway(address[],uint256[]) (../../sc/dataset/mainnet/0xdff34279737efaeacfc93e5b379ba791c4be6115.sol#955-962)
	- Mintvial.getAmountMinted() (../../sc/dataset/mainnet/0xdff34279737efaeacfc93e5b379ba791c4be6115.sol#998-1000)
	- Mintvial.mint(address[],uint256[],uint256) (../../sc/dataset/mainnet/0xdff34279737efaeacfc93e5b379ba791c4be6115.sol#907-952)
	- tokenId ++ (../../sc/dataset/mainnet/0xdff34279737efaeacfc93e5b379ba791c4be6115.sol#949)
	Mintvial.tokenId (../../sc/dataset/mainnet/0xdff34279737efaeacfc93e5b379ba791c4be6115.sol#829) can be used in cross function reentrancies:
	- Mintvial.airdropGiveaway(address[],uint256[]) (../../sc/dataset/mainnet/0xdff34279737efaeacfc93e5b379ba791c4be6115.sol#955-962)
	- Mintvial.mint(address[],uint256[],uint256) (../../sc/dataset/mainnet/0xdff34279737efaeacfc93e5b379ba791c4be6115.sol#907-952)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1
INFO:Detectors:
ERC1155._doSafeTransferAcceptanceCheck(address,address,address,uint256,uint256,bytes).reason (../../sc/dataset/mainnet/0xdff34279737efaeacfc93e5b379ba791c4be6115.sol#641) is a local variable never initialized
ERC1155._doSafeBatchTransferAcceptanceCheck(address,address,address,uint256[],uint256[],bytes).response (../../sc/dataset/mainnet/0xdff34279737efaeacfc93e5b379ba791c4be6115.sol#659) is a local variable never initialized
ERC1155._doSafeBatchTransferAcceptanceCheck(address,address,address,uint256[],uint256[],bytes).reason (../../sc/dataset/mainnet/0xdff34279737efaeacfc93e5b379ba791c4be6115.sol#664) is a local variable never initialized
ERC1155._doSafeTransferAcceptanceCheck(address,address,address,uint256,uint256,bytes).response (../../sc/dataset/mainnet/0xdff34279737efaeacfc93e5b379ba791c4be6115.sol#637) is a local variable never initialized
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#uninitialized-local-variables
INFO:Detectors:
ERC1155._doSafeTransferAcceptanceCheck(address,address,address,uint256,uint256,bytes) (../../sc/dataset/mainnet/0xdff34279737efaeacfc93e5b379ba791c4be6115.sol#628-647) ignores return value by IERC1155Receiver(to).onERC1155Received(operator,from,id,amount,data) (../../sc/dataset/mainnet/0xdff34279737efaeacfc93e5b379ba791c4be6115.sol#637-645)
ERC1155._doSafeBatchTransferAcceptanceCheck(address,address,address,uint256[],uint256[],bytes) (../../sc/dataset/mainnet/0xdff34279737efaeacfc93e5b379ba791c4be6115.sol#649-670) ignores return value by IERC1155Receiver(to).onERC1155BatchReceived(operator,from,ids,amounts,data) (../../sc/dataset/mainnet/0xdff34279737efaeacfc93e5b379ba791c4be6115.sol#658-668)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return
INFO:Detectors:
Mintvial.mint(address[],uint256[],uint256) (../../sc/dataset/mainnet/0xdff34279737efaeacfc93e5b379ba791c4be6115.sol#907-952) should emit an event for: 
	- amountMinted = amountMinted + amount (../../sc/dataset/mainnet/0xdff34279737efaeacfc93e5b379ba791c4be6115.sol#950) 
Mintvial.airdropGiveaway(address[],uint256[]) (../../sc/dataset/mainnet/0xdff34279737efaeacfc93e5b379ba791c4be6115.sol#955-962) should emit an event for: 
	- amountMinted = amountMinted + amountToMint[i] (../../sc/dataset/mainnet/0xdff34279737efaeacfc93e5b379ba791c4be6115.sol#960) 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-arithmetic
INFO:Detectors:
Mintvial.setClonexContract(address).contractAddress (../../sc/dataset/mainnet/0xdff34279737efaeacfc93e5b379ba791c4be6115.sol#872) lacks a zero-check on :
		- clonexContractAddress = contractAddress (../../sc/dataset/mainnet/0xdff34279737efaeacfc93e5b379ba791c4be6115.sol#873)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation
INFO:Detectors:
Mintvial.mint(address[],uint256[],uint256) (../../sc/dataset/mainnet/0xdff34279737efaeacfc93e5b379ba791c4be6115.sol#907-952) has external calls inside a loop: require(bool,string)(contractAddress.ownerOf(tokenIds[i]) == msg.sender,Doesn't own the token) (../../sc/dataset/mainnet/0xdff34279737efaeacfc93e5b379ba791c4be6115.sol#923)
Mintvial.mint(address[],uint256[],uint256) (../../sc/dataset/mainnet/0xdff34279737efaeacfc93e5b379ba791c4be6115.sol#907-952) has external calls inside a loop: require(bool,string)(contractAddress_scope_0.balanceOf(msg.sender,tokenIds[i]) > 0,Doesn't own the token) (../../sc/dataset/mainnet/0xdff34279737efaeacfc93e5b379ba791c4be6115.sol#927)
ERC1155._doSafeTransferAcceptanceCheck(address,address,address,uint256,uint256,bytes) (../../sc/dataset/mainnet/0xdff34279737efaeacfc93e5b379ba791c4be6115.sol#628-647) has external calls inside a loop: IERC1155Receiver(to).onERC1155Received(operator,from,id,amount,data) (../../sc/dataset/mainnet/0xdff34279737efaeacfc93e5b379ba791c4be6115.sol#637-645)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation/#calls-inside-a-loop
INFO:Detectors:
Address.isContract(address) (../../sc/dataset/mainnet/0xdff34279737efaeacfc93e5b379ba791c4be6115.sol#1266-1276) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0xdff34279737efaeacfc93e5b379ba791c4be6115.sol#1272-1274)
Address.verifyCallResult(bool,bytes,string) (../../sc/dataset/mainnet/0xdff34279737efaeacfc93e5b379ba791c4be6115.sol#1435-1455) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0xdff34279737efaeacfc93e5b379ba791c4be6115.sol#1447-1450)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage
INFO:Detectors:
Mintvial.mint(address[],uint256[],uint256) (../../sc/dataset/mainnet/0xdff34279737efaeacfc93e5b379ba791c4be6115.sol#907-952) compares to a boolean constant:
	-require(bool,string)(checkIfRedeemed(contractIds[i],tokenIds[i]) == false,Token already redeemed) (../../sc/dataset/mainnet/0xdff34279737efaeacfc93e5b379ba791c4be6115.sol#930)
Mintvial.mint(address[],uint256[],uint256) (../../sc/dataset/mainnet/0xdff34279737efaeacfc93e5b379ba791c4be6115.sol#907-952) compares to a boolean constant:
	-require(bool,string)(isContractAuthorized(contractIds[i]) == true,Contract is not authorized) (../../sc/dataset/mainnet/0xdff34279737efaeacfc93e5b379ba791c4be6115.sol#917)
Mintvial.mint(address[],uint256[],uint256) (../../sc/dataset/mainnet/0xdff34279737efaeacfc93e5b379ba791c4be6115.sol#907-952) compares to a boolean constant:
	-require(bool,string)(salesStarted == true,Sales have not started) (../../sc/dataset/mainnet/0xdff34279737efaeacfc93e5b379ba791c4be6115.sol#909)
Mintvial.migrateToken(uint256) (../../sc/dataset/mainnet/0xdff34279737efaeacfc93e5b379ba791c4be6115.sol#965-972) compares to a boolean constant:
	-require(bool,string)(migrationStarted == true,Migration has not started) (../../sc/dataset/mainnet/0xdff34279737efaeacfc93e5b379ba791c4be6115.sol#966)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#boolean-equality
INFO:Detectors:
Different versions of Solidity are used:
	- Version used: ['^0.8.0', '^0.8.2']
	- ^0.8.0 (../../sc/dataset/mainnet/0xdff34279737efaeacfc93e5b379ba791c4be6115.sol#6)
	- ^0.8.0 (../../sc/dataset/mainnet/0xdff34279737efaeacfc93e5b379ba791c4be6115.sol#30)
	- ^0.8.0 (../../sc/dataset/mainnet/0xdff34279737efaeacfc93e5b379ba791c4be6115.sol#155)
	- ^0.8.0 (../../sc/dataset/mainnet/0xdff34279737efaeacfc93e5b379ba791c4be6115.sol#179)
	- ^0.8.0 (../../sc/dataset/mainnet/0xdff34279737efaeacfc93e5b379ba791c4be6115.sol#208)
	- ^0.8.0 (../../sc/dataset/mainnet/0xdff34279737efaeacfc93e5b379ba791c4be6115.sol#230)
	- ^0.8.0 (../../sc/dataset/mainnet/0xdff34279737efaeacfc93e5b379ba791c4be6115.sol#682)
	- ^0.8.0 (../../sc/dataset/mainnet/0xdff34279737efaeacfc93e5b379ba791c4be6115.sol#722)
	- ^0.8.0 (../../sc/dataset/mainnet/0xdff34279737efaeacfc93e5b379ba791c4be6115.sol#1016)
	- ^0.8.0 (../../sc/dataset/mainnet/0xdff34279737efaeacfc93e5b379ba791c4be6115.sol#1243)
	- ^0.8.0 (../../sc/dataset/mainnet/0xdff34279737efaeacfc93e5b379ba791c4be6115.sol#1460)
	- ^0.8.2 (../../sc/dataset/mainnet/0xdff34279737efaeacfc93e5b379ba791c4be6115.sol#811)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#different-pragma-directives-are-used
INFO:Detectors:
Mintvial.airdropGiveaway(address[],uint256[]) (../../sc/dataset/mainnet/0xdff34279737efaeacfc93e5b379ba791c4be6115.sol#955-962) has costly operations inside a loop:
	- tokenId ++ (../../sc/dataset/mainnet/0xdff34279737efaeacfc93e5b379ba791c4be6115.sol#959)
Mintvial.airdropGiveaway(address[],uint256[]) (../../sc/dataset/mainnet/0xdff34279737efaeacfc93e5b379ba791c4be6115.sol#955-962) has costly operations inside a loop:
	- amountMinted = amountMinted + amountToMint[i] (../../sc/dataset/mainnet/0xdff34279737efaeacfc93e5b379ba791c4be6115.sol#960)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#costly-operations-inside-a-loop
INFO:Detectors:
Address.functionCall(address,bytes) (../../sc/dataset/mainnet/0xdff34279737efaeacfc93e5b379ba791c4be6115.sol#1319-1321) is never used and should be removed
Address.functionCall(address,bytes,string) (../../sc/dataset/mainnet/0xdff34279737efaeacfc93e5b379ba791c4be6115.sol#1329-1335) is never used and should be removed
Address.functionCallWithValue(address,bytes,uint256) (../../sc/dataset/mainnet/0xdff34279737efaeacfc93e5b379ba791c4be6115.sol#1348-1354) is never used and should be removed
Address.functionCallWithValue(address,bytes,uint256,string) (../../sc/dataset/mainnet/0xdff34279737efaeacfc93e5b379ba791c4be6115.sol#1362-1373) is never used and should be removed
Address.functionDelegateCall(address,bytes) (../../sc/dataset/mainnet/0xdff34279737efaeacfc93e5b379ba791c4be6115.sol#1408-1410) is never used and should be removed
Address.functionDelegateCall(address,bytes,string) (../../sc/dataset/mainnet/0xdff34279737efaeacfc93e5b379ba791c4be6115.sol#1418-1427) is never used and should be removed
Address.functionStaticCall(address,bytes) (../../sc/dataset/mainnet/0xdff34279737efaeacfc93e5b379ba791c4be6115.sol#1381-1383) is never used and should be removed
Address.functionStaticCall(address,bytes,string) (../../sc/dataset/mainnet/0xdff34279737efaeacfc93e5b379ba791c4be6115.sol#1391-1400) is never used and should be removed
Address.sendValue(address,uint256) (../../sc/dataset/mainnet/0xdff34279737efaeacfc93e5b379ba791c4be6115.sol#1294-1299) is never used and should be removed
Address.verifyCallResult(bool,bytes,string) (../../sc/dataset/mainnet/0xdff34279737efaeacfc93e5b379ba791c4be6115.sol#1435-1455) is never used and should be removed
Context._msgData() (../../sc/dataset/mainnet/0xdff34279737efaeacfc93e5b379ba791c4be6115.sol#172-174) is never used and should be removed
ERC1155._mintBatch(address,uint256[],uint256[],bytes) (../../sc/dataset/mainnet/0xdff34279737efaeacfc93e5b379ba791c4be6115.sol#516-536) is never used and should be removed
SafeMath.add(uint256,uint256) (../../sc/dataset/mainnet/0xdff34279737efaeacfc93e5b379ba791c4be6115.sol#1105-1107) is never used and should be removed
SafeMath.div(uint256,uint256) (../../sc/dataset/mainnet/0xdff34279737efaeacfc93e5b379ba791c4be6115.sol#1147-1149) is never used and should be removed
SafeMath.div(uint256,uint256,string) (../../sc/dataset/mainnet/0xdff34279737efaeacfc93e5b379ba791c4be6115.sol#1203-1212) is never used and should be removed
SafeMath.mod(uint256,uint256) (../../sc/dataset/mainnet/0xdff34279737efaeacfc93e5b379ba791c4be6115.sol#1163-1165) is never used and should be removed
SafeMath.mod(uint256,uint256,string) (../../sc/dataset/mainnet/0xdff34279737efaeacfc93e5b379ba791c4be6115.sol#1229-1238) is never used and should be removed
SafeMath.sub(uint256,uint256) (../../sc/dataset/mainnet/0xdff34279737efaeacfc93e5b379ba791c4be6115.sol#1119-1121) is never used and should be removed
SafeMath.sub(uint256,uint256,string) (../../sc/dataset/mainnet/0xdff34279737efaeacfc93e5b379ba791c4be6115.sol#1180-1189) is never used and should be removed
SafeMath.tryAdd(uint256,uint256) (../../sc/dataset/mainnet/0xdff34279737efaeacfc93e5b379ba791c4be6115.sol#1034-1040) is never used and should be removed
SafeMath.tryDiv(uint256,uint256) (../../sc/dataset/mainnet/0xdff34279737efaeacfc93e5b379ba791c4be6115.sol#1076-1081) is never used and should be removed
SafeMath.tryMod(uint256,uint256) (../../sc/dataset/mainnet/0xdff34279737efaeacfc93e5b379ba791c4be6115.sol#1088-1093) is never used and should be removed
SafeMath.tryMul(uint256,uint256) (../../sc/dataset/mainnet/0xdff34279737efaeacfc93e5b379ba791c4be6115.sol#1059-1069) is never used and should be removed
SafeMath.trySub(uint256,uint256) (../../sc/dataset/mainnet/0xdff34279737efaeacfc93e5b379ba791c4be6115.sol#1047-1052) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code
INFO:Detectors:
Pragma version^0.8.0 (../../sc/dataset/mainnet/0xdff34279737efaeacfc93e5b379ba791c4be6115.sol#6) allows old versions
Pragma version^0.8.0 (../../sc/dataset/mainnet/0xdff34279737efaeacfc93e5b379ba791c4be6115.sol#30) allows old versions
Pragma version^0.8.0 (../../sc/dataset/mainnet/0xdff34279737efaeacfc93e5b379ba791c4be6115.sol#155) allows old versions
Pragma version^0.8.0 (../../sc/dataset/mainnet/0xdff34279737efaeacfc93e5b379ba791c4be6115.sol#179) allows old versions
Pragma version^0.8.0 (../../sc/dataset/mainnet/0xdff34279737efaeacfc93e5b379ba791c4be6115.sol#208) allows old versions
Pragma version^0.8.0 (../../sc/dataset/mainnet/0xdff34279737efaeacfc93e5b379ba791c4be6115.sol#230) allows old versions
Pragma version^0.8.0 (../../sc/dataset/mainnet/0xdff34279737efaeacfc93e5b379ba791c4be6115.sol#682) allows old versions
Pragma version^0.8.0 (../../sc/dataset/mainnet/0xdff34279737efaeacfc93e5b379ba791c4be6115.sol#722) allows old versions
Pragma version^0.8.2 (../../sc/dataset/mainnet/0xdff34279737efaeacfc93e5b379ba791c4be6115.sol#811) allows old versions
Pragma version^0.8.0 (../../sc/dataset/mainnet/0xdff34279737efaeacfc93e5b379ba791c4be6115.sol#1016) allows old versions
Pragma version^0.8.0 (../../sc/dataset/mainnet/0xdff34279737efaeacfc93e5b379ba791c4be6115.sol#1243) allows old versions
Pragma version^0.8.0 (../../sc/dataset/mainnet/0xdff34279737efaeacfc93e5b379ba791c4be6115.sol#1460) allows old versions
solc-0.8.7 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity
INFO:Detectors:
Low level call in Address.sendValue(address,uint256) (../../sc/dataset/mainnet/0xdff34279737efaeacfc93e5b379ba791c4be6115.sol#1294-1299):
	- (success) = recipient.call{value: amount}() (../../sc/dataset/mainnet/0xdff34279737efaeacfc93e5b379ba791c4be6115.sol#1297)
Low level call in Address.functionCallWithValue(address,bytes,uint256,string) (../../sc/dataset/mainnet/0xdff34279737efaeacfc93e5b379ba791c4be6115.sol#1362-1373):
	- (success,returndata) = target.call{value: value}(data) (../../sc/dataset/mainnet/0xdff34279737efaeacfc93e5b379ba791c4be6115.sol#1371)
Low level call in Address.functionStaticCall(address,bytes,string) (../../sc/dataset/mainnet/0xdff34279737efaeacfc93e5b379ba791c4be6115.sol#1391-1400):
	- (success,returndata) = target.staticcall(data) (../../sc/dataset/mainnet/0xdff34279737efaeacfc93e5b379ba791c4be6115.sol#1398)
Low level call in Address.functionDelegateCall(address,bytes,string) (../../sc/dataset/mainnet/0xdff34279737efaeacfc93e5b379ba791c4be6115.sol#1418-1427):
	- (success,returndata) = target.delegatecall(data) (../../sc/dataset/mainnet/0xdff34279737efaeacfc93e5b379ba791c4be6115.sol#1425)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls
INFO:Detectors:
Event MintvialpriceChanged(uint256) (../../sc/dataset/mainnet/0xdff34279737efaeacfc93e5b379ba791c4be6115.sol#840) is not in CapWords
Parameter Mintvial.checkIfRedeemed(address,uint256)._contractAddress (../../sc/dataset/mainnet/0xdff34279737efaeacfc93e5b379ba791c4be6115.sol#983) is not in mixedCase
Parameter Mintvial.checkIfRedeemed(address,uint256)._tokenId (../../sc/dataset/mainnet/0xdff34279737efaeacfc93e5b379ba791c4be6115.sol#983) is not in mixedCase
Parameter Mintvial.setPrice(uint256)._newPrice (../../sc/dataset/mainnet/0xdff34279737efaeacfc93e5b379ba791c4be6115.sol#1003) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions
INFO:Detectors:
Mintvial.slitherConstructorVariables() (../../sc/dataset/mainnet/0xdff34279737efaeacfc93e5b379ba791c4be6115.sol#826-1012) uses literals with too many digits:
	- tokenPrice = 50000000000000000 (../../sc/dataset/mainnet/0xdff34279737efaeacfc93e5b379ba791c4be6115.sol#832)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits
INFO:Detectors:
Mintvial.limitAmount (../../sc/dataset/mainnet/0xdff34279737efaeacfc93e5b379ba791c4be6115.sol#831) should be constant 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant
INFO:Slither:/bdata2/sc/dataset/mainnet/0xdff34279737efaeacfc93e5b379ba791c4be6115.sol analyzed (14 contracts with 85 detectors), 70 result(s) found
