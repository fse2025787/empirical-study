INFO:Detectors:
ENSTogether.propose(address) (../../sc/dataset/mainnet/0x2557B6988903446f3Ae56d00d6006A4555280587.sol#257-305) uses a dangerous strict equality:
	- require(bool,string)(unionWith[msg.sender].relationshipStatus == uint8(Status.NOTHING) || unionWith[msg.sender].relationshipStatus == uint8(Status.SEPARATED),You are already united) (../../sc/dataset/mainnet/0x2557B6988903446f3Ae56d00d6006A4555280587.sol#261-266)
ENSTogether.propose(address) (../../sc/dataset/mainnet/0x2557B6988903446f3Ae56d00d6006A4555280587.sol#257-305) uses a dangerous strict equality:
	- require(bool,string)(unionWith[_to].relationshipStatus == uint8(Status.NOTHING) || unionWith[_to].expired == true,This address is already in a relationship) (../../sc/dataset/mainnet/0x2557B6988903446f3Ae56d00d6006A4555280587.sol#268-272)
ENSTogether.respondToProposal(ENSTogether.Proposal,string,string) (../../sc/dataset/mainnet/0x2557B6988903446f3Ae56d00d6006A4555280587.sol#312-382) uses a dangerous strict equality:
	- require(bool,string)(unionWith[msg.sender].to == msg.sender,You cant respond your own proposal, that's scary) (../../sc/dataset/mainnet/0x2557B6988903446f3Ae56d00d6006A4555280587.sol#329-332)
ENSTogether.respondToProposal(ENSTogether.Proposal,string,string) (../../sc/dataset/mainnet/0x2557B6988903446f3Ae56d00d6006A4555280587.sol#312-382) uses a dangerous strict equality:
	- require(bool,string)(unionWith[msg.sender].proposalStatus == uint8(Proposal.PENDING),This proposal has already been responded) (../../sc/dataset/mainnet/0x2557B6988903446f3Ae56d00d6006A4555280587.sol#334-337)
ENSTogether.respondToProposal(ENSTogether.Proposal,string,string) (../../sc/dataset/mainnet/0x2557B6988903446f3Ae56d00d6006A4555280587.sol#312-382) uses a dangerous strict equality:
	- require(bool,string)(keccak256(bytes)(abi.encodePacked(ens1)) == keccak256(bytes)(abi.encodePacked(ensFrom)) || keccak256(bytes)(abi.encodePacked(ens1)) == keccak256(bytes)(abi.encodePacked(ensTo)),First ENS name doesn't match with addresses involved) (../../sc/dataset/mainnet/0x2557B6988903446f3Ae56d00d6006A4555280587.sol#341-347)
ENSTogether.respondToProposal(ENSTogether.Proposal,string,string) (../../sc/dataset/mainnet/0x2557B6988903446f3Ae56d00d6006A4555280587.sol#312-382) uses a dangerous strict equality:
	- require(bool,string)(keccak256(bytes)(abi.encodePacked(ens2)) == keccak256(bytes)(abi.encodePacked(ensFrom)) || keccak256(bytes)(abi.encodePacked(ens2)) == keccak256(bytes)(abi.encodePacked(ensTo)),Second ENS name doesn't match with addresses involved) (../../sc/dataset/mainnet/0x2557B6988903446f3Ae56d00d6006A4555280587.sol#348-354)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dangerous-strict-equalities
INFO:Detectors:
ENSTogether.propose(address).request (../../sc/dataset/mainnet/0x2557B6988903446f3Ae56d00d6006A4555280587.sol#294) is a local variable never initialized
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#uninitialized-local-variables
INFO:Detectors:
ENSTogether.modifyStatusUpdateCost(uint256) (../../sc/dataset/mainnet/0x2557B6988903446f3Ae56d00d6006A4555280587.sol#452-454) should emit an event for: 
	- updateStatusCost = amount (../../sc/dataset/mainnet/0x2557B6988903446f3Ae56d00d6006A4555280587.sol#453) 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-arithmetic
INFO:Detectors:
Reentrancy in ENSTogether.burn(uint256) (../../sc/dataset/mainnet/0x2557B6988903446f3Ae56d00d6006A4555280587.sol#434-437):
	External calls:
	- IENSTogetherNFT(ensTogetherNFT).burn(tokenId,msg.sender) (../../sc/dataset/mainnet/0x2557B6988903446f3Ae56d00d6006A4555280587.sol#435)
	Event emitted after the call(s):
	- Burned(tokenId,true) (../../sc/dataset/mainnet/0x2557B6988903446f3Ae56d00d6006A4555280587.sol#436)
Reentrancy in ENSTogether.respondToProposal(ENSTogether.Proposal,string,string) (../../sc/dataset/mainnet/0x2557B6988903446f3Ae56d00d6006A4555280587.sol#312-382):
	External calls:
	- IENSTogetherNFT(ensTogetherNFT).mint(from,to,ens1,ens2) (../../sc/dataset/mainnet/0x2557B6988903446f3Ae56d00d6006A4555280587.sol#379)
	Event emitted after the call(s):
	- GotUnited(from,msg.sender,block.timestamp,acceptOrDecline.registryNumber) (../../sc/dataset/mainnet/0x2557B6988903446f3Ae56d00d6006A4555280587.sol#380)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3
INFO:Detectors:
ENSTogether.propose(address) (../../sc/dataset/mainnet/0x2557B6988903446f3Ae56d00d6006A4555280587.sol#257-305) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(unionWith[msg.sender].relationshipStatus == uint8(Status.NOTHING) || unionWith[msg.sender].relationshipStatus == uint8(Status.SEPARATED),You are already united) (../../sc/dataset/mainnet/0x2557B6988903446f3Ae56d00d6006A4555280587.sol#261-266)
	- require(bool,string)(unionWith[_to].relationshipStatus == uint8(Status.NOTHING) || unionWith[_to].expired == true,This address is already in a relationship) (../../sc/dataset/mainnet/0x2557B6988903446f3Ae56d00d6006A4555280587.sol#268-272)
	- require(bool,string)(bytes(ensFrom).length > 0,Sender doesn't have ENS name) (../../sc/dataset/mainnet/0x2557B6988903446f3Ae56d00d6006A4555280587.sol#276)
	- require(bool,string)(bytes(ensTo).length > 0,The address you're proposing to doesnt have ENS name) (../../sc/dataset/mainnet/0x2557B6988903446f3Ae56d00d6006A4555280587.sol#277-280)
	- unionWith[msg.sender].to != address(0) && block.timestamp < unionWith[msg.sender].createdAt + timeToRespond && unionWith[msg.sender].expired == false (../../sc/dataset/mainnet/0x2557B6988903446f3Ae56d00d6006A4555280587.sol#283-285)
	- unionWith[_to].proposalStatus == uint8(Proposal.PENDING) && block.timestamp < unionWith[_to].createdAt + timeToRespond (../../sc/dataset/mainnet/0x2557B6988903446f3Ae56d00d6006A4555280587.sol#289-290)
ENSTogether.respondToProposal(ENSTogether.Proposal,string,string) (../../sc/dataset/mainnet/0x2557B6988903446f3Ae56d00d6006A4555280587.sol#312-382) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(block.timestamp < unionWith[msg.sender].createdAt + timeToRespond,Proposal expired) (../../sc/dataset/mainnet/0x2557B6988903446f3Ae56d00d6006A4555280587.sol#324-327)
	- require(bool,string)(unionWith[msg.sender].to == msg.sender,You cant respond your own proposal, that's scary) (../../sc/dataset/mainnet/0x2557B6988903446f3Ae56d00d6006A4555280587.sol#329-332)
	- require(bool,string)(unionWith[msg.sender].proposalStatus == uint8(Proposal.PENDING),This proposal has already been responded) (../../sc/dataset/mainnet/0x2557B6988903446f3Ae56d00d6006A4555280587.sol#334-337)
	- require(bool,string)(keccak256(bytes)(abi.encodePacked(ens1)) == keccak256(bytes)(abi.encodePacked(ensFrom)) || keccak256(bytes)(abi.encodePacked(ens1)) == keccak256(bytes)(abi.encodePacked(ensTo)),First ENS name doesn't match with addresses involved) (../../sc/dataset/mainnet/0x2557B6988903446f3Ae56d00d6006A4555280587.sol#341-347)
	- require(bool,string)(keccak256(bytes)(abi.encodePacked(ens2)) == keccak256(bytes)(abi.encodePacked(ensFrom)) || keccak256(bytes)(abi.encodePacked(ens2)) == keccak256(bytes)(abi.encodePacked(ensTo)),Second ENS name doesn't match with addresses involved) (../../sc/dataset/mainnet/0x2557B6988903446f3Ae56d00d6006A4555280587.sol#348-354)
ENSTogether.updateUnion(ENSTogether.Status) (../../sc/dataset/mainnet/0x2557B6988903446f3Ae56d00d6006A4555280587.sol#394-413) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(unionWith[msg.sender].relationshipStatus != uint8(Status.SEPARATED),You are separated, make another proposal) (../../sc/dataset/mainnet/0x2557B6988903446f3Ae56d00d6006A4555280587.sol#397-400)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp
INFO:Detectors:
ENSTogether.propose(address) (../../sc/dataset/mainnet/0x2557B6988903446f3Ae56d00d6006A4555280587.sol#257-305) compares to a boolean constant:
	-unionWith[msg.sender].to != address(0) && block.timestamp < unionWith[msg.sender].createdAt + timeToRespond && unionWith[msg.sender].expired == false (../../sc/dataset/mainnet/0x2557B6988903446f3Ae56d00d6006A4555280587.sol#283-285)
ENSTogether.propose(address) (../../sc/dataset/mainnet/0x2557B6988903446f3Ae56d00d6006A4555280587.sol#257-305) compares to a boolean constant:
	-require(bool,string)(unionWith[_to].relationshipStatus == uint8(Status.NOTHING) || unionWith[_to].expired == true,This address is already in a relationship) (../../sc/dataset/mainnet/0x2557B6988903446f3Ae56d00d6006A4555280587.sol#268-272)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#boolean-equality
INFO:Detectors:
Different versions of Solidity are used:
	- Version used: ['^0.8.0', '^0.8.7']
	- ^0.8.0 (../../sc/dataset/mainnet/0x2557B6988903446f3Ae56d00d6006A4555280587.sol#7)
	- ^0.8.0 (../../sc/dataset/mainnet/0x2557B6988903446f3Ae56d00d6006A4555280587.sol#31)
	- ^0.8.0 (../../sc/dataset/mainnet/0x2557B6988903446f3Ae56d00d6006A4555280587.sol#95)
	- ^0.8.7 (../../sc/dataset/mainnet/0x2557B6988903446f3Ae56d00d6006A4555280587.sol#170)
	- ^0.8.7 (../../sc/dataset/mainnet/0x2557B6988903446f3Ae56d00d6006A4555280587.sol#465)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#different-pragma-directives-are-used
INFO:Detectors:
Context._msgData() (../../sc/dataset/mainnet/0x2557B6988903446f3Ae56d00d6006A4555280587.sol#24-26) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code
INFO:Detectors:
Pragma version^0.8.0 (../../sc/dataset/mainnet/0x2557B6988903446f3Ae56d00d6006A4555280587.sol#7) allows old versions
Pragma version^0.8.0 (../../sc/dataset/mainnet/0x2557B6988903446f3Ae56d00d6006A4555280587.sol#31) allows old versions
Pragma version^0.8.0 (../../sc/dataset/mainnet/0x2557B6988903446f3Ae56d00d6006A4555280587.sol#95) allows old versions
Pragma version^0.8.7 (../../sc/dataset/mainnet/0x2557B6988903446f3Ae56d00d6006A4555280587.sol#170) allows old versions
Pragma version^0.8.7 (../../sc/dataset/mainnet/0x2557B6988903446f3Ae56d00d6006A4555280587.sol#465) allows old versions
solc-0.8.7 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity
INFO:Detectors:
Low level call in ENSTogether.withdraw() (../../sc/dataset/mainnet/0x2557B6988903446f3Ae56d00d6006A4555280587.sol#456-460):
	- (success) = msg.sender.call{value: amount}() (../../sc/dataset/mainnet/0x2557B6988903446f3Ae56d00d6006A4555280587.sol#458)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls
INFO:Detectors:
Parameter ENSTogether.propose(address)._to (../../sc/dataset/mainnet/0x2557B6988903446f3Ae56d00d6006A4555280587.sol#257) is not in mixedCase
Parameter ENSTogether.getTokenUri(uint256)._tokenId (../../sc/dataset/mainnet/0x2557B6988903446f3Ae56d00d6006A4555280587.sol#416) is not in mixedCase
Parameter ENSTogether.getTokenIDS(address)._add (../../sc/dataset/mainnet/0x2557B6988903446f3Ae56d00d6006A4555280587.sol#425) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions
INFO:Detectors:
ENSTogether.proposalStatus (../../sc/dataset/mainnet/0x2557B6988903446f3Ae56d00d6006A4555280587.sol#204) is never used in ENSTogether (../../sc/dataset/mainnet/0x2557B6988903446f3Ae56d00d6006A4555280587.sol#185-461)
ENSTogether.relationshipStatus (../../sc/dataset/mainnet/0x2557B6988903446f3Ae56d00d6006A4555280587.sol#211) is never used in ENSTogether (../../sc/dataset/mainnet/0x2557B6988903446f3Ae56d00d6006A4555280587.sol#185-461)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-state-variable
INFO:Detectors:
ENSTogether.ensReverseRegistrar (../../sc/dataset/mainnet/0x2557B6988903446f3Ae56d00d6006A4555280587.sol#186) should be immutable 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-immutable
INFO:Slither:/bdata2/sc/dataset/mainnet/0x2557B6988903446f3Ae56d00d6006A4555280587.sol analyzed (7 contracts with 85 detectors), 30 result(s) found
