INFO:Detectors:
EtherGrowErc.sendETHToFee(uint256) (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#281-285) sends eth to arbitrary user
	Dangerous calls:
	- devWallet.transfer(amount.div(3)) (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#282)
	- marketWallet.transfer(amount.div(3)) (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#283)
	- teamWallet.transfer(amount.div(3)) (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#284)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#functions-that-send-ether-to-arbitrary-destinations
INFO:Detectors:
Reentrancy in EtherGrowErc._transfer(address,address,uint256) (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#225-265):
	External calls:
	- swapTokensForEth(contractTokenBalance) (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#254)
		- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#272-278)
	External calls sending eth:
	- sendETHToFee(address(this).balance) (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#257)
		- devWallet.transfer(amount.div(3)) (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#282)
		- marketWallet.transfer(amount.div(3)) (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#283)
		- teamWallet.transfer(amount.div(3)) (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#284)
	State variables written after the call(s):
	- _tokenTransfer(from,to,amount) (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#264)
		- _rOwned[address(this)] = _rOwned[address(this)].add(rTeam) (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#325)
		- _rOwned[sender] = _rOwned[sender].sub(rAmount) (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#315)
		- _rOwned[recipient] = _rOwned[recipient].add(rTransferAmount) (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#316)
	EtherGrowErc._rOwned (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#120) can be used in cross function reentrancies:
	- EtherGrowErc._burn(address,uint256) (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#346-351)
	- EtherGrowErc._takeTeam(uint256) (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#322-326)
	- EtherGrowErc._transferStandard(address,address,uint256) (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#313-320)
	- EtherGrowErc.balanceOf(address) (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#184-186)
	- EtherGrowErc.constructor(address,address,address) (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#154-166)
	- _tokenTransfer(from,to,amount) (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#264)
		- _rTotal = _rTotal.sub(rFee) (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#329)
	EtherGrowErc._rTotal (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#129) can be used in cross function reentrancies:
	- EtherGrowErc._getCurrentSupply() (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#391-396)
	- EtherGrowErc._reflectFee(uint256,uint256) (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#328-331)
	- EtherGrowErc.constructor(address,address,address) (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#154-166)
	- EtherGrowErc.tokenFromReflection(uint256) (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#212-216)
Reentrancy in EtherGrowErc.openTrading() (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#287-299):
	External calls:
	- uniswapV2Pair = IUniswapV2Factory(_uniswapV2Router.factory()).createPair(address(this),_uniswapV2Router.WETH()) (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#292)
	- uniswapV2Router.addLiquidityETH{value: address(this).balance}(address(this),balanceOf(address(this)),0,0,owner(),block.timestamp) (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#293)
	External calls sending eth:
	- uniswapV2Router.addLiquidityETH{value: address(this).balance}(address(this),balanceOf(address(this)),0,0,owner(),block.timestamp) (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#293)
	State variables written after the call(s):
	- tradingOpen = true (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#297)
	EtherGrowErc.tradingOpen (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#143) can be used in cross function reentrancies:
	- EtherGrowErc.openTrading() (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#287-299)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities
INFO:Detectors:
EtherGrowErc._transfer(address,address,uint256) (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#225-265) uses tx.origin for authorization: require(bool)(! bots[tx.origin]) (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#231)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dangerous-usage-of-txorigin
INFO:Detectors:
EtherGrowErc.openTrading() (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#287-299) ignores return value by uniswapV2Router.addLiquidityETH{value: address(this).balance}(address(this),balanceOf(address(this)),0,0,owner(),block.timestamp) (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#293)
EtherGrowErc.openTrading() (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#287-299) ignores return value by IERC20(uniswapV2Pair).approve(address(uniswapV2Router),type()(uint256).max) (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#298)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return
INFO:Detectors:
EtherGrowErc.allowance(address,address).owner (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#193) shadows:
	- Ownable.owner() (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#78-80) (function)
EtherGrowErc._approve(address,address,uint256).owner (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#218) shadows:
	- Ownable.owner() (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#78-80) (function)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing
INFO:Detectors:
Ownable.constructor().msgSender (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#73) lacks a zero-check on :
		- _owner = msgSender (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#74)
EtherGrowErc.constructor(address,address,address)._address1 (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#154) lacks a zero-check on :
		- devWallet = _address1 (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#156)
EtherGrowErc.constructor(address,address,address)._address2 (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#154) lacks a zero-check on :
		- teamWallet = _address2 (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#157)
EtherGrowErc.constructor(address,address,address)._address3 (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#154) lacks a zero-check on :
		- marketWallet = _address3 (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#158)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation
INFO:Detectors:
Reentrancy in EtherGrowErc._transfer(address,address,uint256) (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#225-265):
	External calls:
	- swapTokensForEth(contractTokenBalance) (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#254)
		- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#272-278)
	External calls sending eth:
	- sendETHToFee(address(this).balance) (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#257)
		- devWallet.transfer(amount.div(3)) (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#282)
		- marketWallet.transfer(amount.div(3)) (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#283)
		- teamWallet.transfer(amount.div(3)) (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#284)
	State variables written after the call(s):
	- _tokenTransfer(from,to,amount) (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#264)
		- _tFeeTotal = _tFeeTotal.add(tFee) (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#330)
Reentrancy in EtherGrowErc.openTrading() (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#287-299):
	External calls:
	- uniswapV2Pair = IUniswapV2Factory(_uniswapV2Router.factory()).createPair(address(this),_uniswapV2Router.WETH()) (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#292)
	- uniswapV2Router.addLiquidityETH{value: address(this).balance}(address(this),balanceOf(address(this)),0,0,owner(),block.timestamp) (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#293)
	External calls sending eth:
	- uniswapV2Router.addLiquidityETH{value: address(this).balance}(address(this),balanceOf(address(this)),0,0,owner(),block.timestamp) (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#293)
	State variables written after the call(s):
	- cooldownEnabled = true (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#295)
	- swapEnabled = true (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#294)
Reentrancy in EtherGrowErc.transferFrom(address,address,uint256) (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#202-206):
	External calls:
	- _transfer(sender,recipient,amount) (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#203)
		- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#272-278)
	External calls sending eth:
	- _transfer(sender,recipient,amount) (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#203)
		- devWallet.transfer(amount.div(3)) (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#282)
		- marketWallet.transfer(amount.div(3)) (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#283)
		- teamWallet.transfer(amount.div(3)) (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#284)
	State variables written after the call(s):
	- _approve(sender,_msgSender(),_allowances[sender][_msgSender()].sub(amount,ERC20: transfer amount exceeds allowance)) (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#204)
		- _allowances[owner][spender] = amount (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#221)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2
INFO:Detectors:
Reentrancy in EtherGrowErc._transfer(address,address,uint256) (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#225-265):
	External calls:
	- swapTokensForEth(contractTokenBalance) (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#254)
		- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#272-278)
	External calls sending eth:
	- sendETHToFee(address(this).balance) (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#257)
		- devWallet.transfer(amount.div(3)) (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#282)
		- marketWallet.transfer(amount.div(3)) (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#283)
		- teamWallet.transfer(amount.div(3)) (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#284)
	Event emitted after the call(s):
	- Transfer(sender,recipient,tTransferAmount) (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#319)
		- _tokenTransfer(from,to,amount) (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#264)
Reentrancy in EtherGrowErc.transferFrom(address,address,uint256) (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#202-206):
	External calls:
	- _transfer(sender,recipient,amount) (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#203)
		- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#272-278)
	External calls sending eth:
	- _transfer(sender,recipient,amount) (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#203)
		- devWallet.transfer(amount.div(3)) (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#282)
		- marketWallet.transfer(amount.div(3)) (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#283)
		- teamWallet.transfer(amount.div(3)) (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#284)
	Event emitted after the call(s):
	- Approval(owner,spender,amount) (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#222)
		- _approve(sender,_msgSender(),_allowances[sender][_msgSender()].sub(amount,ERC20: transfer amount exceeds allowance)) (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#204)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3
INFO:Detectors:
EtherGrowErc._transfer(address,address,uint256) (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#225-265) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool)(cooldown[to] < block.timestamp) (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#241)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp
INFO:Detectors:
EtherGrowErc.delBot(address) (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#305-307) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code
INFO:Detectors:
EtherGrowErc._rTotal (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#129) is set pre-construction with a non-constant function or state variable:
	- (MAX - (MAX % _tTotal))
EtherGrowErc._maxTxAmount (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#147) is set pre-construction with a non-constant function or state variable:
	- _tTotal
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#function-initializing-state
INFO:Detectors:
Pragma version^0.8.7 (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#9) allows old versions
solc-0.8.7 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity
INFO:Detectors:
Function IUniswapV2Router02.WETH() (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#107) is not in mixedCase
Parameter EtherGrowErc.setBots(address)._address (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#301) is not in mixedCase
Parameter EtherGrowErc.delBot(address)._address (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#305) is not in mixedCase
Parameter EtherGrowErc.burn(uint256)._value (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#353) is not in mixedCase
Variable EtherGrowErc.MAX (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#126) is not in mixedCase
Variable EtherGrowErc.AntiBot (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#128) is not in mixedCase
Constant EtherGrowErc._name (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#137) is not in UPPER_CASE_WITH_UNDERSCORES
Constant EtherGrowErc._symbol (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#138) is not in UPPER_CASE_WITH_UNDERSCORES
Constant EtherGrowErc._decimals (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#139) is not in UPPER_CASE_WITH_UNDERSCORES
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions
INFO:Detectors:
Reentrancy in EtherGrowErc._transfer(address,address,uint256) (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#225-265):
	External calls:
	- sendETHToFee(address(this).balance) (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#257)
		- devWallet.transfer(amount.div(3)) (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#282)
		- marketWallet.transfer(amount.div(3)) (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#283)
		- teamWallet.transfer(amount.div(3)) (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#284)
	State variables written after the call(s):
	- _tokenTransfer(from,to,amount) (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#264)
		- _rOwned[address(this)] = _rOwned[address(this)].add(rTeam) (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#325)
		- _rOwned[sender] = _rOwned[sender].sub(rAmount) (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#315)
		- _rOwned[recipient] = _rOwned[recipient].add(rTransferAmount) (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#316)
	- _tokenTransfer(from,to,amount) (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#264)
		- _rTotal = _rTotal.sub(rFee) (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#329)
	- _tokenTransfer(from,to,amount) (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#264)
		- _tFeeTotal = _tFeeTotal.add(tFee) (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#330)
	Event emitted after the call(s):
	- Transfer(sender,recipient,tTransferAmount) (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#319)
		- _tokenTransfer(from,to,amount) (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#264)
Reentrancy in EtherGrowErc.transferFrom(address,address,uint256) (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#202-206):
	External calls:
	- _transfer(sender,recipient,amount) (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#203)
		- devWallet.transfer(amount.div(3)) (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#282)
		- marketWallet.transfer(amount.div(3)) (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#283)
		- teamWallet.transfer(amount.div(3)) (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#284)
	State variables written after the call(s):
	- _approve(sender,_msgSender(),_allowances[sender][_msgSender()].sub(amount,ERC20: transfer amount exceeds allowance)) (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#204)
		- _allowances[owner][spender] = amount (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#221)
	Event emitted after the call(s):
	- Approval(owner,spender,amount) (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#222)
		- _approve(sender,_msgSender(),_allowances[sender][_msgSender()].sub(amount,ERC20: transfer amount exceeds allowance)) (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#204)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-4
INFO:Detectors:
Variable EtherGrowErc._getRValues(uint256,uint256,uint256,uint256).rTransferAmount (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#382) is too similar to EtherGrowErc._getTValues(uint256,uint256,uint256).tTransferAmount (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#374)
Variable EtherGrowErc._transferStandard(address,address,uint256).rTransferAmount (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#314) is too similar to EtherGrowErc._transferStandard(address,address,uint256).tTransferAmount (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#314)
Variable EtherGrowErc._getValues(uint256).rTransferAmount (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#367) is too similar to EtherGrowErc._getTValues(uint256,uint256,uint256).tTransferAmount (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#374)
Variable EtherGrowErc._transferStandard(address,address,uint256).rTransferAmount (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#314) is too similar to EtherGrowErc._getTValues(uint256,uint256,uint256).tTransferAmount (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#374)
Variable EtherGrowErc._transferStandard(address,address,uint256).rTransferAmount (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#314) is too similar to EtherGrowErc._getValues(uint256).tTransferAmount (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#365)
Variable EtherGrowErc._getValues(uint256).rTransferAmount (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#367) is too similar to EtherGrowErc._transferStandard(address,address,uint256).tTransferAmount (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#314)
Variable EtherGrowErc._getRValues(uint256,uint256,uint256,uint256).rTransferAmount (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#382) is too similar to EtherGrowErc._getValues(uint256).tTransferAmount (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#365)
Variable EtherGrowErc._getRValues(uint256,uint256,uint256,uint256).rTransferAmount (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#382) is too similar to EtherGrowErc._transferStandard(address,address,uint256).tTransferAmount (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#314)
Variable EtherGrowErc._getValues(uint256).rTransferAmount (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#367) is too similar to EtherGrowErc._getValues(uint256).tTransferAmount (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#365)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#variable-names-too-similar
INFO:Detectors:
EtherGrowErc._transfer(address,address,uint256) (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#225-265) uses literals with too many digits:
	- contractETHBalance > 330000000000000000 (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#256)
EtherGrowErc.slitherConstructorVariables() (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#118-398) uses literals with too many digits:
	- _tTotal = 1000000000 * 10 ** 9 (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#127)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits
INFO:Detectors:
EtherGrowErc._tOwned (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#121) is never used in EtherGrowErc (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#118-398)
EtherGrowErc._maxTxAmount (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#147) is never used in EtherGrowErc (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#118-398)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-state-variable
INFO:Detectors:
EtherGrowErc.MAX (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#126) should be constant 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant
INFO:Detectors:
EtherGrowErc._maxTxAmount (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#147) should be immutable 
EtherGrowErc.devWallet (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#134) should be immutable 
EtherGrowErc.marketWallet (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#136) should be immutable 
EtherGrowErc.teamWallet (../../sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol#135) should be immutable 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-immutable
INFO:Slither:/bdata2/sc/dataset/mainnet/0x2440ebe7da8e83724c65b0df7cab9b3bf7b07dd6.sol analyzed (7 contracts with 85 detectors), 52 result(s) found
