INFO:Detectors:
Reentrancy in METAV_STAKING.stake(uint256[]) (../../sc/dataset/mainnet/0xcFf248De70021D2a872cF9Fc5683ca4335352eb9.sol#808-823):
	External calls:
	- NFT.transferFrom(msg.sender,address(this),tokenIds[i]) (../../sc/dataset/mainnet/0xcFf248De70021D2a872cF9Fc5683ca4335352eb9.sol#814)
	State variables written after the call(s):
	- _qty[msg.sender].push(tokenIds[i]) (../../sc/dataset/mainnet/0xcFf248De70021D2a872cF9Fc5683ca4335352eb9.sol#818)
	METAV_STAKING._qty (../../sc/dataset/mainnet/0xcFf248De70021D2a872cF9Fc5683ca4335352eb9.sol#691) can be used in cross function reentrancies:
	- METAV_STAKING._qty (../../sc/dataset/mainnet/0xcFf248De70021D2a872cF9Fc5683ca4335352eb9.sol#691)
	- METAV_STAKING.getAssetsByHolder(address) (../../sc/dataset/mainnet/0xcFf248De70021D2a872cF9Fc5683ca4335352eb9.sol#749-751)
	- METAV_STAKING.removeToken(uint256) (../../sc/dataset/mainnet/0xcFf248De70021D2a872cF9Fc5683ca4335352eb9.sol#844-851)
	- METAV_STAKING.stake(uint256[]) (../../sc/dataset/mainnet/0xcFf248De70021D2a872cF9Fc5683ca4335352eb9.sol#808-823)
	- nonce ++ (../../sc/dataset/mainnet/0xcFf248De70021D2a872cF9Fc5683ca4335352eb9.sol#819)
	METAV_STAKING.nonce (../../sc/dataset/mainnet/0xcFf248De70021D2a872cF9Fc5683ca4335352eb9.sol#697) can be used in cross function reentrancies:
	- METAV_STAKING.getStaked() (../../sc/dataset/mainnet/0xcFf248De70021D2a872cF9Fc5683ca4335352eb9.sol#725-727)
	- METAV_STAKING.nonce (../../sc/dataset/mainnet/0xcFf248De70021D2a872cF9Fc5683ca4335352eb9.sol#697)
	- METAV_STAKING.stake(uint256[]) (../../sc/dataset/mainnet/0xcFf248De70021D2a872cF9Fc5683ca4335352eb9.sol#808-823)
	- METAV_STAKING.unstake(uint256[]) (../../sc/dataset/mainnet/0xcFf248De70021D2a872cF9Fc5683ca4335352eb9.sol#825-842)
Reentrancy in METAV_STAKING.unstake(uint256[]) (../../sc/dataset/mainnet/0xcFf248De70021D2a872cF9Fc5683ca4335352eb9.sol#825-842):
	External calls:
	- NFT.transferFrom(address(this),msg.sender,tokenIds[i]) (../../sc/dataset/mainnet/0xcFf248De70021D2a872cF9Fc5683ca4335352eb9.sol#837)
	State variables written after the call(s):
	- removeToken(tokenIds[i]) (../../sc/dataset/mainnet/0xcFf248De70021D2a872cF9Fc5683ca4335352eb9.sol#836)
		- _qty[_msgSender()][i] = nullToken (../../sc/dataset/mainnet/0xcFf248De70021D2a872cF9Fc5683ca4335352eb9.sol#847)
	METAV_STAKING._qty (../../sc/dataset/mainnet/0xcFf248De70021D2a872cF9Fc5683ca4335352eb9.sol#691) can be used in cross function reentrancies:
	- METAV_STAKING._qty (../../sc/dataset/mainnet/0xcFf248De70021D2a872cF9Fc5683ca4335352eb9.sol#691)
	- METAV_STAKING.getAssetsByHolder(address) (../../sc/dataset/mainnet/0xcFf248De70021D2a872cF9Fc5683ca4335352eb9.sol#749-751)
	- METAV_STAKING.removeToken(uint256) (../../sc/dataset/mainnet/0xcFf248De70021D2a872cF9Fc5683ca4335352eb9.sol#844-851)
	- METAV_STAKING.stake(uint256[]) (../../sc/dataset/mainnet/0xcFf248De70021D2a872cF9Fc5683ca4335352eb9.sol#808-823)
	- nonce -- (../../sc/dataset/mainnet/0xcFf248De70021D2a872cF9Fc5683ca4335352eb9.sol#838)
	METAV_STAKING.nonce (../../sc/dataset/mainnet/0xcFf248De70021D2a872cF9Fc5683ca4335352eb9.sol#697) can be used in cross function reentrancies:
	- METAV_STAKING.getStaked() (../../sc/dataset/mainnet/0xcFf248De70021D2a872cF9Fc5683ca4335352eb9.sol#725-727)
	- METAV_STAKING.nonce (../../sc/dataset/mainnet/0xcFf248De70021D2a872cF9Fc5683ca4335352eb9.sol#697)
	- METAV_STAKING.stake(uint256[]) (../../sc/dataset/mainnet/0xcFf248De70021D2a872cF9Fc5683ca4335352eb9.sol#808-823)
	- METAV_STAKING.unstake(uint256[]) (../../sc/dataset/mainnet/0xcFf248De70021D2a872cF9Fc5683ca4335352eb9.sol#825-842)
	- delete stakes[tokenIds[i]] (../../sc/dataset/mainnet/0xcFf248De70021D2a872cF9Fc5683ca4335352eb9.sol#835)
	METAV_STAKING.stakes (../../sc/dataset/mainnet/0xcFf248De70021D2a872cF9Fc5683ca4335352eb9.sol#692) can be used in cross function reentrancies:
	- METAV_STAKING.calculateRewards(uint256) (../../sc/dataset/mainnet/0xcFf248De70021D2a872cF9Fc5683ca4335352eb9.sol#776-806)
	- METAV_STAKING.claimRewards(uint256[]) (../../sc/dataset/mainnet/0xcFf248De70021D2a872cF9Fc5683ca4335352eb9.sol#753-774)
	- METAV_STAKING.stake(uint256[]) (../../sc/dataset/mainnet/0xcFf248De70021D2a872cF9Fc5683ca4335352eb9.sol#808-823)
	- METAV_STAKING.stakes (../../sc/dataset/mainnet/0xcFf248De70021D2a872cF9Fc5683ca4335352eb9.sol#692)
	- METAV_STAKING.unstake(uint256[]) (../../sc/dataset/mainnet/0xcFf248De70021D2a872cF9Fc5683ca4335352eb9.sol#825-842)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1
INFO:Detectors:
METAV_STAKING.claimRewards(uint256[]).i (../../sc/dataset/mainnet/0xcFf248De70021D2a872cF9Fc5683ca4335352eb9.sol#758) is a local variable never initialized
METAV_STAKING.unstake(uint256[]).i (../../sc/dataset/mainnet/0xcFf248De70021D2a872cF9Fc5683ca4335352eb9.sol#828) is a local variable never initialized
METAV_STAKING.stake(uint256[]).i (../../sc/dataset/mainnet/0xcFf248De70021D2a872cF9Fc5683ca4335352eb9.sol#811) is a local variable never initialized
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#uninitialized-local-variables
INFO:Detectors:
METAV_STAKING.stake(uint256[]) (../../sc/dataset/mainnet/0xcFf248De70021D2a872cF9Fc5683ca4335352eb9.sol#808-823) ignores return value by stakedTokens[msg.sender].add(tokenIds[i]) (../../sc/dataset/mainnet/0xcFf248De70021D2a872cF9Fc5683ca4335352eb9.sol#817)
METAV_STAKING.unstake(uint256[]) (../../sc/dataset/mainnet/0xcFf248De70021D2a872cF9Fc5683ca4335352eb9.sol#825-842) ignores return value by stakedTokens[msg.sender].remove(tokenIds[i]) (../../sc/dataset/mainnet/0xcFf248De70021D2a872cF9Fc5683ca4335352eb9.sol#834)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return
INFO:Detectors:
METAV_STAKING.setTokensPerBlock(uint256) (../../sc/dataset/mainnet/0xcFf248De70021D2a872cF9Fc5683ca4335352eb9.sol#729-731) should emit an event for: 
	- tokensPerBlock = new_ (../../sc/dataset/mainnet/0xcFf248De70021D2a872cF9Fc5683ca4335352eb9.sol#730) 
METAV_STAKING.setLockupPeriod(uint256) (../../sc/dataset/mainnet/0xcFf248De70021D2a872cF9Fc5683ca4335352eb9.sol#733-735) should emit an event for: 
	- lockupPeriod = new_ (../../sc/dataset/mainnet/0xcFf248De70021D2a872cF9Fc5683ca4335352eb9.sol#734) 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-arithmetic
INFO:Detectors:
METAV_STAKING.stake(uint256[]) (../../sc/dataset/mainnet/0xcFf248De70021D2a872cF9Fc5683ca4335352eb9.sol#808-823) has external calls inside a loop: require(bool,string)(NFT.ownerOf(tokenIds[i]) == msg.sender,Stake: sender not owner) (../../sc/dataset/mainnet/0xcFf248De70021D2a872cF9Fc5683ca4335352eb9.sol#812)
METAV_STAKING.stake(uint256[]) (../../sc/dataset/mainnet/0xcFf248De70021D2a872cF9Fc5683ca4335352eb9.sol#808-823) has external calls inside a loop: NFT.transferFrom(msg.sender,address(this),tokenIds[i]) (../../sc/dataset/mainnet/0xcFf248De70021D2a872cF9Fc5683ca4335352eb9.sol#814)
METAV_STAKING.unstake(uint256[]) (../../sc/dataset/mainnet/0xcFf248De70021D2a872cF9Fc5683ca4335352eb9.sol#825-842) has external calls inside a loop: NFT.transferFrom(address(this),msg.sender,tokenIds[i]) (../../sc/dataset/mainnet/0xcFf248De70021D2a872cF9Fc5683ca4335352eb9.sol#837)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation/#calls-inside-a-loop
INFO:Detectors:
Reentrancy in METAV_STAKING.stake(uint256[]) (../../sc/dataset/mainnet/0xcFf248De70021D2a872cF9Fc5683ca4335352eb9.sol#808-823):
	External calls:
	- NFT.transferFrom(msg.sender,address(this),tokenIds[i]) (../../sc/dataset/mainnet/0xcFf248De70021D2a872cF9Fc5683ca4335352eb9.sol#814)
	State variables written after the call(s):
	- rewardChanges.push(RewardChanged(uint256(block.number),tokensPerBlock / nonce)) (../../sc/dataset/mainnet/0xcFf248De70021D2a872cF9Fc5683ca4335352eb9.sol#822)
	- stakes[tokenIds[i]] = Stake(uint128(block.timestamp + lockupPeriod),uint128(block.number)) (../../sc/dataset/mainnet/0xcFf248De70021D2a872cF9Fc5683ca4335352eb9.sol#816)
Reentrancy in METAV_STAKING.unstake(uint256[]) (../../sc/dataset/mainnet/0xcFf248De70021D2a872cF9Fc5683ca4335352eb9.sol#825-842):
	External calls:
	- NFT.transferFrom(address(this),msg.sender,tokenIds[i]) (../../sc/dataset/mainnet/0xcFf248De70021D2a872cF9Fc5683ca4335352eb9.sol#837)
	State variables written after the call(s):
	- rewardChanges.push(RewardChanged(uint256(block.number),tokensPerBlock / 1)) (../../sc/dataset/mainnet/0xcFf248De70021D2a872cF9Fc5683ca4335352eb9.sol#841)
	- rewardChanges.push(RewardChanged(uint256(block.number),tokensPerBlock / nonce)) (../../sc/dataset/mainnet/0xcFf248De70021D2a872cF9Fc5683ca4335352eb9.sol#841)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2
INFO:Detectors:
METAV_STAKING.claimRewards(uint256[]) (../../sc/dataset/mainnet/0xcFf248De70021D2a872cF9Fc5683ca4335352eb9.sol#753-774) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(stakes[tokenIds[i]].lockupExpires < block.timestamp,ClaimRewards: lockup period not expired) (../../sc/dataset/mainnet/0xcFf248De70021D2a872cF9Fc5683ca4335352eb9.sol#763-766)
METAV_STAKING.calculateRewards(uint256) (../../sc/dataset/mainnet/0xcFf248De70021D2a872cF9Fc5683ca4335352eb9.sol#776-806) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(stakes[tokenID].lastClaimedBlock != 0,token not staked) (../../sc/dataset/mainnet/0xcFf248De70021D2a872cF9Fc5683ca4335352eb9.sol#777)
	- rewardChanges[i].block >= lastClaimedBlock (../../sc/dataset/mainnet/0xcFf248De70021D2a872cF9Fc5683ca4335352eb9.sol#791-793)
	- rewardChanges[i + 1].block >= lastClaimedBlock (../../sc/dataset/mainnet/0xcFf248De70021D2a872cF9Fc5683ca4335352eb9.sol#795-800)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp
INFO:Detectors:
EnumerableSet.values(EnumerableSet.AddressSet) (../../sc/dataset/mainnet/0xcFf248De70021D2a872cF9Fc5683ca4335352eb9.sol#1172-1181) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0xcFf248De70021D2a872cF9Fc5683ca4335352eb9.sol#1176-1178)
EnumerableSet.values(EnumerableSet.UintSet) (../../sc/dataset/mainnet/0xcFf248De70021D2a872cF9Fc5683ca4335352eb9.sol#1245-1254) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0xcFf248De70021D2a872cF9Fc5683ca4335352eb9.sol#1249-1251)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage
INFO:Detectors:
Different versions of Solidity are used:
	- Version used: ['>=0.8.6', '^0.8.0']
	- >=0.8.6 (../../sc/dataset/mainnet/0xcFf248De70021D2a872cF9Fc5683ca4335352eb9.sol#218)
	- >=0.8.6 (../../sc/dataset/mainnet/0xcFf248De70021D2a872cF9Fc5683ca4335352eb9.sol#677)
	- >=0.8.6 (../../sc/dataset/mainnet/0xcFf248De70021D2a872cF9Fc5683ca4335352eb9.sol#862)
	- ^0.8.0 (../../sc/dataset/mainnet/0xcFf248De70021D2a872cF9Fc5683ca4335352eb9.sol#7)
	- ^0.8.0 (../../sc/dataset/mainnet/0xcFf248De70021D2a872cF9Fc5683ca4335352eb9.sol#32)
	- ^0.8.0 (../../sc/dataset/mainnet/0xcFf248De70021D2a872cF9Fc5683ca4335352eb9.sol#115)
	- ^0.8.0 (../../sc/dataset/mainnet/0xcFf248De70021D2a872cF9Fc5683ca4335352eb9.sol#191)
	- ^0.8.0 (../../sc/dataset/mainnet/0xcFf248De70021D2a872cF9Fc5683ca4335352eb9.sol#242)
	- ^0.8.0 (../../sc/dataset/mainnet/0xcFf248De70021D2a872cF9Fc5683ca4335352eb9.sol#268)
	- ^0.8.0 (../../sc/dataset/mainnet/0xcFf248De70021D2a872cF9Fc5683ca4335352eb9.sol#296)
	- ^0.8.0 (../../sc/dataset/mainnet/0xcFf248De70021D2a872cF9Fc5683ca4335352eb9.sol#902)
	- ^0.8.0 (../../sc/dataset/mainnet/0xcFf248De70021D2a872cF9Fc5683ca4335352eb9.sol#1260)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#different-pragma-directives-are-used
INFO:Detectors:
METAV_STAKING.stake(uint256[]) (../../sc/dataset/mainnet/0xcFf248De70021D2a872cF9Fc5683ca4335352eb9.sol#808-823) has costly operations inside a loop:
	- nonce ++ (../../sc/dataset/mainnet/0xcFf248De70021D2a872cF9Fc5683ca4335352eb9.sol#819)
METAV_STAKING.unstake(uint256[]) (../../sc/dataset/mainnet/0xcFf248De70021D2a872cF9Fc5683ca4335352eb9.sol#825-842) has costly operations inside a loop:
	- delete stakes[tokenIds[i]] (../../sc/dataset/mainnet/0xcFf248De70021D2a872cF9Fc5683ca4335352eb9.sol#835)
METAV_STAKING.unstake(uint256[]) (../../sc/dataset/mainnet/0xcFf248De70021D2a872cF9Fc5683ca4335352eb9.sol#825-842) has costly operations inside a loop:
	- nonce -- (../../sc/dataset/mainnet/0xcFf248De70021D2a872cF9Fc5683ca4335352eb9.sol#838)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#costly-operations-inside-a-loop
INFO:Detectors:
Context._msgData() (../../sc/dataset/mainnet/0xcFf248De70021D2a872cF9Fc5683ca4335352eb9.sol#24-26) is never used and should be removed
EnumerableSet._at(EnumerableSet.Set,uint256) (../../sc/dataset/mainnet/0xcFf248De70021D2a872cF9Fc5683ca4335352eb9.sol#1028-1030) is never used and should be removed
EnumerableSet._length(EnumerableSet.Set) (../../sc/dataset/mainnet/0xcFf248De70021D2a872cF9Fc5683ca4335352eb9.sol#1014-1016) is never used and should be removed
EnumerableSet._values(EnumerableSet.Set) (../../sc/dataset/mainnet/0xcFf248De70021D2a872cF9Fc5683ca4335352eb9.sol#1040-1042) is never used and should be removed
EnumerableSet.add(EnumerableSet.AddressSet,address) (../../sc/dataset/mainnet/0xcFf248De70021D2a872cF9Fc5683ca4335352eb9.sol#1122-1124) is never used and should be removed
EnumerableSet.add(EnumerableSet.Bytes32Set,bytes32) (../../sc/dataset/mainnet/0xcFf248De70021D2a872cF9Fc5683ca4335352eb9.sol#1056-1058) is never used and should be removed
EnumerableSet.at(EnumerableSet.AddressSet,uint256) (../../sc/dataset/mainnet/0xcFf248De70021D2a872cF9Fc5683ca4335352eb9.sol#1160-1162) is never used and should be removed
EnumerableSet.at(EnumerableSet.Bytes32Set,uint256) (../../sc/dataset/mainnet/0xcFf248De70021D2a872cF9Fc5683ca4335352eb9.sol#1094-1096) is never used and should be removed
EnumerableSet.at(EnumerableSet.UintSet,uint256) (../../sc/dataset/mainnet/0xcFf248De70021D2a872cF9Fc5683ca4335352eb9.sol#1233-1235) is never used and should be removed
EnumerableSet.contains(EnumerableSet.AddressSet,address) (../../sc/dataset/mainnet/0xcFf248De70021D2a872cF9Fc5683ca4335352eb9.sol#1139-1141) is never used and should be removed
EnumerableSet.contains(EnumerableSet.Bytes32Set,bytes32) (../../sc/dataset/mainnet/0xcFf248De70021D2a872cF9Fc5683ca4335352eb9.sol#1073-1075) is never used and should be removed
EnumerableSet.length(EnumerableSet.AddressSet) (../../sc/dataset/mainnet/0xcFf248De70021D2a872cF9Fc5683ca4335352eb9.sol#1146-1148) is never used and should be removed
EnumerableSet.length(EnumerableSet.Bytes32Set) (../../sc/dataset/mainnet/0xcFf248De70021D2a872cF9Fc5683ca4335352eb9.sol#1080-1082) is never used and should be removed
EnumerableSet.length(EnumerableSet.UintSet) (../../sc/dataset/mainnet/0xcFf248De70021D2a872cF9Fc5683ca4335352eb9.sol#1219-1221) is never used and should be removed
EnumerableSet.remove(EnumerableSet.AddressSet,address) (../../sc/dataset/mainnet/0xcFf248De70021D2a872cF9Fc5683ca4335352eb9.sol#1132-1134) is never used and should be removed
EnumerableSet.remove(EnumerableSet.Bytes32Set,bytes32) (../../sc/dataset/mainnet/0xcFf248De70021D2a872cF9Fc5683ca4335352eb9.sol#1066-1068) is never used and should be removed
EnumerableSet.values(EnumerableSet.AddressSet) (../../sc/dataset/mainnet/0xcFf248De70021D2a872cF9Fc5683ca4335352eb9.sol#1172-1181) is never used and should be removed
EnumerableSet.values(EnumerableSet.Bytes32Set) (../../sc/dataset/mainnet/0xcFf248De70021D2a872cF9Fc5683ca4335352eb9.sol#1106-1108) is never used and should be removed
EnumerableSet.values(EnumerableSet.UintSet) (../../sc/dataset/mainnet/0xcFf248De70021D2a872cF9Fc5683ca4335352eb9.sol#1245-1254) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code
INFO:Detectors:
Pragma version^0.8.0 (../../sc/dataset/mainnet/0xcFf248De70021D2a872cF9Fc5683ca4335352eb9.sol#7) allows old versions
Pragma version^0.8.0 (../../sc/dataset/mainnet/0xcFf248De70021D2a872cF9Fc5683ca4335352eb9.sol#32) allows old versions
Pragma version^0.8.0 (../../sc/dataset/mainnet/0xcFf248De70021D2a872cF9Fc5683ca4335352eb9.sol#115) allows old versions
Pragma version^0.8.0 (../../sc/dataset/mainnet/0xcFf248De70021D2a872cF9Fc5683ca4335352eb9.sol#191) allows old versions
Pragma version>=0.8.6 (../../sc/dataset/mainnet/0xcFf248De70021D2a872cF9Fc5683ca4335352eb9.sol#218) allows old versions
Pragma version^0.8.0 (../../sc/dataset/mainnet/0xcFf248De70021D2a872cF9Fc5683ca4335352eb9.sol#242) allows old versions
Pragma version^0.8.0 (../../sc/dataset/mainnet/0xcFf248De70021D2a872cF9Fc5683ca4335352eb9.sol#268) allows old versions
Pragma version^0.8.0 (../../sc/dataset/mainnet/0xcFf248De70021D2a872cF9Fc5683ca4335352eb9.sol#296) allows old versions
Pragma version>=0.8.6 (../../sc/dataset/mainnet/0xcFf248De70021D2a872cF9Fc5683ca4335352eb9.sol#677) allows old versions
Pragma version>=0.8.6 (../../sc/dataset/mainnet/0xcFf248De70021D2a872cF9Fc5683ca4335352eb9.sol#862) allows old versions
Pragma version^0.8.0 (../../sc/dataset/mainnet/0xcFf248De70021D2a872cF9Fc5683ca4335352eb9.sol#902) allows old versions
Pragma version^0.8.0 (../../sc/dataset/mainnet/0xcFf248De70021D2a872cF9Fc5683ca4335352eb9.sol#1260) allows old versions
solc-0.8.7 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity
INFO:Detectors:
Contract METAV_STAKING (../../sc/dataset/mainnet/0xcFf248De70021D2a872cF9Fc5683ca4335352eb9.sol#685-859) is not in CapWords
Variable METAV_STAKING._qty (../../sc/dataset/mainnet/0xcFf248De70021D2a872cF9Fc5683ca4335352eb9.sol#691) is not in mixedCase
Variable METAV_STAKING.NFT (../../sc/dataset/mainnet/0xcFf248De70021D2a872cF9Fc5683ca4335352eb9.sol#701) is not in mixedCase
Variable METAV_STAKING.TOKEN (../../sc/dataset/mainnet/0xcFf248De70021D2a872cF9Fc5683ca4335352eb9.sol#702) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions
INFO:Detectors:
POWERSTONES.slitherConstructorVariables() (../../sc/dataset/mainnet/0xcFf248De70021D2a872cF9Fc5683ca4335352eb9.sol#867-897) uses literals with too many digits:
	- _initialTokens = 750000000000000000000000000 (../../sc/dataset/mainnet/0xcFf248De70021D2a872cF9Fc5683ca4335352eb9.sol#869)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits
INFO:Detectors:
METAV_STAKING.nullToken (../../sc/dataset/mainnet/0xcFf248De70021D2a872cF9Fc5683ca4335352eb9.sol#698) should be constant 
POWERSTONES._initialTokens (../../sc/dataset/mainnet/0xcFf248De70021D2a872cF9Fc5683ca4335352eb9.sol#869) should be constant 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant
INFO:Slither:/bdata2/sc/dataset/mainnet/0xcFf248De70021D2a872cF9Fc5683ca4335352eb9.sol analyzed (12 contracts with 85 detectors), 61 result(s) found
