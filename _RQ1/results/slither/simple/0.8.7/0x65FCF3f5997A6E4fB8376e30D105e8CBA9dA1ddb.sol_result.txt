INFO:Detectors:
Reentrancy in SOLOMON._transferFrom(address,address,uint256) (../../sc/dataset/mainnet/0x65FCF3f5997A6E4fB8376e30D105e8CBA9dA1ddb.sol#206-231):
	External calls:
	- swapBack() (../../sc/dataset/mainnet/0x65FCF3f5997A6E4fB8376e30D105e8CBA9dA1ddb.sol#213)
		- router.swapExactTokensForETHSupportingFeeOnTransferTokens(amountToSwap,0,path,address(this),block.timestamp) (../../sc/dataset/mainnet/0x65FCF3f5997A6E4fB8376e30D105e8CBA9dA1ddb.sol#269-275)
		- (MarketingSuccess) = address(marketingFeeReceiver).call{gas: 30000,value: amountETHMarketing}() (../../sc/dataset/mainnet/0x65FCF3f5997A6E4fB8376e30D105e8CBA9dA1ddb.sol#282)
		- router.addLiquidityETH{value: amountETHLiquidity}(address(this),amountToLiquify,0,0,autoLiquidityReceiver,block.timestamp) (../../sc/dataset/mainnet/0x65FCF3f5997A6E4fB8376e30D105e8CBA9dA1ddb.sol#286-293)
	External calls sending eth:
	- swapBack() (../../sc/dataset/mainnet/0x65FCF3f5997A6E4fB8376e30D105e8CBA9dA1ddb.sol#213)
		- (MarketingSuccess) = address(marketingFeeReceiver).call{gas: 30000,value: amountETHMarketing}() (../../sc/dataset/mainnet/0x65FCF3f5997A6E4fB8376e30D105e8CBA9dA1ddb.sol#282)
		- router.addLiquidityETH{value: amountETHLiquidity}(address(this),amountToLiquify,0,0,autoLiquidityReceiver,block.timestamp) (../../sc/dataset/mainnet/0x65FCF3f5997A6E4fB8376e30D105e8CBA9dA1ddb.sol#286-293)
	State variables written after the call(s):
	- _balances[sender] = _balances[sender].sub(amount,Insufficient Balance) (../../sc/dataset/mainnet/0x65FCF3f5997A6E4fB8376e30D105e8CBA9dA1ddb.sol#215)
	SOLOMON._balances (../../sc/dataset/mainnet/0x65FCF3f5997A6E4fB8376e30D105e8CBA9dA1ddb.sol#134) can be used in cross function reentrancies:
	- SOLOMON._basicTransfer(address,address,uint256) (../../sc/dataset/mainnet/0x65FCF3f5997A6E4fB8376e30D105e8CBA9dA1ddb.sol#233-238)
	- SOLOMON._transferFrom(address,address,uint256) (../../sc/dataset/mainnet/0x65FCF3f5997A6E4fB8376e30D105e8CBA9dA1ddb.sol#206-231)
	- SOLOMON.balanceOf(address) (../../sc/dataset/mainnet/0x65FCF3f5997A6E4fB8376e30D105e8CBA9dA1ddb.sol#181)
	- SOLOMON.constructor() (../../sc/dataset/mainnet/0x65FCF3f5997A6E4fB8376e30D105e8CBA9dA1ddb.sol#160-172)
	- SOLOMON.shouldSwapBack() (../../sc/dataset/mainnet/0x65FCF3f5997A6E4fB8376e30D105e8CBA9dA1ddb.sol#251-256)
	- SOLOMON.takeFee(address,uint256,bool) (../../sc/dataset/mainnet/0x65FCF3f5997A6E4fB8376e30D105e8CBA9dA1ddb.sol#244-249)
	- amountReceived = takeFee(sender,amount,false) (../../sc/dataset/mainnet/0x65FCF3f5997A6E4fB8376e30D105e8CBA9dA1ddb.sol#220)
		- _balances[address(this)] = _balances[address(this)].add(feeAmount) (../../sc/dataset/mainnet/0x65FCF3f5997A6E4fB8376e30D105e8CBA9dA1ddb.sol#246)
	SOLOMON._balances (../../sc/dataset/mainnet/0x65FCF3f5997A6E4fB8376e30D105e8CBA9dA1ddb.sol#134) can be used in cross function reentrancies:
	- SOLOMON._basicTransfer(address,address,uint256) (../../sc/dataset/mainnet/0x65FCF3f5997A6E4fB8376e30D105e8CBA9dA1ddb.sol#233-238)
	- SOLOMON._transferFrom(address,address,uint256) (../../sc/dataset/mainnet/0x65FCF3f5997A6E4fB8376e30D105e8CBA9dA1ddb.sol#206-231)
	- SOLOMON.balanceOf(address) (../../sc/dataset/mainnet/0x65FCF3f5997A6E4fB8376e30D105e8CBA9dA1ddb.sol#181)
	- SOLOMON.constructor() (../../sc/dataset/mainnet/0x65FCF3f5997A6E4fB8376e30D105e8CBA9dA1ddb.sol#160-172)
	- SOLOMON.shouldSwapBack() (../../sc/dataset/mainnet/0x65FCF3f5997A6E4fB8376e30D105e8CBA9dA1ddb.sol#251-256)
	- SOLOMON.takeFee(address,uint256,bool) (../../sc/dataset/mainnet/0x65FCF3f5997A6E4fB8376e30D105e8CBA9dA1ddb.sol#244-249)
	- amountReceived = takeFee(sender,amount,true) (../../sc/dataset/mainnet/0x65FCF3f5997A6E4fB8376e30D105e8CBA9dA1ddb.sol#222)
		- _balances[address(this)] = _balances[address(this)].add(feeAmount) (../../sc/dataset/mainnet/0x65FCF3f5997A6E4fB8376e30D105e8CBA9dA1ddb.sol#246)
	SOLOMON._balances (../../sc/dataset/mainnet/0x65FCF3f5997A6E4fB8376e30D105e8CBA9dA1ddb.sol#134) can be used in cross function reentrancies:
	- SOLOMON._basicTransfer(address,address,uint256) (../../sc/dataset/mainnet/0x65FCF3f5997A6E4fB8376e30D105e8CBA9dA1ddb.sol#233-238)
	- SOLOMON._transferFrom(address,address,uint256) (../../sc/dataset/mainnet/0x65FCF3f5997A6E4fB8376e30D105e8CBA9dA1ddb.sol#206-231)
	- SOLOMON.balanceOf(address) (../../sc/dataset/mainnet/0x65FCF3f5997A6E4fB8376e30D105e8CBA9dA1ddb.sol#181)
	- SOLOMON.constructor() (../../sc/dataset/mainnet/0x65FCF3f5997A6E4fB8376e30D105e8CBA9dA1ddb.sol#160-172)
	- SOLOMON.shouldSwapBack() (../../sc/dataset/mainnet/0x65FCF3f5997A6E4fB8376e30D105e8CBA9dA1ddb.sol#251-256)
	- SOLOMON.takeFee(address,uint256,bool) (../../sc/dataset/mainnet/0x65FCF3f5997A6E4fB8376e30D105e8CBA9dA1ddb.sol#244-249)
	- _balances[recipient] = _balances[recipient].add(amountReceived) (../../sc/dataset/mainnet/0x65FCF3f5997A6E4fB8376e30D105e8CBA9dA1ddb.sol#227)
	SOLOMON._balances (../../sc/dataset/mainnet/0x65FCF3f5997A6E4fB8376e30D105e8CBA9dA1ddb.sol#134) can be used in cross function reentrancies:
	- SOLOMON._basicTransfer(address,address,uint256) (../../sc/dataset/mainnet/0x65FCF3f5997A6E4fB8376e30D105e8CBA9dA1ddb.sol#233-238)
	- SOLOMON._transferFrom(address,address,uint256) (../../sc/dataset/mainnet/0x65FCF3f5997A6E4fB8376e30D105e8CBA9dA1ddb.sol#206-231)
	- SOLOMON.balanceOf(address) (../../sc/dataset/mainnet/0x65FCF3f5997A6E4fB8376e30D105e8CBA9dA1ddb.sol#181)
	- SOLOMON.constructor() (../../sc/dataset/mainnet/0x65FCF3f5997A6E4fB8376e30D105e8CBA9dA1ddb.sol#160-172)
	- SOLOMON.shouldSwapBack() (../../sc/dataset/mainnet/0x65FCF3f5997A6E4fB8376e30D105e8CBA9dA1ddb.sol#251-256)
	- SOLOMON.takeFee(address,uint256,bool) (../../sc/dataset/mainnet/0x65FCF3f5997A6E4fB8376e30D105e8CBA9dA1ddb.sol#244-249)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities
INFO:Detectors:
SOLOMON.slitherConstructorVariables() (../../sc/dataset/mainnet/0x65FCF3f5997A6E4fB8376e30D105e8CBA9dA1ddb.sol#122-321) performs a multiplication on the result of a division:
	- swapThreshold = _totalSupply / 10000 * 50 (../../sc/dataset/mainnet/0x65FCF3f5997A6E4fB8376e30D105e8CBA9dA1ddb.sol#156)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#divide-before-multiply
INFO:Detectors:
SOLOMON.swapBack() (../../sc/dataset/mainnet/0x65FCF3f5997A6E4fB8376e30D105e8CBA9dA1ddb.sol#258-296) ignores return value by router.addLiquidityETH{value: amountETHLiquidity}(address(this),amountToLiquify,0,0,autoLiquidityReceiver,block.timestamp) (../../sc/dataset/mainnet/0x65FCF3f5997A6E4fB8376e30D105e8CBA9dA1ddb.sol#286-293)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return
INFO:Detectors:
Reentrancy in SOLOMON._transferFrom(address,address,uint256) (../../sc/dataset/mainnet/0x65FCF3f5997A6E4fB8376e30D105e8CBA9dA1ddb.sol#206-231):
	External calls:
	- swapBack() (../../sc/dataset/mainnet/0x65FCF3f5997A6E4fB8376e30D105e8CBA9dA1ddb.sol#213)
		- router.swapExactTokensForETHSupportingFeeOnTransferTokens(amountToSwap,0,path,address(this),block.timestamp) (../../sc/dataset/mainnet/0x65FCF3f5997A6E4fB8376e30D105e8CBA9dA1ddb.sol#269-275)
		- (MarketingSuccess) = address(marketingFeeReceiver).call{gas: 30000,value: amountETHMarketing}() (../../sc/dataset/mainnet/0x65FCF3f5997A6E4fB8376e30D105e8CBA9dA1ddb.sol#282)
		- router.addLiquidityETH{value: amountETHLiquidity}(address(this),amountToLiquify,0,0,autoLiquidityReceiver,block.timestamp) (../../sc/dataset/mainnet/0x65FCF3f5997A6E4fB8376e30D105e8CBA9dA1ddb.sol#286-293)
	External calls sending eth:
	- swapBack() (../../sc/dataset/mainnet/0x65FCF3f5997A6E4fB8376e30D105e8CBA9dA1ddb.sol#213)
		- (MarketingSuccess) = address(marketingFeeReceiver).call{gas: 30000,value: amountETHMarketing}() (../../sc/dataset/mainnet/0x65FCF3f5997A6E4fB8376e30D105e8CBA9dA1ddb.sol#282)
		- router.addLiquidityETH{value: amountETHLiquidity}(address(this),amountToLiquify,0,0,autoLiquidityReceiver,block.timestamp) (../../sc/dataset/mainnet/0x65FCF3f5997A6E4fB8376e30D105e8CBA9dA1ddb.sol#286-293)
	Event emitted after the call(s):
	- Transfer(sender,address(this),feeAmount) (../../sc/dataset/mainnet/0x65FCF3f5997A6E4fB8376e30D105e8CBA9dA1ddb.sol#247)
		- amountReceived = takeFee(sender,amount,true) (../../sc/dataset/mainnet/0x65FCF3f5997A6E4fB8376e30D105e8CBA9dA1ddb.sol#222)
	- Transfer(sender,address(this),feeAmount) (../../sc/dataset/mainnet/0x65FCF3f5997A6E4fB8376e30D105e8CBA9dA1ddb.sol#247)
		- amountReceived = takeFee(sender,amount,false) (../../sc/dataset/mainnet/0x65FCF3f5997A6E4fB8376e30D105e8CBA9dA1ddb.sol#220)
	- Transfer(sender,recipient,amountReceived) (../../sc/dataset/mainnet/0x65FCF3f5997A6E4fB8376e30D105e8CBA9dA1ddb.sol#229)
Reentrancy in SOLOMON.swapBack() (../../sc/dataset/mainnet/0x65FCF3f5997A6E4fB8376e30D105e8CBA9dA1ddb.sol#258-296):
	External calls:
	- router.swapExactTokensForETHSupportingFeeOnTransferTokens(amountToSwap,0,path,address(this),block.timestamp) (../../sc/dataset/mainnet/0x65FCF3f5997A6E4fB8376e30D105e8CBA9dA1ddb.sol#269-275)
	- (MarketingSuccess) = address(marketingFeeReceiver).call{gas: 30000,value: amountETHMarketing}() (../../sc/dataset/mainnet/0x65FCF3f5997A6E4fB8376e30D105e8CBA9dA1ddb.sol#282)
	- router.addLiquidityETH{value: amountETHLiquidity}(address(this),amountToLiquify,0,0,autoLiquidityReceiver,block.timestamp) (../../sc/dataset/mainnet/0x65FCF3f5997A6E4fB8376e30D105e8CBA9dA1ddb.sol#286-293)
	External calls sending eth:
	- (MarketingSuccess) = address(marketingFeeReceiver).call{gas: 30000,value: amountETHMarketing}() (../../sc/dataset/mainnet/0x65FCF3f5997A6E4fB8376e30D105e8CBA9dA1ddb.sol#282)
	- router.addLiquidityETH{value: amountETHLiquidity}(address(this),amountToLiquify,0,0,autoLiquidityReceiver,block.timestamp) (../../sc/dataset/mainnet/0x65FCF3f5997A6E4fB8376e30D105e8CBA9dA1ddb.sol#286-293)
	Event emitted after the call(s):
	- AutoLiquify(amountETHLiquidity,amountToLiquify) (../../sc/dataset/mainnet/0x65FCF3f5997A6E4fB8376e30D105e8CBA9dA1ddb.sol#294)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3
INFO:Detectors:
SOLOMON.buyTokens(uint256,address) (../../sc/dataset/mainnet/0x65FCF3f5997A6E4fB8376e30D105e8CBA9dA1ddb.sol#298-309) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code
INFO:Detectors:
SOLOMON._maxWalletAmount (../../sc/dataset/mainnet/0x65FCF3f5997A6E4fB8376e30D105e8CBA9dA1ddb.sol#132) is set pre-construction with a non-constant function or state variable:
	- _totalSupply
SOLOMON.totalFee (../../sc/dataset/mainnet/0x65FCF3f5997A6E4fB8376e30D105e8CBA9dA1ddb.sol#145) is set pre-construction with a non-constant function or state variable:
	- liquidityFee + marketingFee
SOLOMON.totalSellFee (../../sc/dataset/mainnet/0x65FCF3f5997A6E4fB8376e30D105e8CBA9dA1ddb.sol#146) is set pre-construction with a non-constant function or state variable:
	- sellLiquidityFee + sellMarketingFee
SOLOMON.swapThreshold (../../sc/dataset/mainnet/0x65FCF3f5997A6E4fB8376e30D105e8CBA9dA1ddb.sol#156) is set pre-construction with a non-constant function or state variable:
	- _totalSupply / 10000 * 50
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#function-initializing-state
INFO:Detectors:
Pragma version^0.8.7 (../../sc/dataset/mainnet/0x65FCF3f5997A6E4fB8376e30D105e8CBA9dA1ddb.sol#9) allows old versions
solc-0.8.7 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity
INFO:Detectors:
Low level call in SOLOMON.swapBack() (../../sc/dataset/mainnet/0x65FCF3f5997A6E4fB8376e30D105e8CBA9dA1ddb.sol#258-296):
	- (MarketingSuccess) = address(marketingFeeReceiver).call{gas: 30000,value: amountETHMarketing}() (../../sc/dataset/mainnet/0x65FCF3f5997A6E4fB8376e30D105e8CBA9dA1ddb.sol#282)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls
INFO:Detectors:
Function IDEXRouter.WETH() (../../sc/dataset/mainnet/0x65FCF3f5997A6E4fB8376e30D105e8CBA9dA1ddb.sol#81) is not in mixedCase
Variable SOLOMON.DEAD (../../sc/dataset/mainnet/0x65FCF3f5997A6E4fB8376e30D105e8CBA9dA1ddb.sol#125) is not in mixedCase
Constant SOLOMON._name (../../sc/dataset/mainnet/0x65FCF3f5997A6E4fB8376e30D105e8CBA9dA1ddb.sol#127) is not in UPPER_CASE_WITH_UNDERSCORES
Constant SOLOMON._symbol (../../sc/dataset/mainnet/0x65FCF3f5997A6E4fB8376e30D105e8CBA9dA1ddb.sol#128) is not in UPPER_CASE_WITH_UNDERSCORES
Constant SOLOMON._decimals (../../sc/dataset/mainnet/0x65FCF3f5997A6E4fB8376e30D105e8CBA9dA1ddb.sol#129) is not in UPPER_CASE_WITH_UNDERSCORES
Variable SOLOMON._totalSupply (../../sc/dataset/mainnet/0x65FCF3f5997A6E4fB8376e30D105e8CBA9dA1ddb.sol#131) is not in mixedCase
Variable SOLOMON._maxWalletAmount (../../sc/dataset/mainnet/0x65FCF3f5997A6E4fB8376e30D105e8CBA9dA1ddb.sol#132) is not in mixedCase
Variable SOLOMON._balances (../../sc/dataset/mainnet/0x65FCF3f5997A6E4fB8376e30D105e8CBA9dA1ddb.sol#134) is not in mixedCase
Variable SOLOMON._allowances (../../sc/dataset/mainnet/0x65FCF3f5997A6E4fB8376e30D105e8CBA9dA1ddb.sol#135) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions
INFO:Detectors:
Variable IDEXRouter.addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256).amountADesired (../../sc/dataset/mainnet/0x65FCF3f5997A6E4fB8376e30D105e8CBA9dA1ddb.sol#85) is too similar to IDEXRouter.addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256).amountBDesired (../../sc/dataset/mainnet/0x65FCF3f5997A6E4fB8376e30D105e8CBA9dA1ddb.sol#86)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#variable-names-too-similar
INFO:Detectors:
SOLOMON.DEAD (../../sc/dataset/mainnet/0x65FCF3f5997A6E4fB8376e30D105e8CBA9dA1ddb.sol#125) should be constant 
SOLOMON._totalSupply (../../sc/dataset/mainnet/0x65FCF3f5997A6E4fB8376e30D105e8CBA9dA1ddb.sol#131) should be constant 
SOLOMON.feeDenominator (../../sc/dataset/mainnet/0x65FCF3f5997A6E4fB8376e30D105e8CBA9dA1ddb.sol#147) should be constant 
SOLOMON.liquidityFee (../../sc/dataset/mainnet/0x65FCF3f5997A6E4fB8376e30D105e8CBA9dA1ddb.sol#140) should be constant 
SOLOMON.marketingFee (../../sc/dataset/mainnet/0x65FCF3f5997A6E4fB8376e30D105e8CBA9dA1ddb.sol#141) should be constant 
SOLOMON.routerAdress (../../sc/dataset/mainnet/0x65FCF3f5997A6E4fB8376e30D105e8CBA9dA1ddb.sol#124) should be constant 
SOLOMON.sellLiquidityFee (../../sc/dataset/mainnet/0x65FCF3f5997A6E4fB8376e30D105e8CBA9dA1ddb.sol#142) should be constant 
SOLOMON.sellMarketingFee (../../sc/dataset/mainnet/0x65FCF3f5997A6E4fB8376e30D105e8CBA9dA1ddb.sol#143) should be constant 
SOLOMON.swapEnabled (../../sc/dataset/mainnet/0x65FCF3f5997A6E4fB8376e30D105e8CBA9dA1ddb.sol#155) should be constant 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant
INFO:Detectors:
SOLOMON.autoLiquidityReceiver (../../sc/dataset/mainnet/0x65FCF3f5997A6E4fB8376e30D105e8CBA9dA1ddb.sol#150) should be immutable 
SOLOMON.marketingFeeReceiver (../../sc/dataset/mainnet/0x65FCF3f5997A6E4fB8376e30D105e8CBA9dA1ddb.sol#149) should be immutable 
SOLOMON.pair (../../sc/dataset/mainnet/0x65FCF3f5997A6E4fB8376e30D105e8CBA9dA1ddb.sol#153) should be immutable 
SOLOMON.router (../../sc/dataset/mainnet/0x65FCF3f5997A6E4fB8376e30D105e8CBA9dA1ddb.sol#152) should be immutable 
SOLOMON.swapThreshold (../../sc/dataset/mainnet/0x65FCF3f5997A6E4fB8376e30D105e8CBA9dA1ddb.sol#156) should be immutable 
SOLOMON.totalFee (../../sc/dataset/mainnet/0x65FCF3f5997A6E4fB8376e30D105e8CBA9dA1ddb.sol#145) should be immutable 
SOLOMON.totalSellFee (../../sc/dataset/mainnet/0x65FCF3f5997A6E4fB8376e30D105e8CBA9dA1ddb.sol#146) should be immutable 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-immutable
INFO:Slither:/bdata2/sc/dataset/mainnet/0x65FCF3f5997A6E4fB8376e30D105e8CBA9dA1ddb.sol analyzed (6 contracts with 85 detectors), 39 result(s) found
