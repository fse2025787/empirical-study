Compilation warnings/errors on /bdata2/sc/dataset/mainnet/0xc658B97B4Ee2ca61dC13aD6f2eCb245b52E0Fb7B.sol:
Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> /bdata2/sc/dataset/mainnet/0xc658B97B4Ee2ca61dC13aD6f2eCb245b52E0Fb7B.sol


INFO:Detectors:
Math.mulDiv(uint256,uint256,uint256) (../../sc/dataset/mainnet/0xc658B97B4Ee2ca61dC13aD6f2eCb245b52E0Fb7B.sol#174-254) performs a multiplication on the result of a division:
	- denominator = denominator / twos (../../sc/dataset/mainnet/0xc658B97B4Ee2ca61dC13aD6f2eCb245b52E0Fb7B.sol#221)
	- inverse = (3 * denominator) ^ 2 (../../sc/dataset/mainnet/0xc658B97B4Ee2ca61dC13aD6f2eCb245b52E0Fb7B.sol#236)
Math.mulDiv(uint256,uint256,uint256) (../../sc/dataset/mainnet/0xc658B97B4Ee2ca61dC13aD6f2eCb245b52E0Fb7B.sol#174-254) performs a multiplication on the result of a division:
	- denominator = denominator / twos (../../sc/dataset/mainnet/0xc658B97B4Ee2ca61dC13aD6f2eCb245b52E0Fb7B.sol#221)
	- inverse *= 2 - denominator * inverse (../../sc/dataset/mainnet/0xc658B97B4Ee2ca61dC13aD6f2eCb245b52E0Fb7B.sol#240)
Math.mulDiv(uint256,uint256,uint256) (../../sc/dataset/mainnet/0xc658B97B4Ee2ca61dC13aD6f2eCb245b52E0Fb7B.sol#174-254) performs a multiplication on the result of a division:
	- denominator = denominator / twos (../../sc/dataset/mainnet/0xc658B97B4Ee2ca61dC13aD6f2eCb245b52E0Fb7B.sol#221)
	- inverse *= 2 - denominator * inverse (../../sc/dataset/mainnet/0xc658B97B4Ee2ca61dC13aD6f2eCb245b52E0Fb7B.sol#241)
Math.mulDiv(uint256,uint256,uint256) (../../sc/dataset/mainnet/0xc658B97B4Ee2ca61dC13aD6f2eCb245b52E0Fb7B.sol#174-254) performs a multiplication on the result of a division:
	- denominator = denominator / twos (../../sc/dataset/mainnet/0xc658B97B4Ee2ca61dC13aD6f2eCb245b52E0Fb7B.sol#221)
	- inverse *= 2 - denominator * inverse (../../sc/dataset/mainnet/0xc658B97B4Ee2ca61dC13aD6f2eCb245b52E0Fb7B.sol#242)
Math.mulDiv(uint256,uint256,uint256) (../../sc/dataset/mainnet/0xc658B97B4Ee2ca61dC13aD6f2eCb245b52E0Fb7B.sol#174-254) performs a multiplication on the result of a division:
	- denominator = denominator / twos (../../sc/dataset/mainnet/0xc658B97B4Ee2ca61dC13aD6f2eCb245b52E0Fb7B.sol#221)
	- inverse *= 2 - denominator * inverse (../../sc/dataset/mainnet/0xc658B97B4Ee2ca61dC13aD6f2eCb245b52E0Fb7B.sol#243)
Math.mulDiv(uint256,uint256,uint256) (../../sc/dataset/mainnet/0xc658B97B4Ee2ca61dC13aD6f2eCb245b52E0Fb7B.sol#174-254) performs a multiplication on the result of a division:
	- denominator = denominator / twos (../../sc/dataset/mainnet/0xc658B97B4Ee2ca61dC13aD6f2eCb245b52E0Fb7B.sol#221)
	- inverse *= 2 - denominator * inverse (../../sc/dataset/mainnet/0xc658B97B4Ee2ca61dC13aD6f2eCb245b52E0Fb7B.sol#244)
Math.mulDiv(uint256,uint256,uint256) (../../sc/dataset/mainnet/0xc658B97B4Ee2ca61dC13aD6f2eCb245b52E0Fb7B.sol#174-254) performs a multiplication on the result of a division:
	- denominator = denominator / twos (../../sc/dataset/mainnet/0xc658B97B4Ee2ca61dC13aD6f2eCb245b52E0Fb7B.sol#221)
	- inverse *= 2 - denominator * inverse (../../sc/dataset/mainnet/0xc658B97B4Ee2ca61dC13aD6f2eCb245b52E0Fb7B.sol#245)
Math.mulDiv(uint256,uint256,uint256) (../../sc/dataset/mainnet/0xc658B97B4Ee2ca61dC13aD6f2eCb245b52E0Fb7B.sol#174-254) performs a multiplication on the result of a division:
	- prod0 = prod0 / twos (../../sc/dataset/mainnet/0xc658B97B4Ee2ca61dC13aD6f2eCb245b52E0Fb7B.sol#224)
	- result = prod0 * inverse (../../sc/dataset/mainnet/0xc658B97B4Ee2ca61dC13aD6f2eCb245b52E0Fb7B.sol#251)
Base64.encode(bytes) (../../sc/dataset/mainnet/0xc658B97B4Ee2ca61dC13aD6f2eCb245b52E0Fb7B.sol#724-795) performs a multiplication on the result of a division:
	- result = new string(4 * ((data.length + 2) / 3)) (../../sc/dataset/mainnet/0xc658B97B4Ee2ca61dC13aD6f2eCb245b52E0Fb7B.sol#740)
MetadataGenerator.splitTokenId(uint256) (../../sc/dataset/mainnet/0xc658B97B4Ee2ca61dC13aD6f2eCb245b52E0Fb7B.sol#912-919) performs a multiplication on the result of a division:
	- color = tokenId / 100 (../../sc/dataset/mainnet/0xc658B97B4Ee2ca61dC13aD6f2eCb245b52E0Fb7B.sol#914)
	- tokenId = tokenId - (color * 100) (../../sc/dataset/mainnet/0xc658B97B4Ee2ca61dC13aD6f2eCb245b52E0Fb7B.sol#915)
MetadataGenerator.splitTokenId(uint256) (../../sc/dataset/mainnet/0xc658B97B4Ee2ca61dC13aD6f2eCb245b52E0Fb7B.sol#912-919) performs a multiplication on the result of a division:
	- body = tokenId / 10 (../../sc/dataset/mainnet/0xc658B97B4Ee2ca61dC13aD6f2eCb245b52E0Fb7B.sol#916)
	- face = tokenId - (body * 10) (../../sc/dataset/mainnet/0xc658B97B4Ee2ca61dC13aD6f2eCb245b52E0Fb7B.sol#917)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#divide-before-multiply
INFO:Detectors:
Math.mulDiv(uint256,uint256,uint256) (../../sc/dataset/mainnet/0xc658B97B4Ee2ca61dC13aD6f2eCb245b52E0Fb7B.sol#174-254) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0xc658B97B4Ee2ca61dC13aD6f2eCb245b52E0Fb7B.sol#185-189)
	- INLINE ASM (../../sc/dataset/mainnet/0xc658B97B4Ee2ca61dC13aD6f2eCb245b52E0Fb7B.sol#205-212)
	- INLINE ASM (../../sc/dataset/mainnet/0xc658B97B4Ee2ca61dC13aD6f2eCb245b52E0Fb7B.sol#219-228)
StringBuilderLib.writeFixed(StringBuilderLib.StringBuilder,uint256) (../../sc/dataset/mainnet/0xc658B97B4Ee2ca61dC13aD6f2eCb245b52E0Fb7B.sol#514-562) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0xc658B97B4Ee2ca61dC13aD6f2eCb245b52E0Fb7B.sol#527-529)
	- INLINE ASM (../../sc/dataset/mainnet/0xc658B97B4Ee2ca61dC13aD6f2eCb245b52E0Fb7B.sol#535-537)
	- INLINE ASM (../../sc/dataset/mainnet/0xc658B97B4Ee2ca61dC13aD6f2eCb245b52E0Fb7B.sol#541-543)
StringBuilderLib.toBytes(StringBuilderLib.StringBuilder) (../../sc/dataset/mainnet/0xc658B97B4Ee2ca61dC13aD6f2eCb245b52E0Fb7B.sol#568-578) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0xc658B97B4Ee2ca61dC13aD6f2eCb245b52E0Fb7B.sol#574-576)
PathLib.readUint16(bytes,uint256) (../../sc/dataset/mainnet/0xc658B97B4Ee2ca61dC13aD6f2eCb245b52E0Fb7B.sol#623-629) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0xc658B97B4Ee2ca61dC13aD6f2eCb245b52E0Fb7B.sol#625-627)
Strings.toString(uint256) (../../sc/dataset/mainnet/0xc658B97B4Ee2ca61dC13aD6f2eCb245b52E0Fb7B.sol#649-669) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0xc658B97B4Ee2ca61dC13aD6f2eCb245b52E0Fb7B.sol#655-657)
	- INLINE ASM (../../sc/dataset/mainnet/0xc658B97B4Ee2ca61dC13aD6f2eCb245b52E0Fb7B.sol#661-663)
Base64.encode(bytes) (../../sc/dataset/mainnet/0xc658B97B4Ee2ca61dC13aD6f2eCb245b52E0Fb7B.sol#724-795) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0xc658B97B4Ee2ca61dC13aD6f2eCb245b52E0Fb7B.sol#743-792)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage
INFO:Detectors:
Different versions of Solidity are used:
	- Version used: ['^0.8.0', '^0.8.4']
	- ^0.8.0 (../../sc/dataset/mainnet/0xc658B97B4Ee2ca61dC13aD6f2eCb245b52E0Fb7B.sol#11)
	- ^0.8.0 (../../sc/dataset/mainnet/0xc658B97B4Ee2ca61dC13aD6f2eCb245b52E0Fb7B.sol#38)
	- ^0.8.0 (../../sc/dataset/mainnet/0xc658B97B4Ee2ca61dC13aD6f2eCb245b52E0Fb7B.sol#123)
	- ^0.8.0 (../../sc/dataset/mainnet/0xc658B97B4Ee2ca61dC13aD6f2eCb245b52E0Fb7B.sol#636)
	- ^0.8.0 (../../sc/dataset/mainnet/0xc658B97B4Ee2ca61dC13aD6f2eCb245b52E0Fb7B.sol#708)
	- ^0.8.4 (../../sc/dataset/mainnet/0xc658B97B4Ee2ca61dC13aD6f2eCb245b52E0Fb7B.sol#469)
	- ^0.8.4 (../../sc/dataset/mainnet/0xc658B97B4Ee2ca61dC13aD6f2eCb245b52E0Fb7B.sol#589)
	- ^0.8.4 (../../sc/dataset/mainnet/0xc658B97B4Ee2ca61dC13aD6f2eCb245b52E0Fb7B.sol#803)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#different-pragma-directives-are-used
INFO:Detectors:
Context._msgData() (../../sc/dataset/mainnet/0xc658B97B4Ee2ca61dC13aD6f2eCb245b52E0Fb7B.sol#28-30) is never used and should be removed
Math.average(uint256,uint256) (../../sc/dataset/mainnet/0xc658B97B4Ee2ca61dC13aD6f2eCb245b52E0Fb7B.sol#153-156) is never used and should be removed
Math.ceilDiv(uint256,uint256) (../../sc/dataset/mainnet/0xc658B97B4Ee2ca61dC13aD6f2eCb245b52E0Fb7B.sol#164-167) is never used and should be removed
Math.log10(uint256,Math.Rounding) (../../sc/dataset/mainnet/0xc658B97B4Ee2ca61dC13aD6f2eCb245b52E0Fb7B.sol#415-420) is never used and should be removed
Math.log2(uint256) (../../sc/dataset/mainnet/0xc658B97B4Ee2ca61dC13aD6f2eCb245b52E0Fb7B.sol#324-360) is never used and should be removed
Math.log2(uint256,Math.Rounding) (../../sc/dataset/mainnet/0xc658B97B4Ee2ca61dC13aD6f2eCb245b52E0Fb7B.sol#366-371) is never used and should be removed
Math.log256(uint256) (../../sc/dataset/mainnet/0xc658B97B4Ee2ca61dC13aD6f2eCb245b52E0Fb7B.sol#428-452) is never used and should be removed
Math.log256(uint256,Math.Rounding) (../../sc/dataset/mainnet/0xc658B97B4Ee2ca61dC13aD6f2eCb245b52E0Fb7B.sol#458-463) is never used and should be removed
Math.max(uint256,uint256) (../../sc/dataset/mainnet/0xc658B97B4Ee2ca61dC13aD6f2eCb245b52E0Fb7B.sol#138-140) is never used and should be removed
Math.min(uint256,uint256) (../../sc/dataset/mainnet/0xc658B97B4Ee2ca61dC13aD6f2eCb245b52E0Fb7B.sol#145-147) is never used and should be removed
Math.mulDiv(uint256,uint256,uint256) (../../sc/dataset/mainnet/0xc658B97B4Ee2ca61dC13aD6f2eCb245b52E0Fb7B.sol#174-254) is never used and should be removed
Math.mulDiv(uint256,uint256,uint256,Math.Rounding) (../../sc/dataset/mainnet/0xc658B97B4Ee2ca61dC13aD6f2eCb245b52E0Fb7B.sol#259-270) is never used and should be removed
Math.sqrt(uint256) (../../sc/dataset/mainnet/0xc658B97B4Ee2ca61dC13aD6f2eCb245b52E0Fb7B.sol#277-308) is never used and should be removed
Math.sqrt(uint256,Math.Rounding) (../../sc/dataset/mainnet/0xc658B97B4Ee2ca61dC13aD6f2eCb245b52E0Fb7B.sol#313-318) is never used and should be removed
StringBuilderLib.toString(StringBuilderLib.StringBuilder) (../../sc/dataset/mainnet/0xc658B97B4Ee2ca61dC13aD6f2eCb245b52E0Fb7B.sol#580-584) is never used and should be removed
Strings.toHexString(address) (../../sc/dataset/mainnet/0xc658B97B4Ee2ca61dC13aD6f2eCb245b52E0Fb7B.sol#698-700) is never used and should be removed
Strings.toHexString(uint256) (../../sc/dataset/mainnet/0xc658B97B4Ee2ca61dC13aD6f2eCb245b52E0Fb7B.sol#674-678) is never used and should be removed
Strings.toHexString(uint256,uint256) (../../sc/dataset/mainnet/0xc658B97B4Ee2ca61dC13aD6f2eCb245b52E0Fb7B.sol#683-693) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code
INFO:Detectors:
Pragma version^0.8.0 (../../sc/dataset/mainnet/0xc658B97B4Ee2ca61dC13aD6f2eCb245b52E0Fb7B.sol#11) allows old versions
Pragma version^0.8.0 (../../sc/dataset/mainnet/0xc658B97B4Ee2ca61dC13aD6f2eCb245b52E0Fb7B.sol#38) allows old versions
Pragma version^0.8.0 (../../sc/dataset/mainnet/0xc658B97B4Ee2ca61dC13aD6f2eCb245b52E0Fb7B.sol#123) allows old versions
Pragma version^0.8.4 (../../sc/dataset/mainnet/0xc658B97B4Ee2ca61dC13aD6f2eCb245b52E0Fb7B.sol#469) allows old versions
Pragma version^0.8.4 (../../sc/dataset/mainnet/0xc658B97B4Ee2ca61dC13aD6f2eCb245b52E0Fb7B.sol#589) allows old versions
Pragma version^0.8.0 (../../sc/dataset/mainnet/0xc658B97B4Ee2ca61dC13aD6f2eCb245b52E0Fb7B.sol#636) allows old versions
Pragma version^0.8.0 (../../sc/dataset/mainnet/0xc658B97B4Ee2ca61dC13aD6f2eCb245b52E0Fb7B.sol#708) allows old versions
Pragma version^0.8.4 (../../sc/dataset/mainnet/0xc658B97B4Ee2ca61dC13aD6f2eCb245b52E0Fb7B.sol#803) allows old versions
solc-0.8.7 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity
INFO:Detectors:
Parameter MetadataGenerator.setExternalUrlPrefix(string)._externalUrlPrefix (../../sc/dataset/mainnet/0xc658B97B4Ee2ca61dC13aD6f2eCb245b52E0Fb7B.sol#882) is not in mixedCase
Parameter MetadataGenerator.generateSvg(StringBuilderLib.StringBuilder,string,bytes,bytes)._color (../../sc/dataset/mainnet/0xc658B97B4Ee2ca61dC13aD6f2eCb245b52E0Fb7B.sol#923) is not in mixedCase
Parameter MetadataGenerator.generateSvg(StringBuilderLib.StringBuilder,string,bytes,bytes)._body (../../sc/dataset/mainnet/0xc658B97B4Ee2ca61dC13aD6f2eCb245b52E0Fb7B.sol#924) is not in mixedCase
Parameter MetadataGenerator.generateSvg(StringBuilderLib.StringBuilder,string,bytes,bytes)._face (../../sc/dataset/mainnet/0xc658B97B4Ee2ca61dC13aD6f2eCb245b52E0Fb7B.sol#925) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions
INFO:Detectors:
MetadataGenerator.generateSvg(StringBuilderLib.StringBuilder,string,bytes,bytes) (../../sc/dataset/mainnet/0xc658B97B4Ee2ca61dC13aD6f2eCb245b52E0Fb7B.sol#921-931) uses literals with too many digits:
	- writeSvgPath(stringBuilder,face,000000,_face) (../../sc/dataset/mainnet/0xc658B97B4Ee2ca61dC13aD6f2eCb245b52E0Fb7B.sol#929)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits
INFO:Slither:/bdata2/sc/dataset/mainnet/0xc658B97B4Ee2ca61dC13aD6f2eCb245b52E0Fb7B.sol analyzed (8 contracts with 85 detectors), 50 result(s) found
