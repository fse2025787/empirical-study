Compilation warnings/errors on /bdata2/sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol:
Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it "abstract" is sufficient.
    --> /bdata2/sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol:1348:5:
     |
1348 |     constructor() public {
     |     ^ (Relevant source part starts here and spans across multiple lines).

Warning: Contract code size exceeds 24576 bytes (a limit introduced in Spurious Dragon). This contract may not be deployable on mainnet. Consider enabling the optimizer (with a low "runs" value!), turning off revert strings, or using libraries.
    --> /bdata2/sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol:1276:1:
     |
1276 | contract EarnableFi is ERC20('EarnableFi', 'EFI'), Ownable {
     | ^ (Relevant source part starts here and spans across multiple lines).


INFO:Detectors:
Reentrancy in EarnableFi._transfer(address,address,uint256) (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#1380-1416):
	External calls:
	- swapAndWithdraw() (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#1394)
		- uniswapRouter.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp + 86400) (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#1477-1483)
	External calls sending eth:
	- swapAndWithdraw() (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#1394)
		- address(feeRecipient).transfer(bal) (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#1463)
	State variables written after the call(s):
	- super._transfer(_sender,_recepient,_amount) (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#1402)
		- _balances[sender] = senderBalance - amount (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#658)
		- _balances[recipient] += amount (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#659)
	ERC20._balances (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#473) can be used in cross function reentrancies:
	- ERC20._burn(address,uint256) (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#694-705)
	- ERC20._mint(address,uint256) (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#673-681)
	- ERC20._transfer(address,address,uint256) (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#650-662)
	- ERC20.balanceOf(address) (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#538-540)
	- super._transfer(_sender,_recepient,_amount) (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#1409)
		- _balances[sender] = senderBalance - amount (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#658)
		- _balances[recipient] += amount (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#659)
	ERC20._balances (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#473) can be used in cross function reentrancies:
	- ERC20._burn(address,uint256) (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#694-705)
	- ERC20._mint(address,uint256) (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#673-681)
	- ERC20._transfer(address,address,uint256) (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#650-662)
	- ERC20.balanceOf(address) (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#538-540)
	- super._transfer(_sender,address(this),devFee) (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#1410)
		- _balances[sender] = senderBalance - amount (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#658)
		- _balances[recipient] += amount (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#659)
	ERC20._balances (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#473) can be used in cross function reentrancies:
	- ERC20._burn(address,uint256) (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#694-705)
	- ERC20._mint(address,uint256) (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#673-681)
	- ERC20._transfer(address,address,uint256) (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#650-662)
	- ERC20.balanceOf(address) (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#538-540)
	- super._transfer(_sender,address(this),marketingFee) (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#1411)
		- _balances[sender] = senderBalance - amount (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#658)
		- _balances[recipient] += amount (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#659)
	ERC20._balances (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#473) can be used in cross function reentrancies:
	- ERC20._burn(address,uint256) (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#694-705)
	- ERC20._mint(address,uint256) (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#673-681)
	- ERC20._transfer(address,address,uint256) (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#650-662)
	- ERC20.balanceOf(address) (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#538-540)
	- super._transfer(_sender,address(this),passiveIncomeRewardFee) (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#1412)
		- _balances[sender] = senderBalance - amount (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#658)
		- _balances[recipient] += amount (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#659)
	ERC20._balances (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#473) can be used in cross function reentrancies:
	- ERC20._burn(address,uint256) (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#694-705)
	- ERC20._mint(address,uint256) (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#673-681)
	- ERC20._transfer(address,address,uint256) (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#650-662)
	- ERC20.balanceOf(address) (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#538-540)
	- totalDividends = totalDividends.add(passiveIncomeRewardFee) (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#1413)
	EarnableFi.totalDividends (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#1290) can be used in cross function reentrancies:
	- EarnableFi._transfer(address,address,uint256) (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#1380-1416)
	- EarnableFi.swapAndWithdraw() (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#1455-1465)
	- EarnableFi.totalDividends (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#1290)
	- EarnableFi.withdrawDividends(uint16) (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#1527-1545)
	- EarnableFi.withdrawableDividends(address) (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#1547-1566)
Reentrancy in EarnableFi.withdrawDividends(uint16) (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#1527-1545):
	External calls:
	- transfer(msg.sender,withdrawable) (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#1533)
		- uniswapRouter.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp + 86400) (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#1477-1483)
	- uniswapRouter.swapExactTokensForETHSupportingFeeOnTransferTokens(withdrawable,0,coin.routerPath,msg.sender,block.timestamp.add(300)) (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#1536)
	- uniswapRouter.swapExactTokensForTokensSupportingFeeOnTransferTokens(withdrawable,0,coin.routerPath,msg.sender,block.timestamp.add(300)) (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#1539)
	External calls sending eth:
	- transfer(msg.sender,withdrawable) (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#1533)
		- address(feeRecipient).transfer(bal) (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#1463)
	State variables written after the call(s):
	- dividendsWhenClaim[msg.sender] = increasedDividends (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#1542)
	EarnableFi.dividendsWhenClaim (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#1320) can be used in cross function reentrancies:
	- EarnableFi.dividendsWhenClaim (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#1320)
	- EarnableFi.withdrawDividends(uint16) (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#1527-1545)
	- EarnableFi.withdrawableDividends(address) (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#1547-1566)
	- totalDividends = totalDividends.sub(withdrawable) (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#1543)
	EarnableFi.totalDividends (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#1290) can be used in cross function reentrancies:
	- EarnableFi._transfer(address,address,uint256) (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#1380-1416)
	- EarnableFi.swapAndWithdraw() (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#1455-1465)
	- EarnableFi.totalDividends (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#1290)
	- EarnableFi.withdrawDividends(uint16) (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#1527-1545)
	- EarnableFi.withdrawableDividends(address) (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#1547-1566)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities
INFO:Detectors:
EarnableFi._writeCheckpoint(address,uint32,uint256,uint256) (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#1779-1797) uses a dangerous strict equality:
	- nCheckpoints > 0 && checkpoints[delegatee][nCheckpoints - 1].fromBlock == blockNumber (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#1789)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dangerous-strict-equalities
INFO:Detectors:
EarnableFi.transferOperator(address) (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#1422-1425) should emit an event for: 
	- _operator = newOperator (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#1424) 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-access-control
INFO:Detectors:
EarnableFi.updateFees(uint16,uint16,uint16) (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#1493-1498) should emit an event for: 
	- passiveIncomeRewardTaxRate = _passiveIncomeRate (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#1495) 
	- devTaxRate = _devTaxRate (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#1496) 
	- marketingTaxRate = _marketingTaxRate (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#1497) 
EarnableFi.setMaxTransferAmountRate(uint16) (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#1500-1503) should emit an event for: 
	- maxTransferAmountRate = _maxTransferAmountRate (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#1502) 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-arithmetic
INFO:Detectors:
Reentrancy in EarnableFi._transfer(address,address,uint256) (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#1380-1416):
	External calls:
	- swapAndWithdraw() (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#1394)
		- uniswapRouter.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp + 86400) (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#1477-1483)
	External calls sending eth:
	- swapAndWithdraw() (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#1394)
		- address(feeRecipient).transfer(bal) (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#1463)
	State variables written after the call(s):
	- increasedDividends = increasedDividends.add(passiveIncomeRewardFee) (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#1414)
Reentrancy in EarnableFi.withdrawDividends(uint16) (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#1527-1545):
	External calls:
	- transfer(msg.sender,withdrawable) (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#1533)
		- uniswapRouter.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp + 86400) (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#1477-1483)
	- uniswapRouter.swapExactTokensForETHSupportingFeeOnTransferTokens(withdrawable,0,coin.routerPath,msg.sender,block.timestamp.add(300)) (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#1536)
	- uniswapRouter.swapExactTokensForTokensSupportingFeeOnTransferTokens(withdrawable,0,coin.routerPath,msg.sender,block.timestamp.add(300)) (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#1539)
	External calls sending eth:
	- transfer(msg.sender,withdrawable) (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#1533)
		- address(feeRecipient).transfer(bal) (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#1463)
	State variables written after the call(s):
	- claimed[msg.sender] = claimed[msg.sender].add(withdrawable) (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#1541)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2
INFO:Detectors:
Reentrancy in EarnableFi._transfer(address,address,uint256) (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#1380-1416):
	External calls:
	- swapAndWithdraw() (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#1394)
		- uniswapRouter.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp + 86400) (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#1477-1483)
	External calls sending eth:
	- swapAndWithdraw() (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#1394)
		- address(feeRecipient).transfer(bal) (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#1463)
	Event emitted after the call(s):
	- Transfer(sender,recipient,amount) (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#661)
		- super._transfer(_sender,address(this),passiveIncomeRewardFee) (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#1412)
	- Transfer(sender,recipient,amount) (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#661)
		- super._transfer(_sender,address(this),devFee) (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#1410)
	- Transfer(sender,recipient,amount) (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#661)
		- super._transfer(_sender,address(this),marketingFee) (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#1411)
	- Transfer(sender,recipient,amount) (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#661)
		- super._transfer(_sender,_recepient,_amount) (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#1409)
	- Transfer(sender,recipient,amount) (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#661)
		- super._transfer(_sender,_recepient,_amount) (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#1402)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3
INFO:Detectors:
EarnableFi.delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32) (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#1645-1686) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(block.timestamp <= expiry,MARS::delegateBySig: signature expired) (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#1684)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp
INFO:Detectors:
Address.isContract(address) (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#773-782) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#780)
Address._verifyCallResult(bool,bytes,string) (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#918-935) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#927-930)
EarnableFi.getChainId() (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#1804-1808) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#1806)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage
INFO:Detectors:
EarnableFi._transfer(address,address,uint256) (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#1380-1416) compares to a boolean constant:
	-swapAndWithdrawEnabled == true && _inSwapAndWithdraw == false && address(uniswapRouter) != address(0) && uniswapPair != address(0) && _sender != uniswapPair && _sender != address(uniswapRouter) && _sender != owner() && _sender != address(this) (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#1385-1392)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#boolean-equality
INFO:Detectors:
Different versions of Solidity are used:
	- Version used: ['>=0.8.0', '^0.8.0']
	- >=0.8.0 (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#1021)
	- >=0.8.0 (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#1186)
	- >=0.8.0 (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#1238)
	- >=0.8.0 (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#1274)
	- ^0.8.0 (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#13)
	- ^0.8.0 (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#41)
	- ^0.8.0 (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#112)
	- ^0.8.0 (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#334)
	- ^0.8.0 (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#415)
	- ^0.8.0 (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#444)
	- ^0.8.0 (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#750)
	- ^0.8.0 (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#943)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#different-pragma-directives-are-used
INFO:Detectors:
Address._verifyCallResult(bool,bytes,string) (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#918-935) is never used and should be removed
Address.functionCall(address,bytes) (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#826-828) is never used and should be removed
Address.functionCall(address,bytes,string) (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#836-838) is never used and should be removed
Address.functionCallWithValue(address,bytes,uint256) (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#851-853) is never used and should be removed
Address.functionCallWithValue(address,bytes,uint256,string) (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#861-868) is never used and should be removed
Address.functionDelegateCall(address,bytes) (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#900-902) is never used and should be removed
Address.functionDelegateCall(address,bytes,string) (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#910-916) is never used and should be removed
Address.functionStaticCall(address,bytes) (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#876-878) is never used and should be removed
Address.functionStaticCall(address,bytes,string) (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#886-892) is never used and should be removed
Address.isContract(address) (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#773-782) is never used and should be removed
Address.sendValue(address,uint256) (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#800-806) is never used and should be removed
Context._msgData() (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#30-33) is never used and should be removed
SafeERC20._callOptionalReturn(IERC20,bytes) (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#1004-1014) is never used and should be removed
SafeERC20.safeApprove(IERC20,address,uint256) (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#973-982) is never used and should be removed
SafeERC20.safeDecreaseAllowance(IERC20,address,uint256) (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#989-996) is never used and should be removed
SafeERC20.safeIncreaseAllowance(IERC20,address,uint256) (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#984-987) is never used and should be removed
SafeERC20.safeTransfer(IERC20,address,uint256) (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#958-960) is never used and should be removed
SafeERC20.safeTransferFrom(IERC20,address,address,uint256) (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#962-964) is never used and should be removed
SafeMath.div(uint256,uint256,string) (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#299-304) is never used and should be removed
SafeMath.mod(uint256,uint256) (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#259-261) is never used and should be removed
SafeMath.mod(uint256,uint256,string) (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#321-326) is never used and should be removed
SafeMath.sub(uint256,uint256,string) (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#276-281) is never used and should be removed
SafeMath.tryAdd(uint256,uint256) (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#130-136) is never used and should be removed
SafeMath.tryDiv(uint256,uint256) (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#172-177) is never used and should be removed
SafeMath.tryMod(uint256,uint256) (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#184-189) is never used and should be removed
SafeMath.tryMul(uint256,uint256) (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#155-165) is never used and should be removed
SafeMath.trySub(uint256,uint256) (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#143-148) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code
INFO:Detectors:
Pragma version^0.8.0 (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#13) allows old versions
Pragma version^0.8.0 (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#41) allows old versions
Pragma version^0.8.0 (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#112) allows old versions
Pragma version^0.8.0 (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#334) allows old versions
Pragma version^0.8.0 (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#415) allows old versions
Pragma version^0.8.0 (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#444) allows old versions
Pragma version^0.8.0 (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#750) allows old versions
Pragma version^0.8.0 (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#943) allows old versions
Pragma version>=0.8.0 (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#1021) allows old versions
Pragma version>=0.8.0 (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#1186) allows old versions
Pragma version>=0.8.0 (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#1238) allows old versions
Pragma version>=0.8.0 (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#1274) allows old versions
solc-0.8.7 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity
INFO:Detectors:
Low level call in Address.sendValue(address,uint256) (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#800-806):
	- (success) = recipient.call{value: amount}() (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#804)
Low level call in Address.functionCallWithValue(address,bytes,uint256,string) (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#861-868):
	- (success,returndata) = target.call{value: value}(data) (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#866)
Low level call in Address.functionStaticCall(address,bytes,string) (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#886-892):
	- (success,returndata) = target.staticcall(data) (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#890)
Low level call in Address.functionDelegateCall(address,bytes,string) (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#910-916):
	- (success,returndata) = target.delegatecall(data) (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#914)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls
INFO:Detectors:
Function IUniswapV2Router01.WETH() (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#1026) is not in mixedCase
Parameter EarnableFi.burn(address,uint256)._from (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#1376) is not in mixedCase
Parameter EarnableFi.burn(address,uint256)._amount (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#1376) is not in mixedCase
Parameter EarnableFi.updatePancakeRouter(address)._router (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#1431) is not in mixedCase
Parameter EarnableFi.updateSwapAndLiquifyEnabled(bool)._enabled (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#1441) is not in mixedCase
Parameter EarnableFi.updateFees(uint16,uint16,uint16)._passiveIncomeRate (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#1493) is not in mixedCase
Parameter EarnableFi.updateFees(uint16,uint16,uint16)._devTaxRate (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#1493) is not in mixedCase
Parameter EarnableFi.updateFees(uint16,uint16,uint16)._marketingTaxRate (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#1493) is not in mixedCase
Parameter EarnableFi.setMaxTransferAmountRate(uint16)._maxTransferAmountRate (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#1500) is not in mixedCase
Parameter EarnableFi.isExcludedFromFee(address)._addr (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#1511) is not in mixedCase
Parameter EarnableFi.excludeFromFee(address,bool)._addr (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#1515) is not in mixedCase
Parameter EarnableFi.excludeFromFee(address,bool)._is (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#1515) is not in mixedCase
Parameter EarnableFi.isExcludedFromMaxTx(address)._addr (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#1519) is not in mixedCase
Parameter EarnableFi.excludeFromMaxTx(address,bool)._addr (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#1523) is not in mixedCase
Parameter EarnableFi.excludeFromMaxTx(address,bool)._is (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#1523) is not in mixedCase
Parameter EarnableFi.withdrawDividends(uint16)._cId (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#1527) is not in mixedCase
Parameter EarnableFi.withdrawableDividends(address)._user (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#1547) is not in mixedCase
Parameter EarnableFi.addCoinInfo(address[],address)._path (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#1574) is not in mixedCase
Parameter EarnableFi.addCoinInfo(address[],address)._coinAddr (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#1574) is not in mixedCase
Parameter EarnableFi.updateCoinInfo(uint8,address[],address)._cId (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#1581) is not in mixedCase
Parameter EarnableFi.updateCoinInfo(uint8,address[],address)._path (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#1581) is not in mixedCase
Parameter EarnableFi.updateCoinInfo(uint8,address[],address)._coinAddr (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#1581) is not in mixedCase
Variable EarnableFi.MAX_BP_RATE (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#1282) is not in mixedCase
Variable EarnableFi._delegates (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#1587) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions
INFO:Detectors:
Redundant expression "this (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#31)" inContext (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#25-34)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#redundant-statements
INFO:Detectors:
Reentrancy in EarnableFi._transfer(address,address,uint256) (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#1380-1416):
	External calls:
	- swapAndWithdraw() (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#1394)
		- address(feeRecipient).transfer(bal) (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#1463)
	State variables written after the call(s):
	- super._transfer(_sender,_recepient,_amount) (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#1402)
		- _balances[sender] = senderBalance - amount (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#658)
		- _balances[recipient] += amount (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#659)
	- super._transfer(_sender,_recepient,_amount) (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#1409)
		- _balances[sender] = senderBalance - amount (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#658)
		- _balances[recipient] += amount (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#659)
	- super._transfer(_sender,address(this),devFee) (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#1410)
		- _balances[sender] = senderBalance - amount (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#658)
		- _balances[recipient] += amount (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#659)
	- super._transfer(_sender,address(this),marketingFee) (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#1411)
		- _balances[sender] = senderBalance - amount (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#658)
		- _balances[recipient] += amount (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#659)
	- super._transfer(_sender,address(this),passiveIncomeRewardFee) (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#1412)
		- _balances[sender] = senderBalance - amount (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#658)
		- _balances[recipient] += amount (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#659)
	- increasedDividends = increasedDividends.add(passiveIncomeRewardFee) (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#1414)
	- totalDividends = totalDividends.add(passiveIncomeRewardFee) (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#1413)
	Event emitted after the call(s):
	- Transfer(sender,recipient,amount) (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#661)
		- super._transfer(_sender,address(this),devFee) (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#1410)
	- Transfer(sender,recipient,amount) (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#661)
		- super._transfer(_sender,address(this),passiveIncomeRewardFee) (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#1412)
	- Transfer(sender,recipient,amount) (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#661)
		- super._transfer(_sender,address(this),marketingFee) (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#1411)
	- Transfer(sender,recipient,amount) (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#661)
		- super._transfer(_sender,_recepient,_amount) (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#1409)
	- Transfer(sender,recipient,amount) (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#661)
		- super._transfer(_sender,_recepient,_amount) (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#1402)
Reentrancy in EarnableFi.withdrawDividends(uint16) (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#1527-1545):
	External calls:
	- transfer(msg.sender,withdrawable) (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#1533)
		- address(feeRecipient).transfer(bal) (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#1463)
	State variables written after the call(s):
	- claimed[msg.sender] = claimed[msg.sender].add(withdrawable) (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#1541)
	- dividendsWhenClaim[msg.sender] = increasedDividends (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#1542)
	- totalDividends = totalDividends.sub(withdrawable) (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#1543)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-4
INFO:Detectors:
Variable IUniswapV2Router01.addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256).amountADesired (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#1031) is too similar to IUniswapV2Router01.addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256).amountBDesired (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#1032)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#variable-names-too-similar
INFO:Detectors:
EarnableFi.slitherConstructorVariables() (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#1276-1813) uses literals with too many digits:
	- minAmountToSwap = 1000000000 * 1e18 (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#1289)
EarnableFi.slitherConstructorConstantVariables() (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#1276-1813) uses literals with too many digits:
	- MAX_SUPPLY = 30000000000 * 1e18 (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#1280)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits
INFO:Detectors:
EarnableFi.burnTaxRate (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#1285) is never used in EarnableFi (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#1276-1813)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-state-variable
INFO:Detectors:
EarnableFi.MAX_BP_RATE (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#1282) should be constant 
EarnableFi.burnTaxRate (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#1285) should be constant 
EarnableFi.feeRecipient (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#1297) should be constant 
EarnableFi.minAmountToSwap (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#1289) should be constant 
EarnableFi.telegram (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#1312) should be constant 
EarnableFi.website (../../sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol#1311) should be constant 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant
INFO:Slither:/bdata2/sc/dataset/mainnet/0x48666Fe01d123D14B53EAcf21f36786F2a786c86.sol analyzed (12 contracts with 85 detectors), 96 result(s) found
