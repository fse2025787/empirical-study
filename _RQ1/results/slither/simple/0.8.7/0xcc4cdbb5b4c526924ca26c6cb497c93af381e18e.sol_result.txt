INFO:Detectors:
ERC721A._burn(uint256,bool) (../../sc/dataset/mainnet/0xcc4cdbb5b4c526924ca26c6cb497c93af381e18e.sol#888-950) uses a dangerous strict equality:
	- _packedOwnerships[nextTokenId] == 0 (../../sc/dataset/mainnet/0xcc4cdbb5b4c526924ca26c6cb497c93af381e18e.sol#933)
ERC721A._initializeOwnershipAt(uint256) (../../sc/dataset/mainnet/0xcc4cdbb5b4c526924ca26c6cb497c93af381e18e.sol#516-520) uses a dangerous strict equality:
	- _packedOwnerships[index] == 0 (../../sc/dataset/mainnet/0xcc4cdbb5b4c526924ca26c6cb497c93af381e18e.sol#517)
ERC721A._transfer(address,address,uint256) (../../sc/dataset/mainnet/0xcc4cdbb5b4c526924ca26c6cb497c93af381e18e.sol#814-869) uses a dangerous strict equality:
	- _packedOwnerships[nextTokenId] == 0 (../../sc/dataset/mainnet/0xcc4cdbb5b4c526924ca26c6cb497c93af381e18e.sol#857)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dangerous-strict-equalities
INFO:Detectors:
Reentrancy in ERC721A._safeMint(address,uint256,bytes) (../../sc/dataset/mainnet/0xcc4cdbb5b4c526924ca26c6cb497c93af381e18e.sol#700-752):
	External calls:
	- ! _checkContractOnERC721Received(address(0),to,updatedIndex ++,_data) (../../sc/dataset/mainnet/0xcc4cdbb5b4c526924ca26c6cb497c93af381e18e.sol#738)
		- ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(),from,tokenId,_data) (../../sc/dataset/mainnet/0xcc4cdbb5b4c526924ca26c6cb497c93af381e18e.sol#967-979)
	State variables written after the call(s):
	- _currentIndex = updatedIndex (../../sc/dataset/mainnet/0xcc4cdbb5b4c526924ca26c6cb497c93af381e18e.sol#749)
	ERC721A._currentIndex (../../sc/dataset/mainnet/0xcc4cdbb5b4c526924ca26c6cb497c93af381e18e.sol#323) can be used in cross function reentrancies:
	- ERC721A._exists(uint256) (../../sc/dataset/mainnet/0xcc4cdbb5b4c526924ca26c6cb497c93af381e18e.sol#675-680)
	- ERC721A._packedOwnershipOf(uint256) (../../sc/dataset/mainnet/0xcc4cdbb5b4c526924ca26c6cb497c93af381e18e.sol#471-495)
	- ERC721A._transfer(address,address,uint256) (../../sc/dataset/mainnet/0xcc4cdbb5b4c526924ca26c6cb497c93af381e18e.sol#814-869)
	- ERC721A.constructor(string,string) (../../sc/dataset/mainnet/0xcc4cdbb5b4c526924ca26c6cb497c93af381e18e.sol#360-364)
	- ERC721A.totalSupply() (../../sc/dataset/mainnet/0xcc4cdbb5b4c526924ca26c6cb497c93af381e18e.sol#386-392)
Reentrancy in goblinzukiwtf.freeMint(uint256) (../../sc/dataset/mainnet/0xcc4cdbb5b4c526924ca26c6cb497c93af381e18e.sol#1578-1585):
	External calls:
	- _safeMint(msg.sender,count) (../../sc/dataset/mainnet/0xcc4cdbb5b4c526924ca26c6cb497c93af381e18e.sol#1582)
		- ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(),from,tokenId,_data) (../../sc/dataset/mainnet/0xcc4cdbb5b4c526924ca26c6cb497c93af381e18e.sol#967-979)
	State variables written after the call(s):
	- _currentFreeMints += count (../../sc/dataset/mainnet/0xcc4cdbb5b4c526924ca26c6cb497c93af381e18e.sol#1584)
	goblinzukiwtf._currentFreeMints (../../sc/dataset/mainnet/0xcc4cdbb5b4c526924ca26c6cb497c93af381e18e.sol#1477) can be used in cross function reentrancies:
	- goblinzukiwtf.freeMint(uint256) (../../sc/dataset/mainnet/0xcc4cdbb5b4c526924ca26c6cb497c93af381e18e.sol#1578-1585)
	- goblinzukiwtf.hasFreeMint(address) (../../sc/dataset/mainnet/0xcc4cdbb5b4c526924ca26c6cb497c93af381e18e.sol#1527-1529)
	- freeMints[msg.sender] += count (../../sc/dataset/mainnet/0xcc4cdbb5b4c526924ca26c6cb497c93af381e18e.sol#1583)
	goblinzukiwtf.freeMints (../../sc/dataset/mainnet/0xcc4cdbb5b4c526924ca26c6cb497c93af381e18e.sol#1488) can be used in cross function reentrancies:
	- goblinzukiwtf.freeMint(uint256) (../../sc/dataset/mainnet/0xcc4cdbb5b4c526924ca26c6cb497c93af381e18e.sol#1578-1585)
	- goblinzukiwtf.hasFreeMint(address) (../../sc/dataset/mainnet/0xcc4cdbb5b4c526924ca26c6cb497c93af381e18e.sol#1527-1529)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1
INFO:Detectors:
goblinzukiwtf.mintServer(uint256,string,string,bytes).i (../../sc/dataset/mainnet/0xcc4cdbb5b4c526924ca26c6cb497c93af381e18e.sol#1599) is a local variable never initialized
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#uninitialized-local-variables
INFO:Detectors:
ERC721A._checkContractOnERC721Received(address,address,uint256,bytes) (../../sc/dataset/mainnet/0xcc4cdbb5b4c526924ca26c6cb497c93af381e18e.sol#961-980) ignores return value by ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(),from,tokenId,_data) (../../sc/dataset/mainnet/0xcc4cdbb5b4c526924ca26c6cb497c93af381e18e.sol#967-979)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return
INFO:Detectors:
goblinzukiwtf.setMaxTokens(uint256) (../../sc/dataset/mainnet/0xcc4cdbb5b4c526924ca26c6cb497c93af381e18e.sol#1511-1513) should emit an event for: 
	- maxTokens = _maxTokens (../../sc/dataset/mainnet/0xcc4cdbb5b4c526924ca26c6cb497c93af381e18e.sol#1512) 
goblinzukiwtf.setMaxMintForUser(uint256) (../../sc/dataset/mainnet/0xcc4cdbb5b4c526924ca26c6cb497c93af381e18e.sol#1515-1517) should emit an event for: 
	- _maxMintForUser = maxMintForUser_ (../../sc/dataset/mainnet/0xcc4cdbb5b4c526924ca26c6cb497c93af381e18e.sol#1516) 
goblinzukiwtf.setMaxFreeMints(uint256) (../../sc/dataset/mainnet/0xcc4cdbb5b4c526924ca26c6cb497c93af381e18e.sol#1519-1521) should emit an event for: 
	- _maxFreeMints = maxFreeMints_ (../../sc/dataset/mainnet/0xcc4cdbb5b4c526924ca26c6cb497c93af381e18e.sol#1520) 
goblinzukiwtf.freeMint(uint256) (../../sc/dataset/mainnet/0xcc4cdbb5b4c526924ca26c6cb497c93af381e18e.sol#1578-1585) should emit an event for: 
	- _currentFreeMints += count (../../sc/dataset/mainnet/0xcc4cdbb5b4c526924ca26c6cb497c93af381e18e.sol#1584) 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-arithmetic
INFO:Detectors:
goblinzukiwtf.setServerAddress(address).target (../../sc/dataset/mainnet/0xcc4cdbb5b4c526924ca26c6cb497c93af381e18e.sol#1507) lacks a zero-check on :
		- serverAddress = target (../../sc/dataset/mainnet/0xcc4cdbb5b4c526924ca26c6cb497c93af381e18e.sol#1508)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation
INFO:Detectors:
Reentrancy in ERC721A._safeMint(address,uint256,bytes) (../../sc/dataset/mainnet/0xcc4cdbb5b4c526924ca26c6cb497c93af381e18e.sol#700-752):
	External calls:
	- ! _checkContractOnERC721Received(address(0),to,updatedIndex ++,_data) (../../sc/dataset/mainnet/0xcc4cdbb5b4c526924ca26c6cb497c93af381e18e.sol#738)
		- ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(),from,tokenId,_data) (../../sc/dataset/mainnet/0xcc4cdbb5b4c526924ca26c6cb497c93af381e18e.sol#967-979)
	Event emitted after the call(s):
	- Transfer(address(0),to,updatedIndex) (../../sc/dataset/mainnet/0xcc4cdbb5b4c526924ca26c6cb497c93af381e18e.sol#737)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3
INFO:Detectors:
ERC721A._unpackedOwnership(uint256) (../../sc/dataset/mainnet/0xcc4cdbb5b4c526924ca26c6cb497c93af381e18e.sol#500-504) uses timestamp for comparisons
	Dangerous comparisons:
	- ownership.burned = packed & BITMASK_BURNED != 0 (../../sc/dataset/mainnet/0xcc4cdbb5b4c526924ca26c6cb497c93af381e18e.sol#503)
ERC721A._initializeOwnershipAt(uint256) (../../sc/dataset/mainnet/0xcc4cdbb5b4c526924ca26c6cb497c93af381e18e.sol#516-520) uses timestamp for comparisons
	Dangerous comparisons:
	- _packedOwnerships[index] == 0 (../../sc/dataset/mainnet/0xcc4cdbb5b4c526924ca26c6cb497c93af381e18e.sol#517)
ERC721A._transfer(address,address,uint256) (../../sc/dataset/mainnet/0xcc4cdbb5b4c526924ca26c6cb497c93af381e18e.sol#814-869) uses timestamp for comparisons
	Dangerous comparisons:
	- _packedOwnerships[nextTokenId] == 0 (../../sc/dataset/mainnet/0xcc4cdbb5b4c526924ca26c6cb497c93af381e18e.sol#857)
ERC721A._burn(uint256,bool) (../../sc/dataset/mainnet/0xcc4cdbb5b4c526924ca26c6cb497c93af381e18e.sol#888-950) uses timestamp for comparisons
	Dangerous comparisons:
	- _packedOwnerships[nextTokenId] == 0 (../../sc/dataset/mainnet/0xcc4cdbb5b4c526924ca26c6cb497c93af381e18e.sol#933)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp
INFO:Detectors:
ERC721A._setAux(address,uint64) (../../sc/dataset/mainnet/0xcc4cdbb5b4c526924ca26c6cb497c93af381e18e.sol#458-466) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0xcc4cdbb5b4c526924ca26c6cb497c93af381e18e.sol#461-463)
ERC721A._addressToUint256(address) (../../sc/dataset/mainnet/0xcc4cdbb5b4c526924ca26c6cb497c93af381e18e.sol#573-577) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0xcc4cdbb5b4c526924ca26c6cb497c93af381e18e.sol#574-576)
ERC721A._boolToUint256(bool) (../../sc/dataset/mainnet/0xcc4cdbb5b4c526924ca26c6cb497c93af381e18e.sol#582-586) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0xcc4cdbb5b4c526924ca26c6cb497c93af381e18e.sol#583-585)
ERC721A._checkContractOnERC721Received(address,address,uint256,bytes) (../../sc/dataset/mainnet/0xcc4cdbb5b4c526924ca26c6cb497c93af381e18e.sol#961-980) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0xcc4cdbb5b4c526924ca26c6cb497c93af381e18e.sol#975-977)
ERC721A._toString(uint256) (../../sc/dataset/mainnet/0xcc4cdbb5b4c526924ca26c6cb497c93af381e18e.sol#1039-1078) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0xcc4cdbb5b4c526924ca26c6cb497c93af381e18e.sol#1040-1077)
Address.verifyCallResult(bool,bytes,string) (../../sc/dataset/mainnet/0xcc4cdbb5b4c526924ca26c6cb497c93af381e18e.sol#1437-1457) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0xcc4cdbb5b4c526924ca26c6cb497c93af381e18e.sol#1449-1452)
goblinzukiwtf.splitSignature(bytes) (../../sc/dataset/mainnet/0xcc4cdbb5b4c526924ca26c6cb497c93af381e18e.sol#1612-1623) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0xcc4cdbb5b4c526924ca26c6cb497c93af381e18e.sol#1614-1621)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage
INFO:Detectors:
Address.functionCall(address,bytes) (../../sc/dataset/mainnet/0xcc4cdbb5b4c526924ca26c6cb497c93af381e18e.sol#1321-1323) is never used and should be removed
Address.functionCall(address,bytes,string) (../../sc/dataset/mainnet/0xcc4cdbb5b4c526924ca26c6cb497c93af381e18e.sol#1331-1337) is never used and should be removed
Address.functionCallWithValue(address,bytes,uint256) (../../sc/dataset/mainnet/0xcc4cdbb5b4c526924ca26c6cb497c93af381e18e.sol#1350-1356) is never used and should be removed
Address.functionCallWithValue(address,bytes,uint256,string) (../../sc/dataset/mainnet/0xcc4cdbb5b4c526924ca26c6cb497c93af381e18e.sol#1364-1375) is never used and should be removed
Address.functionDelegateCall(address,bytes) (../../sc/dataset/mainnet/0xcc4cdbb5b4c526924ca26c6cb497c93af381e18e.sol#1410-1412) is never used and should be removed
Address.functionDelegateCall(address,bytes,string) (../../sc/dataset/mainnet/0xcc4cdbb5b4c526924ca26c6cb497c93af381e18e.sol#1420-1429) is never used and should be removed
Address.functionStaticCall(address,bytes) (../../sc/dataset/mainnet/0xcc4cdbb5b4c526924ca26c6cb497c93af381e18e.sol#1383-1385) is never used and should be removed
Address.functionStaticCall(address,bytes,string) (../../sc/dataset/mainnet/0xcc4cdbb5b4c526924ca26c6cb497c93af381e18e.sol#1393-1402) is never used and should be removed
Address.isContract(address) (../../sc/dataset/mainnet/0xcc4cdbb5b4c526924ca26c6cb497c93af381e18e.sol#1272-1278) is never used and should be removed
Address.verifyCallResult(bool,bytes,string) (../../sc/dataset/mainnet/0xcc4cdbb5b4c526924ca26c6cb497c93af381e18e.sol#1437-1457) is never used and should be removed
Context._msgData() (../../sc/dataset/mainnet/0xcc4cdbb5b4c526924ca26c6cb497c93af381e18e.sol#1098-1100) is never used and should be removed
ERC721A._baseURI() (../../sc/dataset/mainnet/0xcc4cdbb5b4c526924ca26c6cb497c93af381e18e.sol#566-568) is never used and should be removed
ERC721A._burn(uint256) (../../sc/dataset/mainnet/0xcc4cdbb5b4c526924ca26c6cb497c93af381e18e.sol#874-876) is never used and should be removed
ERC721A._getAux(address) (../../sc/dataset/mainnet/0xcc4cdbb5b4c526924ca26c6cb497c93af381e18e.sol#450-452) is never used and should be removed
ERC721A._initializeOwnershipAt(uint256) (../../sc/dataset/mainnet/0xcc4cdbb5b4c526924ca26c6cb497c93af381e18e.sol#516-520) is never used and should be removed
ERC721A._mint(address,uint256) (../../sc/dataset/mainnet/0xcc4cdbb5b4c526924ca26c6cb497c93af381e18e.sol#764-802) is never used and should be removed
ERC721A._nextTokenId() (../../sc/dataset/mainnet/0xcc4cdbb5b4c526924ca26c6cb497c93af381e18e.sol#377-379) is never used and should be removed
ERC721A._numberBurned(address) (../../sc/dataset/mainnet/0xcc4cdbb5b4c526924ca26c6cb497c93af381e18e.sol#443-445) is never used and should be removed
ERC721A._numberMinted(address) (../../sc/dataset/mainnet/0xcc4cdbb5b4c526924ca26c6cb497c93af381e18e.sol#436-438) is never used and should be removed
ERC721A._ownershipAt(uint256) (../../sc/dataset/mainnet/0xcc4cdbb5b4c526924ca26c6cb497c93af381e18e.sol#509-511) is never used and should be removed
ERC721A._ownershipOf(uint256) (../../sc/dataset/mainnet/0xcc4cdbb5b4c526924ca26c6cb497c93af381e18e.sol#526-528) is never used and should be removed
ERC721A._setAux(address,uint64) (../../sc/dataset/mainnet/0xcc4cdbb5b4c526924ca26c6cb497c93af381e18e.sol#458-466) is never used and should be removed
ERC721A._toString(uint256) (../../sc/dataset/mainnet/0xcc4cdbb5b4c526924ca26c6cb497c93af381e18e.sol#1039-1078) is never used and should be removed
ERC721A._totalBurned() (../../sc/dataset/mainnet/0xcc4cdbb5b4c526924ca26c6cb497c93af381e18e.sol#408-410) is never used and should be removed
ERC721A._unpackedOwnership(uint256) (../../sc/dataset/mainnet/0xcc4cdbb5b4c526924ca26c6cb497c93af381e18e.sol#500-504) is never used and should be removed
Strings.toHexString(uint256) (../../sc/dataset/mainnet/0xcc4cdbb5b4c526924ca26c6cb497c93af381e18e.sol#1211-1222) is never used and should be removed
Strings.toHexString(uint256,uint256) (../../sc/dataset/mainnet/0xcc4cdbb5b4c526924ca26c6cb497c93af381e18e.sol#1227-1237) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code
INFO:Detectors:
Pragma version^0.8.7 (../../sc/dataset/mainnet/0xcc4cdbb5b4c526924ca26c6cb497c93af381e18e.sol#8) allows old versions
solc-0.8.7 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity
INFO:Detectors:
Low level call in Address.sendValue(address,uint256) (../../sc/dataset/mainnet/0xcc4cdbb5b4c526924ca26c6cb497c93af381e18e.sol#1296-1301):
	- (success) = recipient.call{value: amount}() (../../sc/dataset/mainnet/0xcc4cdbb5b4c526924ca26c6cb497c93af381e18e.sol#1299)
Low level call in Address.functionCallWithValue(address,bytes,uint256,string) (../../sc/dataset/mainnet/0xcc4cdbb5b4c526924ca26c6cb497c93af381e18e.sol#1364-1375):
	- (success,returndata) = target.call{value: value}(data) (../../sc/dataset/mainnet/0xcc4cdbb5b4c526924ca26c6cb497c93af381e18e.sol#1373)
Low level call in Address.functionStaticCall(address,bytes,string) (../../sc/dataset/mainnet/0xcc4cdbb5b4c526924ca26c6cb497c93af381e18e.sol#1393-1402):
	- (success,returndata) = target.staticcall(data) (../../sc/dataset/mainnet/0xcc4cdbb5b4c526924ca26c6cb497c93af381e18e.sol#1400)
Low level call in Address.functionDelegateCall(address,bytes,string) (../../sc/dataset/mainnet/0xcc4cdbb5b4c526924ca26c6cb497c93af381e18e.sol#1420-1429):
	- (success,returndata) = target.delegatecall(data) (../../sc/dataset/mainnet/0xcc4cdbb5b4c526924ca26c6cb497c93af381e18e.sol#1427)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls
INFO:Detectors:
Contract ERC721A__IERC721Receiver (../../sc/dataset/mainnet/0xcc4cdbb5b4c526924ca26c6cb497c93af381e18e.sol#275-282) is not in CapWords
Parameter ERC721A.safeTransferFrom(address,address,uint256,bytes)._data (../../sc/dataset/mainnet/0xcc4cdbb5b4c526924ca26c6cb497c93af381e18e.sol#659) is not in mixedCase
Contract goblinzukiwtf (../../sc/dataset/mainnet/0xcc4cdbb5b4c526924ca26c6cb497c93af381e18e.sol#1461-1675) is not in CapWords
Parameter goblinzukiwtf.setMaxTokens(uint256)._maxTokens (../../sc/dataset/mainnet/0xcc4cdbb5b4c526924ca26c6cb497c93af381e18e.sol#1511) is not in mixedCase
Parameter goblinzukiwtf.mintAdmin(address,uint256)._to (../../sc/dataset/mainnet/0xcc4cdbb5b4c526924ca26c6cb497c93af381e18e.sol#1564) is not in mixedCase
Function goblinzukiwtf.URI(uint256) (../../sc/dataset/mainnet/0xcc4cdbb5b4c526924ca26c6cb497c93af381e18e.sol#1671-1673) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions
INFO:Detectors:
Variable goblinzukiwtf._freeMintEnabled (../../sc/dataset/mainnet/0xcc4cdbb5b4c526924ca26c6cb497c93af381e18e.sol#1471) is too similar to goblinzukiwtf.constructor(uint256,bool,bool,string,uint256,uint256,uint256).freeMintEnabled_ (../../sc/dataset/mainnet/0xcc4cdbb5b4c526924ca26c6cb497c93af381e18e.sol#1491)
Variable goblinzukiwtf._maxFreeMints (../../sc/dataset/mainnet/0xcc4cdbb5b4c526924ca26c6cb497c93af381e18e.sol#1475) is too similar to goblinzukiwtf.constructor(uint256,bool,bool,string,uint256,uint256,uint256).maxFreeMints_ (../../sc/dataset/mainnet/0xcc4cdbb5b4c526924ca26c6cb497c93af381e18e.sol#1491)
Variable goblinzukiwtf._maxFreeMints (../../sc/dataset/mainnet/0xcc4cdbb5b4c526924ca26c6cb497c93af381e18e.sol#1475) is too similar to goblinzukiwtf.setMaxFreeMints(uint256).maxFreeMints_ (../../sc/dataset/mainnet/0xcc4cdbb5b4c526924ca26c6cb497c93af381e18e.sol#1519)
Variable goblinzukiwtf._maxMintForUser (../../sc/dataset/mainnet/0xcc4cdbb5b4c526924ca26c6cb497c93af381e18e.sol#1473) is too similar to goblinzukiwtf.constructor(uint256,bool,bool,string,uint256,uint256,uint256).maxMintForUser_ (../../sc/dataset/mainnet/0xcc4cdbb5b4c526924ca26c6cb497c93af381e18e.sol#1491)
Variable goblinzukiwtf._maxMintForUser (../../sc/dataset/mainnet/0xcc4cdbb5b4c526924ca26c6cb497c93af381e18e.sol#1473) is too similar to goblinzukiwtf.setMaxMintForUser(uint256).maxMintForUser_ (../../sc/dataset/mainnet/0xcc4cdbb5b4c526924ca26c6cb497c93af381e18e.sol#1515)
Variable goblinzukiwtf._saleEnabled (../../sc/dataset/mainnet/0xcc4cdbb5b4c526924ca26c6cb497c93af381e18e.sol#1469) is too similar to goblinzukiwtf.constructor(uint256,bool,bool,string,uint256,uint256,uint256).saleEnabled_ (../../sc/dataset/mainnet/0xcc4cdbb5b4c526924ca26c6cb497c93af381e18e.sol#1491)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#variable-names-too-similar
INFO:Slither:/bdata2/sc/dataset/mainnet/0xcc4cdbb5b4c526924ca26c6cb497c93af381e18e.sol analyzed (8 contracts with 85 detectors), 69 result(s) found
