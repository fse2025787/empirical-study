INFO:Detectors:
ODA.sendETHToFee(uint256) (../../sc/dataset/mainnet/0xaA95B320D38F2CC83D1b94DF4832F4b164c60fFb.sol#293-295) sends eth to arbitrary user
	Dangerous calls:
	- _feeAddrWallet.transfer(amount) (../../sc/dataset/mainnet/0xaA95B320D38F2CC83D1b94DF4832F4b164c60fFb.sol#294)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#functions-that-send-ether-to-arbitrary-destinations
INFO:Detectors:
Reentrancy in ODA._transfer(address,address,uint256) (../../sc/dataset/mainnet/0xaA95B320D38F2CC83D1b94DF4832F4b164c60fFb.sol#235-267):
	External calls:
	- swapTokensForEth(contractTokenBalance) (../../sc/dataset/mainnet/0xaA95B320D38F2CC83D1b94DF4832F4b164c60fFb.sol#255)
		- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (../../sc/dataset/mainnet/0xaA95B320D38F2CC83D1b94DF4832F4b164c60fFb.sol#274-280)
	External calls sending eth:
	- sendETHToFee(address(this).balance) (../../sc/dataset/mainnet/0xaA95B320D38F2CC83D1b94DF4832F4b164c60fFb.sol#258)
		- _feeAddrWallet.transfer(amount) (../../sc/dataset/mainnet/0xaA95B320D38F2CC83D1b94DF4832F4b164c60fFb.sol#294)
	State variables written after the call(s):
	- _tokenTransfer(from,to,amount) (../../sc/dataset/mainnet/0xaA95B320D38F2CC83D1b94DF4832F4b164c60fFb.sol#266)
		- _rOwned[address(this)] = _rOwned[address(this)].add(rTeam) (../../sc/dataset/mainnet/0xaA95B320D38F2CC83D1b94DF4832F4b164c60fFb.sol#333)
		- _rOwned[sender] = _rOwned[sender].sub(rAmount) (../../sc/dataset/mainnet/0xaA95B320D38F2CC83D1b94DF4832F4b164c60fFb.sol#323)
		- _rOwned[recipient] = _rOwned[recipient].add(rTransferAmount) (../../sc/dataset/mainnet/0xaA95B320D38F2CC83D1b94DF4832F4b164c60fFb.sol#324)
	ODA._rOwned (../../sc/dataset/mainnet/0xaA95B320D38F2CC83D1b94DF4832F4b164c60fFb.sol#132) can be used in cross function reentrancies:
	- ODA._takeTeam(uint256) (../../sc/dataset/mainnet/0xaA95B320D38F2CC83D1b94DF4832F4b164c60fFb.sol#330-334)
	- ODA._transferStandard(address,address,uint256) (../../sc/dataset/mainnet/0xaA95B320D38F2CC83D1b94DF4832F4b164c60fFb.sol#321-328)
	- ODA.balanceOf(address) (../../sc/dataset/mainnet/0xaA95B320D38F2CC83D1b94DF4832F4b164c60fFb.sol#194-196)
	- ODA.constructor() (../../sc/dataset/mainnet/0xaA95B320D38F2CC83D1b94DF4832F4b164c60fFb.sol#167-176)
	- _tokenTransfer(from,to,amount) (../../sc/dataset/mainnet/0xaA95B320D38F2CC83D1b94DF4832F4b164c60fFb.sol#266)
		- _rTotal = _rTotal.sub(rFee) (../../sc/dataset/mainnet/0xaA95B320D38F2CC83D1b94DF4832F4b164c60fFb.sol#337)
	ODA._rTotal (../../sc/dataset/mainnet/0xaA95B320D38F2CC83D1b94DF4832F4b164c60fFb.sol#140) can be used in cross function reentrancies:
	- ODA._getCurrentSupply() (../../sc/dataset/mainnet/0xaA95B320D38F2CC83D1b94DF4832F4b164c60fFb.sol#383-388)
	- ODA._reflectFee(uint256,uint256) (../../sc/dataset/mainnet/0xaA95B320D38F2CC83D1b94DF4832F4b164c60fFb.sol#336-339)
	- ODA.constructor() (../../sc/dataset/mainnet/0xaA95B320D38F2CC83D1b94DF4832F4b164c60fFb.sol#167-176)
	- ODA.tokenFromReflection(uint256) (../../sc/dataset/mainnet/0xaA95B320D38F2CC83D1b94DF4832F4b164c60fFb.sol#222-226)
Reentrancy in ODA.openTrading() (../../sc/dataset/mainnet/0xaA95B320D38F2CC83D1b94DF4832F4b164c60fFb.sol#297-309):
	External calls:
	- uniswapV2Pair = IUniswapV2Factory(_uniswapV2Router.factory()).createPair(address(this),_uniswapV2Router.WETH()) (../../sc/dataset/mainnet/0xaA95B320D38F2CC83D1b94DF4832F4b164c60fFb.sol#302)
	- uniswapV2Router.addLiquidityETH{value: address(this).balance}(address(this),balanceOf(address(this)),0,0,owner(),block.timestamp) (../../sc/dataset/mainnet/0xaA95B320D38F2CC83D1b94DF4832F4b164c60fFb.sol#303)
	External calls sending eth:
	- uniswapV2Router.addLiquidityETH{value: address(this).balance}(address(this),balanceOf(address(this)),0,0,owner(),block.timestamp) (../../sc/dataset/mainnet/0xaA95B320D38F2CC83D1b94DF4832F4b164c60fFb.sol#303)
	State variables written after the call(s):
	- tradingOpen = true (../../sc/dataset/mainnet/0xaA95B320D38F2CC83D1b94DF4832F4b164c60fFb.sol#307)
	ODA.tradingOpen (../../sc/dataset/mainnet/0xaA95B320D38F2CC83D1b94DF4832F4b164c60fFb.sol#154) can be used in cross function reentrancies:
	- ODA.openTrading() (../../sc/dataset/mainnet/0xaA95B320D38F2CC83D1b94DF4832F4b164c60fFb.sol#297-309)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities
INFO:Detectors:
ODA.openTrading() (../../sc/dataset/mainnet/0xaA95B320D38F2CC83D1b94DF4832F4b164c60fFb.sol#297-309) ignores return value by uniswapV2Router.addLiquidityETH{value: address(this).balance}(address(this),balanceOf(address(this)),0,0,owner(),block.timestamp) (../../sc/dataset/mainnet/0xaA95B320D38F2CC83D1b94DF4832F4b164c60fFb.sol#303)
ODA.openTrading() (../../sc/dataset/mainnet/0xaA95B320D38F2CC83D1b94DF4832F4b164c60fFb.sol#297-309) ignores return value by IERC20(uniswapV2Pair).approve(address(uniswapV2Router),type()(uint256).max) (../../sc/dataset/mainnet/0xaA95B320D38F2CC83D1b94DF4832F4b164c60fFb.sol#308)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return
INFO:Detectors:
ODA.allowance(address,address).owner (../../sc/dataset/mainnet/0xaA95B320D38F2CC83D1b94DF4832F4b164c60fFb.sol#203) shadows:
	- Ownable.owner() (../../sc/dataset/mainnet/0xaA95B320D38F2CC83D1b94DF4832F4b164c60fFb.sol#90-92) (function)
ODA._approve(address,address,uint256).owner (../../sc/dataset/mainnet/0xaA95B320D38F2CC83D1b94DF4832F4b164c60fFb.sol#228) shadows:
	- Ownable.owner() (../../sc/dataset/mainnet/0xaA95B320D38F2CC83D1b94DF4832F4b164c60fFb.sol#90-92) (function)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing
INFO:Detectors:
ODA.setStandardTax(uint256) (../../sc/dataset/mainnet/0xaA95B320D38F2CC83D1b94DF4832F4b164c60fFb.sol#283-286) should emit an event for: 
	- _standardTax = newTax (../../sc/dataset/mainnet/0xaA95B320D38F2CC83D1b94DF4832F4b164c60fFb.sol#285) 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-arithmetic
INFO:Detectors:
Reentrancy in ODA._transfer(address,address,uint256) (../../sc/dataset/mainnet/0xaA95B320D38F2CC83D1b94DF4832F4b164c60fFb.sol#235-267):
	External calls:
	- swapTokensForEth(contractTokenBalance) (../../sc/dataset/mainnet/0xaA95B320D38F2CC83D1b94DF4832F4b164c60fFb.sol#255)
		- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (../../sc/dataset/mainnet/0xaA95B320D38F2CC83D1b94DF4832F4b164c60fFb.sol#274-280)
	External calls sending eth:
	- sendETHToFee(address(this).balance) (../../sc/dataset/mainnet/0xaA95B320D38F2CC83D1b94DF4832F4b164c60fFb.sol#258)
		- _feeAddrWallet.transfer(amount) (../../sc/dataset/mainnet/0xaA95B320D38F2CC83D1b94DF4832F4b164c60fFb.sol#294)
	State variables written after the call(s):
	- _tokenTransfer(from,to,amount) (../../sc/dataset/mainnet/0xaA95B320D38F2CC83D1b94DF4832F4b164c60fFb.sol#266)
		- _tFeeTotal = _tFeeTotal.add(tFee) (../../sc/dataset/mainnet/0xaA95B320D38F2CC83D1b94DF4832F4b164c60fFb.sol#338)
Reentrancy in ODA.openTrading() (../../sc/dataset/mainnet/0xaA95B320D38F2CC83D1b94DF4832F4b164c60fFb.sol#297-309):
	External calls:
	- uniswapV2Pair = IUniswapV2Factory(_uniswapV2Router.factory()).createPair(address(this),_uniswapV2Router.WETH()) (../../sc/dataset/mainnet/0xaA95B320D38F2CC83D1b94DF4832F4b164c60fFb.sol#302)
	- uniswapV2Router.addLiquidityETH{value: address(this).balance}(address(this),balanceOf(address(this)),0,0,owner(),block.timestamp) (../../sc/dataset/mainnet/0xaA95B320D38F2CC83D1b94DF4832F4b164c60fFb.sol#303)
	External calls sending eth:
	- uniswapV2Router.addLiquidityETH{value: address(this).balance}(address(this),balanceOf(address(this)),0,0,owner(),block.timestamp) (../../sc/dataset/mainnet/0xaA95B320D38F2CC83D1b94DF4832F4b164c60fFb.sol#303)
	State variables written after the call(s):
	- cooldownEnabled = true (../../sc/dataset/mainnet/0xaA95B320D38F2CC83D1b94DF4832F4b164c60fFb.sol#305)
	- swapEnabled = true (../../sc/dataset/mainnet/0xaA95B320D38F2CC83D1b94DF4832F4b164c60fFb.sol#304)
Reentrancy in ODA.transferFrom(address,address,uint256) (../../sc/dataset/mainnet/0xaA95B320D38F2CC83D1b94DF4832F4b164c60fFb.sol#212-216):
	External calls:
	- _transfer(sender,recipient,amount) (../../sc/dataset/mainnet/0xaA95B320D38F2CC83D1b94DF4832F4b164c60fFb.sol#213)
		- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (../../sc/dataset/mainnet/0xaA95B320D38F2CC83D1b94DF4832F4b164c60fFb.sol#274-280)
	External calls sending eth:
	- _transfer(sender,recipient,amount) (../../sc/dataset/mainnet/0xaA95B320D38F2CC83D1b94DF4832F4b164c60fFb.sol#213)
		- _feeAddrWallet.transfer(amount) (../../sc/dataset/mainnet/0xaA95B320D38F2CC83D1b94DF4832F4b164c60fFb.sol#294)
	State variables written after the call(s):
	- _approve(sender,_msgSender(),_allowances[sender][_msgSender()].sub(amount,ERC20: transfer amount exceeds allowance)) (../../sc/dataset/mainnet/0xaA95B320D38F2CC83D1b94DF4832F4b164c60fFb.sol#214)
		- _allowances[owner][spender] = amount (../../sc/dataset/mainnet/0xaA95B320D38F2CC83D1b94DF4832F4b164c60fFb.sol#231)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2
INFO:Detectors:
Reentrancy in ODA._transfer(address,address,uint256) (../../sc/dataset/mainnet/0xaA95B320D38F2CC83D1b94DF4832F4b164c60fFb.sol#235-267):
	External calls:
	- swapTokensForEth(contractTokenBalance) (../../sc/dataset/mainnet/0xaA95B320D38F2CC83D1b94DF4832F4b164c60fFb.sol#255)
		- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (../../sc/dataset/mainnet/0xaA95B320D38F2CC83D1b94DF4832F4b164c60fFb.sol#274-280)
	External calls sending eth:
	- sendETHToFee(address(this).balance) (../../sc/dataset/mainnet/0xaA95B320D38F2CC83D1b94DF4832F4b164c60fFb.sol#258)
		- _feeAddrWallet.transfer(amount) (../../sc/dataset/mainnet/0xaA95B320D38F2CC83D1b94DF4832F4b164c60fFb.sol#294)
	Event emitted after the call(s):
	- Transfer(sender,recipient,tTransferAmount) (../../sc/dataset/mainnet/0xaA95B320D38F2CC83D1b94DF4832F4b164c60fFb.sol#327)
		- _tokenTransfer(from,to,amount) (../../sc/dataset/mainnet/0xaA95B320D38F2CC83D1b94DF4832F4b164c60fFb.sol#266)
Reentrancy in ODA.transferFrom(address,address,uint256) (../../sc/dataset/mainnet/0xaA95B320D38F2CC83D1b94DF4832F4b164c60fFb.sol#212-216):
	External calls:
	- _transfer(sender,recipient,amount) (../../sc/dataset/mainnet/0xaA95B320D38F2CC83D1b94DF4832F4b164c60fFb.sol#213)
		- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (../../sc/dataset/mainnet/0xaA95B320D38F2CC83D1b94DF4832F4b164c60fFb.sol#274-280)
	External calls sending eth:
	- _transfer(sender,recipient,amount) (../../sc/dataset/mainnet/0xaA95B320D38F2CC83D1b94DF4832F4b164c60fFb.sol#213)
		- _feeAddrWallet.transfer(amount) (../../sc/dataset/mainnet/0xaA95B320D38F2CC83D1b94DF4832F4b164c60fFb.sol#294)
	Event emitted after the call(s):
	- Approval(owner,spender,amount) (../../sc/dataset/mainnet/0xaA95B320D38F2CC83D1b94DF4832F4b164c60fFb.sol#232)
		- _approve(sender,_msgSender(),_allowances[sender][_msgSender()].sub(amount,ERC20: transfer amount exceeds allowance)) (../../sc/dataset/mainnet/0xaA95B320D38F2CC83D1b94DF4832F4b164c60fFb.sol#214)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3
INFO:Detectors:
Pragma version0.8.7 (../../sc/dataset/mainnet/0xaA95B320D38F2CC83D1b94DF4832F4b164c60fFb.sol#21) allows old versions
solc-0.8.7 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity
INFO:Detectors:
Function IUniswapV2Router02.WETH() (../../sc/dataset/mainnet/0xaA95B320D38F2CC83D1b94DF4832F4b164c60fFb.sol#119) is not in mixedCase
Constant ODA._tTotal (../../sc/dataset/mainnet/0xaA95B320D38F2CC83D1b94DF4832F4b164c60fFb.sol#139) is not in UPPER_CASE_WITH_UNDERSCORES
Constant ODA._name (../../sc/dataset/mainnet/0xaA95B320D38F2CC83D1b94DF4832F4b164c60fFb.sol#148) is not in UPPER_CASE_WITH_UNDERSCORES
Constant ODA._symbol (../../sc/dataset/mainnet/0xaA95B320D38F2CC83D1b94DF4832F4b164c60fFb.sol#149) is not in UPPER_CASE_WITH_UNDERSCORES
Constant ODA._decimals (../../sc/dataset/mainnet/0xaA95B320D38F2CC83D1b94DF4832F4b164c60fFb.sol#150) is not in UPPER_CASE_WITH_UNDERSCORES
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions
INFO:Detectors:
Reentrancy in ODA._transfer(address,address,uint256) (../../sc/dataset/mainnet/0xaA95B320D38F2CC83D1b94DF4832F4b164c60fFb.sol#235-267):
	External calls:
	- sendETHToFee(address(this).balance) (../../sc/dataset/mainnet/0xaA95B320D38F2CC83D1b94DF4832F4b164c60fFb.sol#258)
		- _feeAddrWallet.transfer(amount) (../../sc/dataset/mainnet/0xaA95B320D38F2CC83D1b94DF4832F4b164c60fFb.sol#294)
	State variables written after the call(s):
	- _tokenTransfer(from,to,amount) (../../sc/dataset/mainnet/0xaA95B320D38F2CC83D1b94DF4832F4b164c60fFb.sol#266)
		- _rOwned[address(this)] = _rOwned[address(this)].add(rTeam) (../../sc/dataset/mainnet/0xaA95B320D38F2CC83D1b94DF4832F4b164c60fFb.sol#333)
		- _rOwned[sender] = _rOwned[sender].sub(rAmount) (../../sc/dataset/mainnet/0xaA95B320D38F2CC83D1b94DF4832F4b164c60fFb.sol#323)
		- _rOwned[recipient] = _rOwned[recipient].add(rTransferAmount) (../../sc/dataset/mainnet/0xaA95B320D38F2CC83D1b94DF4832F4b164c60fFb.sol#324)
	- _tokenTransfer(from,to,amount) (../../sc/dataset/mainnet/0xaA95B320D38F2CC83D1b94DF4832F4b164c60fFb.sol#266)
		- _rTotal = _rTotal.sub(rFee) (../../sc/dataset/mainnet/0xaA95B320D38F2CC83D1b94DF4832F4b164c60fFb.sol#337)
	- _tokenTransfer(from,to,amount) (../../sc/dataset/mainnet/0xaA95B320D38F2CC83D1b94DF4832F4b164c60fFb.sol#266)
		- _tFeeTotal = _tFeeTotal.add(tFee) (../../sc/dataset/mainnet/0xaA95B320D38F2CC83D1b94DF4832F4b164c60fFb.sol#338)
	Event emitted after the call(s):
	- Transfer(sender,recipient,tTransferAmount) (../../sc/dataset/mainnet/0xaA95B320D38F2CC83D1b94DF4832F4b164c60fFb.sol#327)
		- _tokenTransfer(from,to,amount) (../../sc/dataset/mainnet/0xaA95B320D38F2CC83D1b94DF4832F4b164c60fFb.sol#266)
Reentrancy in ODA.transferFrom(address,address,uint256) (../../sc/dataset/mainnet/0xaA95B320D38F2CC83D1b94DF4832F4b164c60fFb.sol#212-216):
	External calls:
	- _transfer(sender,recipient,amount) (../../sc/dataset/mainnet/0xaA95B320D38F2CC83D1b94DF4832F4b164c60fFb.sol#213)
		- _feeAddrWallet.transfer(amount) (../../sc/dataset/mainnet/0xaA95B320D38F2CC83D1b94DF4832F4b164c60fFb.sol#294)
	State variables written after the call(s):
	- _approve(sender,_msgSender(),_allowances[sender][_msgSender()].sub(amount,ERC20: transfer amount exceeds allowance)) (../../sc/dataset/mainnet/0xaA95B320D38F2CC83D1b94DF4832F4b164c60fFb.sol#214)
		- _allowances[owner][spender] = amount (../../sc/dataset/mainnet/0xaA95B320D38F2CC83D1b94DF4832F4b164c60fFb.sol#231)
	Event emitted after the call(s):
	- Approval(owner,spender,amount) (../../sc/dataset/mainnet/0xaA95B320D38F2CC83D1b94DF4832F4b164c60fFb.sol#232)
		- _approve(sender,_msgSender(),_allowances[sender][_msgSender()].sub(amount,ERC20: transfer amount exceeds allowance)) (../../sc/dataset/mainnet/0xaA95B320D38F2CC83D1b94DF4832F4b164c60fFb.sol#214)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-4
INFO:Detectors:
Variable ODA._getRValues(uint256,uint256,uint256,uint256).rTransferAmount (../../sc/dataset/mainnet/0xaA95B320D38F2CC83D1b94DF4832F4b164c60fFb.sol#374) is too similar to ODA._transferStandard(address,address,uint256).tTransferAmount (../../sc/dataset/mainnet/0xaA95B320D38F2CC83D1b94DF4832F4b164c60fFb.sol#322)
Variable ODA._transferStandard(address,address,uint256).rTransferAmount (../../sc/dataset/mainnet/0xaA95B320D38F2CC83D1b94DF4832F4b164c60fFb.sol#322) is too similar to ODA._transferStandard(address,address,uint256).tTransferAmount (../../sc/dataset/mainnet/0xaA95B320D38F2CC83D1b94DF4832F4b164c60fFb.sol#322)
Variable ODA._getRValues(uint256,uint256,uint256,uint256).rTransferAmount (../../sc/dataset/mainnet/0xaA95B320D38F2CC83D1b94DF4832F4b164c60fFb.sol#374) is too similar to ODA._getValues(uint256).tTransferAmount (../../sc/dataset/mainnet/0xaA95B320D38F2CC83D1b94DF4832F4b164c60fFb.sol#357)
Variable ODA._transferStandard(address,address,uint256).rTransferAmount (../../sc/dataset/mainnet/0xaA95B320D38F2CC83D1b94DF4832F4b164c60fFb.sol#322) is too similar to ODA._getValues(uint256).tTransferAmount (../../sc/dataset/mainnet/0xaA95B320D38F2CC83D1b94DF4832F4b164c60fFb.sol#357)
Variable ODA._getValues(uint256).rTransferAmount (../../sc/dataset/mainnet/0xaA95B320D38F2CC83D1b94DF4832F4b164c60fFb.sol#359) is too similar to ODA._transferStandard(address,address,uint256).tTransferAmount (../../sc/dataset/mainnet/0xaA95B320D38F2CC83D1b94DF4832F4b164c60fFb.sol#322)
Variable ODA._getValues(uint256).rTransferAmount (../../sc/dataset/mainnet/0xaA95B320D38F2CC83D1b94DF4832F4b164c60fFb.sol#359) is too similar to ODA._getValues(uint256).tTransferAmount (../../sc/dataset/mainnet/0xaA95B320D38F2CC83D1b94DF4832F4b164c60fFb.sol#357)
Variable ODA._getValues(uint256).rTransferAmount (../../sc/dataset/mainnet/0xaA95B320D38F2CC83D1b94DF4832F4b164c60fFb.sol#359) is too similar to ODA._getTValues(uint256,uint256,uint256).tTransferAmount (../../sc/dataset/mainnet/0xaA95B320D38F2CC83D1b94DF4832F4b164c60fFb.sol#366)
Variable ODA._getRValues(uint256,uint256,uint256,uint256).rTransferAmount (../../sc/dataset/mainnet/0xaA95B320D38F2CC83D1b94DF4832F4b164c60fFb.sol#374) is too similar to ODA._getTValues(uint256,uint256,uint256).tTransferAmount (../../sc/dataset/mainnet/0xaA95B320D38F2CC83D1b94DF4832F4b164c60fFb.sol#366)
Variable ODA._transferStandard(address,address,uint256).rTransferAmount (../../sc/dataset/mainnet/0xaA95B320D38F2CC83D1b94DF4832F4b164c60fFb.sol#322) is too similar to ODA._getTValues(uint256,uint256,uint256).tTransferAmount (../../sc/dataset/mainnet/0xaA95B320D38F2CC83D1b94DF4832F4b164c60fFb.sol#366)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#variable-names-too-similar
INFO:Detectors:
ODA.slitherConstructorConstantVariables() (../../sc/dataset/mainnet/0xaA95B320D38F2CC83D1b94DF4832F4b164c60fFb.sol#130-390) uses literals with too many digits:
	- _tTotal = 100000000 * 10 ** 9 (../../sc/dataset/mainnet/0xaA95B320D38F2CC83D1b94DF4832F4b164c60fFb.sol#139)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits
INFO:Detectors:
ODA._tOwned (../../sc/dataset/mainnet/0xaA95B320D38F2CC83D1b94DF4832F4b164c60fFb.sol#133) is never used in ODA (../../sc/dataset/mainnet/0xaA95B320D38F2CC83D1b94DF4832F4b164c60fFb.sol#130-390)
ODA.cooldown (../../sc/dataset/mainnet/0xaA95B320D38F2CC83D1b94DF4832F4b164c60fFb.sol#137) is never used in ODA (../../sc/dataset/mainnet/0xaA95B320D38F2CC83D1b94DF4832F4b164c60fFb.sol#130-390)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-state-variable
INFO:Detectors:
ODA._feeAddrWallet (../../sc/dataset/mainnet/0xaA95B320D38F2CC83D1b94DF4832F4b164c60fFb.sol#146) should be immutable 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-immutable
INFO:Slither:/bdata2/sc/dataset/mainnet/0xaA95B320D38F2CC83D1b94DF4832F4b164c60fFb.sol analyzed (7 contracts with 85 detectors), 35 result(s) found
