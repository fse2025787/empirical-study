Compilation warnings/errors on /bdata2/sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol:
Warning: Contract code size exceeds 24576 bytes (a limit introduced in Spurious Dragon). This contract may not be deployable on mainnet. Consider enabling the optimizer (with a low "runs" value!), turning off revert strings, or using libraries.
    --> /bdata2/sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol:1268:1:
     |
1268 | contract BishopStableSwapV2 is StableSwapV2, ITrancheIndexV2 {
     | ^ (Relevant source part starts here and spans across multiple lines).


INFO:Detectors:
StableSwapV2.removeLiquidityUnwrap(uint256,uint256,uint256,uint256) (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#808-824) sends eth to arbitrary user
	Dangerous calls:
	- (success) = msg.sender.call{value: quoteOut}() (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#822)
StableSwapV2.removeQuoteLiquidityUnwrap(uint256,uint256,uint256) (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#901-917) sends eth to arbitrary user
	Dangerous calls:
	- (success) = msg.sender.call{value: quoteOut}() (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#915)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#functions-that-send-ether-to-arbitrary-destinations
INFO:Detectors:
StableSwapV2._getD(uint256,uint256,uint256,uint256) (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#985-1008) performs a multiplication on the result of a division:
	- d3 = d.mul(d).div(baseValue).mul(d) / normalizedQuote / 4 (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#1001)
StableSwapV2._getD(uint256,uint256,uint256,uint256) (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#985-1008) performs a multiplication on the result of a division:
	- d3 = d.mul(d).div(baseValue).mul(d) / normalizedQuote / 4 (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#1001)
	- d = (sum.mul(4 * ampl) + 2 * d3).mul(d) / d.mul(4 * ampl - 1).add(3 * d3) (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#1002)
StableSwapV2._getBase(uint256,uint256,uint256,uint256) (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#1027-1049) performs a multiplication on the result of a division:
	- d3 = d.mul(d).div(normalizedQuote).mul(d) / (16 * ampl) (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#1036)
StableSwapV2._getQuote(uint256,uint256,uint256,uint256) (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#1051-1073) performs a multiplication on the result of a division:
	- d3 = d.mul(d).div(baseValue).mul(d) / (16 * ampl) (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#1060)
AdvancedMath.cbrt(uint256) (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#2062-2099) performs a multiplication on the result of a division:
	- x1 = (2 * x0 + s / x0 / x0) / 3 (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#2093)
	- x0 = x1 (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#2095)
	- x1 = (2 * x0 + s / x0 / x0) / 3 (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#2096)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#divide-before-multiply
INFO:Detectors:
StableSwapV2._getD(uint256,uint256,uint256,uint256) (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#985-1008) uses a dangerous strict equality:
	- sum == 0 (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#995)
StableSwapV2.getCurrentPrice() (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#551-560) uses a dangerous strict equality:
	- base == 0 || quote == 0 (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#554)
StableSwapV2.getCurrentPriceOverOracle() (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#535-544) uses a dangerous strict equality:
	- base == 0 || quote == 0 (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#537)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dangerous-strict-equalities
INFO:Detectors:
BishopStableSwapV2._handleRebalance(uint256) (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#1355-1408) ignores return value by IPrimaryMarketV3(fund.primaryMarket()).split(address(this),excessiveQ,latestVersion) (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#1381-1385)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return
INFO:Detectors:
StableSwapV2.constructor(address,address,uint256,address,uint256,uint256,address,uint256,uint256).lpToken_ (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#469) lacks a zero-check on :
		- lpToken = lpToken_ (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#479)
StableSwapV2.constructor(address,address,uint256,address,uint256,uint256,address,uint256,uint256).quoteAddress_ (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#472) lacks a zero-check on :
		- quoteAddress = quoteAddress_ (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#482)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation
INFO:Detectors:
Reentrancy in StableSwapV2._removeQuoteLiquidity(uint256,uint256,uint256) (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#919-945):
	External calls:
	- ILiquidityGauge(lpToken).burnFrom(msg.sender,lpIn) (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#940)
	State variables written after the call(s):
	- quoteBalance = newQuote.add(fee).sub(adminFee) (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#943)
	- totalAdminFee = totalAdminFee.add(adminFee) (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#942)
Reentrancy in StableSwapV2.buy(uint256,uint256,address,bytes) (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#627-667):
	External calls:
	- fund.trancheTransfer(baseTranche,recipient,baseOut,version) (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#645)
	- ITranchessSwapCallee(msg.sender).tranchessSwapCallback(baseOut,0,data) (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#647)
	State variables written after the call(s):
	- _updatePriceOverOracleIntegral(oldBase,oldQuote,ampl,oraclePrice,oldD) (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#657)
		- _priceOverOracleIntegral += _getPriceOverOracle(base,quote,ampl,oraclePrice,d) * (block.timestamp - _priceOverOracleTimestamp) (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#979-981)
	- _updatePriceOverOracleIntegral(oldBase,oldQuote,ampl,oraclePrice,oldD) (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#657)
		- _priceOverOracleTimestamp = block.timestamp (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#982)
	- baseBalance = oldBase - baseOut (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#662)
	- quoteBalance = newQuote.sub(adminFee) (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#663)
	- totalAdminFee = totalAdminFee.add(adminFee) (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#664)
Reentrancy in StableSwapV2.removeBaseLiquidity(uint256,uint256,uint256) (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#848-877):
	External calls:
	- ILiquidityGauge(lpToken).burnFrom(msg.sender,lpIn) (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#869)
	State variables written after the call(s):
	- baseBalance = newBase (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#870)
	- quoteBalance = oldQuote.sub(adminFee) (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#873)
	- totalAdminFee = totalAdminFee.add(adminFee) (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#872)
Reentrancy in StableSwapV2.sell(uint256,uint256,address,bytes) (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#669-714):
	External calls:
	- IERC20(quoteAddress).safeTransfer(recipient,quoteOut) (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#686)
	- ITranchessSwapCallee(msg.sender).tranchessSwapCallback(0,quoteOut,data) (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#688)
	State variables written after the call(s):
	- _updatePriceOverOracleIntegral(oldBase,oldQuote,ampl,oraclePrice,oldD) (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#704)
		- _priceOverOracleIntegral += _getPriceOverOracle(base,quote,ampl,oraclePrice,d) * (block.timestamp - _priceOverOracleTimestamp) (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#979-981)
	- _updatePriceOverOracleIntegral(oldBase,oldQuote,ampl,oraclePrice,oldD) (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#704)
		- _priceOverOracleTimestamp = block.timestamp (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#982)
	- baseBalance = newBase (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#709)
	- quoteBalance = oldQuote - quoteOut - adminFee (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#710)
	- totalAdminFee = totalAdminFee.add(adminFee) (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#711)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2
INFO:Detectors:
StableSwapV2.getAmpl() (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#508-528) uses timestamp for comparisons
	Dangerous comparisons:
	- block.timestamp < endTimestamp (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#510)
	- end > start (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#514)
StableSwapV2.buy(uint256,uint256,address,bytes) (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#627-667) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(newD >= oldD,Invariant mismatch) (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#659)
StableSwapV2.sell(uint256,uint256,address,bytes) (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#669-714) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(newD >= oldD,Invariant mismatch) (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#706)
StableSwapV2.addLiquidity(uint256,address) (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#721-782) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(newBase > 0 && newQuote > 0,Zero initial balance) (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#736)
	- require(bool,string)(d2 > d0,No liquidity is added) (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#768)
	- idealQuote > newQuote (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#758-759)
StableSwapV2._getD(uint256,uint256,uint256,uint256) (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#985-1008) uses timestamp for comparisons
	Dangerous comparisons:
	- sum == 0 (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#995)
	- d <= prev + 1 && prev <= d + 1 (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#1003)
StableSwapV2._getBase(uint256,uint256,uint256,uint256) (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#1027-1049) uses timestamp for comparisons
	Dangerous comparisons:
	- baseValue <= prev + 1 && prev <= baseValue + 1 (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#1044)
StableSwapV2._getQuote(uint256,uint256,uint256,uint256) (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#1051-1073) uses timestamp for comparisons
	Dangerous comparisons:
	- normalizedQuote <= prev + 1 && prev <= normalizedQuote + 1 (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#1068)
StableSwapV2.updateAmplRamp(uint256,uint256) (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#1075-1089) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(endTimestamp >= block.timestamp + AMPL_RAMP_MIN_TIME,A ramp time too short) (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#1077)
	- require(bool,string)((endAmpl >= ampl && endAmpl <= ampl * AMPL_RAMP_MAX_CHANGE) || (endAmpl < ampl && endAmpl * AMPL_RAMP_MAX_CHANGE >= ampl),A ramp change too large) (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#1079-1083)
BishopStableSwapV2._getRebalanceResult(uint256) (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#1308-1353) uses timestamp for comparisons
	Dangerous comparisons:
	- newBase < oldBaseBalance (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#1336)
	- newBase < oldBaseBalance (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#1343)
BishopStableSwapV2._handleRebalance(uint256) (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#1355-1408) uses timestamp for comparisons
	Dangerous comparisons:
	- excessiveQ > 0 (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#1379)
	- excessiveR > 0 (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#1380)
	- excessiveB > 0 (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#1391)
	- excessiveR > 0 (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#1394)
	- excessiveQuote > 0 (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#1397)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp
INFO:Detectors:
Address.isContract(address) (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#2127-2136) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#2134)
Address._verifyCallResult(bool,bytes,string) (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#2272-2289) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#2281-2284)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage
INFO:Detectors:
Different versions of Solidity are used:
	- Version used: ['>=0.6.0<0.8.0', '>=0.6.10<0.8.0', '>=0.6.2<0.8.0', '^0.6.0']
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#36)
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#61)
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#130)
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#248)
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#1176)
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#1549)
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#1625)
	- >=0.6.10<0.8.0 (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#6)
	- >=0.6.10<0.8.0 (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#363)
	- >=0.6.10<0.8.0 (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#379)
	- >=0.6.10<0.8.0 (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#1253)
	- >=0.6.10<0.8.0 (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#1260)
	- >=0.6.10<0.8.0 (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#1474)
	- >=0.6.10<0.8.0 (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#1839)
	- >=0.6.10<0.8.0 (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#1878)
	- >=0.6.10<0.8.0 (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#1889)
	- >=0.6.10<0.8.0 (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#1920)
	- >=0.6.10<0.8.0 (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#2016)
	- >=0.6.10<0.8.0 (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#2293)
	- >=0.6.10<0.8.0 (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#2532)
	- >=0.6.2<0.8.0 (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#2104)
	- ABIEncoderV2 (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#2)
	- ^0.6.0 (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#1419)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#different-pragma-directives-are-used
INFO:Detectors:
Address.functionCall(address,bytes) (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#2180-2182) is never used and should be removed
Address.functionCallWithValue(address,bytes,uint256) (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#2205-2207) is never used and should be removed
Address.functionDelegateCall(address,bytes) (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#2254-2256) is never used and should be removed
Address.functionDelegateCall(address,bytes,string) (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#2264-2270) is never used and should be removed
Address.functionStaticCall(address,bytes) (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#2230-2232) is never used and should be removed
Address.functionStaticCall(address,bytes,string) (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#2240-2246) is never used and should be removed
Address.sendValue(address,uint256) (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#2154-2160) is never used and should be removed
AdvancedMath.cbrt(uint256) (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#2062-2099) is never used and should be removed
AdvancedMath.sqrt(uint256) (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#2022-2059) is never used and should be removed
Context._msgData() (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#53-56) is never used and should be removed
SafeDecimalMath.decimalToPreciseDecimal(uint256) (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#1980-1982) is never used and should be removed
SafeDecimalMath.divideDecimalPrecise(uint256,uint256) (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#1972-1975) is never used and should be removed
SafeDecimalMath.multiplyDecimalPrecise(uint256,uint256) (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#1953-1956) is never used and should be removed
SafeDecimalMath.preciseDecimalToDecimal(uint256) (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#1987-1995) is never used and should be removed
SafeDecimalMath.saturatingMul(uint256,uint256) (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#2001-2007) is never used and should be removed
SafeDecimalMath.saturatingMultiplyDecimal(uint256,uint256) (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#2009-2012) is never used and should be removed
SafeERC20.safeApprove(IERC20,address,uint256) (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#1583-1592) is never used and should be removed
SafeERC20.safeDecreaseAllowance(IERC20,address,uint256) (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#1599-1602) is never used and should be removed
SafeERC20.safeIncreaseAllowance(IERC20,address,uint256) (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#1594-1597) is never used and should be removed
SafeERC20.safeTransferFrom(IERC20,address,address,uint256) (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#1572-1574) is never used and should be removed
SafeMath.div(uint256,uint256,string) (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#1812-1815) is never used and should be removed
SafeMath.mod(uint256,uint256) (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#1774-1777) is never used and should be removed
SafeMath.mod(uint256,uint256,string) (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#1832-1835) is never used and should be removed
SafeMath.sub(uint256,uint256,string) (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#1792-1795) is never used and should be removed
SafeMath.tryAdd(uint256,uint256) (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#1646-1650) is never used and should be removed
SafeMath.tryDiv(uint256,uint256) (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#1682-1685) is never used and should be removed
SafeMath.tryMod(uint256,uint256) (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#1692-1695) is never used and should be removed
SafeMath.tryMul(uint256,uint256) (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#1667-1675) is never used and should be removed
SafeMath.trySub(uint256,uint256) (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#1657-1660) is never used and should be removed
StableSwapV2._checkVersion(uint256) (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#1127) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code
INFO:Detectors:
Pragma version>=0.6.10<0.8.0 (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#6) is too complex
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#36) is too complex
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#61) is too complex
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#130) is too complex
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#248) is too complex
Pragma version>=0.6.10<0.8.0 (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#363) is too complex
Pragma version>=0.6.10<0.8.0 (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#379) is too complex
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#1176) is too complex
Pragma version>=0.6.10<0.8.0 (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#1253) is too complex
Pragma version>=0.6.10<0.8.0 (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#1260) is too complex
Pragma version^0.6.0 (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#1419) allows old versions
Pragma version>=0.6.10<0.8.0 (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#1474) is too complex
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#1549) is too complex
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#1625) is too complex
Pragma version>=0.6.10<0.8.0 (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#1839) is too complex
Pragma version>=0.6.10<0.8.0 (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#1878) is too complex
Pragma version>=0.6.10<0.8.0 (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#1889) is too complex
Pragma version>=0.6.10<0.8.0 (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#1920) is too complex
Pragma version>=0.6.10<0.8.0 (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#2016) is too complex
Pragma version>=0.6.2<0.8.0 (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#2104) is too complex
Pragma version>=0.6.10<0.8.0 (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#2293) is too complex
Pragma version>=0.6.10<0.8.0 (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#2532) is too complex
solc-0.6.12 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity
INFO:Detectors:
Low level call in StableSwapV2.removeLiquidityUnwrap(uint256,uint256,uint256,uint256) (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#808-824):
	- (success) = msg.sender.call{value: quoteOut}() (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#822)
Low level call in StableSwapV2.removeQuoteLiquidityUnwrap(uint256,uint256,uint256) (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#901-917):
	- (success) = msg.sender.call{value: quoteOut}() (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#915)
Low level call in Address.sendValue(address,uint256) (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#2154-2160):
	- (success) = recipient.call{value: amount}() (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#2158)
Low level call in Address.functionCallWithValue(address,bytes,uint256,string) (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#2215-2222):
	- (success,returndata) = target.call{value: value}(data) (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#2220)
Low level call in Address.functionStaticCall(address,bytes,string) (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#2240-2246):
	- (success,returndata) = target.staticcall(data) (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#2244)
Low level call in Address.functionDelegateCall(address,bytes,string) (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#2264-2270):
	- (success,returndata) = target.delegatecall(data) (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#2268)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls
INFO:Detectors:
Variable StableSwapV2._quoteDecimalMultiplier (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#450) is not in mixedCase
Constant SafeDecimalMath.highPrecisionDecimals (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#1929) is not in UPPER_CASE_WITH_UNDERSCORES
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions
INFO:Detectors:
Redundant expression "this (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#54)" inContext (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#48-57)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#redundant-statements
INFO:Detectors:
ITrancheIndexV2.TRANCHE_COUNT (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#375) is never used in BishopStableSwapV2 (../../sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol#1268-1416)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-state-variable
INFO:Slither:/bdata2/sc/dataset/mainnet/0xBA919470C7a2983fbcdA6ADC89Be9C43b8298079.sol analyzed (23 contracts with 85 detectors), 93 result(s) found
