INFO:Detectors:
Reentrancy in EthereumSafe._transfer(address,address,uint256) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#885-935):
	External calls:
	- swapAndLiquify(contractTokenBalance) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#904)
		- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,address(this),block.timestamp) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#1056-1063)
		- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#1037-1043)
	- distributeOwner(ownerBal) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#908)
		- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#1037-1043)
	External calls sending eth:
	- swapAndLiquify(contractTokenBalance) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#904)
		- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,address(this),block.timestamp) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#1056-1063)
	- distributeOwner(ownerBal) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#908)
		- address(ownerWallet).transfer(address(this).balance) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#1048)
	State variables written after the call(s):
	- transferAmount = collectFee(sender,amount,rate) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#915)
		- _reflectionBalance[ownerWallet] = _reflectionBalance[ownerWallet].add(ownerFee.mul(rate)) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#952)
		- _reflectionBalance[address(this)] = _reflectionBalance[address(this)].add(liquidityFee.mul(rate)) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#963)
	EthereumSafe._reflectionBalance (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#629) can be used in cross function reentrancies:
	- EthereumSafe._getReflectionRate() (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#984-1000)
	- EthereumSafe._transfer(address,address,uint256) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#885-935)
	- EthereumSafe.balanceOf(address) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#739-742)
	- EthereumSafe.collectFee(address,uint256,uint256) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#937-982)
	- EthereumSafe.constructor() (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#679-720)
	- EthereumSafe.excludeAccount(address) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#845-858)
	- _reflectionBalance[sender] = _reflectionBalance[sender].sub(amount.mul(rate)) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#920)
	EthereumSafe._reflectionBalance (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#629) can be used in cross function reentrancies:
	- EthereumSafe._getReflectionRate() (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#984-1000)
	- EthereumSafe._transfer(address,address,uint256) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#885-935)
	- EthereumSafe.balanceOf(address) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#739-742)
	- EthereumSafe.collectFee(address,uint256,uint256) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#937-982)
	- EthereumSafe.constructor() (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#679-720)
	- EthereumSafe.excludeAccount(address) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#845-858)
	- _reflectionBalance[recipient] = _reflectionBalance[recipient].add(transferAmount.mul(rate)) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#922)
	EthereumSafe._reflectionBalance (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#629) can be used in cross function reentrancies:
	- EthereumSafe._getReflectionRate() (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#984-1000)
	- EthereumSafe._transfer(address,address,uint256) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#885-935)
	- EthereumSafe.balanceOf(address) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#739-742)
	- EthereumSafe.collectFee(address,uint256,uint256) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#937-982)
	- EthereumSafe.constructor() (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#679-720)
	- EthereumSafe.excludeAccount(address) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#845-858)
	- transferAmount = collectFee(sender,amount,rate) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#915)
		- _reflectionTotal = _reflectionTotal.sub(taxFee.mul(rate)) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#944)
		- _reflectionTotal = _reflectionTotal.sub(burnFee.mul(rate)) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#976)
	EthereumSafe._reflectionTotal (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#635) can be used in cross function reentrancies:
	- EthereumSafe._getReflectionRate() (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#984-1000)
	- EthereumSafe.collectFee(address,uint256,uint256) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#937-982)
	- EthereumSafe.constructor() (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#679-720)
	- EthereumSafe.tokenFromReflection(uint256) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#832-843)
	- transferAmount = collectFee(sender,amount,rate) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#915)
		- _tokenBalance[ownerWallet] = _tokenBalance[ownerWallet].add(ownerFee) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#954)
		- _tokenBalance[address(this)] = _tokenBalance[address(this)].add(liquidityFee) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#965)
	EthereumSafe._tokenBalance (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#630) can be used in cross function reentrancies:
	- EthereumSafe._getReflectionRate() (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#984-1000)
	- EthereumSafe._transfer(address,address,uint256) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#885-935)
	- EthereumSafe.balanceOf(address) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#739-742)
	- EthereumSafe.collectFee(address,uint256,uint256) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#937-982)
	- EthereumSafe.excludeAccount(address) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#845-858)
	- EthereumSafe.includeAccount(address) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#860-871)
	- _tokenBalance[sender] = _tokenBalance[sender].sub(amount) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#926)
	EthereumSafe._tokenBalance (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#630) can be used in cross function reentrancies:
	- EthereumSafe._getReflectionRate() (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#984-1000)
	- EthereumSafe._transfer(address,address,uint256) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#885-935)
	- EthereumSafe.balanceOf(address) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#739-742)
	- EthereumSafe.collectFee(address,uint256,uint256) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#937-982)
	- EthereumSafe.excludeAccount(address) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#845-858)
	- EthereumSafe.includeAccount(address) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#860-871)
	- _tokenBalance[recipient] = _tokenBalance[recipient].add(transferAmount) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#929)
	EthereumSafe._tokenBalance (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#630) can be used in cross function reentrancies:
	- EthereumSafe._getReflectionRate() (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#984-1000)
	- EthereumSafe._transfer(address,address,uint256) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#885-935)
	- EthereumSafe.balanceOf(address) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#739-742)
	- EthereumSafe.collectFee(address,uint256,uint256) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#937-982)
	- EthereumSafe.excludeAccount(address) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#845-858)
	- EthereumSafe.includeAccount(address) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#860-871)
	- transferAmount = collectFee(sender,amount,rate) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#915)
		- _tokenTotal = _tokenTotal.sub(burnFee) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#975)
	EthereumSafe._tokenTotal (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#634) can be used in cross function reentrancies:
	- EthereumSafe._getReflectionRate() (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#984-1000)
	- EthereumSafe.collectFee(address,uint256,uint256) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#937-982)
	- EthereumSafe.constructor() (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#679-720)
	- EthereumSafe.reflectionFromToken(uint256,bool) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#816-830)
	- EthereumSafe.totalSupply() (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#734-736)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities
INFO:Detectors:
EthereumSafe.collectFee(address,uint256,uint256) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#937-982) performs a multiplication on the result of a division:
	- taxFee = amount.mul(_taxFee).div(10 ** (_feeDecimal + 2)) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#942)
	- _reflectionTotal = _reflectionTotal.sub(taxFee.mul(rate)) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#944)
EthereumSafe.collectFee(address,uint256,uint256) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#937-982) performs a multiplication on the result of a division:
	- ownerFee = amount.mul(_ownerFee).div(10 ** (_feeDecimal + 2)) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#950)
	- _reflectionBalance[ownerWallet] = _reflectionBalance[ownerWallet].add(ownerFee.mul(rate)) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#952)
EthereumSafe.collectFee(address,uint256,uint256) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#937-982) performs a multiplication on the result of a division:
	- liquidityFee = amount.mul(_liquidityFee).div(10 ** (_feeDecimal + 2)) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#961)
	- _reflectionBalance[address(this)] = _reflectionBalance[address(this)].add(liquidityFee.mul(rate)) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#963)
EthereumSafe.collectFee(address,uint256,uint256) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#937-982) performs a multiplication on the result of a division:
	- burnFee = amount.mul(_burnFee).div(10 ** (_feeDecimal + 2)) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#973)
	- _reflectionTotal = _reflectionTotal.sub(burnFee.mul(rate)) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#976)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#divide-before-multiply
INFO:Detectors:
EthereumSafe.addLiquidity(uint256,uint256) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#1051-1064) ignores return value by uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,address(this),block.timestamp) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#1056-1063)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return
INFO:Detectors:
EthereumSafe.allowance(address,address).owner (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#754) shadows:
	- Ownable.owner() (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#510-512) (function)
EthereumSafe._approve(address,address,uint256).owner (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#874) shadows:
	- Ownable.owner() (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#510-512) (function)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing
INFO:Detectors:
EthereumSafe.setTaxFee(uint256) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#1083-1085) should emit an event for: 
	- _taxFee = fee (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#1084) 
EthereumSafe.setBurnFee(uint256) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#1087-1089) should emit an event for: 
	- _burnFee = fee (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#1088) 
EthereumSafe.setOwnerFee(uint256) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#1091-1093) should emit an event for: 
	- _ownerFee = fee (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#1092) 
EthereumSafe.setLiquidityFee(uint256) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#1095-1097) should emit an event for: 
	- _liquidityFee = fee (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#1096) 
EthereumSafe.setMaxTxAmount(uint256) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#1099-1101) should emit an event for: 
	- maxTxAmount = amount (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#1100) 
EthereumSafe.setMinTokensBeforeSwap(uint256) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#1103-1105) should emit an event for: 
	- minTokensBeforeSwap = amount (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#1104) 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-arithmetic
INFO:Detectors:
EthereumSafe.setPair(address).pair (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#1066) lacks a zero-check on :
		- uniswapV2Pair = pair (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#1067)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation
INFO:Detectors:
Reentrancy in EthereumSafe._transfer(address,address,uint256) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#885-935):
	External calls:
	- swapAndLiquify(contractTokenBalance) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#904)
		- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,address(this),block.timestamp) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#1056-1063)
		- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#1037-1043)
	- distributeOwner(ownerBal) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#908)
		- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#1037-1043)
	External calls sending eth:
	- swapAndLiquify(contractTokenBalance) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#904)
		- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,address(this),block.timestamp) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#1056-1063)
	- distributeOwner(ownerBal) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#908)
		- address(ownerWallet).transfer(address(this).balance) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#1048)
	State variables written after the call(s):
	- transferAmount = collectFee(sender,amount,rate) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#915)
		- _burnFeeTotal = _burnFeeTotal.add(burnFee) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#977)
	- transferAmount = collectFee(sender,amount,rate) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#915)
		- _liquidityFeeTotal = _liquidityFeeTotal.add(liquidityFee) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#967)
	- transferAmount = collectFee(sender,amount,rate) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#915)
		- _taxFeeTotal = _taxFeeTotal.add(taxFee) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#945)
Reentrancy in EthereumSafe.swapAndLiquify(uint256) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#1002-1026):
	External calls:
	- swapTokensForEth(half) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#1017)
		- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#1037-1043)
	- addLiquidity(otherHalf,newBalance) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#1023)
		- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,address(this),block.timestamp) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#1056-1063)
	External calls sending eth:
	- addLiquidity(otherHalf,newBalance) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#1023)
		- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,address(this),block.timestamp) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#1056-1063)
	State variables written after the call(s):
	- addLiquidity(otherHalf,newBalance) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#1023)
		- _allowances[owner][spender] = amount (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#881)
Reentrancy in EthereumSafe.transferFrom(address,address,uint256) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#772-781):
	External calls:
	- _transfer(sender,recipient,amount) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#777)
		- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,address(this),block.timestamp) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#1056-1063)
		- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#1037-1043)
	External calls sending eth:
	- _transfer(sender,recipient,amount) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#777)
		- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,address(this),block.timestamp) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#1056-1063)
		- address(ownerWallet).transfer(address(this).balance) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#1048)
	State variables written after the call(s):
	- _approve(sender,_msgSender(),_allowances[sender][_msgSender()].sub(amount,ERC20: transfer amount exceeds allowance)) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#779)
		- _allowances[owner][spender] = amount (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#881)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2
INFO:Detectors:
Reentrancy in EthereumSafe._transfer(address,address,uint256) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#885-935):
	External calls:
	- swapAndLiquify(contractTokenBalance) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#904)
		- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,address(this),block.timestamp) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#1056-1063)
		- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#1037-1043)
	- distributeOwner(ownerBal) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#908)
		- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#1037-1043)
	External calls sending eth:
	- swapAndLiquify(contractTokenBalance) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#904)
		- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,address(this),block.timestamp) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#1056-1063)
	- distributeOwner(ownerBal) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#908)
		- address(ownerWallet).transfer(address(this).balance) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#1048)
	Event emitted after the call(s):
	- Transfer(account,ownerWallet,ownerFee) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#956)
		- transferAmount = collectFee(sender,amount,rate) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#915)
	- Transfer(account,address(this),liquidityFee) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#968)
		- transferAmount = collectFee(sender,amount,rate) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#915)
	- Transfer(sender,recipient,transferAmount) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#933)
	- Transfer(account,address(0),burnFee) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#978)
		- transferAmount = collectFee(sender,amount,rate) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#915)
Reentrancy in EthereumSafe.swapAndLiquify(uint256) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#1002-1026):
	External calls:
	- swapTokensForEth(half) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#1017)
		- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#1037-1043)
	- addLiquidity(otherHalf,newBalance) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#1023)
		- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,address(this),block.timestamp) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#1056-1063)
	External calls sending eth:
	- addLiquidity(otherHalf,newBalance) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#1023)
		- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,address(this),block.timestamp) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#1056-1063)
	Event emitted after the call(s):
	- Approval(owner,spender,amount) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#882)
		- addLiquidity(otherHalf,newBalance) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#1023)
	- SwapAndLiquify(half,newBalance,otherHalf) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#1025)
Reentrancy in EthereumSafe.transferFrom(address,address,uint256) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#772-781):
	External calls:
	- _transfer(sender,recipient,amount) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#777)
		- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,address(this),block.timestamp) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#1056-1063)
		- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#1037-1043)
	External calls sending eth:
	- _transfer(sender,recipient,amount) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#777)
		- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,address(this),block.timestamp) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#1056-1063)
		- address(ownerWallet).transfer(address(this).balance) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#1048)
	Event emitted after the call(s):
	- Approval(owner,spender,amount) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#882)
		- _approve(sender,_msgSender(),_allowances[sender][_msgSender()].sub(amount,ERC20: transfer amount exceeds allowance)) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#779)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3
INFO:Detectors:
Address.isContract(address) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#318-332) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#328-330)
Address._functionCallWithValue(address,bytes,uint256,string) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#447-475) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#467-470)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage
INFO:Detectors:
EthereumSafe.includeAccount(address) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#860-871) has costly operations inside a loop:
	- _excluded.pop() (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#867)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#costly-operations-inside-a-loop
INFO:Detectors:
Address._functionCallWithValue(address,bytes,uint256,string) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#447-475) is never used and should be removed
Address.functionCall(address,bytes) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#382-387) is never used and should be removed
Address.functionCall(address,bytes,string) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#395-401) is never used and should be removed
Address.functionCallWithValue(address,bytes,uint256) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#414-426) is never used and should be removed
Address.functionCallWithValue(address,bytes,uint256,string) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#434-445) is never used and should be removed
Address.isContract(address) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#318-332) is never used and should be removed
Address.sendValue(address,uint256) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#350-362) is never used and should be removed
Context._msgData() (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#30-33) is never used and should be removed
SafeMath.ceil(uint256,uint256) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#290-294) is never used and should be removed
SafeMath.mod(uint256,uint256) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#265-267) is never used and should be removed
SafeMath.mod(uint256,uint256,string) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#281-288) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code
INFO:Detectors:
EthereumSafe._tokenTotal (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#634) is set pre-construction with a non-constant function or state variable:
	- 1_000_000_000_000_000 * (10 ** decimals())
EthereumSafe._reflectionTotal (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#635) is set pre-construction with a non-constant function or state variable:
	- (MAX - (MAX % _tokenTotal))
EthereumSafe.maxTxAmount (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#664) is set pre-construction with a non-constant function or state variable:
	- _tokenTotal
EthereumSafe.minTokensBeforeSwap (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#665) is set pre-construction with a non-constant function or state variable:
	- 100_000 * (10 ** decimals())
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#function-initializing-state
INFO:Detectors:
Pragma version^0.6.0 (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#13) allows old versions
solc-0.6.12 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity
INFO:Detectors:
Low level call in Address.sendValue(address,uint256) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#350-362):
	- (success) = recipient.call{value: amount}() (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#357)
Low level call in Address._functionCallWithValue(address,bytes,uint256,string) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#447-475):
	- (success,returndata) = target.call{value: weiValue}(data) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#456-458)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls
INFO:Detectors:
Function IUniswapV2Router01.WETH() (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#559) is not in mixedCase
Variable EthereumSafe._reflectionBalance (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#629) is not in mixedCase
Variable EthereumSafe._tokenBalance (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#630) is not in mixedCase
Variable EthereumSafe._allowances (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#631) is not in mixedCase
Variable EthereumSafe._tokenTotal (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#634) is not in mixedCase
Variable EthereumSafe._reflectionTotal (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#635) is not in mixedCase
Variable EthereumSafe._isExcluded (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#638) is not in mixedCase
Variable EthereumSafe._excluded (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#639) is not in mixedCase
Variable EthereumSafe._feeDecimal (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#646) is not in mixedCase
Variable EthereumSafe._taxFee (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#647) is not in mixedCase
Variable EthereumSafe._liquidityFee (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#648) is not in mixedCase
Variable EthereumSafe._burnFee (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#649) is not in mixedCase
Variable EthereumSafe._ownerFee (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#650) is not in mixedCase
Variable EthereumSafe._taxFeeTotal (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#656) is not in mixedCase
Variable EthereumSafe._burnFeeTotal (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#657) is not in mixedCase
Variable EthereumSafe._liquidityFeeTotal (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#658) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions
INFO:Detectors:
Redundant expression "this (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#31)" inContext (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#25-34)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#redundant-statements
INFO:Detectors:
Reentrancy in EthereumSafe._transfer(address,address,uint256) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#885-935):
	External calls:
	- distributeOwner(ownerBal) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#908)
		- address(ownerWallet).transfer(address(this).balance) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#1048)
	External calls sending eth:
	- swapAndLiquify(contractTokenBalance) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#904)
		- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,address(this),block.timestamp) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#1056-1063)
	- distributeOwner(ownerBal) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#908)
		- address(ownerWallet).transfer(address(this).balance) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#1048)
	State variables written after the call(s):
	- transferAmount = collectFee(sender,amount,rate) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#915)
		- _burnFeeTotal = _burnFeeTotal.add(burnFee) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#977)
	- transferAmount = collectFee(sender,amount,rate) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#915)
		- _liquidityFeeTotal = _liquidityFeeTotal.add(liquidityFee) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#967)
	- transferAmount = collectFee(sender,amount,rate) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#915)
		- _reflectionBalance[ownerWallet] = _reflectionBalance[ownerWallet].add(ownerFee.mul(rate)) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#952)
		- _reflectionBalance[address(this)] = _reflectionBalance[address(this)].add(liquidityFee.mul(rate)) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#963)
	- _reflectionBalance[sender] = _reflectionBalance[sender].sub(amount.mul(rate)) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#920)
	- _reflectionBalance[recipient] = _reflectionBalance[recipient].add(transferAmount.mul(rate)) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#922)
	- transferAmount = collectFee(sender,amount,rate) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#915)
		- _reflectionTotal = _reflectionTotal.sub(taxFee.mul(rate)) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#944)
		- _reflectionTotal = _reflectionTotal.sub(burnFee.mul(rate)) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#976)
	- transferAmount = collectFee(sender,amount,rate) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#915)
		- _taxFeeTotal = _taxFeeTotal.add(taxFee) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#945)
	- transferAmount = collectFee(sender,amount,rate) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#915)
		- _tokenBalance[ownerWallet] = _tokenBalance[ownerWallet].add(ownerFee) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#954)
		- _tokenBalance[address(this)] = _tokenBalance[address(this)].add(liquidityFee) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#965)
	- _tokenBalance[sender] = _tokenBalance[sender].sub(amount) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#926)
	- _tokenBalance[recipient] = _tokenBalance[recipient].add(transferAmount) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#929)
	- transferAmount = collectFee(sender,amount,rate) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#915)
		- _tokenTotal = _tokenTotal.sub(burnFee) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#975)
	Event emitted after the call(s):
	- Transfer(account,ownerWallet,ownerFee) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#956)
		- transferAmount = collectFee(sender,amount,rate) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#915)
	- Transfer(account,address(this),liquidityFee) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#968)
		- transferAmount = collectFee(sender,amount,rate) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#915)
	- Transfer(sender,recipient,transferAmount) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#933)
	- Transfer(account,address(0),burnFee) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#978)
		- transferAmount = collectFee(sender,amount,rate) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#915)
Reentrancy in EthereumSafe.transferFrom(address,address,uint256) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#772-781):
	External calls:
	- _transfer(sender,recipient,amount) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#777)
		- address(ownerWallet).transfer(address(this).balance) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#1048)
	External calls sending eth:
	- _transfer(sender,recipient,amount) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#777)
		- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,address(this),block.timestamp) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#1056-1063)
		- address(ownerWallet).transfer(address(this).balance) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#1048)
	State variables written after the call(s):
	- _approve(sender,_msgSender(),_allowances[sender][_msgSender()].sub(amount,ERC20: transfer amount exceeds allowance)) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#779)
		- _allowances[owner][spender] = amount (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#881)
	Event emitted after the call(s):
	- Approval(owner,spender,amount) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#882)
		- _approve(sender,_msgSender(),_allowances[sender][_msgSender()].sub(amount,ERC20: transfer amount exceeds allowance)) (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#779)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-4
INFO:Detectors:
Variable IUniswapV2Router01.addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256).amountADesired (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#563) is too similar to IUniswapV2Router01.addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256).amountBDesired (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#564)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#variable-names-too-similar
INFO:Detectors:
EthereumSafe._decimals (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#627) should be constant 
EthereumSafe._feeDecimal (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#646) should be constant 
EthereumSafe._name (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#625) should be constant 
EthereumSafe._symbol (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#626) should be constant 
EthereumSafe.ownerWallet (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#653) should be constant 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant
INFO:Detectors:
EthereumSafe.uniswapV2Router (../../sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol#667) should be immutable 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-immutable
INFO:Slither:/bdata2/sc/dataset/mainnet/0xffcc1e20653afe8aef7ed7784ebc991fbf222fa3.sol analyzed (12 contracts with 85 detectors), 69 result(s) found
