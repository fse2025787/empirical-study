Compilation warnings/errors on /bdata2/sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol:
Warning: Contract code size exceeds 24576 bytes (a limit introduced in Spurious Dragon). This contract may not be deployable on mainnet. Consider enabling the optimizer (with a low "runs" value!), turning off revert strings, or using libraries.
   --> /bdata2/sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol:587:1:
    |
587 | contract MasterChef is Ownable, Authorizable, ReentrancyGuard {
    | ^ (Relevant source part starts here and spans across multiple lines).


INFO:Detectors:
MasterChef._harvest(uint256) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#975-1007) ignores return value by govToken.transfer(msg.sender,pending) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#991)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unchecked-transfer
INFO:Detectors:
MasterChef.getPoolReward(uint256,uint256,uint256) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#895-937) performs a multiplication on the result of a division:
	- amount = multiplier.mul(REWARD_PER_BLOCK).mul(_allocPoint).div(totalAllocPoint) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#910-913)
	- checkAmount = amount + amount.mul(mulFactor).div(100) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#916)
MasterChef.getPoolReward(uint256,uint256,uint256) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#895-937) performs a multiplication on the result of a division:
	- amount = multiplier.mul(REWARD_PER_BLOCK).mul(_allocPoint).div(totalAllocPoint) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#910-913)
	- forDev = amount.mul(PERCENT_FOR_DEV).div(100) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#931)
MasterChef.getPoolReward(uint256,uint256,uint256) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#895-937) performs a multiplication on the result of a division:
	- amount = multiplier.mul(REWARD_PER_BLOCK).mul(_allocPoint).div(totalAllocPoint) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#910-913)
	- forLP = amount.mul(PERCENT_FOR_LP).div(100) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#933)
MasterChef.getPoolReward(uint256,uint256,uint256) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#895-937) performs a multiplication on the result of a division:
	- amount = multiplier.mul(REWARD_PER_BLOCK).mul(_allocPoint).div(totalAllocPoint) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#910-913)
	- forCom = amount.mul(PERCENT_FOR_COM).div(100) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#934)
MasterChef.getPoolReward(uint256,uint256,uint256) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#895-937) performs a multiplication on the result of a division:
	- amount = multiplier.mul(REWARD_PER_BLOCK).mul(_allocPoint).div(totalAllocPoint) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#910-913)
	- forFounders = amount.mul(PERCENT_FOR_FOUNDERS).div(100) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#935)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#divide-before-multiply
INFO:Detectors:
MasterChef.updatePool(uint256) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#810-865) uses a dangerous strict equality:
	- lpSupply == 0 (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#816)
MasterChef.withdraw(uint256,uint256,address) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1089-1220) uses a dangerous strict equality:
	- user.blockdelta == blockDeltaStartStage[0] || block.number == user.lastDepositBlock (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1116-1117)
SatoruFiToken._writeCheckpoint(address,uint32,uint256,uint256) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1844-1870) uses a dangerous strict equality:
	- nCheckpoints > 0 && checkpoints[delegatee][nCheckpoints - 1].fromBlock == blockNumber (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1857-1858)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dangerous-strict-equalities
INFO:Detectors:
Reentrancy in MasterChef._harvest(uint256) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#975-1007):
	External calls:
	- govToken.transfer(msg.sender,pending) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#991)
	- govToken.lock(msg.sender,lockAmount) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#997)
	State variables written after the call(s):
	- user.rewardDebtAtBlock = block.number (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1000)
	MasterChef.userInfo (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#666) can be used in cross function reentrancies:
	- MasterChef._harvest(uint256) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#975-1007)
	- MasterChef.pendingReward(uint256,address) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#940-961)
	- MasterChef.reviseDeposit(uint256,address,uint256) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1369-1377)
	- MasterChef.reviseWithdraw(uint256,address,uint256) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1359-1367)
	- MasterChef.userDelta(uint256) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1348-1357)
	- MasterChef.userInfo (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#666)
	- user.rewardDebt = user.amount.mul(pool.accGovTokenPerShare).div(1e12) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1005)
	MasterChef.userInfo (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#666) can be used in cross function reentrancies:
	- MasterChef._harvest(uint256) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#975-1007)
	- MasterChef.pendingReward(uint256,address) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#940-961)
	- MasterChef.reviseDeposit(uint256,address,uint256) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1369-1377)
	- MasterChef.reviseWithdraw(uint256,address,uint256) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1359-1367)
	- MasterChef.userDelta(uint256) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1348-1357)
	- MasterChef.userInfo (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#666)
Reentrancy in MasterChef.add(uint256,IERC20,bool) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#764-784):
	External calls:
	- massUpdatePools() (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#770)
		- govToken.mint(address(this),GovTokenForFarmer) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#832)
		- govToken.mint(address(devaddr),GovTokenForDev) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#838)
		- govToken.lock(address(devaddr),GovTokenForDev.mul(75).div(100)) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#841)
		- govToken.mint(liquidityaddr,GovTokenForLP) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#845)
		- govToken.lock(address(liquidityaddr),GovTokenForLP.mul(45).div(100)) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#848)
		- govToken.mint(comfundaddr,GovTokenForCom) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#852)
		- govToken.lock(address(comfundaddr),GovTokenForCom.mul(85).div(100)) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#855)
		- govToken.mint(founderaddr,GovTokenForFounders) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#859)
		- govToken.lock(address(founderaddr),GovTokenForFounders.mul(95).div(100)) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#862)
	State variables written after the call(s):
	- poolExistence[_lpToken] = true (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#775)
	MasterChef.poolExistence (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#668) can be used in cross function reentrancies:
	- MasterChef.add(uint256,IERC20,bool) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#764-784)
	- MasterChef.nonDuplicated(IERC20) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#708-711)
	- MasterChef.poolExistence (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#668)
	- poolInfo.push(PoolInfo(_lpToken,_allocPoint,lastRewardBlock,0)) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#776-783)
	MasterChef.poolInfo (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#663) can be used in cross function reentrancies:
	- MasterChef._harvest(uint256) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#975-1007)
	- MasterChef.add(uint256,IERC20,bool) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#764-784)
	- MasterChef.getNewRewardPerBlock(uint256) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1339-1346)
	- MasterChef.massUpdatePools() (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#802-807)
	- MasterChef.pendingReward(uint256,address) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#940-961)
	- MasterChef.poolInfo (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#663)
	- MasterChef.poolLength() (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#759-761)
	- MasterChef.set(uint256,uint256,bool) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#787-799)
	- MasterChef.updatePool(uint256) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#810-865)
	- MasterChef.validatePoolByPid(uint256) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#713-716)
	- totalAllocPoint = totalAllocPoint.add(_allocPoint) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#774)
	MasterChef.totalAllocPoint (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#670) can be used in cross function reentrancies:
	- MasterChef.add(uint256,IERC20,bool) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#764-784)
	- MasterChef.getNewRewardPerBlock(uint256) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1339-1346)
	- MasterChef.getPoolReward(uint256,uint256,uint256) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#895-937)
	- MasterChef.set(uint256,uint256,bool) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#787-799)
	- MasterChef.totalAllocPoint (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#670)
Reentrancy in MasterChef.deposit(uint256,uint256,address) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1034-1086):
	External calls:
	- updatePool(_pid) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1063)
		- govToken.mint(address(this),GovTokenForFarmer) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#832)
		- govToken.mint(address(devaddr),GovTokenForDev) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#838)
		- govToken.lock(address(devaddr),GovTokenForDev.mul(75).div(100)) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#841)
		- govToken.mint(liquidityaddr,GovTokenForLP) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#845)
		- govToken.lock(address(liquidityaddr),GovTokenForLP.mul(45).div(100)) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#848)
		- govToken.mint(comfundaddr,GovTokenForCom) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#852)
		- govToken.lock(address(comfundaddr),GovTokenForCom.mul(85).div(100)) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#855)
		- govToken.mint(founderaddr,GovTokenForFounders) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#859)
		- govToken.lock(address(founderaddr),GovTokenForFounders.mul(95).div(100)) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#862)
	- _harvest(_pid) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1064)
		- govToken.transfer(msg.sender,pending) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#991)
		- govToken.lock(msg.sender,lockAmount) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#997)
	State variables written after the call(s):
	- _harvest(_pid) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1064)
		- user.rewardDebtAtBlock = block.number (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1000)
		- user.rewardDebt = user.amount.mul(pool.accGovTokenPerShare).div(1e12) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1005)
	MasterChef.userInfo (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#666) can be used in cross function reentrancies:
	- MasterChef._harvest(uint256) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#975-1007)
	- MasterChef.pendingReward(uint256,address) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#940-961)
	- MasterChef.reviseDeposit(uint256,address,uint256) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1369-1377)
	- MasterChef.reviseWithdraw(uint256,address,uint256) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1359-1367)
	- MasterChef.userDelta(uint256) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1348-1357)
	- MasterChef.userInfo (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#666)
Reentrancy in MasterChef.deposit(uint256,uint256,address) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1034-1086):
	External calls:
	- updatePool(_pid) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1063)
		- govToken.mint(address(this),GovTokenForFarmer) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#832)
		- govToken.mint(address(devaddr),GovTokenForDev) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#838)
		- govToken.lock(address(devaddr),GovTokenForDev.mul(75).div(100)) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#841)
		- govToken.mint(liquidityaddr,GovTokenForLP) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#845)
		- govToken.lock(address(liquidityaddr),GovTokenForLP.mul(45).div(100)) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#848)
		- govToken.mint(comfundaddr,GovTokenForCom) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#852)
		- govToken.lock(address(comfundaddr),GovTokenForCom.mul(85).div(100)) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#855)
		- govToken.mint(founderaddr,GovTokenForFounders) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#859)
		- govToken.lock(address(founderaddr),GovTokenForFounders.mul(95).div(100)) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#862)
	- _harvest(_pid) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1064)
		- govToken.transfer(msg.sender,pending) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#991)
		- govToken.lock(msg.sender,lockAmount) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#997)
	- pool.lpToken.safeTransferFrom(address(msg.sender),address(this),_amount) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1065-1069)
	State variables written after the call(s):
	- user.rewardDebtAtBlock = block.number (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1071)
	MasterChef.userInfo (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#666) can be used in cross function reentrancies:
	- MasterChef._harvest(uint256) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#975-1007)
	- MasterChef.pendingReward(uint256,address) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#940-961)
	- MasterChef.reviseDeposit(uint256,address,uint256) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1369-1377)
	- MasterChef.reviseWithdraw(uint256,address,uint256) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1359-1367)
	- MasterChef.userDelta(uint256) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1348-1357)
	- MasterChef.userInfo (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#666)
	- user.amount = user.amount.add(_amount.sub(_amount.mul(userDepFee).div(10000))) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1073-1075)
	MasterChef.userInfo (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#666) can be used in cross function reentrancies:
	- MasterChef._harvest(uint256) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#975-1007)
	- MasterChef.pendingReward(uint256,address) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#940-961)
	- MasterChef.reviseDeposit(uint256,address,uint256) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1369-1377)
	- MasterChef.reviseWithdraw(uint256,address,uint256) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1359-1367)
	- MasterChef.userDelta(uint256) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1348-1357)
	- MasterChef.userInfo (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#666)
	- user.rewardDebt = user.amount.mul(pool.accGovTokenPerShare).div(1e12) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1076)
	MasterChef.userInfo (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#666) can be used in cross function reentrancies:
	- MasterChef._harvest(uint256) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#975-1007)
	- MasterChef.pendingReward(uint256,address) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#940-961)
	- MasterChef.reviseDeposit(uint256,address,uint256) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1369-1377)
	- MasterChef.reviseWithdraw(uint256,address,uint256) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1359-1367)
	- MasterChef.userDelta(uint256) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1348-1357)
	- MasterChef.userInfo (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#666)
	- devr.amount = devr.amount.add(_amount.sub(_amount.mul(devDepFee).div(10000))) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1077-1079)
	MasterChef.userInfo (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#666) can be used in cross function reentrancies:
	- MasterChef._harvest(uint256) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#975-1007)
	- MasterChef.pendingReward(uint256,address) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#940-961)
	- MasterChef.reviseDeposit(uint256,address,uint256) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1369-1377)
	- MasterChef.reviseWithdraw(uint256,address,uint256) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1359-1367)
	- MasterChef.userDelta(uint256) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1348-1357)
	- MasterChef.userInfo (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#666)
	- devr.rewardDebt = devr.amount.mul(pool.accGovTokenPerShare).div(1e12) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1080)
	MasterChef.userInfo (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#666) can be used in cross function reentrancies:
	- MasterChef._harvest(uint256) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#975-1007)
	- MasterChef.pendingReward(uint256,address) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#940-961)
	- MasterChef.reviseDeposit(uint256,address,uint256) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1369-1377)
	- MasterChef.reviseWithdraw(uint256,address,uint256) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1359-1367)
	- MasterChef.userDelta(uint256) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1348-1357)
	- MasterChef.userInfo (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#666)
	- user.firstDepositBlock = block.number (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1083)
	MasterChef.userInfo (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#666) can be used in cross function reentrancies:
	- MasterChef._harvest(uint256) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#975-1007)
	- MasterChef.pendingReward(uint256,address) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#940-961)
	- MasterChef.reviseDeposit(uint256,address,uint256) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1369-1377)
	- MasterChef.reviseWithdraw(uint256,address,uint256) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1359-1367)
	- MasterChef.userDelta(uint256) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1348-1357)
	- MasterChef.userInfo (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#666)
	- user.lastDepositBlock = block.number (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1085)
	MasterChef.userInfo (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#666) can be used in cross function reentrancies:
	- MasterChef._harvest(uint256) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#975-1007)
	- MasterChef.pendingReward(uint256,address) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#940-961)
	- MasterChef.reviseDeposit(uint256,address,uint256) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1369-1377)
	- MasterChef.reviseWithdraw(uint256,address,uint256) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1359-1367)
	- MasterChef.userDelta(uint256) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1348-1357)
	- MasterChef.userInfo (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#666)
Reentrancy in MasterChef.set(uint256,uint256,bool) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#787-799):
	External calls:
	- massUpdatePools() (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#793)
		- govToken.mint(address(this),GovTokenForFarmer) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#832)
		- govToken.mint(address(devaddr),GovTokenForDev) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#838)
		- govToken.lock(address(devaddr),GovTokenForDev.mul(75).div(100)) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#841)
		- govToken.mint(liquidityaddr,GovTokenForLP) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#845)
		- govToken.lock(address(liquidityaddr),GovTokenForLP.mul(45).div(100)) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#848)
		- govToken.mint(comfundaddr,GovTokenForCom) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#852)
		- govToken.lock(address(comfundaddr),GovTokenForCom.mul(85).div(100)) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#855)
		- govToken.mint(founderaddr,GovTokenForFounders) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#859)
		- govToken.lock(address(founderaddr),GovTokenForFounders.mul(95).div(100)) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#862)
	State variables written after the call(s):
	- poolInfo[_pid].allocPoint = _allocPoint (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#798)
	MasterChef.poolInfo (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#663) can be used in cross function reentrancies:
	- MasterChef._harvest(uint256) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#975-1007)
	- MasterChef.add(uint256,IERC20,bool) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#764-784)
	- MasterChef.getNewRewardPerBlock(uint256) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1339-1346)
	- MasterChef.massUpdatePools() (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#802-807)
	- MasterChef.pendingReward(uint256,address) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#940-961)
	- MasterChef.poolInfo (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#663)
	- MasterChef.poolLength() (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#759-761)
	- MasterChef.set(uint256,uint256,bool) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#787-799)
	- MasterChef.updatePool(uint256) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#810-865)
	- MasterChef.validatePoolByPid(uint256) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#713-716)
	- totalAllocPoint = totalAllocPoint.sub(poolInfo[_pid].allocPoint).add(_allocPoint) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#795-797)
	MasterChef.totalAllocPoint (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#670) can be used in cross function reentrancies:
	- MasterChef.add(uint256,IERC20,bool) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#764-784)
	- MasterChef.getNewRewardPerBlock(uint256) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1339-1346)
	- MasterChef.getPoolReward(uint256,uint256,uint256) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#895-937)
	- MasterChef.set(uint256,uint256,bool) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#787-799)
	- MasterChef.totalAllocPoint (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#670)
Reentrancy in MasterChef.updatePool(uint256) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#810-865):
	External calls:
	- govToken.mint(address(this),GovTokenForFarmer) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#832)
	State variables written after the call(s):
	- pool.accGovTokenPerShare = pool.accGovTokenPerShare.add(GovTokenForFarmer.mul(1e12).div(lpSupply)) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#833-835)
	MasterChef.poolInfo (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#663) can be used in cross function reentrancies:
	- MasterChef._harvest(uint256) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#975-1007)
	- MasterChef.add(uint256,IERC20,bool) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#764-784)
	- MasterChef.getNewRewardPerBlock(uint256) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1339-1346)
	- MasterChef.massUpdatePools() (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#802-807)
	- MasterChef.pendingReward(uint256,address) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#940-961)
	- MasterChef.poolInfo (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#663)
	- MasterChef.poolLength() (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#759-761)
	- MasterChef.set(uint256,uint256,bool) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#787-799)
	- MasterChef.updatePool(uint256) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#810-865)
	- MasterChef.validatePoolByPid(uint256) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#713-716)
	- pool.lastRewardBlock = block.number (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#836)
	MasterChef.poolInfo (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#663) can be used in cross function reentrancies:
	- MasterChef._harvest(uint256) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#975-1007)
	- MasterChef.add(uint256,IERC20,bool) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#764-784)
	- MasterChef.getNewRewardPerBlock(uint256) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1339-1346)
	- MasterChef.massUpdatePools() (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#802-807)
	- MasterChef.pendingReward(uint256,address) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#940-961)
	- MasterChef.poolInfo (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#663)
	- MasterChef.poolLength() (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#759-761)
	- MasterChef.set(uint256,uint256,bool) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#787-799)
	- MasterChef.updatePool(uint256) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#810-865)
	- MasterChef.validatePoolByPid(uint256) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#713-716)
Reentrancy in MasterChef.withdraw(uint256,uint256,address) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1089-1220):
	External calls:
	- updatePool(_pid) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1105)
		- govToken.mint(address(this),GovTokenForFarmer) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#832)
		- govToken.mint(address(devaddr),GovTokenForDev) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#838)
		- govToken.lock(address(devaddr),GovTokenForDev.mul(75).div(100)) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#841)
		- govToken.mint(liquidityaddr,GovTokenForLP) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#845)
		- govToken.lock(address(liquidityaddr),GovTokenForLP.mul(45).div(100)) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#848)
		- govToken.mint(comfundaddr,GovTokenForCom) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#852)
		- govToken.lock(address(comfundaddr),GovTokenForCom.mul(85).div(100)) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#855)
		- govToken.mint(founderaddr,GovTokenForFounders) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#859)
		- govToken.lock(address(founderaddr),GovTokenForFounders.mul(95).div(100)) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#862)
	- _harvest(_pid) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1106)
		- govToken.transfer(msg.sender,pending) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#991)
		- govToken.lock(msg.sender,lockAmount) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#997)
	State variables written after the call(s):
	- _harvest(_pid) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1106)
		- user.rewardDebtAtBlock = block.number (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1000)
		- user.rewardDebt = user.amount.mul(pool.accGovTokenPerShare).div(1e12) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1005)
	MasterChef.userInfo (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#666) can be used in cross function reentrancies:
	- MasterChef._harvest(uint256) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#975-1007)
	- MasterChef.pendingReward(uint256,address) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#940-961)
	- MasterChef.reviseDeposit(uint256,address,uint256) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1369-1377)
	- MasterChef.reviseWithdraw(uint256,address,uint256) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1359-1367)
	- MasterChef.userDelta(uint256) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1348-1357)
	- MasterChef.userInfo (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#666)
	- user.amount = user.amount.sub(_amount) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1109)
	MasterChef.userInfo (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#666) can be used in cross function reentrancies:
	- MasterChef._harvest(uint256) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#975-1007)
	- MasterChef.pendingReward(uint256,address) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#940-961)
	- MasterChef.reviseDeposit(uint256,address,uint256) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1369-1377)
	- MasterChef.reviseWithdraw(uint256,address,uint256) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1359-1367)
	- MasterChef.userDelta(uint256) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1348-1357)
	- MasterChef.userInfo (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#666)
	- user.blockdelta = block.number - user.lastWithdrawBlock (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1111)
	MasterChef.userInfo (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#666) can be used in cross function reentrancies:
	- MasterChef._harvest(uint256) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#975-1007)
	- MasterChef.pendingReward(uint256,address) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#940-961)
	- MasterChef.reviseDeposit(uint256,address,uint256) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1369-1377)
	- MasterChef.reviseWithdraw(uint256,address,uint256) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1359-1367)
	- MasterChef.userDelta(uint256) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1348-1357)
	- MasterChef.userInfo (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#666)
	- user.blockdelta = block.number - user.firstDepositBlock (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1113)
	MasterChef.userInfo (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#666) can be used in cross function reentrancies:
	- MasterChef._harvest(uint256) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#975-1007)
	- MasterChef.pendingReward(uint256,address) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#940-961)
	- MasterChef.reviseDeposit(uint256,address,uint256) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1369-1377)
	- MasterChef.reviseWithdraw(uint256,address,uint256) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1359-1367)
	- MasterChef.userDelta(uint256) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1348-1357)
	- MasterChef.userInfo (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#666)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1
INFO:Detectors:
SatoruFiToken.constructor(string,string,uint256,uint256,uint256,uint256)._name (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1444) shadows:
	- ERC20._name (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#303) (state variable)
SatoruFiToken.constructor(string,string,uint256,uint256,uint256,uint256)._symbol (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1445) shadows:
	- ERC20._symbol (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#304) (state variable)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing
INFO:Detectors:
MasterChef.add(uint256,IERC20,bool) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#764-784) should emit an event for: 
	- totalAllocPoint = totalAllocPoint.add(_allocPoint) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#774) 
MasterChef.set(uint256,uint256,bool) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#787-799) should emit an event for: 
	- totalAllocPoint = totalAllocPoint.sub(poolInfo[_pid].allocPoint).add(_allocPoint) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#795-797) 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-arithmetic
INFO:Detectors:
MasterChef.constructor(SatoruFiToken,address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256[],uint256[],uint256[],uint256[],uint256[])._devaddr (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#720) lacks a zero-check on :
		- devaddr = _devaddr (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#736)
MasterChef.constructor(SatoruFiToken,address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256[],uint256[],uint256[],uint256[],uint256[])._liquidityaddr (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#721) lacks a zero-check on :
		- liquidityaddr = _liquidityaddr (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#737)
MasterChef.constructor(SatoruFiToken,address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256[],uint256[],uint256[],uint256[],uint256[])._comfundaddr (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#722) lacks a zero-check on :
		- comfundaddr = _comfundaddr (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#738)
MasterChef.constructor(SatoruFiToken,address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256[],uint256[],uint256[],uint256[],uint256[])._founderaddr (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#723) lacks a zero-check on :
		- founderaddr = _founderaddr (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#739)
MasterChef.dev(address)._devaddr (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1254) lacks a zero-check on :
		- devaddr = _devaddr (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1255)
MasterChef.lpUpdate(address)._newLP (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1272) lacks a zero-check on :
		- liquidityaddr = _newLP (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1273)
MasterChef.comUpdate(address)._newCom (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1278) lacks a zero-check on :
		- comfundaddr = _newCom (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1279)
MasterChef.founderUpdate(address)._newFounder (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1284) lacks a zero-check on :
		- founderaddr = _newFounder (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1285)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation
INFO:Detectors:
MasterChef.updatePool(uint256) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#810-865) has external calls inside a loop: lpSupply = pool.lpToken.balanceOf(address(this)) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#815)
MasterChef.getPoolReward(uint256,uint256,uint256) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#895-937) has external calls inside a loop: SatoruFiTokenCanMint = govToken.cap().sub(govToken.totalSupply()) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#914)
MasterChef.updatePool(uint256) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#810-865) has external calls inside a loop: govToken.mint(address(this),GovTokenForFarmer) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#832)
MasterChef.updatePool(uint256) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#810-865) has external calls inside a loop: govToken.mint(address(devaddr),GovTokenForDev) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#838)
MasterChef.updatePool(uint256) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#810-865) has external calls inside a loop: govToken.lock(address(devaddr),GovTokenForDev.mul(75).div(100)) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#841)
MasterChef.updatePool(uint256) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#810-865) has external calls inside a loop: govToken.mint(liquidityaddr,GovTokenForLP) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#845)
MasterChef.updatePool(uint256) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#810-865) has external calls inside a loop: govToken.lock(address(liquidityaddr),GovTokenForLP.mul(45).div(100)) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#848)
MasterChef.updatePool(uint256) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#810-865) has external calls inside a loop: govToken.mint(comfundaddr,GovTokenForCom) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#852)
MasterChef.updatePool(uint256) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#810-865) has external calls inside a loop: govToken.lock(address(comfundaddr),GovTokenForCom.mul(85).div(100)) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#855)
MasterChef.updatePool(uint256) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#810-865) has external calls inside a loop: govToken.mint(founderaddr,GovTokenForFounders) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#859)
MasterChef.updatePool(uint256) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#810-865) has external calls inside a loop: govToken.lock(address(founderaddr),GovTokenForFounders.mul(95).div(100)) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#862)
MasterChef._harvest(uint256) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#975-1007) has external calls inside a loop: masterBal = govToken.balanceOf(address(this)) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#984)
MasterChef._harvest(uint256) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#975-1007) has external calls inside a loop: govToken.transfer(msg.sender,pending) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#991)
MasterChef._harvest(uint256) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#975-1007) has external calls inside a loop: govToken.lock(msg.sender,lockAmount) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#997)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation/#calls-inside-a-loop
INFO:Detectors:
Reentrancy in MasterChef._harvest(uint256) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#975-1007):
	External calls:
	- govToken.transfer(msg.sender,pending) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#991)
	- govToken.lock(msg.sender,lockAmount) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#997)
	Event emitted after the call(s):
	- SendSatoruFiTokenReward(msg.sender,_pid,pending,lockAmount) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1002)
Reentrancy in MasterChef.claimReward(uint256) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#969-972):
	External calls:
	- updatePool(_pid) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#970)
		- govToken.mint(address(this),GovTokenForFarmer) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#832)
		- govToken.mint(address(devaddr),GovTokenForDev) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#838)
		- govToken.lock(address(devaddr),GovTokenForDev.mul(75).div(100)) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#841)
		- govToken.mint(liquidityaddr,GovTokenForLP) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#845)
		- govToken.lock(address(liquidityaddr),GovTokenForLP.mul(45).div(100)) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#848)
		- govToken.mint(comfundaddr,GovTokenForCom) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#852)
		- govToken.lock(address(comfundaddr),GovTokenForCom.mul(85).div(100)) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#855)
		- govToken.mint(founderaddr,GovTokenForFounders) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#859)
		- govToken.lock(address(founderaddr),GovTokenForFounders.mul(95).div(100)) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#862)
	- _harvest(_pid) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#971)
		- govToken.transfer(msg.sender,pending) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#991)
		- govToken.lock(msg.sender,lockAmount) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#997)
	Event emitted after the call(s):
	- SendSatoruFiTokenReward(msg.sender,_pid,pending,lockAmount) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1002)
		- _harvest(_pid) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#971)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3
INFO:Detectors:
SatoruFiToken.delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1704-1743) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(now <= expiry,SatoruFiToken::delegateBySig: signature expired) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1741)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp
INFO:Detectors:
SatoruFiToken.getChainId() (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1881-1887) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1883-1885)
Address.isContract(address) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#2213-2222) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#2220)
Address._verifyCallResult(bool,bytes,string) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#2358-2375) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#2367-2370)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage
INFO:Detectors:
Different versions of Solidity are used:
	- Version used: ['0.6.12', '>=0.6.0<0.8.0', '>=0.6.2<0.8.0']
	- 0.6.12 (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#177)
	- 0.6.12 (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#570)
	- 0.6.12 (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1420)
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#6)
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#31)
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#99)
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#201)
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#264)
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1892)
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#2380)
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#2456)
	- >=0.6.2<0.8.0 (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#2190)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#different-pragma-directives-are-used
INFO:Detectors:
Address.functionCall(address,bytes) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#2266-2268) is never used and should be removed
Address.functionCallWithValue(address,bytes,uint256) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#2291-2293) is never used and should be removed
Address.functionDelegateCall(address,bytes) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#2340-2342) is never used and should be removed
Address.functionDelegateCall(address,bytes,string) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#2350-2356) is never used and should be removed
Address.functionStaticCall(address,bytes) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#2316-2318) is never used and should be removed
Address.functionStaticCall(address,bytes,string) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#2326-2332) is never used and should be removed
Address.sendValue(address,uint256) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#2240-2246) is never used and should be removed
Context._msgData() (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#23-26) is never used and should be removed
ERC20._burn(address,uint256) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#510-518) is never used and should be removed
ERC20._setupDecimals(uint8) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#548-550) is never used and should be removed
EnumerableSet._add(EnumerableSet.Set,bytes32) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1943-1953) is never used and should be removed
EnumerableSet._at(EnumerableSet.Set,uint256) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#2019-2022) is never used and should be removed
EnumerableSet._contains(EnumerableSet.Set,bytes32) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1998-2000) is never used and should be removed
EnumerableSet._length(EnumerableSet.Set) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#2005-2007) is never used and should be removed
EnumerableSet._remove(EnumerableSet.Set,bytes32) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1961-1993) is never used and should be removed
EnumerableSet.add(EnumerableSet.AddressSet,address) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#2090-2092) is never used and should be removed
EnumerableSet.add(EnumerableSet.Bytes32Set,bytes32) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#2036-2038) is never used and should be removed
EnumerableSet.add(EnumerableSet.UintSet,uint256) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#2145-2147) is never used and should be removed
EnumerableSet.at(EnumerableSet.AddressSet,uint256) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#2128-2130) is never used and should be removed
EnumerableSet.at(EnumerableSet.Bytes32Set,uint256) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#2074-2076) is never used and should be removed
EnumerableSet.at(EnumerableSet.UintSet,uint256) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#2183-2185) is never used and should be removed
EnumerableSet.contains(EnumerableSet.AddressSet,address) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#2107-2109) is never used and should be removed
EnumerableSet.contains(EnumerableSet.Bytes32Set,bytes32) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#2053-2055) is never used and should be removed
EnumerableSet.contains(EnumerableSet.UintSet,uint256) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#2162-2164) is never used and should be removed
EnumerableSet.length(EnumerableSet.AddressSet) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#2114-2116) is never used and should be removed
EnumerableSet.length(EnumerableSet.Bytes32Set) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#2060-2062) is never used and should be removed
EnumerableSet.length(EnumerableSet.UintSet) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#2169-2171) is never used and should be removed
EnumerableSet.remove(EnumerableSet.AddressSet,address) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#2100-2102) is never used and should be removed
EnumerableSet.remove(EnumerableSet.Bytes32Set,bytes32) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#2046-2048) is never used and should be removed
EnumerableSet.remove(EnumerableSet.UintSet,uint256) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#2155-2157) is never used and should be removed
MasterChef.safeGovTokenTransfer(address,uint256) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1242-1251) is never used and should be removed
SafeERC20.safeApprove(IERC20,address,uint256) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#2414-2423) is never used and should be removed
SafeERC20.safeDecreaseAllowance(IERC20,address,uint256) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#2430-2433) is never used and should be removed
SafeERC20.safeIncreaseAllowance(IERC20,address,uint256) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#2425-2428) is never used and should be removed
SafeMath.div(uint256,uint256,string) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#2643-2646) is never used and should be removed
SafeMath.mod(uint256,uint256) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#2605-2608) is never used and should be removed
SafeMath.mod(uint256,uint256,string) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#2663-2666) is never used and should be removed
SafeMath.tryAdd(uint256,uint256) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#2477-2481) is never used and should be removed
SafeMath.tryDiv(uint256,uint256) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#2513-2516) is never used and should be removed
SafeMath.tryMod(uint256,uint256) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#2523-2526) is never used and should be removed
SafeMath.tryMul(uint256,uint256) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#2498-2506) is never used and should be removed
SafeMath.trySub(uint256,uint256) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#2488-2491) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code
INFO:Detectors:
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#6) is too complex
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#31) is too complex
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#99) is too complex
Pragma version0.6.12 (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#177) allows old versions
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#201) is too complex
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#264) is too complex
Pragma version0.6.12 (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#570) allows old versions
Pragma version0.6.12 (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1420) allows old versions
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1892) is too complex
Pragma version>=0.6.2<0.8.0 (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#2190) is too complex
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#2380) is too complex
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#2456) is too complex
solc-0.6.12 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity
INFO:Detectors:
Low level call in Address.sendValue(address,uint256) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#2240-2246):
	- (success) = recipient.call{value: amount}() (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#2244)
Low level call in Address.functionCallWithValue(address,bytes,uint256,string) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#2301-2308):
	- (success,returndata) = target.call{value: value}(data) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#2306)
Low level call in Address.functionStaticCall(address,bytes,string) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#2326-2332):
	- (success,returndata) = target.staticcall(data) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#2330)
Low level call in Address.functionDelegateCall(address,bytes,string) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#2350-2356):
	- (success,returndata) = target.delegatecall(data) (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#2354)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls
INFO:Detectors:
Parameter Authorizable.addAuthorized(address)._toAdd (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#189) is not in mixedCase
Parameter Authorizable.removeAuthorized(address)._toRemove (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#193) is not in mixedCase
Parameter MasterChef.add(uint256,IERC20,bool)._allocPoint (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#765) is not in mixedCase
Parameter MasterChef.add(uint256,IERC20,bool)._lpToken (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#766) is not in mixedCase
Parameter MasterChef.add(uint256,IERC20,bool)._withUpdate (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#767) is not in mixedCase
Parameter MasterChef.set(uint256,uint256,bool)._pid (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#788) is not in mixedCase
Parameter MasterChef.set(uint256,uint256,bool)._allocPoint (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#789) is not in mixedCase
Parameter MasterChef.set(uint256,uint256,bool)._withUpdate (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#790) is not in mixedCase
Parameter MasterChef.updatePool(uint256)._pid (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#810) is not in mixedCase
Parameter MasterChef.getMultiplier(uint256,uint256)._from (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#870) is not in mixedCase
Parameter MasterChef.getMultiplier(uint256,uint256)._to (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#870) is not in mixedCase
Parameter MasterChef.getPoolReward(uint256,uint256,uint256)._from (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#896) is not in mixedCase
Parameter MasterChef.getPoolReward(uint256,uint256,uint256)._to (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#897) is not in mixedCase
Parameter MasterChef.getPoolReward(uint256,uint256,uint256)._allocPoint (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#898) is not in mixedCase
Parameter MasterChef.pendingReward(uint256,address)._pid (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#940) is not in mixedCase
Parameter MasterChef.pendingReward(uint256,address)._user (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#940) is not in mixedCase
Parameter MasterChef.claimRewards(uint256[])._pids (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#963) is not in mixedCase
Parameter MasterChef.claimReward(uint256)._pid (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#969) is not in mixedCase
Parameter MasterChef.getGlobalAmount(address)._user (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1009) is not in mixedCase
Parameter MasterChef.getGlobalRefAmount(address)._user (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1014) is not in mixedCase
Parameter MasterChef.getTotalRefs(address)._user (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1019) is not in mixedCase
Parameter MasterChef.getRefValueOf(address,address)._user (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1024) is not in mixedCase
Parameter MasterChef.getRefValueOf(address,address)._user2 (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1024) is not in mixedCase
Parameter MasterChef.deposit(uint256,uint256,address)._pid (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1035) is not in mixedCase
Parameter MasterChef.deposit(uint256,uint256,address)._amount (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1036) is not in mixedCase
Parameter MasterChef.deposit(uint256,uint256,address)._ref (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1037) is not in mixedCase
Parameter MasterChef.withdraw(uint256,uint256,address)._pid (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1090) is not in mixedCase
Parameter MasterChef.withdraw(uint256,uint256,address)._amount (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1091) is not in mixedCase
Parameter MasterChef.withdraw(uint256,uint256,address)._ref (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1092) is not in mixedCase
Parameter MasterChef.emergencyWithdraw(uint256)._pid (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1223) is not in mixedCase
Parameter MasterChef.safeGovTokenTransfer(address,uint256)._to (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1242) is not in mixedCase
Parameter MasterChef.safeGovTokenTransfer(address,uint256)._amount (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1242) is not in mixedCase
Parameter MasterChef.dev(address)._devaddr (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1254) is not in mixedCase
Parameter MasterChef.bonusFinishUpdate(uint256)._newFinish (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1260) is not in mixedCase
Parameter MasterChef.halvingUpdate(uint256[])._newHalving (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1266) is not in mixedCase
Parameter MasterChef.lpUpdate(address)._newLP (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1272) is not in mixedCase
Parameter MasterChef.comUpdate(address)._newCom (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1278) is not in mixedCase
Parameter MasterChef.founderUpdate(address)._newFounder (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1284) is not in mixedCase
Parameter MasterChef.rewardUpdate(uint256)._newReward (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1290) is not in mixedCase
Parameter MasterChef.rewardMulUpdate(uint256[])._newMulReward (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1296) is not in mixedCase
Parameter MasterChef.lockUpdate(uint256)._newlock (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1304) is not in mixedCase
Parameter MasterChef.lockdevUpdate(uint256)._newdevlock (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1310) is not in mixedCase
Parameter MasterChef.locklpUpdate(uint256)._newlplock (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1316) is not in mixedCase
Parameter MasterChef.lockcomUpdate(uint256)._newcomlock (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1322) is not in mixedCase
Parameter MasterChef.lockfounderUpdate(uint256)._newfounderlock (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1328) is not in mixedCase
Parameter MasterChef.starblockUpdate(uint256)._newstarblock (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1334) is not in mixedCase
Parameter MasterChef.userDelta(uint256)._pid (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1348) is not in mixedCase
Parameter MasterChef.reviseWithdraw(uint256,address,uint256)._pid (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1360) is not in mixedCase
Parameter MasterChef.reviseWithdraw(uint256,address,uint256)._user (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1361) is not in mixedCase
Parameter MasterChef.reviseWithdraw(uint256,address,uint256)._block (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1362) is not in mixedCase
Parameter MasterChef.reviseDeposit(uint256,address,uint256)._pid (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1370) is not in mixedCase
Parameter MasterChef.reviseDeposit(uint256,address,uint256)._user (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1371) is not in mixedCase
Parameter MasterChef.reviseDeposit(uint256,address,uint256)._block (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1372) is not in mixedCase
Parameter MasterChef.setStageStarts(uint256[])._blockStarts (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1379) is not in mixedCase
Parameter MasterChef.setStageEnds(uint256[])._blockEnds (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1386) is not in mixedCase
Parameter MasterChef.setUserFeeStage(uint256[])._userFees (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1391) is not in mixedCase
Parameter MasterChef.setDevFeeStage(uint256[])._devFees (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1398) is not in mixedCase
Parameter MasterChef.setDevDepFee(uint256)._devDepFees (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1403) is not in mixedCase
Parameter MasterChef.setUserDepFee(uint256)._usrDepFees (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1408) is not in mixedCase
Parameter MasterChef.reclaimTokenOwnership(address)._newOwner (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1413) is not in mixedCase
Variable MasterChef.REWARD_PER_BLOCK (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#641) is not in mixedCase
Variable MasterChef.REWARD_MULTIPLIER (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#643) is not in mixedCase
Variable MasterChef.HALVING_AT_BLOCK (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#644) is not in mixedCase
Variable MasterChef.FINISH_BONUS_AT_BLOCK (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#649) is not in mixedCase
Variable MasterChef.START_BLOCK (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#654) is not in mixedCase
Variable MasterChef.PERCENT_LOCK_BONUS_REWARD (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#656) is not in mixedCase
Variable MasterChef.PERCENT_FOR_DEV (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#657) is not in mixedCase
Variable MasterChef.PERCENT_FOR_LP (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#658) is not in mixedCase
Variable MasterChef.PERCENT_FOR_COM (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#659) is not in mixedCase
Variable MasterChef.PERCENT_FOR_FOUNDERS (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#660) is not in mixedCase
Parameter SatoruFiToken.capUpdate(uint256)._newCap (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1465) is not in mixedCase
Parameter SatoruFiToken.lockFromUpdate(uint256)._newLockFrom (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1471) is not in mixedCase
Parameter SatoruFiToken.lockToUpdate(uint256)._newLockTo (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1477) is not in mixedCase
Parameter SatoruFiToken.mint(address,uint256)._to (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1545) is not in mixedCase
Parameter SatoruFiToken.mint(address,uint256)._amount (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1545) is not in mixedCase
Parameter SatoruFiToken.manualMint(address,uint256)._to (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1550) is not in mixedCase
Parameter SatoruFiToken.manualMint(address,uint256)._amount (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1550) is not in mixedCase
Parameter SatoruFiToken.totalBalanceOf(address)._holder (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1557) is not in mixedCase
Parameter SatoruFiToken.lockOf(address)._holder (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1561) is not in mixedCase
Parameter SatoruFiToken.lastUnlockBlock(address)._holder (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1565) is not in mixedCase
Parameter SatoruFiToken.lock(address,uint256)._holder (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1569) is not in mixedCase
Parameter SatoruFiToken.lock(address,uint256)._amount (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1569) is not in mixedCase
Parameter SatoruFiToken.canUnlockAmount(address)._holder (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1586) is not in mixedCase
Parameter SatoruFiToken.transferAll(address)._to (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1614) is not in mixedCase
Variable SatoruFiToken._delegates (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1638) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions
INFO:Detectors:
Redundant expression "this (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#24)" inContext (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#18-27)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#redundant-statements
INFO:Detectors:
Variable MasterChef.REWARD_MULTIPLIER (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#643) is too similar to MasterChef.constructor(SatoruFiToken,address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256[],uint256[],uint256[],uint256[],uint256[])._rewardMultiplier (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#729)
Variable MasterChef.START_BLOCK (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#654) is too similar to MasterChef.constructor(SatoruFiToken,address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256[],uint256[],uint256[],uint256[],uint256[])._startBlock (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#725)
Variable MasterChef.constructor(SatoruFiToken,address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256[],uint256[],uint256[],uint256[],uint256[])._userDepFee (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#727) is too similar to MasterChef.setUserDepFee(uint256)._usrDepFees (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1408)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#variable-names-too-similar
INFO:Detectors:
MasterChef.govToken (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#631) should be immutable 
SatoruFiToken.manualMintLimit (../../sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol#1432) should be immutable 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-immutable
INFO:Slither:/bdata2/sc/dataset/mainnet/0x5CaFA9B74b6C56fC4C035cEa0AAf079c42c23865.sol analyzed (12 contracts with 85 detectors), 199 result(s) found
