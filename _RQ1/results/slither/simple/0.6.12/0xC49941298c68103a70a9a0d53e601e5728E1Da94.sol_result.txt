INFO:Detectors:
Reentrancy in StakingMonthly.decreaseRewardPool(uint256) (../../sc/dataset/mainnet/0xC49941298c68103a70a9a0d53e601e5728E1Da94.sol#759-768):
	External calls:
	- stakingToken.safeTransfer(caller,amount) (../../sc/dataset/mainnet/0xC49941298c68103a70a9a0d53e601e5728E1Da94.sol#764)
	State variables written after the call(s):
	- _rewardPool = _rewardPool.sub(amount) (../../sc/dataset/mainnet/0xC49941298c68103a70a9a0d53e601e5728E1Da94.sol#765)
	StakingMonthly._rewardPool (../../sc/dataset/mainnet/0xC49941298c68103a70a9a0d53e601e5728E1Da94.sol#678) can be used in cross function reentrancies:
	- StakingMonthly.decreaseRewardPool(uint256) (../../sc/dataset/mainnet/0xC49941298c68103a70a9a0d53e601e5728E1Da94.sol#759-768)
	- StakingMonthly.freeSize() (../../sc/dataset/mainnet/0xC49941298c68103a70a9a0d53e601e5728E1Da94.sol#696-698)
	- StakingMonthly.increaseRewardPool(uint256) (../../sc/dataset/mainnet/0xC49941298c68103a70a9a0d53e601e5728E1Da94.sol#770-776)
	- StakingMonthly.rewardPool() (../../sc/dataset/mainnet/0xC49941298c68103a70a9a0d53e601e5728E1Da94.sol#708-710)
	- StakingMonthly.stake(uint256) (../../sc/dataset/mainnet/0xC49941298c68103a70a9a0d53e601e5728E1Da94.sol#784-806)
	- StakingMonthly.withdraw(uint256,uint256) (../../sc/dataset/mainnet/0xC49941298c68103a70a9a0d53e601e5728E1Da94.sol#808-819)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1
INFO:Detectors:
Reentrancy in StakingMonthly.increaseRewardPool(uint256) (../../sc/dataset/mainnet/0xC49941298c68103a70a9a0d53e601e5728E1Da94.sol#770-776):
	External calls:
	- stakingToken.safeTransferFrom(caller,address(this),amount) (../../sc/dataset/mainnet/0xC49941298c68103a70a9a0d53e601e5728E1Da94.sol#772)
	State variables written after the call(s):
	- _rewardPool = _rewardPool.add(amount) (../../sc/dataset/mainnet/0xC49941298c68103a70a9a0d53e601e5728E1Da94.sol#773)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2
INFO:Detectors:
Reentrancy in StakingMonthly.decreaseRewardPool(uint256) (../../sc/dataset/mainnet/0xC49941298c68103a70a9a0d53e601e5728E1Da94.sol#759-768):
	External calls:
	- stakingToken.safeTransfer(caller,amount) (../../sc/dataset/mainnet/0xC49941298c68103a70a9a0d53e601e5728E1Da94.sol#764)
	Event emitted after the call(s):
	- RewardPoolDecreased(caller,amount) (../../sc/dataset/mainnet/0xC49941298c68103a70a9a0d53e601e5728E1Da94.sol#766)
Reentrancy in StakingMonthly.increaseRewardPool(uint256) (../../sc/dataset/mainnet/0xC49941298c68103a70a9a0d53e601e5728E1Da94.sol#770-776):
	External calls:
	- stakingToken.safeTransferFrom(caller,address(this),amount) (../../sc/dataset/mainnet/0xC49941298c68103a70a9a0d53e601e5728E1Da94.sol#772)
	Event emitted after the call(s):
	- RewardPoolIncreased(caller,amount) (../../sc/dataset/mainnet/0xC49941298c68103a70a9a0d53e601e5728E1Da94.sol#774)
Reentrancy in StakingMonthly.stake(uint256) (../../sc/dataset/mainnet/0xC49941298c68103a70a9a0d53e601e5728E1Da94.sol#784-806):
	External calls:
	- stakingToken.safeTransferFrom(caller,address(this),amount) (../../sc/dataset/mainnet/0xC49941298c68103a70a9a0d53e601e5728E1Da94.sol#803)
	Event emitted after the call(s):
	- Staked(caller,stakeId,amount) (../../sc/dataset/mainnet/0xC49941298c68103a70a9a0d53e601e5728E1Da94.sol#804)
Reentrancy in StakingMonthly.withdraw(uint256,uint256) (../../sc/dataset/mainnet/0xC49941298c68103a70a9a0d53e601e5728E1Da94.sol#808-819):
	External calls:
	- stakingToken.safeTransfer(caller,amount) (../../sc/dataset/mainnet/0xC49941298c68103a70a9a0d53e601e5728E1Da94.sol#816)
	Event emitted after the call(s):
	- Withdrawn(caller,id,amount) (../../sc/dataset/mainnet/0xC49941298c68103a70a9a0d53e601e5728E1Da94.sol#817)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3
INFO:Detectors:
StakingMonthly.availableToWithdraw(address,uint256) (../../sc/dataset/mainnet/0xC49941298c68103a70a9a0d53e601e5728E1Da94.sol#716-721) uses timestamp for comparisons
	Dangerous comparisons:
	- stake_.startsAt.add(_intervalDuration) <= getTimestamp() (../../sc/dataset/mainnet/0xC49941298c68103a70a9a0d53e601e5728E1Da94.sol#718)
StakingMonthly.stake(uint256) (../../sc/dataset/mainnet/0xC49941298c68103a70a9a0d53e601e5728E1Da94.sol#784-806) uses timestamp for comparisons
	Dangerous comparisons:
	- canStake = previousStake_.startsAt.add(_intervalDuration) <= currentTimestamp (../../sc/dataset/mainnet/0xC49941298c68103a70a9a0d53e601e5728E1Da94.sol#794)
	- require(bool,string)(canStake,Previous stake is not over) (../../sc/dataset/mainnet/0xC49941298c68103a70a9a0d53e601e5728E1Da94.sol#798)
StakingMonthly._getStake(address,uint256) (../../sc/dataset/mainnet/0xC49941298c68103a70a9a0d53e601e5728E1Da94.sol#825-828) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(id < _stakedInformation[account].length,Invalid stake id) (../../sc/dataset/mainnet/0xC49941298c68103a70a9a0d53e601e5728E1Da94.sol#826)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp
INFO:Detectors:
Address.isContract(address) (../../sc/dataset/mainnet/0xC49941298c68103a70a9a0d53e601e5728E1Da94.sol#503-512) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0xC49941298c68103a70a9a0d53e601e5728E1Da94.sol#510)
Address._verifyCallResult(bool,bytes,string) (../../sc/dataset/mainnet/0xC49941298c68103a70a9a0d53e601e5728E1Da94.sol#648-665) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0xC49941298c68103a70a9a0d53e601e5728E1Da94.sol#657-660)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage
INFO:Detectors:
Different versions of Solidity are used:
	- Version used: ['>=0.6.0<0.8.0', '>=0.6.2<0.8.0', '^0.6.12']
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0xC49941298c68103a70a9a0d53e601e5728E1Da94.sol#111)
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0xC49941298c68103a70a9a0d53e601e5728E1Da94.sol#326)
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0xC49941298c68103a70a9a0d53e601e5728E1Da94.sol#404)
	- >=0.6.2<0.8.0 (../../sc/dataset/mainnet/0xC49941298c68103a70a9a0d53e601e5728E1Da94.sol#480)
	- ABIEncoderV2 (../../sc/dataset/mainnet/0xC49941298c68103a70a9a0d53e601e5728E1Da94.sol#2)
	- ^0.6.12 (../../sc/dataset/mainnet/0xC49941298c68103a70a9a0d53e601e5728E1Da94.sol#6)
	- ^0.6.12 (../../sc/dataset/mainnet/0xC49941298c68103a70a9a0d53e601e5728E1Da94.sol#57)
	- ^0.6.12 (../../sc/dataset/mainnet/0xC49941298c68103a70a9a0d53e601e5728E1Da94.sol#669)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#different-pragma-directives-are-used
INFO:Detectors:
Address.functionCall(address,bytes) (../../sc/dataset/mainnet/0xC49941298c68103a70a9a0d53e601e5728E1Da94.sol#556-558) is never used and should be removed
Address.functionCallWithValue(address,bytes,uint256) (../../sc/dataset/mainnet/0xC49941298c68103a70a9a0d53e601e5728E1Da94.sol#581-583) is never used and should be removed
Address.functionDelegateCall(address,bytes) (../../sc/dataset/mainnet/0xC49941298c68103a70a9a0d53e601e5728E1Da94.sol#630-632) is never used and should be removed
Address.functionDelegateCall(address,bytes,string) (../../sc/dataset/mainnet/0xC49941298c68103a70a9a0d53e601e5728E1Da94.sol#640-646) is never used and should be removed
Address.functionStaticCall(address,bytes) (../../sc/dataset/mainnet/0xC49941298c68103a70a9a0d53e601e5728E1Da94.sol#606-608) is never used and should be removed
Address.functionStaticCall(address,bytes,string) (../../sc/dataset/mainnet/0xC49941298c68103a70a9a0d53e601e5728E1Da94.sol#616-622) is never used and should be removed
Address.sendValue(address,uint256) (../../sc/dataset/mainnet/0xC49941298c68103a70a9a0d53e601e5728E1Da94.sol#530-536) is never used and should be removed
SafeERC20.safeApprove(IERC20,address,uint256) (../../sc/dataset/mainnet/0xC49941298c68103a70a9a0d53e601e5728E1Da94.sol#438-447) is never used and should be removed
SafeERC20.safeDecreaseAllowance(IERC20,address,uint256) (../../sc/dataset/mainnet/0xC49941298c68103a70a9a0d53e601e5728E1Da94.sol#454-457) is never used and should be removed
SafeERC20.safeIncreaseAllowance(IERC20,address,uint256) (../../sc/dataset/mainnet/0xC49941298c68103a70a9a0d53e601e5728E1Da94.sol#449-452) is never used and should be removed
SafeMath.div(uint256,uint256,string) (../../sc/dataset/mainnet/0xC49941298c68103a70a9a0d53e601e5728E1Da94.sol#298-301) is never used and should be removed
SafeMath.mod(uint256,uint256) (../../sc/dataset/mainnet/0xC49941298c68103a70a9a0d53e601e5728E1Da94.sol#260-263) is never used and should be removed
SafeMath.mod(uint256,uint256,string) (../../sc/dataset/mainnet/0xC49941298c68103a70a9a0d53e601e5728E1Da94.sol#318-321) is never used and should be removed
SafeMath.sub(uint256,uint256,string) (../../sc/dataset/mainnet/0xC49941298c68103a70a9a0d53e601e5728E1Da94.sol#278-281) is never used and should be removed
SafeMath.tryAdd(uint256,uint256) (../../sc/dataset/mainnet/0xC49941298c68103a70a9a0d53e601e5728E1Da94.sol#132-136) is never used and should be removed
SafeMath.tryDiv(uint256,uint256) (../../sc/dataset/mainnet/0xC49941298c68103a70a9a0d53e601e5728E1Da94.sol#168-171) is never used and should be removed
SafeMath.tryMod(uint256,uint256) (../../sc/dataset/mainnet/0xC49941298c68103a70a9a0d53e601e5728E1Da94.sol#178-181) is never used and should be removed
SafeMath.tryMul(uint256,uint256) (../../sc/dataset/mainnet/0xC49941298c68103a70a9a0d53e601e5728E1Da94.sol#153-161) is never used and should be removed
SafeMath.trySub(uint256,uint256) (../../sc/dataset/mainnet/0xC49941298c68103a70a9a0d53e601e5728E1Da94.sol#143-146) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code
INFO:Detectors:
Pragma version^0.6.12 (../../sc/dataset/mainnet/0xC49941298c68103a70a9a0d53e601e5728E1Da94.sol#6) allows old versions
Pragma version^0.6.12 (../../sc/dataset/mainnet/0xC49941298c68103a70a9a0d53e601e5728E1Da94.sol#57) allows old versions
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0xC49941298c68103a70a9a0d53e601e5728E1Da94.sol#111) is too complex
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0xC49941298c68103a70a9a0d53e601e5728E1Da94.sol#326) is too complex
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0xC49941298c68103a70a9a0d53e601e5728E1Da94.sol#404) is too complex
Pragma version>=0.6.2<0.8.0 (../../sc/dataset/mainnet/0xC49941298c68103a70a9a0d53e601e5728E1Da94.sol#480) is too complex
Pragma version^0.6.12 (../../sc/dataset/mainnet/0xC49941298c68103a70a9a0d53e601e5728E1Da94.sol#669) allows old versions
solc-0.6.12 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity
INFO:Detectors:
Low level call in Address.sendValue(address,uint256) (../../sc/dataset/mainnet/0xC49941298c68103a70a9a0d53e601e5728E1Da94.sol#530-536):
	- (success) = recipient.call{value: amount}() (../../sc/dataset/mainnet/0xC49941298c68103a70a9a0d53e601e5728E1Da94.sol#534)
Low level call in Address.functionCallWithValue(address,bytes,uint256,string) (../../sc/dataset/mainnet/0xC49941298c68103a70a9a0d53e601e5728E1Da94.sol#591-598):
	- (success,returndata) = target.call{value: value}(data) (../../sc/dataset/mainnet/0xC49941298c68103a70a9a0d53e601e5728E1Da94.sol#596)
Low level call in Address.functionStaticCall(address,bytes,string) (../../sc/dataset/mainnet/0xC49941298c68103a70a9a0d53e601e5728E1Da94.sol#616-622):
	- (success,returndata) = target.staticcall(data) (../../sc/dataset/mainnet/0xC49941298c68103a70a9a0d53e601e5728E1Da94.sol#620)
Low level call in Address.functionDelegateCall(address,bytes,string) (../../sc/dataset/mainnet/0xC49941298c68103a70a9a0d53e601e5728E1Da94.sol#640-646):
	- (success,returndata) = target.delegatecall(data) (../../sc/dataset/mainnet/0xC49941298c68103a70a9a0d53e601e5728E1Da94.sol#644)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls
INFO:Detectors:
Variable StakingMonthly._intervalDuration (../../sc/dataset/mainnet/0xC49941298c68103a70a9a0d53e601e5728E1Da94.sol#677) is too similar to StakingMonthly.constructor(address,IERC20,uint256,uint256).intervalDuration_ (../../sc/dataset/mainnet/0xC49941298c68103a70a9a0d53e601e5728E1Da94.sol#750)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#variable-names-too-similar
INFO:Detectors:
StakingBase.revenue (../../sc/dataset/mainnet/0xC49941298c68103a70a9a0d53e601e5728E1Da94.sol#24) should be immutable 
StakingBase.stakingToken (../../sc/dataset/mainnet/0xC49941298c68103a70a9a0d53e601e5728E1Da94.sol#25) should be immutable 
StakingMonthly._intervalDuration (../../sc/dataset/mainnet/0xC49941298c68103a70a9a0d53e601e5728E1Da94.sol#677) should be immutable 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-immutable
INFO:Slither:/bdata2/sc/dataset/mainnet/0xC49941298c68103a70a9a0d53e601e5728E1Da94.sol analyzed (7 contracts with 85 detectors), 47 result(s) found
