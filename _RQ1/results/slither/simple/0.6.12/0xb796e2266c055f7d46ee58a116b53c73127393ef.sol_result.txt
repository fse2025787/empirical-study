INFO:Detectors:
Reentrancy in GUMLPTokenPool.exit() (../../sc/dataset/mainnet/0xb796e2266c055f7d46ee58a116b53c73127393ef.sol#826-829):
	External calls:
	- withdraw(balanceOf(msg.sender)) (../../sc/dataset/mainnet/0xb796e2266c055f7d46ee58a116b53c73127393ef.sol#827)
		- returndata = address(token).functionCall(data,SafeERC20: low-level call failed) (../../sc/dataset/mainnet/0xb796e2266c055f7d46ee58a116b53c73127393ef.sol#496)
		- lpt.safeTransfer(msg.sender,amount) (../../sc/dataset/mainnet/0xb796e2266c055f7d46ee58a116b53c73127393ef.sol#683)
		- (success,returndata) = target.call{value: weiValue}(data) (../../sc/dataset/mainnet/0xb796e2266c055f7d46ee58a116b53c73127393ef.sol#407)
	- getReward() (../../sc/dataset/mainnet/0xb796e2266c055f7d46ee58a116b53c73127393ef.sol#828)
		- returndata = address(token).functionCall(data,SafeERC20: low-level call failed) (../../sc/dataset/mainnet/0xb796e2266c055f7d46ee58a116b53c73127393ef.sol#496)
		- (success,returndata) = target.call{value: weiValue}(data) (../../sc/dataset/mainnet/0xb796e2266c055f7d46ee58a116b53c73127393ef.sol#407)
		- gum.safeTransfer(msg.sender,reward) (../../sc/dataset/mainnet/0xb796e2266c055f7d46ee58a116b53c73127393ef.sol#840)
	External calls sending eth:
	- withdraw(balanceOf(msg.sender)) (../../sc/dataset/mainnet/0xb796e2266c055f7d46ee58a116b53c73127393ef.sol#827)
		- (success,returndata) = target.call{value: weiValue}(data) (../../sc/dataset/mainnet/0xb796e2266c055f7d46ee58a116b53c73127393ef.sol#407)
	- getReward() (../../sc/dataset/mainnet/0xb796e2266c055f7d46ee58a116b53c73127393ef.sol#828)
		- (success,returndata) = target.call{value: weiValue}(data) (../../sc/dataset/mainnet/0xb796e2266c055f7d46ee58a116b53c73127393ef.sol#407)
	State variables written after the call(s):
	- getReward() (../../sc/dataset/mainnet/0xb796e2266c055f7d46ee58a116b53c73127393ef.sol#828)
		- lastUpdateTime = lastTimeRewardApplicable() (../../sc/dataset/mainnet/0xb796e2266c055f7d46ee58a116b53c73127393ef.sol#767)
	GUMLPTokenPool.lastUpdateTime (../../sc/dataset/mainnet/0xb796e2266c055f7d46ee58a116b53c73127393ef.sol#743) can be used in cross function reentrancies:
	- GUMLPTokenPool.lastUpdateTime (../../sc/dataset/mainnet/0xb796e2266c055f7d46ee58a116b53c73127393ef.sol#743)
	- GUMLPTokenPool.notifyRewardAmount(uint256) (../../sc/dataset/mainnet/0xb796e2266c055f7d46ee58a116b53c73127393ef.sol#864-880)
	- GUMLPTokenPool.rewardPerToken() (../../sc/dataset/mainnet/0xb796e2266c055f7d46ee58a116b53c73127393ef.sol#779-791)
	- GUMLPTokenPool.updateReward(address) (../../sc/dataset/mainnet/0xb796e2266c055f7d46ee58a116b53c73127393ef.sol#765-773)
	- getReward() (../../sc/dataset/mainnet/0xb796e2266c055f7d46ee58a116b53c73127393ef.sol#828)
		- periodFinish = block.timestamp.add(DURATION) (../../sc/dataset/mainnet/0xb796e2266c055f7d46ee58a116b53c73127393ef.sol#848)
	GUMLPTokenPool.periodFinish (../../sc/dataset/mainnet/0xb796e2266c055f7d46ee58a116b53c73127393ef.sol#741) can be used in cross function reentrancies:
	- GUMLPTokenPool.checkhalve() (../../sc/dataset/mainnet/0xb796e2266c055f7d46ee58a116b53c73127393ef.sol#845-852)
	- GUMLPTokenPool.lastTimeRewardApplicable() (../../sc/dataset/mainnet/0xb796e2266c055f7d46ee58a116b53c73127393ef.sol#775-777)
	- GUMLPTokenPool.notifyRewardAmount(uint256) (../../sc/dataset/mainnet/0xb796e2266c055f7d46ee58a116b53c73127393ef.sol#864-880)
	- GUMLPTokenPool.periodFinish (../../sc/dataset/mainnet/0xb796e2266c055f7d46ee58a116b53c73127393ef.sol#741)
	- getReward() (../../sc/dataset/mainnet/0xb796e2266c055f7d46ee58a116b53c73127393ef.sol#828)
		- rewardPerTokenStored = rewardPerToken() (../../sc/dataset/mainnet/0xb796e2266c055f7d46ee58a116b53c73127393ef.sol#766)
	GUMLPTokenPool.rewardPerTokenStored (../../sc/dataset/mainnet/0xb796e2266c055f7d46ee58a116b53c73127393ef.sol#744) can be used in cross function reentrancies:
	- GUMLPTokenPool.rewardPerToken() (../../sc/dataset/mainnet/0xb796e2266c055f7d46ee58a116b53c73127393ef.sol#779-791)
	- GUMLPTokenPool.rewardPerTokenStored (../../sc/dataset/mainnet/0xb796e2266c055f7d46ee58a116b53c73127393ef.sol#744)
	- GUMLPTokenPool.updateReward(address) (../../sc/dataset/mainnet/0xb796e2266c055f7d46ee58a116b53c73127393ef.sol#765-773)
	- getReward() (../../sc/dataset/mainnet/0xb796e2266c055f7d46ee58a116b53c73127393ef.sol#828)
		- rewardRate = initreward.div(DURATION) (../../sc/dataset/mainnet/0xb796e2266c055f7d46ee58a116b53c73127393ef.sol#847)
	GUMLPTokenPool.rewardRate (../../sc/dataset/mainnet/0xb796e2266c055f7d46ee58a116b53c73127393ef.sol#742) can be used in cross function reentrancies:
	- GUMLPTokenPool.checkhalve() (../../sc/dataset/mainnet/0xb796e2266c055f7d46ee58a116b53c73127393ef.sol#845-852)
	- GUMLPTokenPool.notifyRewardAmount(uint256) (../../sc/dataset/mainnet/0xb796e2266c055f7d46ee58a116b53c73127393ef.sol#864-880)
	- GUMLPTokenPool.rewardPerToken() (../../sc/dataset/mainnet/0xb796e2266c055f7d46ee58a116b53c73127393ef.sol#779-791)
	- GUMLPTokenPool.rewardRate (../../sc/dataset/mainnet/0xb796e2266c055f7d46ee58a116b53c73127393ef.sol#742)
	- getReward() (../../sc/dataset/mainnet/0xb796e2266c055f7d46ee58a116b53c73127393ef.sol#828)
		- rewards[msg.sender] = 0 (../../sc/dataset/mainnet/0xb796e2266c055f7d46ee58a116b53c73127393ef.sol#839)
		- rewards[account] = earned(account) (../../sc/dataset/mainnet/0xb796e2266c055f7d46ee58a116b53c73127393ef.sol#769)
	GUMLPTokenPool.rewards (../../sc/dataset/mainnet/0xb796e2266c055f7d46ee58a116b53c73127393ef.sol#746) can be used in cross function reentrancies:
	- GUMLPTokenPool.earned(address) (../../sc/dataset/mainnet/0xb796e2266c055f7d46ee58a116b53c73127393ef.sol#793-799)
	- GUMLPTokenPool.getReward() (../../sc/dataset/mainnet/0xb796e2266c055f7d46ee58a116b53c73127393ef.sol#836-843)
	- GUMLPTokenPool.rewards (../../sc/dataset/mainnet/0xb796e2266c055f7d46ee58a116b53c73127393ef.sol#746)
	- GUMLPTokenPool.updateReward(address) (../../sc/dataset/mainnet/0xb796e2266c055f7d46ee58a116b53c73127393ef.sol#765-773)
	- getReward() (../../sc/dataset/mainnet/0xb796e2266c055f7d46ee58a116b53c73127393ef.sol#828)
		- userRewardPerTokenPaid[account] = rewardPerTokenStored (../../sc/dataset/mainnet/0xb796e2266c055f7d46ee58a116b53c73127393ef.sol#770)
	GUMLPTokenPool.userRewardPerTokenPaid (../../sc/dataset/mainnet/0xb796e2266c055f7d46ee58a116b53c73127393ef.sol#745) can be used in cross function reentrancies:
	- GUMLPTokenPool.earned(address) (../../sc/dataset/mainnet/0xb796e2266c055f7d46ee58a116b53c73127393ef.sol#793-799)
	- GUMLPTokenPool.updateReward(address) (../../sc/dataset/mainnet/0xb796e2266c055f7d46ee58a116b53c73127393ef.sol#765-773)
	- GUMLPTokenPool.userRewardPerTokenPaid (../../sc/dataset/mainnet/0xb796e2266c055f7d46ee58a116b53c73127393ef.sol#745)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities
INFO:Detectors:
Reentrancy in GUMLPTokenPool.emergencyWithdraw() (../../sc/dataset/mainnet/0xb796e2266c055f7d46ee58a116b53c73127393ef.sol#831-834):
	External calls:
	- gum.safeTransfer(msg.sender,gum.balanceOf(address(this))) (../../sc/dataset/mainnet/0xb796e2266c055f7d46ee58a116b53c73127393ef.sol#832)
	Event emitted after the call(s):
	- EmergencyWithdraw(msg.sender) (../../sc/dataset/mainnet/0xb796e2266c055f7d46ee58a116b53c73127393ef.sol#833)
Reentrancy in GUMLPTokenPool.exit() (../../sc/dataset/mainnet/0xb796e2266c055f7d46ee58a116b53c73127393ef.sol#826-829):
	External calls:
	- withdraw(balanceOf(msg.sender)) (../../sc/dataset/mainnet/0xb796e2266c055f7d46ee58a116b53c73127393ef.sol#827)
		- returndata = address(token).functionCall(data,SafeERC20: low-level call failed) (../../sc/dataset/mainnet/0xb796e2266c055f7d46ee58a116b53c73127393ef.sol#496)
		- lpt.safeTransfer(msg.sender,amount) (../../sc/dataset/mainnet/0xb796e2266c055f7d46ee58a116b53c73127393ef.sol#683)
		- (success,returndata) = target.call{value: weiValue}(data) (../../sc/dataset/mainnet/0xb796e2266c055f7d46ee58a116b53c73127393ef.sol#407)
	- getReward() (../../sc/dataset/mainnet/0xb796e2266c055f7d46ee58a116b53c73127393ef.sol#828)
		- returndata = address(token).functionCall(data,SafeERC20: low-level call failed) (../../sc/dataset/mainnet/0xb796e2266c055f7d46ee58a116b53c73127393ef.sol#496)
		- (success,returndata) = target.call{value: weiValue}(data) (../../sc/dataset/mainnet/0xb796e2266c055f7d46ee58a116b53c73127393ef.sol#407)
		- gum.safeTransfer(msg.sender,reward) (../../sc/dataset/mainnet/0xb796e2266c055f7d46ee58a116b53c73127393ef.sol#840)
	External calls sending eth:
	- withdraw(balanceOf(msg.sender)) (../../sc/dataset/mainnet/0xb796e2266c055f7d46ee58a116b53c73127393ef.sol#827)
		- (success,returndata) = target.call{value: weiValue}(data) (../../sc/dataset/mainnet/0xb796e2266c055f7d46ee58a116b53c73127393ef.sol#407)
	- getReward() (../../sc/dataset/mainnet/0xb796e2266c055f7d46ee58a116b53c73127393ef.sol#828)
		- (success,returndata) = target.call{value: weiValue}(data) (../../sc/dataset/mainnet/0xb796e2266c055f7d46ee58a116b53c73127393ef.sol#407)
	Event emitted after the call(s):
	- RewardAdded(initreward) (../../sc/dataset/mainnet/0xb796e2266c055f7d46ee58a116b53c73127393ef.sol#849)
		- getReward() (../../sc/dataset/mainnet/0xb796e2266c055f7d46ee58a116b53c73127393ef.sol#828)
	- RewardPaid(msg.sender,reward) (../../sc/dataset/mainnet/0xb796e2266c055f7d46ee58a116b53c73127393ef.sol#841)
		- getReward() (../../sc/dataset/mainnet/0xb796e2266c055f7d46ee58a116b53c73127393ef.sol#828)
Reentrancy in GUMLPTokenPool.getReward() (../../sc/dataset/mainnet/0xb796e2266c055f7d46ee58a116b53c73127393ef.sol#836-843):
	External calls:
	- gum.safeTransfer(msg.sender,reward) (../../sc/dataset/mainnet/0xb796e2266c055f7d46ee58a116b53c73127393ef.sol#840)
	Event emitted after the call(s):
	- RewardPaid(msg.sender,reward) (../../sc/dataset/mainnet/0xb796e2266c055f7d46ee58a116b53c73127393ef.sol#841)
Reentrancy in GUMLPTokenPool.stake(uint256) (../../sc/dataset/mainnet/0xb796e2266c055f7d46ee58a116b53c73127393ef.sol#802-812):
	External calls:
	- super.stake(amount) (../../sc/dataset/mainnet/0xb796e2266c055f7d46ee58a116b53c73127393ef.sol#810)
		- returndata = address(token).functionCall(data,SafeERC20: low-level call failed) (../../sc/dataset/mainnet/0xb796e2266c055f7d46ee58a116b53c73127393ef.sol#496)
		- lpt.safeTransferFrom(msg.sender,address(this),amount) (../../sc/dataset/mainnet/0xb796e2266c055f7d46ee58a116b53c73127393ef.sol#677)
		- (success,returndata) = target.call{value: weiValue}(data) (../../sc/dataset/mainnet/0xb796e2266c055f7d46ee58a116b53c73127393ef.sol#407)
	External calls sending eth:
	- super.stake(amount) (../../sc/dataset/mainnet/0xb796e2266c055f7d46ee58a116b53c73127393ef.sol#810)
		- (success,returndata) = target.call{value: weiValue}(data) (../../sc/dataset/mainnet/0xb796e2266c055f7d46ee58a116b53c73127393ef.sol#407)
	Event emitted after the call(s):
	- Staked(msg.sender,amount) (../../sc/dataset/mainnet/0xb796e2266c055f7d46ee58a116b53c73127393ef.sol#811)
Reentrancy in GUMLPTokenPool.withdraw(uint256) (../../sc/dataset/mainnet/0xb796e2266c055f7d46ee58a116b53c73127393ef.sol#814-824):
	External calls:
	- super.withdraw(amount) (../../sc/dataset/mainnet/0xb796e2266c055f7d46ee58a116b53c73127393ef.sol#822)
		- returndata = address(token).functionCall(data,SafeERC20: low-level call failed) (../../sc/dataset/mainnet/0xb796e2266c055f7d46ee58a116b53c73127393ef.sol#496)
		- lpt.safeTransfer(msg.sender,amount) (../../sc/dataset/mainnet/0xb796e2266c055f7d46ee58a116b53c73127393ef.sol#683)
		- (success,returndata) = target.call{value: weiValue}(data) (../../sc/dataset/mainnet/0xb796e2266c055f7d46ee58a116b53c73127393ef.sol#407)
	External calls sending eth:
	- super.withdraw(amount) (../../sc/dataset/mainnet/0xb796e2266c055f7d46ee58a116b53c73127393ef.sol#822)
		- (success,returndata) = target.call{value: weiValue}(data) (../../sc/dataset/mainnet/0xb796e2266c055f7d46ee58a116b53c73127393ef.sol#407)
	Event emitted after the call(s):
	- Withdrawn(msg.sender,amount) (../../sc/dataset/mainnet/0xb796e2266c055f7d46ee58a116b53c73127393ef.sol#823)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3
INFO:Detectors:
GUMLPTokenPool.getReward() (../../sc/dataset/mainnet/0xb796e2266c055f7d46ee58a116b53c73127393ef.sol#836-843) uses timestamp for comparisons
	Dangerous comparisons:
	- reward > 0 (../../sc/dataset/mainnet/0xb796e2266c055f7d46ee58a116b53c73127393ef.sol#838)
GUMLPTokenPool.notifyRewardAmount(uint256) (../../sc/dataset/mainnet/0xb796e2266c055f7d46ee58a116b53c73127393ef.sol#864-880) uses timestamp for comparisons
	Dangerous comparisons:
	- block.timestamp > starttime (../../sc/dataset/mainnet/0xb796e2266c055f7d46ee58a116b53c73127393ef.sol#869)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp
INFO:Detectors:
Address.isContract(address) (../../sc/dataset/mainnet/0xb796e2266c055f7d46ee58a116b53c73127393ef.sol#310-319) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0xb796e2266c055f7d46ee58a116b53c73127393ef.sol#317)
Address._functionCallWithValue(address,bytes,uint256,string) (../../sc/dataset/mainnet/0xb796e2266c055f7d46ee58a116b53c73127393ef.sol#403-424) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0xb796e2266c055f7d46ee58a116b53c73127393ef.sol#416-419)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage
INFO:Detectors:
Different versions of Solidity are used:
	- Version used: ['^0.6.0', '^0.6.2']
	- ^0.6.0 (../../sc/dataset/mainnet/0xb796e2266c055f7d46ee58a116b53c73127393ef.sol#11)
	- ^0.6.0 (../../sc/dataset/mainnet/0xb796e2266c055f7d46ee58a116b53c73127393ef.sol#45)
	- ^0.6.0 (../../sc/dataset/mainnet/0xb796e2266c055f7d46ee58a116b53c73127393ef.sol#207)
	- ^0.6.0 (../../sc/dataset/mainnet/0xb796e2266c055f7d46ee58a116b53c73127393ef.sol#431)
	- ^0.6.0 (../../sc/dataset/mainnet/0xb796e2266c055f7d46ee58a116b53c73127393ef.sol#508)
	- ^0.6.0 (../../sc/dataset/mainnet/0xb796e2266c055f7d46ee58a116b53c73127393ef.sol#535)
	- ^0.6.0 (../../sc/dataset/mainnet/0xb796e2266c055f7d46ee58a116b53c73127393ef.sol#603)
	- ^0.6.0 (../../sc/dataset/mainnet/0xb796e2266c055f7d46ee58a116b53c73127393ef.sol#652)
	- ^0.6.0 (../../sc/dataset/mainnet/0xb796e2266c055f7d46ee58a116b53c73127393ef.sol#689)
	- ^0.6.2 (../../sc/dataset/mainnet/0xb796e2266c055f7d46ee58a116b53c73127393ef.sol#287)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#different-pragma-directives-are-used
INFO:Detectors:
Address.functionCall(address,bytes) (../../sc/dataset/mainnet/0xb796e2266c055f7d46ee58a116b53c73127393ef.sol#363-365) is never used and should be removed
Address.functionCallWithValue(address,bytes,uint256) (../../sc/dataset/mainnet/0xb796e2266c055f7d46ee58a116b53c73127393ef.sol#388-390) is never used and should be removed
Address.functionCallWithValue(address,bytes,uint256,string) (../../sc/dataset/mainnet/0xb796e2266c055f7d46ee58a116b53c73127393ef.sol#398-401) is never used and should be removed
Address.sendValue(address,uint256) (../../sc/dataset/mainnet/0xb796e2266c055f7d46ee58a116b53c73127393ef.sol#337-343) is never used and should be removed
Context._msgData() (../../sc/dataset/mainnet/0xb796e2266c055f7d46ee58a116b53c73127393ef.sol#525-528) is never used and should be removed
Math.average(uint256,uint256) (../../sc/dataset/mainnet/0xb796e2266c055f7d46ee58a116b53c73127393ef.sol#35-38) is never used and should be removed
Math.max(uint256,uint256) (../../sc/dataset/mainnet/0xb796e2266c055f7d46ee58a116b53c73127393ef.sol#20-22) is never used and should be removed
SafeERC20.safeApprove(IERC20,address,uint256) (../../sc/dataset/mainnet/0xb796e2266c055f7d46ee58a116b53c73127393ef.sol#464-473) is never used and should be removed
SafeERC20.safeDecreaseAllowance(IERC20,address,uint256) (../../sc/dataset/mainnet/0xb796e2266c055f7d46ee58a116b53c73127393ef.sol#480-483) is never used and should be removed
SafeERC20.safeIncreaseAllowance(IERC20,address,uint256) (../../sc/dataset/mainnet/0xb796e2266c055f7d46ee58a116b53c73127393ef.sol#475-478) is never used and should be removed
SafeMath.mod(uint256,uint256) (../../sc/dataset/mainnet/0xb796e2266c055f7d46ee58a116b53c73127393ef.sol#181-183) is never used and should be removed
SafeMath.mod(uint256,uint256,string) (../../sc/dataset/mainnet/0xb796e2266c055f7d46ee58a116b53c73127393ef.sol#197-200) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code
INFO:Detectors:
Pragma version^0.6.0 (../../sc/dataset/mainnet/0xb796e2266c055f7d46ee58a116b53c73127393ef.sol#11) allows old versions
Pragma version^0.6.0 (../../sc/dataset/mainnet/0xb796e2266c055f7d46ee58a116b53c73127393ef.sol#45) allows old versions
Pragma version^0.6.0 (../../sc/dataset/mainnet/0xb796e2266c055f7d46ee58a116b53c73127393ef.sol#207) allows old versions
Pragma version^0.6.2 (../../sc/dataset/mainnet/0xb796e2266c055f7d46ee58a116b53c73127393ef.sol#287) allows old versions
Pragma version^0.6.0 (../../sc/dataset/mainnet/0xb796e2266c055f7d46ee58a116b53c73127393ef.sol#431) allows old versions
Pragma version^0.6.0 (../../sc/dataset/mainnet/0xb796e2266c055f7d46ee58a116b53c73127393ef.sol#508) allows old versions
Pragma version^0.6.0 (../../sc/dataset/mainnet/0xb796e2266c055f7d46ee58a116b53c73127393ef.sol#535) allows old versions
Pragma version^0.6.0 (../../sc/dataset/mainnet/0xb796e2266c055f7d46ee58a116b53c73127393ef.sol#603) allows old versions
Pragma version^0.6.0 (../../sc/dataset/mainnet/0xb796e2266c055f7d46ee58a116b53c73127393ef.sol#652) allows old versions
Pragma version^0.6.0 (../../sc/dataset/mainnet/0xb796e2266c055f7d46ee58a116b53c73127393ef.sol#689) allows old versions
solc-0.6.12 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity
INFO:Detectors:
Low level call in Address.sendValue(address,uint256) (../../sc/dataset/mainnet/0xb796e2266c055f7d46ee58a116b53c73127393ef.sol#337-343):
	- (success) = recipient.call{value: amount}() (../../sc/dataset/mainnet/0xb796e2266c055f7d46ee58a116b53c73127393ef.sol#341)
Low level call in Address._functionCallWithValue(address,bytes,uint256,string) (../../sc/dataset/mainnet/0xb796e2266c055f7d46ee58a116b53c73127393ef.sol#403-424):
	- (success,returndata) = target.call{value: weiValue}(data) (../../sc/dataset/mainnet/0xb796e2266c055f7d46ee58a116b53c73127393ef.sol#407)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls
INFO:Detectors:
Redundant expression "this (../../sc/dataset/mainnet/0xb796e2266c055f7d46ee58a116b53c73127393ef.sol#526)" inContext (../../sc/dataset/mainnet/0xb796e2266c055f7d46ee58a116b53c73127393ef.sol#520-529)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#redundant-statements
INFO:Detectors:
GUMLPTokenPool.gum (../../sc/dataset/mainnet/0xb796e2266c055f7d46ee58a116b53c73127393ef.sol#736) should be immutable 
GUMLPTokenPool.starttime (../../sc/dataset/mainnet/0xb796e2266c055f7d46ee58a116b53c73127393ef.sol#740) should be immutable 
LPTokenWrapper.lpt (../../sc/dataset/mainnet/0xb796e2266c055f7d46ee58a116b53c73127393ef.sol#661) should be immutable 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-immutable
INFO:Slither:/bdata2/sc/dataset/mainnet/0xb796e2266c055f7d46ee58a116b53c73127393ef.sol analyzed (10 contracts with 85 detectors), 40 result(s) found
