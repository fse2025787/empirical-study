INFO:Detectors:
CheeseFactory.preMint() (../../sc/dataset/mainnet/0x7D40d5ecf31Af9C7a7E32aa5d7b34CdCC930a647.sol#964-1003) performs a multiplication on the result of a division:
	- n = time.div(weekTimestamp) (../../sc/dataset/mainnet/0x7D40d5ecf31Af9C7a7E32aa5d7b34CdCC930a647.sol#981)
	- an = a1.sub(n.mul(d)) (../../sc/dataset/mainnet/0x7D40d5ecf31Af9C7a7E32aa5d7b34CdCC930a647.sol#985)
CheeseFactory.preMint() (../../sc/dataset/mainnet/0x7D40d5ecf31Af9C7a7E32aa5d7b34CdCC930a647.sol#964-1003) performs a multiplication on the result of a division:
	- n = time.div(weekTimestamp) (../../sc/dataset/mainnet/0x7D40d5ecf31Af9C7a7E32aa5d7b34CdCC930a647.sol#981)
	- first = n.mul(a1) (../../sc/dataset/mainnet/0x7D40d5ecf31Af9C7a7E32aa5d7b34CdCC930a647.sol#995)
CheeseFactory.preMint() (../../sc/dataset/mainnet/0x7D40d5ecf31Af9C7a7E32aa5d7b34CdCC930a647.sol#964-1003) performs a multiplication on the result of a division:
	- n = time.div(weekTimestamp) (../../sc/dataset/mainnet/0x7D40d5ecf31Af9C7a7E32aa5d7b34CdCC930a647.sol#981)
	- last = n.mul(n.sub(1)).mul(d).div(2) (../../sc/dataset/mainnet/0x7D40d5ecf31Af9C7a7E32aa5d7b34CdCC930a647.sol#997)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#divide-before-multiply
INFO:Detectors:
Reentrancy in CheeseFactory.poolMint(bytes32) (../../sc/dataset/mainnet/0x7D40d5ecf31Af9C7a7E32aa5d7b34CdCC930a647.sol#1019-1030):
	External calls:
	- token.mint(msg.sender,amount) (../../sc/dataset/mainnet/0x7D40d5ecf31Af9C7a7E32aa5d7b34CdCC930a647.sol#1026)
	State variables written after the call(s):
	- pool.minted = pool.minted.add(amount) (../../sc/dataset/mainnet/0x7D40d5ecf31Af9C7a7E32aa5d7b34CdCC930a647.sol#1027)
	CheeseFactory.poolInfo (../../sc/dataset/mainnet/0x7D40d5ecf31Af9C7a7E32aa5d7b34CdCC930a647.sol#927) can be used in cross function reentrancies:
	- CheeseFactory.initialize(address,address,uint256) (../../sc/dataset/mainnet/0x7D40d5ecf31Af9C7a7E32aa5d7b34CdCC930a647.sol#949-962)
	- CheeseFactory.poolInfo (../../sc/dataset/mainnet/0x7D40d5ecf31Af9C7a7E32aa5d7b34CdCC930a647.sol#927)
	- CheeseFactory.prePoolMint(bytes32) (../../sc/dataset/mainnet/0x7D40d5ecf31Af9C7a7E32aa5d7b34CdCC930a647.sol#1012-1017)
	- CheeseFactory.setPool(bytes32,address) (../../sc/dataset/mainnet/0x7D40d5ecf31Af9C7a7E32aa5d7b34CdCC930a647.sol#938-942)
Reentrancy in CheesePrivateStakePool.stake(uint256) (../../sc/dataset/mainnet/0x7D40d5ecf31Af9C7a7E32aa5d7b34CdCC930a647.sol#1140-1156):
	External calls:
	- updateRewardPerShare() (../../sc/dataset/mainnet/0x7D40d5ecf31Af9C7a7E32aa5d7b34CdCC930a647.sol#1145)
		- require(bool,string)(_reward == cheeseFactory.poolMint(ConfigNames.PRIVATE),pool mint error) (../../sc/dataset/mainnet/0x7D40d5ecf31Af9C7a7E32aa5d7b34CdCC930a647.sol#1121-1124)
	State variables written after the call(s):
	- totalStake = totalStake.add(amount) (../../sc/dataset/mainnet/0x7D40d5ecf31Af9C7a7E32aa5d7b34CdCC930a647.sol#1152)
	CheesePrivateStakePool.totalStake (../../sc/dataset/mainnet/0x7D40d5ecf31Af9C7a7E32aa5d7b34CdCC930a647.sol#1062) can be used in cross function reentrancies:
	- CheesePrivateStakePool.calculateIncome(address) (../../sc/dataset/mainnet/0x7D40d5ecf31Af9C7a7E32aa5d7b34CdCC930a647.sol#1193-1207)
	- CheesePrivateStakePool.currentRewardShare() (../../sc/dataset/mainnet/0x7D40d5ecf31Af9C7a7E32aa5d7b34CdCC930a647.sol#1101-1114)
	- CheesePrivateStakePool.totalStake (../../sc/dataset/mainnet/0x7D40d5ecf31Af9C7a7E32aa5d7b34CdCC930a647.sol#1062)
Reentrancy in CheesePrivateStakePool.withdraw(uint256) (../../sc/dataset/mainnet/0x7D40d5ecf31Af9C7a7E32aa5d7b34CdCC930a647.sol#1158-1174):
	External calls:
	- updateRewardPerShare() (../../sc/dataset/mainnet/0x7D40d5ecf31Af9C7a7E32aa5d7b34CdCC930a647.sol#1162)
		- require(bool,string)(_reward == cheeseFactory.poolMint(ConfigNames.PRIVATE),pool mint error) (../../sc/dataset/mainnet/0x7D40d5ecf31Af9C7a7E32aa5d7b34CdCC930a647.sol#1121-1124)
	State variables written after the call(s):
	- totalStake = totalStake.sub(amount) (../../sc/dataset/mainnet/0x7D40d5ecf31Af9C7a7E32aa5d7b34CdCC930a647.sol#1170)
	CheesePrivateStakePool.totalStake (../../sc/dataset/mainnet/0x7D40d5ecf31Af9C7a7E32aa5d7b34CdCC930a647.sol#1062) can be used in cross function reentrancies:
	- CheesePrivateStakePool.calculateIncome(address) (../../sc/dataset/mainnet/0x7D40d5ecf31Af9C7a7E32aa5d7b34CdCC930a647.sol#1193-1207)
	- CheesePrivateStakePool.currentRewardShare() (../../sc/dataset/mainnet/0x7D40d5ecf31Af9C7a7E32aa5d7b34CdCC930a647.sol#1101-1114)
	- CheesePrivateStakePool.totalStake (../../sc/dataset/mainnet/0x7D40d5ecf31Af9C7a7E32aa5d7b34CdCC930a647.sol#1062)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1
INFO:Detectors:
CheeseToken.constructor(string,string)._symbol (../../sc/dataset/mainnet/0x7D40d5ecf31Af9C7a7E32aa5d7b34CdCC930a647.sol#856) shadows:
	- ERC20._symbol (../../sc/dataset/mainnet/0x7D40d5ecf31Af9C7a7E32aa5d7b34CdCC930a647.sol#576) (state variable)
CheeseToken.constructor(string,string)._name (../../sc/dataset/mainnet/0x7D40d5ecf31Af9C7a7E32aa5d7b34CdCC930a647.sol#856) shadows:
	- ERC20._name (../../sc/dataset/mainnet/0x7D40d5ecf31Af9C7a7E32aa5d7b34CdCC930a647.sol#575) (state variable)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing
INFO:Detectors:
CheeseFactory.initialize(address,address,uint256) (../../sc/dataset/mainnet/0x7D40d5ecf31Af9C7a7E32aa5d7b34CdCC930a647.sol#949-962) should emit an event for: 
	- startTimestamp = startTimestamp_ (../../sc/dataset/mainnet/0x7D40d5ecf31Af9C7a7E32aa5d7b34CdCC930a647.sol#960) 
	- lastTimestamp = startTimestamp_ (../../sc/dataset/mainnet/0x7D40d5ecf31Af9C7a7E32aa5d7b34CdCC930a647.sol#961) 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-arithmetic
INFO:Detectors:
Reentrancy in CheesePrivateStakePool.claim() (../../sc/dataset/mainnet/0x7D40d5ecf31Af9C7a7E32aa5d7b34CdCC930a647.sol#1176-1191):
	External calls:
	- updateRewardPerShare() (../../sc/dataset/mainnet/0x7D40d5ecf31Af9C7a7E32aa5d7b34CdCC930a647.sol#1180)
		- require(bool,string)(_reward == cheeseFactory.poolMint(ConfigNames.PRIVATE),pool mint error) (../../sc/dataset/mainnet/0x7D40d5ecf31Af9C7a7E32aa5d7b34CdCC930a647.sol#1121-1124)
	State variables written after the call(s):
	- userInfo.reward = 0 (../../sc/dataset/mainnet/0x7D40d5ecf31Af9C7a7E32aa5d7b34CdCC930a647.sol#1186)
	- userInfo.totalIncome = userInfo.totalIncome.add(amount) (../../sc/dataset/mainnet/0x7D40d5ecf31Af9C7a7E32aa5d7b34CdCC930a647.sol#1187)
	- updateUserReward(msg.sender) (../../sc/dataset/mainnet/0x7D40d5ecf31Af9C7a7E32aa5d7b34CdCC930a647.sol#1181)
		- userInfo.reward = userInfo.reward.add(userReward) (../../sc/dataset/mainnet/0x7D40d5ecf31Af9C7a7E32aa5d7b34CdCC930a647.sol#1134)
		- userInfo.debt = debt (../../sc/dataset/mainnet/0x7D40d5ecf31Af9C7a7E32aa5d7b34CdCC930a647.sol#1135)
Reentrancy in CheesePrivateStakePool.stake(uint256) (../../sc/dataset/mainnet/0x7D40d5ecf31Af9C7a7E32aa5d7b34CdCC930a647.sol#1140-1156):
	External calls:
	- updateRewardPerShare() (../../sc/dataset/mainnet/0x7D40d5ecf31Af9C7a7E32aa5d7b34CdCC930a647.sol#1145)
		- require(bool,string)(_reward == cheeseFactory.poolMint(ConfigNames.PRIVATE),pool mint error) (../../sc/dataset/mainnet/0x7D40d5ecf31Af9C7a7E32aa5d7b34CdCC930a647.sol#1121-1124)
	State variables written after the call(s):
	- userInfo.amount = userInfo.amount.add(amount) (../../sc/dataset/mainnet/0x7D40d5ecf31Af9C7a7E32aa5d7b34CdCC930a647.sol#1150)
	- userInfo.debt = userInfo.amount.mul(rewardPerShare).div(1e18) (../../sc/dataset/mainnet/0x7D40d5ecf31Af9C7a7E32aa5d7b34CdCC930a647.sol#1151)
	- updateUserReward(msg.sender) (../../sc/dataset/mainnet/0x7D40d5ecf31Af9C7a7E32aa5d7b34CdCC930a647.sol#1146)
		- userInfo.reward = userInfo.reward.add(userReward) (../../sc/dataset/mainnet/0x7D40d5ecf31Af9C7a7E32aa5d7b34CdCC930a647.sol#1134)
		- userInfo.debt = debt (../../sc/dataset/mainnet/0x7D40d5ecf31Af9C7a7E32aa5d7b34CdCC930a647.sol#1135)
Reentrancy in CheesePrivateStakePool.withdraw(uint256) (../../sc/dataset/mainnet/0x7D40d5ecf31Af9C7a7E32aa5d7b34CdCC930a647.sol#1158-1174):
	External calls:
	- updateRewardPerShare() (../../sc/dataset/mainnet/0x7D40d5ecf31Af9C7a7E32aa5d7b34CdCC930a647.sol#1162)
		- require(bool,string)(_reward == cheeseFactory.poolMint(ConfigNames.PRIVATE),pool mint error) (../../sc/dataset/mainnet/0x7D40d5ecf31Af9C7a7E32aa5d7b34CdCC930a647.sol#1121-1124)
	State variables written after the call(s):
	- userInfo.amount = userInfo.amount.sub(amount) (../../sc/dataset/mainnet/0x7D40d5ecf31Af9C7a7E32aa5d7b34CdCC930a647.sol#1168)
	- userInfo.debt = userInfo.amount.mul(rewardPerShare).div(1e18) (../../sc/dataset/mainnet/0x7D40d5ecf31Af9C7a7E32aa5d7b34CdCC930a647.sol#1169)
	- updateUserReward(msg.sender) (../../sc/dataset/mainnet/0x7D40d5ecf31Af9C7a7E32aa5d7b34CdCC930a647.sol#1163)
		- userInfo.reward = userInfo.reward.add(userReward) (../../sc/dataset/mainnet/0x7D40d5ecf31Af9C7a7E32aa5d7b34CdCC930a647.sol#1134)
		- userInfo.debt = debt (../../sc/dataset/mainnet/0x7D40d5ecf31Af9C7a7E32aa5d7b34CdCC930a647.sol#1135)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2
INFO:Detectors:
CheeseFactory.initialize(address,address,uint256) (../../sc/dataset/mainnet/0x7D40d5ecf31Af9C7a7E32aa5d7b34CdCC930a647.sol#949-962) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(startTimestamp_ >= block.timestamp,!startTime) (../../sc/dataset/mainnet/0x7D40d5ecf31Af9C7a7E32aa5d7b34CdCC930a647.sol#955)
CheeseFactory.preMint() (../../sc/dataset/mainnet/0x7D40d5ecf31Af9C7a7E32aa5d7b34CdCC930a647.sol#964-1003) uses timestamp for comparisons
	Dangerous comparisons:
	- block.timestamp <= startTimestamp (../../sc/dataset/mainnet/0x7D40d5ecf31Af9C7a7E32aa5d7b34CdCC930a647.sol#965)
	- block.timestamp <= lastTimestamp (../../sc/dataset/mainnet/0x7D40d5ecf31Af9C7a7E32aa5d7b34CdCC930a647.sol#969)
	- time > max_week_time (../../sc/dataset/mainnet/0x7D40d5ecf31Af9C7a7E32aa5d7b34CdCC930a647.sol#975)
	- time >= weekTimestamp (../../sc/dataset/mainnet/0x7D40d5ecf31Af9C7a7E32aa5d7b34CdCC930a647.sol#980)
CheeseFactory.poolMint(bytes32) (../../sc/dataset/mainnet/0x7D40d5ecf31Af9C7a7E32aa5d7b34CdCC930a647.sol#1019-1030) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(msg.sender == pool.pool,Permission denied) (../../sc/dataset/mainnet/0x7D40d5ecf31Af9C7a7E32aa5d7b34CdCC930a647.sol#1021)
	- amount > 0 (../../sc/dataset/mainnet/0x7D40d5ecf31Af9C7a7E32aa5d7b34CdCC930a647.sol#1025)
CheesePrivateStakePool.calculateIncome(address) (../../sc/dataset/mainnet/0x7D40d5ecf31Af9C7a7E32aa5d7b34CdCC930a647.sol#1193-1207) uses timestamp for comparisons
	Dangerous comparisons:
	- block.timestamp > lastBlockTimeStamp && totalStake > 0 (../../sc/dataset/mainnet/0x7D40d5ecf31Af9C7a7E32aa5d7b34CdCC930a647.sol#1202)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp
INFO:Detectors:
Context._msgData() (../../sc/dataset/mainnet/0x7D40d5ecf31Af9C7a7E32aa5d7b34CdCC930a647.sol#526-529) is never used and should be removed
ERC20._setupDecimals(uint8) (../../sc/dataset/mainnet/0x7D40d5ecf31Af9C7a7E32aa5d7b34CdCC930a647.sol#820-822) is never used and should be removed
SafeMath.div(uint256,uint256,string) (../../sc/dataset/mainnet/0x7D40d5ecf31Af9C7a7E32aa5d7b34CdCC930a647.sol#199-202) is never used and should be removed
SafeMath.mod(uint256,uint256,string) (../../sc/dataset/mainnet/0x7D40d5ecf31Af9C7a7E32aa5d7b34CdCC930a647.sol#219-222) is never used and should be removed
SafeMath.tryAdd(uint256,uint256) (../../sc/dataset/mainnet/0x7D40d5ecf31Af9C7a7E32aa5d7b34CdCC930a647.sol#33-37) is never used and should be removed
SafeMath.tryDiv(uint256,uint256) (../../sc/dataset/mainnet/0x7D40d5ecf31Af9C7a7E32aa5d7b34CdCC930a647.sol#69-72) is never used and should be removed
SafeMath.tryMod(uint256,uint256) (../../sc/dataset/mainnet/0x7D40d5ecf31Af9C7a7E32aa5d7b34CdCC930a647.sol#79-82) is never used and should be removed
SafeMath.tryMul(uint256,uint256) (../../sc/dataset/mainnet/0x7D40d5ecf31Af9C7a7E32aa5d7b34CdCC930a647.sol#54-62) is never used and should be removed
SafeMath.trySub(uint256,uint256) (../../sc/dataset/mainnet/0x7D40d5ecf31Af9C7a7E32aa5d7b34CdCC930a647.sol#44-47) is never used and should be removed
TransferHelper.safeApprove(address,address,uint256) (../../sc/dataset/mainnet/0x7D40d5ecf31Af9C7a7E32aa5d7b34CdCC930a647.sol#401-405) is never used and should be removed
TransferHelper.safeTransferETH(address,uint256) (../../sc/dataset/mainnet/0x7D40d5ecf31Af9C7a7E32aa5d7b34CdCC930a647.sol#419-422) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code
INFO:Detectors:
Pragma version>=0.6.5<0.8.0 (../../sc/dataset/mainnet/0x7D40d5ecf31Af9C7a7E32aa5d7b34CdCC930a647.sol#1036) is too complex
solc-0.6.12 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity
INFO:Detectors:
Low level call in TransferHelper.safeApprove(address,address,uint256) (../../sc/dataset/mainnet/0x7D40d5ecf31Af9C7a7E32aa5d7b34CdCC930a647.sol#401-405):
	- (success,data) = token.call(abi.encodeWithSelector(0x095ea7b3,to,value)) (../../sc/dataset/mainnet/0x7D40d5ecf31Af9C7a7E32aa5d7b34CdCC930a647.sol#403)
Low level call in TransferHelper.safeTransfer(address,address,uint256) (../../sc/dataset/mainnet/0x7D40d5ecf31Af9C7a7E32aa5d7b34CdCC930a647.sol#407-411):
	- (success,data) = token.call(abi.encodeWithSelector(0xa9059cbb,to,value)) (../../sc/dataset/mainnet/0x7D40d5ecf31Af9C7a7E32aa5d7b34CdCC930a647.sol#409)
Low level call in TransferHelper.safeTransferFrom(address,address,address,uint256) (../../sc/dataset/mainnet/0x7D40d5ecf31Af9C7a7E32aa5d7b34CdCC930a647.sol#413-417):
	- (success,data) = token.call(abi.encodeWithSelector(0x23b872dd,from,to,value)) (../../sc/dataset/mainnet/0x7D40d5ecf31Af9C7a7E32aa5d7b34CdCC930a647.sol#415)
Low level call in TransferHelper.safeTransferETH(address,uint256) (../../sc/dataset/mainnet/0x7D40d5ecf31Af9C7a7E32aa5d7b34CdCC930a647.sol#419-422):
	- (success) = to.call{value: value}(new bytes(0)) (../../sc/dataset/mainnet/0x7D40d5ecf31Af9C7a7E32aa5d7b34CdCC930a647.sol#420)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls
INFO:Detectors:
Parameter UpgradableProduct.upgradeImpl(address)._newImpl (../../sc/dataset/mainnet/0x7D40d5ecf31Af9C7a7E32aa5d7b34CdCC930a647.sol#309) is not in mixedCase
Parameter UpgradableGovernance.upgradeGovernance(address)._newGovernor (../../sc/dataset/mainnet/0x7D40d5ecf31Af9C7a7E32aa5d7b34CdCC930a647.sol#335) is not in mixedCase
Parameter WhiteList.setWhitelist(address,bool)._toWhitelist (../../sc/dataset/mainnet/0x7D40d5ecf31Af9C7a7E32aa5d7b34CdCC930a647.sol#380) is not in mixedCase
Parameter WhiteList.setWhitelist(address,bool)._state (../../sc/dataset/mainnet/0x7D40d5ecf31Af9C7a7E32aa5d7b34CdCC930a647.sol#380) is not in mixedCase
Parameter CheeseToken.setWhitelist(address,bool)._toWhitelist (../../sc/dataset/mainnet/0x7D40d5ecf31Af9C7a7E32aa5d7b34CdCC930a647.sol#865) is not in mixedCase
Parameter CheeseToken.setWhitelist(address,bool)._state (../../sc/dataset/mainnet/0x7D40d5ecf31Af9C7a7E32aa5d7b34CdCC930a647.sol#865) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions
INFO:Detectors:
Redundant expression "this (../../sc/dataset/mainnet/0x7D40d5ecf31Af9C7a7E32aa5d7b34CdCC930a647.sol#527)" inContext (../../sc/dataset/mainnet/0x7D40d5ecf31Af9C7a7E32aa5d7b34CdCC930a647.sol#521-530)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#redundant-statements
INFO:Detectors:
CheeseFactory.weekTimestamp (../../sc/dataset/mainnet/0x7D40d5ecf31Af9C7a7E32aa5d7b34CdCC930a647.sol#916) should be immutable 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-immutable
INFO:Slither:/bdata2/sc/dataset/mainnet/0x7D40d5ecf31Af9C7a7E32aa5d7b34CdCC930a647.sol analyzed (13 contracts with 85 detectors), 41 result(s) found
