Compilation warnings/errors on /bdata2/sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol:
Warning: Contract code size exceeds 24576 bytes (a limit introduced in Spurious Dragon). This contract may not be deployable on mainnet. Consider enabling the optimizer (with a low "runs" value!), turning off revert strings, or using libraries.
    --> /bdata2/sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol:1374:1:
     |
1374 | contract CurveSpellV1 is WhitelistSpell {
     | ^ (Relevant source part starts here and spans across multiple lines).


INFO:Detectors:
BasicSpell.doRefundETH() (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1283-1290) sends eth to arbitrary user
	Dangerous calls:
	- (success) = bank.EXECUTOR().call{value: balance}(new bytes(0)) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1287)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#functions-that-send-ether-to-arbitrary-destinations
INFO:Detectors:
Reentrancy in CurveSpellV1.addLiquidity2(address,uint256[2],uint256,uint256[2],uint256,uint256,uint256,uint256) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1436-1495):
	External calls:
	- bank.takeCollateral(address(wgauge),collId,collSize) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1458)
	- wgauge.burn(collId,collSize) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1459)
	- ensureApproveN(lp,2) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1463)
		- returndata = address(token).functionCall(data,SafeERC20: low-level call failed) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1086)
		- IERC20(token).safeApprove(spender,uint256(- 1)) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1251)
		- (success,returndata) = target.call{value: value}(data) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#319)
	- doTransmit(tokens[i],amtsUser[i]) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1466)
		- bank.transmit(token,amount) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1269)
	- doTransmit(lp,amtLPUser) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1467)
		- bank.transmit(token,amount) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1269)
	- doBorrow(tokens[i_scope_0],amtsBorrow[i_scope_0]) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1470)
		- bank.borrow(token,amount) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1298)
	- doBorrow(lp,amtLPBorrow) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1471)
		- bank.borrow(token,amount) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1298)
	- ICurvePool(pool).add_liquidity(suppliedAmts,minLPMint) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1479)
	- ensureApprove(lp,address(wgauge)) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1483)
		- returndata = address(token).functionCall(data,SafeERC20: low-level call failed) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1086)
		- IERC20(token).safeApprove(spender,uint256(- 1)) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1251)
		- (success,returndata) = target.call{value: value}(data) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#319)
	External calls sending eth:
	- ensureApproveN(lp,2) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1463)
		- (success,returndata) = target.call{value: value}(data) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#319)
	- ensureApprove(lp,address(wgauge)) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1483)
		- (success,returndata) = target.call{value: value}(data) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#319)
	State variables written after the call(s):
	- ensureApprove(lp,address(wgauge)) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1483)
		- approved[token][spender] = true (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1252)
	BasicSpell.approved (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1231) can be used in cross function reentrancies:
	- BasicSpell.approved (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1231)
	- BasicSpell.ensureApprove(address,address) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1249-1254)
	- BasicSpell.ensureApprove(address,address) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1249-1254)
Reentrancy in CurveSpellV1.addLiquidity3(address,uint256[3],uint256,uint256[3],uint256,uint256,uint256,uint256) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1506-1565):
	External calls:
	- bank.takeCollateral(address(wgauge),collId,collSize) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1528)
	- wgauge.burn(collId,collSize) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1529)
	- ensureApproveN(lp,3) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1533)
		- returndata = address(token).functionCall(data,SafeERC20: low-level call failed) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1086)
		- IERC20(token).safeApprove(spender,uint256(- 1)) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1251)
		- (success,returndata) = target.call{value: value}(data) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#319)
	- doTransmit(tokens[i],amtsUser[i]) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1536)
		- bank.transmit(token,amount) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1269)
	- doTransmit(lp,amtLPUser) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1537)
		- bank.transmit(token,amount) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1269)
	- doBorrow(tokens[i_scope_0],amtsBorrow[i_scope_0]) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1540)
		- bank.borrow(token,amount) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1298)
	- doBorrow(lp,amtLPBorrow) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1541)
		- bank.borrow(token,amount) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1298)
	- ICurvePool(pool).add_liquidity(suppliedAmts,minLPMint) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1549)
	- ensureApprove(lp,address(wgauge)) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1553)
		- returndata = address(token).functionCall(data,SafeERC20: low-level call failed) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1086)
		- IERC20(token).safeApprove(spender,uint256(- 1)) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1251)
		- (success,returndata) = target.call{value: value}(data) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#319)
	External calls sending eth:
	- ensureApproveN(lp,3) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1533)
		- (success,returndata) = target.call{value: value}(data) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#319)
	- ensureApprove(lp,address(wgauge)) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1553)
		- (success,returndata) = target.call{value: value}(data) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#319)
	State variables written after the call(s):
	- ensureApprove(lp,address(wgauge)) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1553)
		- approved[token][spender] = true (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1252)
	BasicSpell.approved (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1231) can be used in cross function reentrancies:
	- BasicSpell.approved (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1231)
	- BasicSpell.ensureApprove(address,address) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1249-1254)
	- BasicSpell.ensureApprove(address,address) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1249-1254)
Reentrancy in CurveSpellV1.addLiquidity4(address,uint256[4],uint256,uint256[4],uint256,uint256,uint256,uint256) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1576-1635):
	External calls:
	- bank.takeCollateral(address(wgauge),collId,collSize) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1598)
	- wgauge.burn(collId,collSize) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1599)
	- ensureApproveN(lp,4) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1603)
		- returndata = address(token).functionCall(data,SafeERC20: low-level call failed) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1086)
		- IERC20(token).safeApprove(spender,uint256(- 1)) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1251)
		- (success,returndata) = target.call{value: value}(data) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#319)
	- doTransmit(tokens[i],amtsUser[i]) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1606)
		- bank.transmit(token,amount) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1269)
	- doTransmit(lp,amtLPUser) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1607)
		- bank.transmit(token,amount) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1269)
	- doBorrow(tokens[i_scope_0],amtsBorrow[i_scope_0]) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1610)
		- bank.borrow(token,amount) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1298)
	- doBorrow(lp,amtLPBorrow) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1611)
		- bank.borrow(token,amount) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1298)
	- ICurvePool(pool).add_liquidity(suppliedAmts,minLPMint) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1619)
	- ensureApprove(lp,address(wgauge)) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1623)
		- returndata = address(token).functionCall(data,SafeERC20: low-level call failed) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1086)
		- IERC20(token).safeApprove(spender,uint256(- 1)) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1251)
		- (success,returndata) = target.call{value: value}(data) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#319)
	External calls sending eth:
	- ensureApproveN(lp,4) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1603)
		- (success,returndata) = target.call{value: value}(data) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#319)
	- ensureApprove(lp,address(wgauge)) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1623)
		- (success,returndata) = target.call{value: value}(data) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#319)
	State variables written after the call(s):
	- ensureApprove(lp,address(wgauge)) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1623)
		- approved[token][spender] = true (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1252)
	BasicSpell.approved (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1231) can be used in cross function reentrancies:
	- BasicSpell.approved (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1231)
	- BasicSpell.ensureApprove(address,address) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1249-1254)
	- BasicSpell.ensureApprove(address,address) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1249-1254)
Reentrancy in CurveSpellV1.removeLiquidity2(address,uint256,uint256,uint256[2],uint256,uint256[2]) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1644-1706):
	External calls:
	- ensureApproveN(lp,2) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1661)
		- returndata = address(token).functionCall(data,SafeERC20: low-level call failed) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1086)
		- IERC20(token).safeApprove(spender,uint256(- 1)) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1251)
		- (success,returndata) = target.call{value: value}(data) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#319)
	- bank.takeCollateral(address(wgauge),collId,amtLPTake) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1676)
	- wgauge.burn(collId,amtLPTake) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1677)
	- ICurvePool(pool).remove_liquidity_imbalance(amtsDesired,amtLPToRemove) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1683)
	- ICurvePool(pool).remove_liquidity(amtLPToRemove,mins) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1690)
	- doRepay(tokens[i_scope_1],actualAmtsRepay[i_scope_1]) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1694)
		- returndata = address(token).functionCall(data,SafeERC20: low-level call failed) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1086)
		- IERC20(token).safeApprove(spender,uint256(- 1)) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1251)
		- bank.repay(token,amount) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1308)
		- (success,returndata) = target.call{value: value}(data) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#319)
	- actualAmtsRepay[i] = bank.borrowBalanceCurrent(positionId,tokens[i]) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1666-1668)
	External calls sending eth:
	- ensureApproveN(lp,2) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1661)
		- (success,returndata) = target.call{value: value}(data) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#319)
	- doRepay(tokens[i_scope_1],actualAmtsRepay[i_scope_1]) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1694)
		- (success,returndata) = target.call{value: value}(data) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#319)
	State variables written after the call(s):
	- doRepay(tokens[i_scope_1],actualAmtsRepay[i_scope_1]) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1694)
		- approved[token][spender] = true (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1252)
	BasicSpell.approved (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1231) can be used in cross function reentrancies:
	- BasicSpell.approved (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1231)
	- BasicSpell.ensureApprove(address,address) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1249-1254)
	- BasicSpell.ensureApprove(address,address) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1249-1254)
Reentrancy in CurveSpellV1.removeLiquidity2(address,uint256,uint256,uint256[2],uint256,uint256[2]) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1644-1706):
	External calls:
	- ensureApproveN(lp,2) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1661)
		- returndata = address(token).functionCall(data,SafeERC20: low-level call failed) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1086)
		- IERC20(token).safeApprove(spender,uint256(- 1)) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1251)
		- (success,returndata) = target.call{value: value}(data) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#319)
	- bank.takeCollateral(address(wgauge),collId,amtLPTake) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1676)
	- wgauge.burn(collId,amtLPTake) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1677)
	- ICurvePool(pool).remove_liquidity_imbalance(amtsDesired,amtLPToRemove) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1683)
	- ICurvePool(pool).remove_liquidity(amtLPToRemove,mins) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1690)
	- doRepay(tokens[i_scope_1],actualAmtsRepay[i_scope_1]) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1694)
		- returndata = address(token).functionCall(data,SafeERC20: low-level call failed) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1086)
		- IERC20(token).safeApprove(spender,uint256(- 1)) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1251)
		- bank.repay(token,amount) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1308)
		- (success,returndata) = target.call{value: value}(data) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#319)
	- doRepay(lp,amtLPRepay) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1696)
		- returndata = address(token).functionCall(data,SafeERC20: low-level call failed) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1086)
		- IERC20(token).safeApprove(spender,uint256(- 1)) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1251)
		- bank.repay(token,amount) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1308)
		- (success,returndata) = target.call{value: value}(data) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#319)
	- actualAmtsRepay[i] = bank.borrowBalanceCurrent(positionId,tokens[i]) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1666-1668)
	External calls sending eth:
	- ensureApproveN(lp,2) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1661)
		- (success,returndata) = target.call{value: value}(data) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#319)
	- doRepay(tokens[i_scope_1],actualAmtsRepay[i_scope_1]) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1694)
		- (success,returndata) = target.call{value: value}(data) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#319)
	- doRepay(lp,amtLPRepay) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1696)
		- (success,returndata) = target.call{value: value}(data) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#319)
	State variables written after the call(s):
	- doRepay(lp,amtLPRepay) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1696)
		- approved[token][spender] = true (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1252)
	BasicSpell.approved (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1231) can be used in cross function reentrancies:
	- BasicSpell.approved (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1231)
	- BasicSpell.ensureApprove(address,address) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1249-1254)
	- BasicSpell.ensureApprove(address,address) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1249-1254)
Reentrancy in CurveSpellV1.removeLiquidity3(address,uint256,uint256,uint256[3],uint256,uint256[3]) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1715-1778):
	External calls:
	- ensureApproveN(lp,3) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1732)
		- returndata = address(token).functionCall(data,SafeERC20: low-level call failed) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1086)
		- IERC20(token).safeApprove(spender,uint256(- 1)) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1251)
		- (success,returndata) = target.call{value: value}(data) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#319)
	- bank.takeCollateral(address(wgauge),collId,amtLPTake) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1747)
	- wgauge.burn(collId,amtLPTake) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1748)
	- ICurvePool(pool).remove_liquidity_imbalance(amtsDesired,amtLPToRemove) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1754)
	- ICurvePool(pool).remove_liquidity(amtLPToRemove,mins) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1761)
	- doRepay(tokens[i_scope_1],actualAmtsRepay[i_scope_1]) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1766)
		- returndata = address(token).functionCall(data,SafeERC20: low-level call failed) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1086)
		- IERC20(token).safeApprove(spender,uint256(- 1)) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1251)
		- bank.repay(token,amount) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1308)
		- (success,returndata) = target.call{value: value}(data) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#319)
	- actualAmtsRepay[i] = bank.borrowBalanceCurrent(positionId,tokens[i]) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1737-1739)
	External calls sending eth:
	- ensureApproveN(lp,3) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1732)
		- (success,returndata) = target.call{value: value}(data) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#319)
	- doRepay(tokens[i_scope_1],actualAmtsRepay[i_scope_1]) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1766)
		- (success,returndata) = target.call{value: value}(data) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#319)
	State variables written after the call(s):
	- doRepay(tokens[i_scope_1],actualAmtsRepay[i_scope_1]) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1766)
		- approved[token][spender] = true (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1252)
	BasicSpell.approved (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1231) can be used in cross function reentrancies:
	- BasicSpell.approved (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1231)
	- BasicSpell.ensureApprove(address,address) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1249-1254)
	- BasicSpell.ensureApprove(address,address) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1249-1254)
Reentrancy in CurveSpellV1.removeLiquidity3(address,uint256,uint256,uint256[3],uint256,uint256[3]) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1715-1778):
	External calls:
	- ensureApproveN(lp,3) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1732)
		- returndata = address(token).functionCall(data,SafeERC20: low-level call failed) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1086)
		- IERC20(token).safeApprove(spender,uint256(- 1)) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1251)
		- (success,returndata) = target.call{value: value}(data) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#319)
	- bank.takeCollateral(address(wgauge),collId,amtLPTake) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1747)
	- wgauge.burn(collId,amtLPTake) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1748)
	- ICurvePool(pool).remove_liquidity_imbalance(amtsDesired,amtLPToRemove) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1754)
	- ICurvePool(pool).remove_liquidity(amtLPToRemove,mins) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1761)
	- doRepay(tokens[i_scope_1],actualAmtsRepay[i_scope_1]) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1766)
		- returndata = address(token).functionCall(data,SafeERC20: low-level call failed) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1086)
		- IERC20(token).safeApprove(spender,uint256(- 1)) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1251)
		- bank.repay(token,amount) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1308)
		- (success,returndata) = target.call{value: value}(data) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#319)
	- doRepay(lp,amtLPRepay) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1768)
		- returndata = address(token).functionCall(data,SafeERC20: low-level call failed) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1086)
		- IERC20(token).safeApprove(spender,uint256(- 1)) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1251)
		- bank.repay(token,amount) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1308)
		- (success,returndata) = target.call{value: value}(data) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#319)
	- actualAmtsRepay[i] = bank.borrowBalanceCurrent(positionId,tokens[i]) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1737-1739)
	External calls sending eth:
	- ensureApproveN(lp,3) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1732)
		- (success,returndata) = target.call{value: value}(data) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#319)
	- doRepay(tokens[i_scope_1],actualAmtsRepay[i_scope_1]) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1766)
		- (success,returndata) = target.call{value: value}(data) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#319)
	- doRepay(lp,amtLPRepay) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1768)
		- (success,returndata) = target.call{value: value}(data) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#319)
	State variables written after the call(s):
	- doRepay(lp,amtLPRepay) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1768)
		- approved[token][spender] = true (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1252)
	BasicSpell.approved (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1231) can be used in cross function reentrancies:
	- BasicSpell.approved (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1231)
	- BasicSpell.ensureApprove(address,address) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1249-1254)
	- BasicSpell.ensureApprove(address,address) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1249-1254)
Reentrancy in CurveSpellV1.removeLiquidity4(address,uint256,uint256,uint256[4],uint256,uint256[4]) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1787-1850):
	External calls:
	- ensureApproveN(lp,4) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1804)
		- returndata = address(token).functionCall(data,SafeERC20: low-level call failed) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1086)
		- IERC20(token).safeApprove(spender,uint256(- 1)) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1251)
		- (success,returndata) = target.call{value: value}(data) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#319)
	- bank.takeCollateral(address(wgauge),collId,amtLPTake) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1819)
	- wgauge.burn(collId,amtLPTake) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1820)
	- ICurvePool(pool).remove_liquidity_imbalance(amtsDesired,amtLPToRemove) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1826)
	- ICurvePool(pool).remove_liquidity(amtLPToRemove,mins) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1833)
	- doRepay(tokens[i_scope_1],actualAmtsRepay[i_scope_1]) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1838)
		- returndata = address(token).functionCall(data,SafeERC20: low-level call failed) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1086)
		- IERC20(token).safeApprove(spender,uint256(- 1)) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1251)
		- bank.repay(token,amount) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1308)
		- (success,returndata) = target.call{value: value}(data) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#319)
	- actualAmtsRepay[i] = bank.borrowBalanceCurrent(positionId,tokens[i]) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1809-1811)
	External calls sending eth:
	- ensureApproveN(lp,4) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1804)
		- (success,returndata) = target.call{value: value}(data) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#319)
	- doRepay(tokens[i_scope_1],actualAmtsRepay[i_scope_1]) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1838)
		- (success,returndata) = target.call{value: value}(data) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#319)
	State variables written after the call(s):
	- doRepay(tokens[i_scope_1],actualAmtsRepay[i_scope_1]) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1838)
		- approved[token][spender] = true (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1252)
	BasicSpell.approved (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1231) can be used in cross function reentrancies:
	- BasicSpell.approved (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1231)
	- BasicSpell.ensureApprove(address,address) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1249-1254)
	- BasicSpell.ensureApprove(address,address) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1249-1254)
Reentrancy in CurveSpellV1.removeLiquidity4(address,uint256,uint256,uint256[4],uint256,uint256[4]) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1787-1850):
	External calls:
	- ensureApproveN(lp,4) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1804)
		- returndata = address(token).functionCall(data,SafeERC20: low-level call failed) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1086)
		- IERC20(token).safeApprove(spender,uint256(- 1)) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1251)
		- (success,returndata) = target.call{value: value}(data) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#319)
	- bank.takeCollateral(address(wgauge),collId,amtLPTake) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1819)
	- wgauge.burn(collId,amtLPTake) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1820)
	- ICurvePool(pool).remove_liquidity_imbalance(amtsDesired,amtLPToRemove) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1826)
	- ICurvePool(pool).remove_liquidity(amtLPToRemove,mins) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1833)
	- doRepay(tokens[i_scope_1],actualAmtsRepay[i_scope_1]) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1838)
		- returndata = address(token).functionCall(data,SafeERC20: low-level call failed) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1086)
		- IERC20(token).safeApprove(spender,uint256(- 1)) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1251)
		- bank.repay(token,amount) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1308)
		- (success,returndata) = target.call{value: value}(data) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#319)
	- doRepay(lp,amtLPRepay) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1840)
		- returndata = address(token).functionCall(data,SafeERC20: low-level call failed) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1086)
		- IERC20(token).safeApprove(spender,uint256(- 1)) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1251)
		- bank.repay(token,amount) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1308)
		- (success,returndata) = target.call{value: value}(data) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#319)
	- actualAmtsRepay[i] = bank.borrowBalanceCurrent(positionId,tokens[i]) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1809-1811)
	External calls sending eth:
	- ensureApproveN(lp,4) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1804)
		- (success,returndata) = target.call{value: value}(data) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#319)
	- doRepay(tokens[i_scope_1],actualAmtsRepay[i_scope_1]) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1838)
		- (success,returndata) = target.call{value: value}(data) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#319)
	- doRepay(lp,amtLPRepay) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1840)
		- (success,returndata) = target.call{value: value}(data) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#319)
	State variables written after the call(s):
	- doRepay(lp,amtLPRepay) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1840)
		- approved[token][spender] = true (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1252)
	BasicSpell.approved (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1231) can be used in cross function reentrancies:
	- BasicSpell.approved (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1231)
	- BasicSpell.ensureApprove(address,address) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1249-1254)
	- BasicSpell.ensureApprove(address,address) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1249-1254)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities
INFO:Detectors:
Reentrancy in BasicSpell.ensureApprove(address,address) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1249-1254):
	External calls:
	- IERC20(token).safeApprove(spender,uint256(- 1)) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1251)
	State variables written after the call(s):
	- approved[token][spender] = true (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1252)
	BasicSpell.approved (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1231) can be used in cross function reentrancies:
	- BasicSpell.approved (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1231)
	- BasicSpell.ensureApprove(address,address) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1249-1254)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1
INFO:Detectors:
CurveSpellV1.addLiquidity3(address,uint256[3],uint256,uint256[3],uint256,uint256,uint256,uint256).suppliedAmts (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1544) is a local variable never initialized
CurveSpellV1.removeLiquidity4(address,uint256,uint256,uint256[4],uint256,uint256[4]).amtsDesired (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1813) is a local variable never initialized
CurveSpellV1.removeLiquidity2(address,uint256,uint256,uint256[2],uint256,uint256[2]).mins (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1689) is a local variable never initialized
CurveSpellV1.removeLiquidity4(address,uint256,uint256,uint256[4],uint256,uint256[4]).actualAmtsRepay (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1807) is a local variable never initialized
CurveSpellV1.addLiquidity4(address,uint256[4],uint256,uint256[4],uint256,uint256,uint256,uint256).suppliedAmts (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1614) is a local variable never initialized
CurveSpellV1.removeLiquidity4(address,uint256,uint256,uint256[4],uint256,uint256[4]).mins (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1832) is a local variable never initialized
CurveSpellV1.addLiquidity2(address,uint256[2],uint256,uint256[2],uint256,uint256,uint256,uint256).suppliedAmts (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1474) is a local variable never initialized
CurveSpellV1.removeLiquidity2(address,uint256,uint256,uint256[2],uint256,uint256[2]).amtsDesired (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1670) is a local variable never initialized
CurveSpellV1.removeLiquidity3(address,uint256,uint256,uint256[3],uint256,uint256[3]).actualAmtsRepay (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1735) is a local variable never initialized
CurveSpellV1.removeLiquidity3(address,uint256,uint256,uint256[3],uint256,uint256[3]).amtsDesired (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1741) is a local variable never initialized
CurveSpellV1.removeLiquidity2(address,uint256,uint256,uint256[2],uint256,uint256[2]).actualAmtsRepay (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1664) is a local variable never initialized
CurveSpellV1.removeLiquidity3(address,uint256,uint256,uint256[3],uint256,uint256[3]).mins (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1760) is a local variable never initialized
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#uninitialized-local-variables
INFO:Detectors:
CurveSpellV1.addLiquidity2(address,uint256[2],uint256,uint256[2],uint256,uint256,uint256,uint256) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1436-1495) ignores return value by wgauge.burn(collId,collSize) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1459)
CurveSpellV1.addLiquidity3(address,uint256[3],uint256,uint256[3],uint256,uint256,uint256,uint256) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1506-1565) ignores return value by wgauge.burn(collId,collSize) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1529)
CurveSpellV1.addLiquidity4(address,uint256[4],uint256,uint256[4],uint256,uint256,uint256,uint256) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1576-1635) ignores return value by wgauge.burn(collId,collSize) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1599)
CurveSpellV1.removeLiquidity2(address,uint256,uint256,uint256[2],uint256,uint256[2]) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1644-1706) ignores return value by wgauge.burn(collId,amtLPTake) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1677)
CurveSpellV1.removeLiquidity3(address,uint256,uint256,uint256[3],uint256,uint256[3]) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1715-1778) ignores return value by wgauge.burn(collId,amtLPTake) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1748)
CurveSpellV1.removeLiquidity4(address,uint256,uint256,uint256[4],uint256,uint256[4]) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1787-1850) ignores return value by wgauge.burn(collId,amtLPTake) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1820)
CurveSpellV1.harvest() (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1853-1872) ignores return value by wgauge.burn(collId,collSize) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1862)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return
INFO:Detectors:
Governable.setPendingGovernor(address)._pendingGovernor (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1120) lacks a zero-check on :
		- pendingGovernor = _pendingGovernor (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1121)
CurveSpellV1.constructor(IBank,address,address,address)._wgauge (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1388) lacks a zero-check on :
		- crv = address(IWLiquidityGauge(_wgauge).crv()) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1393)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation
INFO:Detectors:
WhitelistSpell.setWhitelistLPTokens(address[],bool[]) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1358-1369) has external calls inside a loop: require(bool,string)(bank.support(lpTokens[idx]),oracle not support lp token) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1365)
Address.functionCallWithValue(address,bytes,uint256,string) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#314-321) has external calls inside a loop: (success,returndata) = target.call{value: value}(data) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#319)
SafeERC20.safeApprove(IERC20,address,uint256) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1054-1063) has external calls inside a loop: require(bool,string)((value == 0) || (token.allowance(address(this),spender) == 0),SafeERC20: approve from non-zero to non-zero allowance) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1059-1061)
BasicSpell.doTransmit(address,uint256) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1267-1271) has external calls inside a loop: bank.transmit(token,amount) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1269)
BasicSpell.doBorrow(address,uint256) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1296-1300) has external calls inside a loop: bank.borrow(token,amount) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1298)
CurveSpellV1.addLiquidity2(address,uint256[2],uint256,uint256[2],uint256,uint256,uint256,uint256) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1436-1495) has external calls inside a loop: suppliedAmts[i_scope_1] = IERC20(tokens[i_scope_1]).balanceOf(address(this)) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1476)
BasicSpell.doRefund(address) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1275-1280) has external calls inside a loop: balance = IERC20(token).balanceOf(address(this)) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1276)
BasicSpell.doRefund(address) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1275-1280) has external calls inside a loop: IERC20(token).safeTransfer(bank.EXECUTOR(),balance) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1278)
CurveSpellV1.addLiquidity3(address,uint256[3],uint256,uint256[3],uint256,uint256,uint256,uint256) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1506-1565) has external calls inside a loop: suppliedAmts[i_scope_1] = IERC20(tokens[i_scope_1]).balanceOf(address(this)) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1546)
CurveSpellV1.addLiquidity4(address,uint256[4],uint256,uint256[4],uint256,uint256,uint256,uint256) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1576-1635) has external calls inside a loop: suppliedAmts[i_scope_1] = IERC20(tokens[i_scope_1]).balanceOf(address(this)) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1616)
BasicSpell.doRepay(address,uint256) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1305-1310) has external calls inside a loop: bank.repay(token,amount) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1308)
CurveSpellV1.removeLiquidity2(address,uint256,uint256,uint256[2],uint256,uint256[2]) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1644-1706) has external calls inside a loop: actualAmtsRepay[i] = bank.borrowBalanceCurrent(positionId,tokens[i]) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1666-1668)
CurveSpellV1.removeLiquidity3(address,uint256,uint256,uint256[3],uint256,uint256[3]) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1715-1778) has external calls inside a loop: actualAmtsRepay[i] = bank.borrowBalanceCurrent(positionId,tokens[i]) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1737-1739)
CurveSpellV1.removeLiquidity4(address,uint256,uint256,uint256[4],uint256,uint256[4]) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1787-1850) has external calls inside a loop: actualAmtsRepay[i] = bank.borrowBalanceCurrent(positionId,tokens[i]) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1809-1811)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation/#calls-inside-a-loop
INFO:Detectors:
Address.isContract(address) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#226-235) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#233)
Address._verifyCallResult(bool,bytes,string) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#371-388) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#380-383)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage
INFO:Detectors:
Address.functionCall(address,bytes) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#279-281) is never used and should be removed
Address.functionCallWithValue(address,bytes,uint256) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#304-306) is never used and should be removed
Address.functionDelegateCall(address,bytes) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#353-355) is never used and should be removed
Address.functionDelegateCall(address,bytes,string) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#363-369) is never used and should be removed
Address.functionStaticCall(address,bytes) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#329-331) is never used and should be removed
Address.functionStaticCall(address,bytes,string) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#339-345) is never used and should be removed
Address.sendValue(address,uint256) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#253-259) is never used and should be removed
BasicSpell.doPutCollateral(address,uint256) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1315-1321) is never used and should be removed
BasicSpell.doRefundETH() (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1283-1290) is never used and should be removed
BasicSpell.doTakeCollateral(address,uint256) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1326-1334) is never used and should be removed
BasicSpell.doTransmitETH() (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1257-1261) is never used and should be removed
ERC165._registerInterface(bytes4) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#813-816) is never used and should be removed
HomoraMath.divCeil(uint256,uint256) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#708-710) is never used and should be removed
HomoraMath.fdiv(uint256,uint256) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#716-718) is never used and should be removed
HomoraMath.fmul(uint256,uint256) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#712-714) is never used and should be removed
HomoraMath.sqrt(uint256) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#722-765) is never used and should be removed
SafeERC20.safeDecreaseAllowance(IERC20,address,uint256) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1070-1073) is never used and should be removed
SafeERC20.safeIncreaseAllowance(IERC20,address,uint256) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1065-1068) is never used and should be removed
SafeERC20.safeTransferFrom(IERC20,address,address,uint256) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1043-1045) is never used and should be removed
SafeMath.div(uint256,uint256) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#622-625) is never used and should be removed
SafeMath.div(uint256,uint256,string) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#677-680) is never used and should be removed
SafeMath.mod(uint256,uint256) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#639-642) is never used and should be removed
SafeMath.mod(uint256,uint256,string) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#697-700) is never used and should be removed
SafeMath.mul(uint256,uint256) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#603-608) is never used and should be removed
SafeMath.sub(uint256,uint256,string) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#657-660) is never used and should be removed
SafeMath.tryAdd(uint256,uint256) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#511-515) is never used and should be removed
SafeMath.tryDiv(uint256,uint256) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#547-550) is never used and should be removed
SafeMath.tryMod(uint256,uint256) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#557-560) is never used and should be removed
SafeMath.tryMul(uint256,uint256) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#532-540) is never used and should be removed
SafeMath.trySub(uint256,uint256) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#522-525) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code
INFO:Detectors:
Pragma version0.6.12 (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#10) allows old versions
solc-0.6.12 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity
INFO:Detectors:
Low level call in Address.sendValue(address,uint256) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#253-259):
	- (success) = recipient.call{value: amount}() (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#257)
Low level call in Address.functionCallWithValue(address,bytes,uint256,string) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#314-321):
	- (success,returndata) = target.call{value: value}(data) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#319)
Low level call in Address.functionStaticCall(address,bytes,string) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#339-345):
	- (success,returndata) = target.staticcall(data) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#343)
Low level call in Address.functionDelegateCall(address,bytes,string) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#363-369):
	- (success,returndata) = target.delegatecall(data) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#367)
Low level call in BasicSpell.doRefundETH() (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1283-1290):
	- (success) = bank.EXECUTOR().call{value: balance}(new bytes(0)) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1287)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls
INFO:Detectors:
Function IBank.POSITION_ID() (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#45) is not in mixedCase
Function IBank.SPELL() (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#48) is not in mixedCase
Function IBank.EXECUTOR() (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#51) is not in mixedCase
Function ICurvePool.add_liquidity(uint256[2],uint256) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#136) is not in mixedCase
Function ICurvePool.add_liquidity(uint256[3],uint256) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#138) is not in mixedCase
Function ICurvePool.add_liquidity(uint256[4],uint256) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#140) is not in mixedCase
Function ICurvePool.remove_liquidity(uint256,uint256[2]) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#142) is not in mixedCase
Function ICurvePool.remove_liquidity(uint256,uint256[3]) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#144) is not in mixedCase
Function ICurvePool.remove_liquidity(uint256,uint256[4]) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#146) is not in mixedCase
Function ICurvePool.remove_liquidity_imbalance(uint256[2],uint256) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#148) is not in mixedCase
Function ICurvePool.remove_liquidity_imbalance(uint256[3],uint256) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#150) is not in mixedCase
Function ICurvePool.remove_liquidity_imbalance(uint256[4],uint256) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#152) is not in mixedCase
Function ICurvePool.remove_liquidity_one_coin(uint256,int128,uint256) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#154-158) is not in mixedCase
Function ICurvePool.get_virtual_price() (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#160) is not in mixedCase
Function ICurveRegistry.get_n_coins(address) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#166) is not in mixedCase
Function ICurveRegistry.pool_list(uint256) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#168) is not in mixedCase
Function ICurveRegistry.get_coins(address) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#170) is not in mixedCase
Function ICurveRegistry.get_gauges(address) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#172) is not in mixedCase
Function ICurveRegistry.get_lp_token(address) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#174) is not in mixedCase
Function ICurveRegistry.get_pool_from_lp_token(address) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#176) is not in mixedCase
Function Governable.__Governable__init() (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1112-1116) is not in mixedCase
Parameter Governable.setPendingGovernor(address)._pendingGovernor (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1120) is not in mixedCase
Variable Governable._gap (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1104) is not in mixedCase
Variable ERC1155NaiveReceiver.__gap (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1199) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions
INFO:Detectors:
HomoraMath.sqrt(uint256) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#722-765) uses literals with too many digits:
	- xx >= 0x100000000000000000000000000000000 (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#727)
HomoraMath.sqrt(uint256) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#722-765) uses literals with too many digits:
	- xx >= 0x10000000000000000 (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#732)
HomoraMath.sqrt(uint256) (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#722-765) uses literals with too many digits:
	- xx >= 0x100000000 (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#736)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits
INFO:Detectors:
ERC1155NaiveReceiver.__gap (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1199) is never used in CurveSpellV1 (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1374-1874)
Governable._gap (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1104) is never used in CurveSpellV1 (../../sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol#1374-1874)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-state-variable
INFO:Slither:/bdata2/sc/dataset/mainnet/0x8b947d8448cffb89ef07a6922b74fbabac219795.sol analyzed (23 contracts with 85 detectors), 114 result(s) found
