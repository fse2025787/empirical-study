INFO:Detectors:
veFXSVault._claimFor(address) (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#433-438) ignores return value by rewards.transfer(recipient,claimable[recipient]) (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#435)
veFXSVault._deposit(uint256) (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#460-464) ignores return value by FXS.transferFrom(msg.sender,locker,_amount) (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#461)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unchecked-transfer
INFO:Detectors:
veFXSVault._writeCheckpoint(address,uint32,uint256,uint256) (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#329-345) uses a dangerous strict equality:
	- nCheckpoints > 0 && checkpoints[delegatee][nCheckpoints - 1].fromBlock == blockNumber (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#337)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dangerous-strict-equalities
INFO:Detectors:
Contract locking ether found:
	Contract veFXSVault (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#158-647) has payable functions:
	 - veFXSVault.execute(address,bytes) (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#626-646)
	But does not have a function to withdraw the ether
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#contracts-that-lock-ether
INFO:Detectors:
Reentrancy in veFXSVault._claimFor(address) (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#433-438):
	External calls:
	- updateFor(recipient) (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#434)
		- FeeDistribution(feeDistribution).claim(address(this)) (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#403)
	- rewards.transfer(recipient,claimable[recipient]) (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#435)
	State variables written after the call(s):
	- bal = rewards.balanceOf(address(this)) (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#437)
	veFXSVault.bal (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#370) can be used in cross function reentrancies:
	- veFXSVault._claimFor(address) (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#433-438)
	- veFXSVault._update() (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#384-399)
	- veFXSVault.bal (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#370)
	- claimable[recipient] = 0 (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#436)
	veFXSVault.claimable (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#423) can be used in cross function reentrancies:
	- veFXSVault._claimFor(address) (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#433-438)
	- veFXSVault.claimable (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#423)
	- veFXSVault.updateFor(address) (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#407-421)
Reentrancy in veFXSVault._mint(address,uint256) (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#440-450):
	External calls:
	- updateFor(dst) (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#441)
		- FeeDistribution(feeDistribution).claim(address(this)) (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#403)
	State variables written after the call(s):
	- balances[dst] = balances[dst].add(amount) (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#445)
	veFXSVault.balances (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#183) can be used in cross function reentrancies:
	- veFXSVault._delegate(address,address) (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#297-305)
	- veFXSVault._mint(address,uint256) (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#440-450)
	- veFXSVault._transferTokens(address,address,uint256) (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#600-614)
	- veFXSVault.balanceOf(address) (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#559-561)
	- veFXSVault.updateFor(address) (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#407-421)
	- totalSupply = totalSupply.add(amount) (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#443)
	veFXSVault.totalSupply (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#171) can be used in cross function reentrancies:
	- veFXSVault._mint(address,uint256) (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#440-450)
	- veFXSVault._update() (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#384-399)
	- veFXSVault.totalSupply (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#171)
Reentrancy in veFXSVault._transferTokens(address,address,uint256) (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#600-614):
	External calls:
	- updateFor(src) (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#608)
		- FeeDistribution(feeDistribution).claim(address(this)) (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#403)
	- updateFor(dst) (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#609)
		- FeeDistribution(feeDistribution).claim(address(this)) (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#403)
	State variables written after the call(s):
	- updateFor(dst) (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#609)
		- bal = _bal (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#394)
	veFXSVault.bal (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#370) can be used in cross function reentrancies:
	- veFXSVault._claimFor(address) (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#433-438)
	- veFXSVault._update() (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#384-399)
	- veFXSVault.bal (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#370)
	- balances[src] = balances[src].sub(amount) (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#611)
	veFXSVault.balances (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#183) can be used in cross function reentrancies:
	- veFXSVault._delegate(address,address) (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#297-305)
	- veFXSVault._mint(address,uint256) (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#440-450)
	- veFXSVault._transferTokens(address,address,uint256) (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#600-614)
	- veFXSVault.balanceOf(address) (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#559-561)
	- veFXSVault.updateFor(address) (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#407-421)
	- balances[dst] = balances[dst].add(amount) (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#612)
	veFXSVault.balances (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#183) can be used in cross function reentrancies:
	- veFXSVault._delegate(address,address) (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#297-305)
	- veFXSVault._mint(address,uint256) (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#440-450)
	- veFXSVault._transferTokens(address,address,uint256) (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#600-614)
	- veFXSVault.balanceOf(address) (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#559-561)
	- veFXSVault.updateFor(address) (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#407-421)
	- updateFor(dst) (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#609)
		- claimable[recipient] = claimable[recipient].add(_share) (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#416)
	veFXSVault.claimable (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#423) can be used in cross function reentrancies:
	- veFXSVault._claimFor(address) (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#433-438)
	- veFXSVault.claimable (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#423)
	- veFXSVault.updateFor(address) (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#407-421)
	- updateFor(dst) (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#609)
		- index = index.add(_ratio) (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#393)
	veFXSVault.index (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#369) can be used in cross function reentrancies:
	- veFXSVault._update() (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#384-399)
	- veFXSVault.index (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#369)
	- veFXSVault.updateFor(address) (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#407-421)
	- updateFor(dst) (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#609)
		- supplyIndex[recipient] = index (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#412)
		- supplyIndex[recipient] = index (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#419)
	veFXSVault.supplyIndex (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#372) can be used in cross function reentrancies:
	- veFXSVault.supplyIndex (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#372)
	- veFXSVault.updateFor(address) (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#407-421)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1
INFO:Detectors:
ERC20.constructor(string,string).name (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#999) shadows:
	- ERC20.name() (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#1008-1010) (function)
ERC20.constructor(string,string).symbol (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#999) shadows:
	- ERC20.symbol() (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#1016-1018) (function)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing
INFO:Detectors:
veFXSVault.setProxy(address)._proxy (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#466) lacks a zero-check on :
		- proxy = _proxy (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#468)
veFXSVault.setLocker(address)._locker (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#471) lacks a zero-check on :
		- locker = _locker (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#473)
veFXSVault.setFeeDistribution(address)._feeDistribution (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#476) lacks a zero-check on :
		- feeDistribution = _feeDistribution (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#478)
veFXSVault.setGovernance(address)._governance (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#485) lacks a zero-check on :
		- pendingGovernance = _governance (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#487)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation
INFO:Detectors:
Reentrancy in veFXSVault._mint(address,uint256) (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#440-450):
	External calls:
	- updateFor(dst) (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#441)
		- FeeDistribution(feeDistribution).claim(address(this)) (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#403)
	State variables written after the call(s):
	- _moveDelegates(address(0),delegates[dst],amount) (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#449)
		- checkpoints[delegatee][nCheckpoints - 1].votes = newVotes (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#338)
		- checkpoints[delegatee][nCheckpoints] = Checkpoint(blockNumber,newVotes) (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#340)
	- _moveDelegates(address(0),delegates[dst],amount) (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#449)
		- numCheckpoints[delegatee] = nCheckpoints + 1 (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#341)
Reentrancy in veFXSVault._update() (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#384-399):
	External calls:
	- _claim() (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#386)
		- FeeDistribution(feeDistribution).claim(address(this)) (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#403)
	State variables written after the call(s):
	- bal = _bal (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#394)
	- index = index.add(_ratio) (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#393)
Reentrancy in veFXSVault.updateFor(address) (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#407-421):
	External calls:
	- _update() (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#408)
		- FeeDistribution(feeDistribution).claim(address(this)) (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#403)
	State variables written after the call(s):
	- claimable[recipient] = claimable[recipient].add(_share) (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#416)
	- supplyIndex[recipient] = index (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#412)
	- supplyIndex[recipient] = index (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#419)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2
INFO:Detectors:
Reentrancy in veFXSVault._deposit(uint256) (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#460-464):
	External calls:
	- FXS.transferFrom(msg.sender,locker,_amount) (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#461)
	- _mint(msg.sender,_amount) (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#462)
		- FeeDistribution(feeDistribution).claim(address(this)) (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#403)
	Event emitted after the call(s):
	- DelegateVotesChanged(delegatee,oldVotes,newVotes) (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#344)
		- _mint(msg.sender,_amount) (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#462)
	- Transfer(address(0),dst,amount) (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#446)
		- _mint(msg.sender,_amount) (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#462)
Reentrancy in veFXSVault._mint(address,uint256) (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#440-450):
	External calls:
	- updateFor(dst) (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#441)
		- FeeDistribution(feeDistribution).claim(address(this)) (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#403)
	Event emitted after the call(s):
	- DelegateVotesChanged(delegatee,oldVotes,newVotes) (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#344)
		- _moveDelegates(address(0),delegates[dst],amount) (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#449)
	- Transfer(address(0),dst,amount) (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#446)
Reentrancy in veFXSVault._transferTokens(address,address,uint256) (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#600-614):
	External calls:
	- updateFor(src) (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#608)
		- FeeDistribution(feeDistribution).claim(address(this)) (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#403)
	- updateFor(dst) (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#609)
		- FeeDistribution(feeDistribution).claim(address(this)) (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#403)
	Event emitted after the call(s):
	- Transfer(src,dst,amount) (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#613)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3
INFO:Detectors:
veFXSVault.delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32) (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#229-244) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(block.timestamp <= expiry,delegateBySig: expired) (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#242)
veFXSVault.permit(address,address,uint256,uint256,uint8,bytes32,bytes32) (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#533-552) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(block.timestamp <= deadline,permit: expired) (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#547)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp
INFO:Detectors:
veFXSVault._getChainId() (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#616-622) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#618-620)
veFXSVault.execute(address,bytes) (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#626-646) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#631-645)
Address.isContract(address) (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#833-842) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#840)
Address._functionCallWithValue(address,bytes,uint256,string) (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#926-947) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#939-942)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage
INFO:Detectors:
Different versions of Solidity are used:
	- Version used: ['^0.6.0', '^0.6.12', '^0.6.7']
	- ABIEncoderV2 (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#2)
	- ^0.6.0 (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#9)
	- ^0.6.0 (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#93)
	- ^0.6.0 (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#651)
	- ^0.6.12 (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#117)
	- ^0.6.7 (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#148)
	- ^0.6.7 (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#1320)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#different-pragma-directives-are-used
INFO:Detectors:
Address._functionCallWithValue(address,bytes,uint256,string) (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#926-947) is never used and should be removed
Address.functionCall(address,bytes) (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#886-888) is never used and should be removed
Address.functionCall(address,bytes,string) (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#896-898) is never used and should be removed
Address.functionCallWithValue(address,bytes,uint256) (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#911-913) is never used and should be removed
Address.functionCallWithValue(address,bytes,uint256,string) (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#921-924) is never used and should be removed
Address.isContract(address) (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#833-842) is never used and should be removed
Address.sendValue(address,uint256) (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#860-866) is never used and should be removed
Context._msgData() (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#110-113) is never used and should be removed
ERC20._burn(address,uint256) (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#1192-1200) is never used and should be removed
ERC20._mint(address,uint256) (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#1171-1179) is never used and should be removed
ERC20._setupDecimals(uint8) (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#1230-1232) is never used and should be removed
SafeERC20._callOptionalReturn(IERC20,bytes) (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#1306-1316) is never used and should be removed
SafeERC20.safeApprove(IERC20,address,uint256) (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#1279-1288) is never used and should be removed
SafeERC20.safeDecreaseAllowance(IERC20,address,uint256) (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#1295-1298) is never used and should be removed
SafeERC20.safeIncreaseAllowance(IERC20,address,uint256) (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#1290-1293) is never used and should be removed
SafeERC20.safeTransfer(IERC20,address,uint256) (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#1264-1266) is never used and should be removed
SafeERC20.safeTransferFrom(IERC20,address,address,uint256) (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#1268-1270) is never used and should be removed
SafeMath.mod(uint256,uint256) (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#787-789) is never used and should be removed
SafeMath.mod(uint256,uint256,string) (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#803-806) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code
INFO:Detectors:
Pragma version^0.6.0 (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#9) allows old versions
Pragma version^0.6.0 (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#93) allows old versions
Pragma version^0.6.12 (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#117) allows old versions
Pragma version^0.6.7 (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#148) allows old versions
Pragma version^0.6.0 (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#651) allows old versions
Pragma version^0.6.7 (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#1320) allows old versions
solc-0.6.12 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity
INFO:Detectors:
Low level call in Address.sendValue(address,uint256) (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#860-866):
	- (success) = recipient.call{value: amount}() (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#864)
Low level call in Address._functionCallWithValue(address,bytes,uint256,string) (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#926-947):
	- (success,returndata) = target.call{value: weiValue}(data) (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#930)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls
INFO:Detectors:
Function IFraxGaugeBase.lock_time_min() (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#143) is not in mixedCase
Contract veFXSVault (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#158-647) is not in CapWords
Parameter veFXSVault.deposit(uint256)._amount (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#456) is not in mixedCase
Parameter veFXSVault.setProxy(address)._proxy (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#466) is not in mixedCase
Parameter veFXSVault.setLocker(address)._locker (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#471) is not in mixedCase
Parameter veFXSVault.setFeeDistribution(address)._feeDistribution (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#476) is not in mixedCase
Parameter veFXSVault.setGovernance(address)._governance (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#485) is not in mixedCase
Parameter veFXSVault.execute(address,bytes)._target (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#626) is not in mixedCase
Parameter veFXSVault.execute(address,bytes)._data (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#626) is not in mixedCase
Variable veFXSVault.DOMAINSEPARATOR (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#188) is not in mixedCase
Parameter IStrategyProxy.withdrawV2(address,address,bytes32,address[])._kek_id (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#1334) is not in mixedCase
Parameter IFraxGaugeUniV3.stakeLocked(uint256,uint256).token_id (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#1378) is not in mixedCase
Parameter IFraxGaugeUniV3.withdrawLocked(uint256).token_id (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#1380) is not in mixedCase
Parameter IFraxGaugeUniV2.withdrawLocked(bytes32).kek_id (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#1396) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions
INFO:Detectors:
Redundant expression "this (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#111)" inContext (../../sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol#105-114)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#redundant-statements
INFO:Slither:/bdata2/sc/dataset/mainnet/0xCe0C98Cf1cBdF7e799c5639ed268C11b17F368C3.sol analyzed (12 contracts with 85 detectors), 69 result(s) found
