INFO:Detectors:
MasterChef.safeDopTransfer(address,uint256) (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#1328-1335) ignores return value by dop.transfer(_to,dopBal) (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#1331)
MasterChef.safeDopTransfer(address,uint256) (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#1328-1335) ignores return value by dop.transfer(_to,_amount) (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#1333)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unchecked-transfer
INFO:Detectors:
MasterChef.pendingDop(uint256,address) (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#1220-1244) performs a multiplication on the result of a division:
	- dopReward = multiplier.mul(dopPerBlock).mul(pool.allocPoint).div(totalAllocPoint) (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#1234-1237)
	- accDopPerShare = accDopPerShare.add(dopReward.mul(1e12).div(lpSupply)) (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#1238-1240)
MasterChef.updatePool(uint256) (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#1255-1276) performs a multiplication on the result of a division:
	- dopReward = multiplier.mul(dopPerBlock).mul(pool.allocPoint).div(totalAllocPoint) (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#1266-1269)
	- pool.accDopPerShare = pool.accDopPerShare.add(dopReward.mul(1e12).div(lpSupply)) (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#1272-1274)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#divide-before-multiply
INFO:Detectors:
MasterChef.updatePool(uint256) (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#1255-1276) uses a dangerous strict equality:
	- lpSupply == 0 (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#1261)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dangerous-strict-equalities
INFO:Detectors:
Reentrancy in MasterChef.deposit(uint256,uint256) (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#1279-1299):
	External calls:
	- safeDopTransfer(msg.sender,pending) (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#1289)
		- dop.transfer(_to,dopBal) (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#1331)
		- dop.transfer(_to,_amount) (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#1333)
	- pool.lpToken.safeTransferFrom(address(msg.sender),address(this),_amount) (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#1291-1295)
	State variables written after the call(s):
	- user.amount = user.amount.add(_amount) (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#1296)
	MasterChef.userInfo (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#1127) can be used in cross function reentrancies:
	- MasterChef.deposit(uint256,uint256) (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#1279-1299)
	- MasterChef.emergencyWithdraw(uint256) (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#1318-1325)
	- MasterChef.pendingDop(uint256,address) (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#1220-1244)
	- MasterChef.userInfo (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#1127)
	- MasterChef.withdraw(uint256,uint256) (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#1302-1315)
	- user.rewardDebt = user.amount.mul(pool.accDopPerShare).div(1e12) (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#1297)
	MasterChef.userInfo (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#1127) can be used in cross function reentrancies:
	- MasterChef.deposit(uint256,uint256) (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#1279-1299)
	- MasterChef.emergencyWithdraw(uint256) (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#1318-1325)
	- MasterChef.pendingDop(uint256,address) (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#1220-1244)
	- MasterChef.userInfo (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#1127)
	- MasterChef.withdraw(uint256,uint256) (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#1302-1315)
Reentrancy in MasterChef.emergencyWithdraw(uint256) (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#1318-1325):
	External calls:
	- pool.lpToken.safeTransfer(address(msg.sender),user.amount) (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#1321)
	State variables written after the call(s):
	- user.amount = 0 (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#1323)
	MasterChef.userInfo (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#1127) can be used in cross function reentrancies:
	- MasterChef.deposit(uint256,uint256) (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#1279-1299)
	- MasterChef.emergencyWithdraw(uint256) (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#1318-1325)
	- MasterChef.pendingDop(uint256,address) (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#1220-1244)
	- MasterChef.userInfo (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#1127)
	- MasterChef.withdraw(uint256,uint256) (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#1302-1315)
	- user.rewardDebt = 0 (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#1324)
	MasterChef.userInfo (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#1127) can be used in cross function reentrancies:
	- MasterChef.deposit(uint256,uint256) (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#1279-1299)
	- MasterChef.emergencyWithdraw(uint256) (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#1318-1325)
	- MasterChef.pendingDop(uint256,address) (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#1220-1244)
	- MasterChef.userInfo (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#1127)
	- MasterChef.withdraw(uint256,uint256) (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#1302-1315)
Reentrancy in MasterChef.withdraw(uint256,uint256) (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#1302-1315):
	External calls:
	- safeDopTransfer(msg.sender,pending) (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#1310)
		- dop.transfer(_to,dopBal) (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#1331)
		- dop.transfer(_to,_amount) (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#1333)
	State variables written after the call(s):
	- user.amount = user.amount.sub(_amount) (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#1311)
	MasterChef.userInfo (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#1127) can be used in cross function reentrancies:
	- MasterChef.deposit(uint256,uint256) (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#1279-1299)
	- MasterChef.emergencyWithdraw(uint256) (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#1318-1325)
	- MasterChef.pendingDop(uint256,address) (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#1220-1244)
	- MasterChef.userInfo (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#1127)
	- MasterChef.withdraw(uint256,uint256) (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#1302-1315)
	- user.rewardDebt = user.amount.mul(pool.accDopPerShare).div(1e12) (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#1312)
	MasterChef.userInfo (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#1127) can be used in cross function reentrancies:
	- MasterChef.deposit(uint256,uint256) (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#1279-1299)
	- MasterChef.emergencyWithdraw(uint256) (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#1318-1325)
	- MasterChef.pendingDop(uint256,address) (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#1220-1244)
	- MasterChef.userInfo (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#1127)
	- MasterChef.withdraw(uint256,uint256) (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#1302-1315)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1
INFO:Detectors:
ERC20.constructor(string,string).name (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#691) shadows:
	- ERC20.name() (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#700-702) (function)
ERC20.constructor(string,string).symbol (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#691) shadows:
	- ERC20.symbol() (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#708-710) (function)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing
INFO:Detectors:
MasterChef.add(uint256,IERC20,bool) (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#1164-1184) should emit an event for: 
	- totalAllocPoint = totalAllocPoint.add(_allocPoint) (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#1175) 
MasterChef.set(uint256,uint256,bool) (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#1187-1199) should emit an event for: 
	- totalAllocPoint = totalAllocPoint.sub(poolInfo[_pid].allocPoint).add(_allocPoint) (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#1195-1197) 
MasterChef.setDopPerBlock(uint256) (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#1345-1349) should emit an event for: 
	- dopPerBlock = _dopPerBlock (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#1348) 
MasterChef.setBonusEndBlock(uint256) (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#1351-1353) should emit an event for: 
	- bonusEndBlock = _bonusEndBlock (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#1352) 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-arithmetic
INFO:Detectors:
MasterChef.dev(address)._devaddr (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#1338) lacks a zero-check on :
		- devaddr = _devaddr (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#1340)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation
INFO:Detectors:
MasterChef.updatePool(uint256) (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#1255-1276) has external calls inside a loop: lpSupply = pool.lpToken.balanceOf(address(this)) (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#1260)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation/#calls-inside-a-loop
INFO:Detectors:
Reentrancy in MasterChef.deposit(uint256,uint256) (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#1279-1299):
	External calls:
	- safeDopTransfer(msg.sender,pending) (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#1289)
		- dop.transfer(_to,dopBal) (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#1331)
		- dop.transfer(_to,_amount) (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#1333)
	- pool.lpToken.safeTransferFrom(address(msg.sender),address(this),_amount) (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#1291-1295)
	Event emitted after the call(s):
	- Deposit(msg.sender,_pid,_amount) (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#1298)
Reentrancy in MasterChef.emergencyWithdraw(uint256) (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#1318-1325):
	External calls:
	- pool.lpToken.safeTransfer(address(msg.sender),user.amount) (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#1321)
	Event emitted after the call(s):
	- EmergencyWithdraw(msg.sender,_pid,user.amount) (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#1322)
Reentrancy in MasterChef.withdraw(uint256,uint256) (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#1302-1315):
	External calls:
	- safeDopTransfer(msg.sender,pending) (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#1310)
		- dop.transfer(_to,dopBal) (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#1331)
		- dop.transfer(_to,_amount) (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#1333)
	- pool.lpToken.safeTransfer(address(msg.sender),_amount) (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#1313)
	Event emitted after the call(s):
	- Withdraw(msg.sender,_pid,_amount) (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#1314)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3
INFO:Detectors:
Address.isContract(address) (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#526-535) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#533)
Address._functionCallWithValue(address,bytes,uint256,string) (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#619-640) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#632-635)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage
INFO:Detectors:
Address.functionCall(address,bytes) (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#579-581) is never used and should be removed
Address.functionCallWithValue(address,bytes,uint256) (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#604-606) is never used and should be removed
Address.functionCallWithValue(address,bytes,uint256,string) (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#614-617) is never used and should be removed
Address.sendValue(address,uint256) (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#553-559) is never used and should be removed
Context._msgData() (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#422-425) is never used and should be removed
ERC20._burn(address,uint256) (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#884-892) is never used and should be removed
ERC20._mint(address,uint256) (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#863-871) is never used and should be removed
ERC20._setupDecimals(uint8) (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#922-924) is never used and should be removed
EnumerableSet._add(EnumerableSet.Set,bytes32) (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#60-70) is never used and should be removed
EnumerableSet._at(EnumerableSet.Set,uint256) (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#136-139) is never used and should be removed
EnumerableSet._contains(EnumerableSet.Set,bytes32) (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#115-117) is never used and should be removed
EnumerableSet._length(EnumerableSet.Set) (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#122-124) is never used and should be removed
EnumerableSet._remove(EnumerableSet.Set,bytes32) (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#78-110) is never used and should be removed
EnumerableSet.add(EnumerableSet.AddressSet,address) (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#153-155) is never used and should be removed
EnumerableSet.add(EnumerableSet.UintSet,uint256) (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#208-210) is never used and should be removed
EnumerableSet.at(EnumerableSet.AddressSet,uint256) (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#191-193) is never used and should be removed
EnumerableSet.at(EnumerableSet.UintSet,uint256) (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#246-248) is never used and should be removed
EnumerableSet.contains(EnumerableSet.AddressSet,address) (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#170-172) is never used and should be removed
EnumerableSet.contains(EnumerableSet.UintSet,uint256) (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#225-227) is never used and should be removed
EnumerableSet.length(EnumerableSet.AddressSet) (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#177-179) is never used and should be removed
EnumerableSet.length(EnumerableSet.UintSet) (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#232-234) is never used and should be removed
EnumerableSet.remove(EnumerableSet.AddressSet,address) (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#163-165) is never used and should be removed
EnumerableSet.remove(EnumerableSet.UintSet,uint256) (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#218-220) is never used and should be removed
SafeERC20.safeApprove(IERC20,address,uint256) (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#971-980) is never used and should be removed
SafeERC20.safeDecreaseAllowance(IERC20,address,uint256) (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#987-990) is never used and should be removed
SafeERC20.safeIncreaseAllowance(IERC20,address,uint256) (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#982-985) is never used and should be removed
SafeMath.mod(uint256,uint256) (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#385-387) is never used and should be removed
SafeMath.mod(uint256,uint256,string) (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#401-404) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code
INFO:Detectors:
Pragma version^0.6.0 (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#7) allows old versions
solc-0.6.12 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity
INFO:Detectors:
Low level call in Address.sendValue(address,uint256) (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#553-559):
	- (success) = recipient.call{value: amount}() (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#557)
Low level call in Address._functionCallWithValue(address,bytes,uint256,string) (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#619-640):
	- (success,returndata) = target.call{value: weiValue}(data) (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#623)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls
INFO:Detectors:
Parameter MasterChef.add(uint256,IERC20,bool)._allocPoint (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#1165) is not in mixedCase
Parameter MasterChef.add(uint256,IERC20,bool)._lpToken (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#1166) is not in mixedCase
Parameter MasterChef.add(uint256,IERC20,bool)._withUpdate (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#1167) is not in mixedCase
Parameter MasterChef.set(uint256,uint256,bool)._pid (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#1188) is not in mixedCase
Parameter MasterChef.set(uint256,uint256,bool)._allocPoint (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#1189) is not in mixedCase
Parameter MasterChef.set(uint256,uint256,bool)._withUpdate (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#1190) is not in mixedCase
Parameter MasterChef.getMultiplier(uint256,uint256)._from (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#1202) is not in mixedCase
Parameter MasterChef.getMultiplier(uint256,uint256)._to (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#1202) is not in mixedCase
Parameter MasterChef.pendingDop(uint256,address)._pid (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#1220) is not in mixedCase
Parameter MasterChef.pendingDop(uint256,address)._user (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#1220) is not in mixedCase
Parameter MasterChef.updatePool(uint256)._pid (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#1255) is not in mixedCase
Parameter MasterChef.deposit(uint256,uint256)._pid (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#1279) is not in mixedCase
Parameter MasterChef.deposit(uint256,uint256)._amount (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#1279) is not in mixedCase
Parameter MasterChef.withdraw(uint256,uint256)._pid (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#1302) is not in mixedCase
Parameter MasterChef.withdraw(uint256,uint256)._amount (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#1302) is not in mixedCase
Parameter MasterChef.emergencyWithdraw(uint256)._pid (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#1318) is not in mixedCase
Parameter MasterChef.safeDopTransfer(address,uint256)._to (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#1328) is not in mixedCase
Parameter MasterChef.safeDopTransfer(address,uint256)._amount (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#1328) is not in mixedCase
Parameter MasterChef.dev(address)._devaddr (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#1338) is not in mixedCase
Parameter MasterChef.setDopPerBlock(uint256)._dopPerBlock (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#1345) is not in mixedCase
Parameter MasterChef.setBonusEndBlock(uint256)._bonusEndBlock (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#1351) is not in mixedCase
Parameter MasterChef.setDevFundDivRate(uint256)._devFundDivRate (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#1355) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions
INFO:Detectors:
Redundant expression "this (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#423)" inContext (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#417-426)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#redundant-statements
INFO:Detectors:
MasterChef.dop (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#1112) should be immutable 
MasterChef.startBlock (../../sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol#1131) should be immutable 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-immutable
INFO:Slither:/bdata2/sc/dataset/mainnet/0x8a78011bf2c42df82cc05f198109ea024b554df9.sol analyzed (9 contracts with 85 detectors), 78 result(s) found
