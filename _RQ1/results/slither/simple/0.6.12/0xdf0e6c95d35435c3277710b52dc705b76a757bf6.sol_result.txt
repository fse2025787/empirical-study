INFO:Detectors:
BabylonSwapFarm.addrewardtoken(address,address,uint256) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#700-742) ignores return value by IERC20MetaData(token).transferFrom(msg.sender,feeto,amount) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#711-715)
BabylonSwapFarm.addrewardtoken(address,address,uint256) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#700-742) ignores return value by pool.rewardToken0.transferFrom(msg.sender,address(this),amount) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#721-725)
BabylonSwapFarm.addrewardtoken(address,address,uint256) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#700-742) ignores return value by pool.rewardToken1.transferFrom(msg.sender,address(this),amount) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#731-735)
BabylonSwapFarm.addReward(address,address,uint256,uint256) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#745-788) ignores return value by pool.rewardToken0.transferFrom(msg.sender,address(this),reward0) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#770)
BabylonSwapFarm.addReward(address,address,uint256,uint256) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#745-788) ignores return value by pool.rewardToken1.transferFrom(msg.sender,address(this),reward1) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#776)
BabylonSwapFarm.deposit(uint256,uint256) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#790-806) ignores return value by pool.lpToken.transferFrom(address(msg.sender),address(this),_amount) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#801)
BabylonSwapFarm.withdraw(uint256,uint256) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#830-849) ignores return value by pool.lpToken.transfer(address(msg.sender),_amount) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#847)
BabylonSwapFarm.emergencyWithdraw(uint256) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#852-860) ignores return value by pool.lpToken.transfer(address(msg.sender),user.amount) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#855)
BabylonSwapFarm.safeRewardTransfer(IERC20MetaData,address,uint256) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#863-874) ignores return value by _reward.transfer(_to,_rewardBal) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#870)
BabylonSwapFarm.safeRewardTransfer(IERC20MetaData,address,uint256) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#863-874) ignores return value by _reward.transfer(_to,_amount) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#872)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unchecked-transfer
INFO:Detectors:
BabylonSwapFarm.paused (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#615) is never initialized. It is used in:
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#uninitialized-state-variables
INFO:Detectors:
BabylonSwapFarm.addReward(address,address,uint256,uint256) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#745-788) uses a dangerous strict equality:
	- lpSupply == 0 (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#765)
BabylonSwapFarm.addrewardtoken(address,address,uint256) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#700-742) uses a dangerous strict equality:
	- lpSupply == 0 (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#710)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dangerous-strict-equalities
INFO:Detectors:
Reentrancy in BabylonSwapFarm.addReward(address,address,uint256,uint256) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#745-788):
	External calls:
	- pool.rewardToken0.transferFrom(msg.sender,address(this),reward0) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#770)
	State variables written after the call(s):
	- pool.accPerShare0 = pool.accPerShare0.add(reward0.mul(1e12).div(lpSupply)) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#771-773)
	BabylonSwapFarm.poolInfo (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#617) can be used in cross function reentrancies:
	- BabylonSwapFarm.addLPInfo(IERC20MetaData,IERC20MetaData,IERC20MetaData) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#678-698)
	- BabylonSwapFarm.addReward(address,address,uint256,uint256) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#745-788)
	- BabylonSwapFarm.addrewardtoken(address,address,uint256) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#700-742)
	- BabylonSwapFarm.claimReward(uint256) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#808-828)
	- BabylonSwapFarm.deposit(uint256,uint256) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#790-806)
	- BabylonSwapFarm.emergencyWithdraw(uint256) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#852-860)
	- BabylonSwapFarm.poolInfo (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#617)
	- BabylonSwapFarm.poolLength() (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#876-878)
	- BabylonSwapFarm.withdraw(uint256,uint256) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#830-849)
Reentrancy in BabylonSwapFarm.addReward(address,address,uint256,uint256) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#745-788):
	External calls:
	- pool.rewardToken0.transferFrom(msg.sender,address(this),reward0) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#770)
	- pool.rewardToken1.transferFrom(msg.sender,address(this),reward1) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#776)
	State variables written after the call(s):
	- pool.accPerShare1 = pool.accPerShare1.add(reward1.mul(1e12).div(lpSupply)) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#777-779)
	BabylonSwapFarm.poolInfo (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#617) can be used in cross function reentrancies:
	- BabylonSwapFarm.addLPInfo(IERC20MetaData,IERC20MetaData,IERC20MetaData) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#678-698)
	- BabylonSwapFarm.addReward(address,address,uint256,uint256) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#745-788)
	- BabylonSwapFarm.addrewardtoken(address,address,uint256) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#700-742)
	- BabylonSwapFarm.claimReward(uint256) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#808-828)
	- BabylonSwapFarm.deposit(uint256,uint256) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#790-806)
	- BabylonSwapFarm.emergencyWithdraw(uint256) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#852-860)
	- BabylonSwapFarm.poolInfo (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#617)
	- BabylonSwapFarm.poolLength() (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#876-878)
	- BabylonSwapFarm.withdraw(uint256,uint256) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#830-849)
Reentrancy in BabylonSwapFarm.addrewardtoken(address,address,uint256) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#700-742):
	External calls:
	- pool.rewardToken0.transferFrom(msg.sender,address(this),amount) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#721-725)
	State variables written after the call(s):
	- pool.accPerShare0 = pool.accPerShare0.add(amount.mul(1e12).div(lpSupply)) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#726-728)
	BabylonSwapFarm.poolInfo (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#617) can be used in cross function reentrancies:
	- BabylonSwapFarm.addLPInfo(IERC20MetaData,IERC20MetaData,IERC20MetaData) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#678-698)
	- BabylonSwapFarm.addReward(address,address,uint256,uint256) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#745-788)
	- BabylonSwapFarm.addrewardtoken(address,address,uint256) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#700-742)
	- BabylonSwapFarm.claimReward(uint256) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#808-828)
	- BabylonSwapFarm.deposit(uint256,uint256) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#790-806)
	- BabylonSwapFarm.emergencyWithdraw(uint256) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#852-860)
	- BabylonSwapFarm.poolInfo (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#617)
	- BabylonSwapFarm.poolLength() (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#876-878)
	- BabylonSwapFarm.withdraw(uint256,uint256) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#830-849)
Reentrancy in BabylonSwapFarm.addrewardtoken(address,address,uint256) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#700-742):
	External calls:
	- pool.rewardToken1.transferFrom(msg.sender,address(this),amount) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#731-735)
	State variables written after the call(s):
	- pool.accPerShare1 = pool.accPerShare1.add(amount.mul(1e12).div(lpSupply)) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#736-738)
	BabylonSwapFarm.poolInfo (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#617) can be used in cross function reentrancies:
	- BabylonSwapFarm.addLPInfo(IERC20MetaData,IERC20MetaData,IERC20MetaData) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#678-698)
	- BabylonSwapFarm.addReward(address,address,uint256,uint256) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#745-788)
	- BabylonSwapFarm.addrewardtoken(address,address,uint256) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#700-742)
	- BabylonSwapFarm.claimReward(uint256) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#808-828)
	- BabylonSwapFarm.deposit(uint256,uint256) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#790-806)
	- BabylonSwapFarm.emergencyWithdraw(uint256) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#852-860)
	- BabylonSwapFarm.poolInfo (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#617)
	- BabylonSwapFarm.poolLength() (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#876-878)
	- BabylonSwapFarm.withdraw(uint256,uint256) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#830-849)
Reentrancy in BabylonSwapFarm.claimReward(uint256) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#808-828):
	External calls:
	- safeRewardTransfer(pool.rewardToken0,_userAddr,pendingReward0) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#819)
		- _reward.transfer(_to,_rewardBal) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#870)
		- _reward.transfer(_to,_amount) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#872)
	- safeRewardTransfer(pool.rewardToken1,_userAddr,pendingReward1) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#823)
		- _reward.transfer(_to,_rewardBal) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#870)
		- _reward.transfer(_to,_amount) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#872)
	State variables written after the call(s):
	- user.rewardDebt0 = user.amount.mul(pool.accPerShare0).div(1e12) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#825)
	BabylonSwapFarm.userInfo (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#619) can be used in cross function reentrancies:
	- BabylonSwapFarm.claimReward(uint256) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#808-828)
	- BabylonSwapFarm.deposit(uint256,uint256) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#790-806)
	- BabylonSwapFarm.emergencyWithdraw(uint256) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#852-860)
	- BabylonSwapFarm.userInfo (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#619)
	- BabylonSwapFarm.withdraw(uint256,uint256) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#830-849)
	- user.rewardDebt1 = user.amount.mul(pool.accPerShare1).div(1e12) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#826)
	BabylonSwapFarm.userInfo (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#619) can be used in cross function reentrancies:
	- BabylonSwapFarm.claimReward(uint256) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#808-828)
	- BabylonSwapFarm.deposit(uint256,uint256) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#790-806)
	- BabylonSwapFarm.emergencyWithdraw(uint256) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#852-860)
	- BabylonSwapFarm.userInfo (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#619)
	- BabylonSwapFarm.withdraw(uint256,uint256) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#830-849)
Reentrancy in BabylonSwapFarm.deposit(uint256,uint256) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#790-806):
	External calls:
	- claimReward(_pid) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#799)
		- _reward.transfer(_to,_rewardBal) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#870)
		- _reward.transfer(_to,_amount) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#872)
	- pool.lpToken.transferFrom(address(msg.sender),address(this),_amount) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#801)
	State variables written after the call(s):
	- user.amount = user.amount.add(_amount) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#802)
	BabylonSwapFarm.userInfo (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#619) can be used in cross function reentrancies:
	- BabylonSwapFarm.claimReward(uint256) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#808-828)
	- BabylonSwapFarm.deposit(uint256,uint256) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#790-806)
	- BabylonSwapFarm.emergencyWithdraw(uint256) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#852-860)
	- BabylonSwapFarm.userInfo (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#619)
	- BabylonSwapFarm.withdraw(uint256,uint256) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#830-849)
	- user.rewardDebt0 = user.amount.mul(pool.accPerShare0).div(1e12) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#803)
	BabylonSwapFarm.userInfo (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#619) can be used in cross function reentrancies:
	- BabylonSwapFarm.claimReward(uint256) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#808-828)
	- BabylonSwapFarm.deposit(uint256,uint256) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#790-806)
	- BabylonSwapFarm.emergencyWithdraw(uint256) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#852-860)
	- BabylonSwapFarm.userInfo (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#619)
	- BabylonSwapFarm.withdraw(uint256,uint256) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#830-849)
	- user.rewardDebt1 = user.amount.mul(pool.accPerShare1).div(1e12) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#804)
	BabylonSwapFarm.userInfo (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#619) can be used in cross function reentrancies:
	- BabylonSwapFarm.claimReward(uint256) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#808-828)
	- BabylonSwapFarm.deposit(uint256,uint256) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#790-806)
	- BabylonSwapFarm.emergencyWithdraw(uint256) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#852-860)
	- BabylonSwapFarm.userInfo (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#619)
	- BabylonSwapFarm.withdraw(uint256,uint256) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#830-849)
Reentrancy in BabylonSwapFarm.emergencyWithdraw(uint256) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#852-860):
	External calls:
	- pool.lpToken.transfer(address(msg.sender),user.amount) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#855)
	State variables written after the call(s):
	- user.amount = 0 (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#857)
	BabylonSwapFarm.userInfo (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#619) can be used in cross function reentrancies:
	- BabylonSwapFarm.claimReward(uint256) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#808-828)
	- BabylonSwapFarm.deposit(uint256,uint256) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#790-806)
	- BabylonSwapFarm.emergencyWithdraw(uint256) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#852-860)
	- BabylonSwapFarm.userInfo (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#619)
	- BabylonSwapFarm.withdraw(uint256,uint256) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#830-849)
	- user.rewardDebt0 = 0 (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#858)
	BabylonSwapFarm.userInfo (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#619) can be used in cross function reentrancies:
	- BabylonSwapFarm.claimReward(uint256) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#808-828)
	- BabylonSwapFarm.deposit(uint256,uint256) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#790-806)
	- BabylonSwapFarm.emergencyWithdraw(uint256) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#852-860)
	- BabylonSwapFarm.userInfo (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#619)
	- BabylonSwapFarm.withdraw(uint256,uint256) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#830-849)
	- user.rewardDebt1 = 0 (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#859)
	BabylonSwapFarm.userInfo (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#619) can be used in cross function reentrancies:
	- BabylonSwapFarm.claimReward(uint256) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#808-828)
	- BabylonSwapFarm.deposit(uint256,uint256) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#790-806)
	- BabylonSwapFarm.emergencyWithdraw(uint256) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#852-860)
	- BabylonSwapFarm.userInfo (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#619)
	- BabylonSwapFarm.withdraw(uint256,uint256) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#830-849)
Reentrancy in BabylonSwapFarm.withdraw(uint256,uint256) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#830-849):
	External calls:
	- claimReward(_pid) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#841)
		- _reward.transfer(_to,_rewardBal) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#870)
		- _reward.transfer(_to,_amount) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#872)
	State variables written after the call(s):
	- user.amount = user.amount.sub(_amount) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#844)
	BabylonSwapFarm.userInfo (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#619) can be used in cross function reentrancies:
	- BabylonSwapFarm.claimReward(uint256) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#808-828)
	- BabylonSwapFarm.deposit(uint256,uint256) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#790-806)
	- BabylonSwapFarm.emergencyWithdraw(uint256) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#852-860)
	- BabylonSwapFarm.userInfo (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#619)
	- BabylonSwapFarm.withdraw(uint256,uint256) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#830-849)
	- user.rewardDebt0 = user.amount.mul(pool.accPerShare0).div(1e12) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#845)
	BabylonSwapFarm.userInfo (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#619) can be used in cross function reentrancies:
	- BabylonSwapFarm.claimReward(uint256) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#808-828)
	- BabylonSwapFarm.deposit(uint256,uint256) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#790-806)
	- BabylonSwapFarm.emergencyWithdraw(uint256) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#852-860)
	- BabylonSwapFarm.userInfo (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#619)
	- BabylonSwapFarm.withdraw(uint256,uint256) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#830-849)
	- user.rewardDebt1 = user.amount.mul(pool.accPerShare1).div(1e12) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#846)
	BabylonSwapFarm.userInfo (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#619) can be used in cross function reentrancies:
	- BabylonSwapFarm.claimReward(uint256) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#808-828)
	- BabylonSwapFarm.deposit(uint256,uint256) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#790-806)
	- BabylonSwapFarm.emergencyWithdraw(uint256) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#852-860)
	- BabylonSwapFarm.userInfo (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#619)
	- BabylonSwapFarm.withdraw(uint256,uint256) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#830-849)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1
INFO:Detectors:
BabylonSwapFarm.claimReward(uint256).pendingReward1 (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#813) is a local variable never initialized
BabylonSwapFarm.claimReward(uint256).pendingReward0 (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#812) is a local variable never initialized
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#uninitialized-local-variables
INFO:Detectors:
Reentrancy in BabylonSwapFarm.addReward(address,address,uint256,uint256) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#745-788):
	External calls:
	- pool.rewardToken0.transferFrom(msg.sender,address(this),reward0) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#770)
	- pool.rewardToken1.transferFrom(msg.sender,address(this),reward1) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#776)
	Event emitted after the call(s):
	- AddReward(address(pool.lpToken),address(pool.rewardToken0),address(pool.rewardToken1),reward0,reward1) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#781-787)
Reentrancy in BabylonSwapFarm.addrewardtoken(address,address,uint256) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#700-742):
	External calls:
	- pool.rewardToken0.transferFrom(msg.sender,address(this),amount) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#721-725)
	- pool.rewardToken1.transferFrom(msg.sender,address(this),amount) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#731-735)
	Event emitted after the call(s):
	- AddReward(address(pool.lpToken),token,address(0x000),amount,0) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#741)
Reentrancy in BabylonSwapFarm.claimReward(uint256) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#808-828):
	External calls:
	- safeRewardTransfer(pool.rewardToken0,_userAddr,pendingReward0) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#819)
		- _reward.transfer(_to,_rewardBal) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#870)
		- _reward.transfer(_to,_amount) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#872)
	- safeRewardTransfer(pool.rewardToken1,_userAddr,pendingReward1) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#823)
		- _reward.transfer(_to,_rewardBal) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#870)
		- _reward.transfer(_to,_amount) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#872)
	Event emitted after the call(s):
	- Claim(_userAddr,_pid,pendingReward0,pendingReward1) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#827)
Reentrancy in BabylonSwapFarm.deposit(uint256,uint256) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#790-806):
	External calls:
	- claimReward(_pid) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#799)
		- _reward.transfer(_to,_rewardBal) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#870)
		- _reward.transfer(_to,_amount) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#872)
	- pool.lpToken.transferFrom(address(msg.sender),address(this),_amount) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#801)
	Event emitted after the call(s):
	- Deposit(msg.sender,_pid,_amount) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#805)
Reentrancy in BabylonSwapFarm.emergencyWithdraw(uint256) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#852-860):
	External calls:
	- pool.lpToken.transfer(address(msg.sender),user.amount) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#855)
	Event emitted after the call(s):
	- EmergencyWithdraw(msg.sender,_pid,user.amount) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#856)
Reentrancy in BabylonSwapFarm.withdraw(uint256,uint256) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#830-849):
	External calls:
	- claimReward(_pid) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#841)
		- _reward.transfer(_to,_rewardBal) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#870)
		- _reward.transfer(_to,_amount) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#872)
	- pool.lpToken.transfer(address(msg.sender),_amount) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#847)
	Event emitted after the call(s):
	- Withdraw(msg.sender,_pid,_amount) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#848)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3
INFO:Detectors:
EnumerableSet._add(EnumerableSet.Set,bytes32) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#273-283) is never used and should be removed
EnumerableSet._at(EnumerableSet.Set,uint256) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#349-352) is never used and should be removed
EnumerableSet._contains(EnumerableSet.Set,bytes32) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#328-330) is never used and should be removed
EnumerableSet._length(EnumerableSet.Set) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#335-337) is never used and should be removed
EnumerableSet._remove(EnumerableSet.Set,bytes32) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#291-323) is never used and should be removed
EnumerableSet.add(EnumerableSet.AddressSet,address) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#420-422) is never used and should be removed
EnumerableSet.add(EnumerableSet.Bytes32Set,bytes32) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#366-368) is never used and should be removed
EnumerableSet.add(EnumerableSet.UintSet,uint256) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#475-477) is never used and should be removed
EnumerableSet.at(EnumerableSet.AddressSet,uint256) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#458-460) is never used and should be removed
EnumerableSet.at(EnumerableSet.Bytes32Set,uint256) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#404-406) is never used and should be removed
EnumerableSet.at(EnumerableSet.UintSet,uint256) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#513-515) is never used and should be removed
EnumerableSet.contains(EnumerableSet.AddressSet,address) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#437-439) is never used and should be removed
EnumerableSet.contains(EnumerableSet.Bytes32Set,bytes32) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#383-385) is never used and should be removed
EnumerableSet.contains(EnumerableSet.UintSet,uint256) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#492-494) is never used and should be removed
EnumerableSet.length(EnumerableSet.AddressSet) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#444-446) is never used and should be removed
EnumerableSet.length(EnumerableSet.Bytes32Set) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#390-392) is never used and should be removed
EnumerableSet.length(EnumerableSet.UintSet) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#499-501) is never used and should be removed
EnumerableSet.remove(EnumerableSet.AddressSet,address) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#430-432) is never used and should be removed
EnumerableSet.remove(EnumerableSet.Bytes32Set,bytes32) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#376-378) is never used and should be removed
EnumerableSet.remove(EnumerableSet.UintSet,uint256) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#485-487) is never used and should be removed
SafeMath.div(uint256,uint256,string) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#196-199) is never used and should be removed
SafeMath.mod(uint256,uint256) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#158-161) is never used and should be removed
SafeMath.mod(uint256,uint256,string) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#216-219) is never used and should be removed
SafeMath.sub(uint256,uint256,string) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#176-179) is never used and should be removed
SafeMath.tryAdd(uint256,uint256) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#30-34) is never used and should be removed
SafeMath.tryDiv(uint256,uint256) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#66-69) is never used and should be removed
SafeMath.tryMod(uint256,uint256) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#76-79) is never used and should be removed
SafeMath.tryMul(uint256,uint256) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#51-59) is never used and should be removed
SafeMath.trySub(uint256,uint256) (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#41-44) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code
INFO:Detectors:
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#9) is too complex
solc-0.6.12 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity
INFO:Detectors:
Parameter BabylonSwapFarm.addLPInfo(IERC20MetaData,IERC20MetaData,IERC20MetaData)._lpToken (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#679) is not in mixedCase
Parameter BabylonSwapFarm.addLPInfo(IERC20MetaData,IERC20MetaData,IERC20MetaData)._rewardToken0 (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#680) is not in mixedCase
Parameter BabylonSwapFarm.addLPInfo(IERC20MetaData,IERC20MetaData,IERC20MetaData)._rewardToken1 (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#681) is not in mixedCase
Parameter BabylonSwapFarm.addrewardtoken(address,address,uint256)._lp (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#701) is not in mixedCase
Parameter BabylonSwapFarm.addReward(address,address,uint256,uint256)._lp (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#746) is not in mixedCase
Parameter BabylonSwapFarm.deposit(uint256,uint256)._pid (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#790) is not in mixedCase
Parameter BabylonSwapFarm.deposit(uint256,uint256)._amount (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#790) is not in mixedCase
Parameter BabylonSwapFarm.claimReward(uint256)._pid (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#808) is not in mixedCase
Parameter BabylonSwapFarm.withdraw(uint256,uint256)._pid (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#830) is not in mixedCase
Parameter BabylonSwapFarm.withdraw(uint256,uint256)._amount (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#830) is not in mixedCase
Parameter BabylonSwapFarm.emergencyWithdraw(uint256)._pid (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#852) is not in mixedCase
Parameter BabylonSwapFarm.safeRewardTransfer(IERC20MetaData,address,uint256)._reward (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#864) is not in mixedCase
Parameter BabylonSwapFarm.safeRewardTransfer(IERC20MetaData,address,uint256)._to (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#865) is not in mixedCase
Parameter BabylonSwapFarm.safeRewardTransfer(IERC20MetaData,address,uint256)._amount (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#866) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions
INFO:Detectors:
Variable BabylonSwapFarm.addLPInfo(IERC20MetaData,IERC20MetaData,IERC20MetaData)._rewardToken0 (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#680) is too similar to BabylonSwapFarm.addLPInfo(IERC20MetaData,IERC20MetaData,IERC20MetaData)._rewardToken1 (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#681)
Variable BabylonSwapFarm.claimReward(uint256).pendingReward0 (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#812) is too similar to BabylonSwapFarm.claimReward(uint256).pendingReward1 (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#813)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#variable-names-too-similar
INFO:Detectors:
BabylonSwapFarm.paused (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#615) should be constant 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant
INFO:Detectors:
BabylonSwapFarm.feeto (../../sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol#614) should be immutable 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-immutable
INFO:Slither:/bdata2/sc/dataset/mainnet/0xdf0e6c95d35435c3277710b52dc705b76a757bf6.sol analyzed (4 contracts with 85 detectors), 78 result(s) found
