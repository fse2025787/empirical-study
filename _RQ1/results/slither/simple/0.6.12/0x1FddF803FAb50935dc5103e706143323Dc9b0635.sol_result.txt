INFO:Detectors:
UniswapV2Pair._update(uint256,uint256,uint112,uint112) (../../sc/dataset/mainnet/0x1FddF803FAb50935dc5103e706143323Dc9b0635.sol#177-190) uses a weak PRNG: "blockTimestamp = uint32(block.timestamp % 2 ** 32) (../../sc/dataset/mainnet/0x1FddF803FAb50935dc5103e706143323Dc9b0635.sol#179)" 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#weak-PRNG
INFO:Detectors:
UniswapV2Pair._safeTransfer(address,address,uint256) (../../sc/dataset/mainnet/0x1FddF803FAb50935dc5103e706143323Dc9b0635.sol#148-151) uses a dangerous strict equality:
	- require(bool,string)(success && (data.length == 0 || abi.decode(data,(bool))),SwipeswapV2: TRANSFER_FAILED) (../../sc/dataset/mainnet/0x1FddF803FAb50935dc5103e706143323Dc9b0635.sol#150)
UniswapV2Pair.mint(address) (../../sc/dataset/mainnet/0x1FddF803FAb50935dc5103e706143323Dc9b0635.sol#214-242) uses a dangerous strict equality:
	- _totalSupply == 0 (../../sc/dataset/mainnet/0x1FddF803FAb50935dc5103e706143323Dc9b0635.sol#223)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dangerous-strict-equalities
INFO:Detectors:
Reentrancy in UniswapV2Pair.burn(address) (../../sc/dataset/mainnet/0x1FddF803FAb50935dc5103e706143323Dc9b0635.sol#245-267):
	External calls:
	- _safeTransfer(_token0,to,amount0) (../../sc/dataset/mainnet/0x1FddF803FAb50935dc5103e706143323Dc9b0635.sol#259)
		- (success,data) = token.call(abi.encodeWithSelector(SELECTOR,to,value)) (../../sc/dataset/mainnet/0x1FddF803FAb50935dc5103e706143323Dc9b0635.sol#149)
	- _safeTransfer(_token1,to,amount1) (../../sc/dataset/mainnet/0x1FddF803FAb50935dc5103e706143323Dc9b0635.sol#260)
		- (success,data) = token.call(abi.encodeWithSelector(SELECTOR,to,value)) (../../sc/dataset/mainnet/0x1FddF803FAb50935dc5103e706143323Dc9b0635.sol#149)
	State variables written after the call(s):
	- _update(balance0,balance1,_reserve0,_reserve1) (../../sc/dataset/mainnet/0x1FddF803FAb50935dc5103e706143323Dc9b0635.sol#264)
		- blockTimestampLast = blockTimestamp (../../sc/dataset/mainnet/0x1FddF803FAb50935dc5103e706143323Dc9b0635.sol#188)
	UniswapV2Pair.blockTimestampLast (../../sc/dataset/mainnet/0x1FddF803FAb50935dc5103e706143323Dc9b0635.sol#128) can be used in cross function reentrancies:
	- UniswapV2Pair._update(uint256,uint256,uint112,uint112) (../../sc/dataset/mainnet/0x1FddF803FAb50935dc5103e706143323Dc9b0635.sol#177-190)
	- UniswapV2Pair.getReserves() (../../sc/dataset/mainnet/0x1FddF803FAb50935dc5103e706143323Dc9b0635.sol#142-146)
	- kLast = uint256(reserve0).mul(reserve1) (../../sc/dataset/mainnet/0x1FddF803FAb50935dc5103e706143323Dc9b0635.sol#265)
	UniswapV2Pair.kLast (../../sc/dataset/mainnet/0x1FddF803FAb50935dc5103e706143323Dc9b0635.sol#132) can be used in cross function reentrancies:
	- UniswapV2Pair._mintFee(uint112,uint112) (../../sc/dataset/mainnet/0x1FddF803FAb50935dc5103e706143323Dc9b0635.sol#193-211)
	- UniswapV2Pair.burn(address) (../../sc/dataset/mainnet/0x1FddF803FAb50935dc5103e706143323Dc9b0635.sol#245-267)
	- UniswapV2Pair.kLast (../../sc/dataset/mainnet/0x1FddF803FAb50935dc5103e706143323Dc9b0635.sol#132)
	- UniswapV2Pair.mint(address) (../../sc/dataset/mainnet/0x1FddF803FAb50935dc5103e706143323Dc9b0635.sol#214-242)
	- _update(balance0,balance1,_reserve0,_reserve1) (../../sc/dataset/mainnet/0x1FddF803FAb50935dc5103e706143323Dc9b0635.sol#264)
		- reserve0 = uint112(balance0) (../../sc/dataset/mainnet/0x1FddF803FAb50935dc5103e706143323Dc9b0635.sol#186)
	UniswapV2Pair.reserve0 (../../sc/dataset/mainnet/0x1FddF803FAb50935dc5103e706143323Dc9b0635.sol#126) can be used in cross function reentrancies:
	- UniswapV2Pair._update(uint256,uint256,uint112,uint112) (../../sc/dataset/mainnet/0x1FddF803FAb50935dc5103e706143323Dc9b0635.sol#177-190)
	- UniswapV2Pair.burn(address) (../../sc/dataset/mainnet/0x1FddF803FAb50935dc5103e706143323Dc9b0635.sol#245-267)
	- UniswapV2Pair.getReserves() (../../sc/dataset/mainnet/0x1FddF803FAb50935dc5103e706143323Dc9b0635.sol#142-146)
	- UniswapV2Pair.mint(address) (../../sc/dataset/mainnet/0x1FddF803FAb50935dc5103e706143323Dc9b0635.sol#214-242)
	- UniswapV2Pair.skim(address) (../../sc/dataset/mainnet/0x1FddF803FAb50935dc5103e706143323Dc9b0635.sol#301-306)
	- UniswapV2Pair.sync() (../../sc/dataset/mainnet/0x1FddF803FAb50935dc5103e706143323Dc9b0635.sol#309-311)
	- _update(balance0,balance1,_reserve0,_reserve1) (../../sc/dataset/mainnet/0x1FddF803FAb50935dc5103e706143323Dc9b0635.sol#264)
		- reserve1 = uint112(balance1) (../../sc/dataset/mainnet/0x1FddF803FAb50935dc5103e706143323Dc9b0635.sol#187)
	UniswapV2Pair.reserve1 (../../sc/dataset/mainnet/0x1FddF803FAb50935dc5103e706143323Dc9b0635.sol#127) can be used in cross function reentrancies:
	- UniswapV2Pair._update(uint256,uint256,uint112,uint112) (../../sc/dataset/mainnet/0x1FddF803FAb50935dc5103e706143323Dc9b0635.sol#177-190)
	- UniswapV2Pair.burn(address) (../../sc/dataset/mainnet/0x1FddF803FAb50935dc5103e706143323Dc9b0635.sol#245-267)
	- UniswapV2Pair.getReserves() (../../sc/dataset/mainnet/0x1FddF803FAb50935dc5103e706143323Dc9b0635.sol#142-146)
	- UniswapV2Pair.mint(address) (../../sc/dataset/mainnet/0x1FddF803FAb50935dc5103e706143323Dc9b0635.sol#214-242)
	- UniswapV2Pair.skim(address) (../../sc/dataset/mainnet/0x1FddF803FAb50935dc5103e706143323Dc9b0635.sol#301-306)
	- UniswapV2Pair.sync() (../../sc/dataset/mainnet/0x1FddF803FAb50935dc5103e706143323Dc9b0635.sol#309-311)
Reentrancy in UniswapV2Pair.swap(uint256,uint256,address,bytes) (../../sc/dataset/mainnet/0x1FddF803FAb50935dc5103e706143323Dc9b0635.sol#270-298):
	External calls:
	- _safeTransfer(_token0,to,amount0Out) (../../sc/dataset/mainnet/0x1FddF803FAb50935dc5103e706143323Dc9b0635.sol#281)
		- (success,data) = token.call(abi.encodeWithSelector(SELECTOR,to,value)) (../../sc/dataset/mainnet/0x1FddF803FAb50935dc5103e706143323Dc9b0635.sol#149)
	- _safeTransfer(_token1,to,amount1Out) (../../sc/dataset/mainnet/0x1FddF803FAb50935dc5103e706143323Dc9b0635.sol#282)
		- (success,data) = token.call(abi.encodeWithSelector(SELECTOR,to,value)) (../../sc/dataset/mainnet/0x1FddF803FAb50935dc5103e706143323Dc9b0635.sol#149)
	- IUniswapV2Callee(to).uniswapV2Call(msg.sender,amount0Out,amount1Out,data) (../../sc/dataset/mainnet/0x1FddF803FAb50935dc5103e706143323Dc9b0635.sol#283)
	State variables written after the call(s):
	- _update(balance0,balance1,_reserve0,_reserve1) (../../sc/dataset/mainnet/0x1FddF803FAb50935dc5103e706143323Dc9b0635.sol#296)
		- blockTimestampLast = blockTimestamp (../../sc/dataset/mainnet/0x1FddF803FAb50935dc5103e706143323Dc9b0635.sol#188)
	UniswapV2Pair.blockTimestampLast (../../sc/dataset/mainnet/0x1FddF803FAb50935dc5103e706143323Dc9b0635.sol#128) can be used in cross function reentrancies:
	- UniswapV2Pair._update(uint256,uint256,uint112,uint112) (../../sc/dataset/mainnet/0x1FddF803FAb50935dc5103e706143323Dc9b0635.sol#177-190)
	- UniswapV2Pair.getReserves() (../../sc/dataset/mainnet/0x1FddF803FAb50935dc5103e706143323Dc9b0635.sol#142-146)
	- _update(balance0,balance1,_reserve0,_reserve1) (../../sc/dataset/mainnet/0x1FddF803FAb50935dc5103e706143323Dc9b0635.sol#296)
		- reserve0 = uint112(balance0) (../../sc/dataset/mainnet/0x1FddF803FAb50935dc5103e706143323Dc9b0635.sol#186)
	UniswapV2Pair.reserve0 (../../sc/dataset/mainnet/0x1FddF803FAb50935dc5103e706143323Dc9b0635.sol#126) can be used in cross function reentrancies:
	- UniswapV2Pair._update(uint256,uint256,uint112,uint112) (../../sc/dataset/mainnet/0x1FddF803FAb50935dc5103e706143323Dc9b0635.sol#177-190)
	- UniswapV2Pair.burn(address) (../../sc/dataset/mainnet/0x1FddF803FAb50935dc5103e706143323Dc9b0635.sol#245-267)
	- UniswapV2Pair.getReserves() (../../sc/dataset/mainnet/0x1FddF803FAb50935dc5103e706143323Dc9b0635.sol#142-146)
	- UniswapV2Pair.mint(address) (../../sc/dataset/mainnet/0x1FddF803FAb50935dc5103e706143323Dc9b0635.sol#214-242)
	- UniswapV2Pair.skim(address) (../../sc/dataset/mainnet/0x1FddF803FAb50935dc5103e706143323Dc9b0635.sol#301-306)
	- UniswapV2Pair.sync() (../../sc/dataset/mainnet/0x1FddF803FAb50935dc5103e706143323Dc9b0635.sol#309-311)
	- _update(balance0,balance1,_reserve0,_reserve1) (../../sc/dataset/mainnet/0x1FddF803FAb50935dc5103e706143323Dc9b0635.sol#296)
		- reserve1 = uint112(balance1) (../../sc/dataset/mainnet/0x1FddF803FAb50935dc5103e706143323Dc9b0635.sol#187)
	UniswapV2Pair.reserve1 (../../sc/dataset/mainnet/0x1FddF803FAb50935dc5103e706143323Dc9b0635.sol#127) can be used in cross function reentrancies:
	- UniswapV2Pair._update(uint256,uint256,uint112,uint112) (../../sc/dataset/mainnet/0x1FddF803FAb50935dc5103e706143323Dc9b0635.sol#177-190)
	- UniswapV2Pair.burn(address) (../../sc/dataset/mainnet/0x1FddF803FAb50935dc5103e706143323Dc9b0635.sol#245-267)
	- UniswapV2Pair.getReserves() (../../sc/dataset/mainnet/0x1FddF803FAb50935dc5103e706143323Dc9b0635.sol#142-146)
	- UniswapV2Pair.mint(address) (../../sc/dataset/mainnet/0x1FddF803FAb50935dc5103e706143323Dc9b0635.sol#214-242)
	- UniswapV2Pair.skim(address) (../../sc/dataset/mainnet/0x1FddF803FAb50935dc5103e706143323Dc9b0635.sol#301-306)
	- UniswapV2Pair.sync() (../../sc/dataset/mainnet/0x1FddF803FAb50935dc5103e706143323Dc9b0635.sol#309-311)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1
INFO:Detectors:
UniswapV2Pair.initialize(address,address)._token0 (../../sc/dataset/mainnet/0x1FddF803FAb50935dc5103e706143323Dc9b0635.sol#170) lacks a zero-check on :
		- token0 = _token0 (../../sc/dataset/mainnet/0x1FddF803FAb50935dc5103e706143323Dc9b0635.sol#172)
UniswapV2Pair.initialize(address,address)._token1 (../../sc/dataset/mainnet/0x1FddF803FAb50935dc5103e706143323Dc9b0635.sol#170) lacks a zero-check on :
		- token1 = _token1 (../../sc/dataset/mainnet/0x1FddF803FAb50935dc5103e706143323Dc9b0635.sol#173)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation
INFO:Detectors:
Reentrancy in UniswapV2Pair.burn(address) (../../sc/dataset/mainnet/0x1FddF803FAb50935dc5103e706143323Dc9b0635.sol#245-267):
	External calls:
	- _safeTransfer(_token0,to,amount0) (../../sc/dataset/mainnet/0x1FddF803FAb50935dc5103e706143323Dc9b0635.sol#259)
		- (success,data) = token.call(abi.encodeWithSelector(SELECTOR,to,value)) (../../sc/dataset/mainnet/0x1FddF803FAb50935dc5103e706143323Dc9b0635.sol#149)
	- _safeTransfer(_token1,to,amount1) (../../sc/dataset/mainnet/0x1FddF803FAb50935dc5103e706143323Dc9b0635.sol#260)
		- (success,data) = token.call(abi.encodeWithSelector(SELECTOR,to,value)) (../../sc/dataset/mainnet/0x1FddF803FAb50935dc5103e706143323Dc9b0635.sol#149)
	State variables written after the call(s):
	- _update(balance0,balance1,_reserve0,_reserve1) (../../sc/dataset/mainnet/0x1FddF803FAb50935dc5103e706143323Dc9b0635.sol#264)
		- price0CumulativeLast += uint256(UQ112x112.encode(_reserve1).uqdiv(_reserve0)) * timeElapsed (../../sc/dataset/mainnet/0x1FddF803FAb50935dc5103e706143323Dc9b0635.sol#183)
	- _update(balance0,balance1,_reserve0,_reserve1) (../../sc/dataset/mainnet/0x1FddF803FAb50935dc5103e706143323Dc9b0635.sol#264)
		- price1CumulativeLast += uint256(UQ112x112.encode(_reserve0).uqdiv(_reserve1)) * timeElapsed (../../sc/dataset/mainnet/0x1FddF803FAb50935dc5103e706143323Dc9b0635.sol#184)
Reentrancy in UniswapV2Pair.swap(uint256,uint256,address,bytes) (../../sc/dataset/mainnet/0x1FddF803FAb50935dc5103e706143323Dc9b0635.sol#270-298):
	External calls:
	- _safeTransfer(_token0,to,amount0Out) (../../sc/dataset/mainnet/0x1FddF803FAb50935dc5103e706143323Dc9b0635.sol#281)
		- (success,data) = token.call(abi.encodeWithSelector(SELECTOR,to,value)) (../../sc/dataset/mainnet/0x1FddF803FAb50935dc5103e706143323Dc9b0635.sol#149)
	- _safeTransfer(_token1,to,amount1Out) (../../sc/dataset/mainnet/0x1FddF803FAb50935dc5103e706143323Dc9b0635.sol#282)
		- (success,data) = token.call(abi.encodeWithSelector(SELECTOR,to,value)) (../../sc/dataset/mainnet/0x1FddF803FAb50935dc5103e706143323Dc9b0635.sol#149)
	- IUniswapV2Callee(to).uniswapV2Call(msg.sender,amount0Out,amount1Out,data) (../../sc/dataset/mainnet/0x1FddF803FAb50935dc5103e706143323Dc9b0635.sol#283)
	State variables written after the call(s):
	- _update(balance0,balance1,_reserve0,_reserve1) (../../sc/dataset/mainnet/0x1FddF803FAb50935dc5103e706143323Dc9b0635.sol#296)
		- price0CumulativeLast += uint256(UQ112x112.encode(_reserve1).uqdiv(_reserve0)) * timeElapsed (../../sc/dataset/mainnet/0x1FddF803FAb50935dc5103e706143323Dc9b0635.sol#183)
	- _update(balance0,balance1,_reserve0,_reserve1) (../../sc/dataset/mainnet/0x1FddF803FAb50935dc5103e706143323Dc9b0635.sol#296)
		- price1CumulativeLast += uint256(UQ112x112.encode(_reserve0).uqdiv(_reserve1)) * timeElapsed (../../sc/dataset/mainnet/0x1FddF803FAb50935dc5103e706143323Dc9b0635.sol#184)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2
INFO:Detectors:
Reentrancy in UniswapV2Pair.burn(address) (../../sc/dataset/mainnet/0x1FddF803FAb50935dc5103e706143323Dc9b0635.sol#245-267):
	External calls:
	- _safeTransfer(_token0,to,amount0) (../../sc/dataset/mainnet/0x1FddF803FAb50935dc5103e706143323Dc9b0635.sol#259)
		- (success,data) = token.call(abi.encodeWithSelector(SELECTOR,to,value)) (../../sc/dataset/mainnet/0x1FddF803FAb50935dc5103e706143323Dc9b0635.sol#149)
	- _safeTransfer(_token1,to,amount1) (../../sc/dataset/mainnet/0x1FddF803FAb50935dc5103e706143323Dc9b0635.sol#260)
		- (success,data) = token.call(abi.encodeWithSelector(SELECTOR,to,value)) (../../sc/dataset/mainnet/0x1FddF803FAb50935dc5103e706143323Dc9b0635.sol#149)
	Event emitted after the call(s):
	- Burn(msg.sender,amount0,amount1,to) (../../sc/dataset/mainnet/0x1FddF803FAb50935dc5103e706143323Dc9b0635.sol#266)
	- Sync(reserve0,reserve1) (../../sc/dataset/mainnet/0x1FddF803FAb50935dc5103e706143323Dc9b0635.sol#189)
		- _update(balance0,balance1,_reserve0,_reserve1) (../../sc/dataset/mainnet/0x1FddF803FAb50935dc5103e706143323Dc9b0635.sol#264)
Reentrancy in UniswapV2Pair.swap(uint256,uint256,address,bytes) (../../sc/dataset/mainnet/0x1FddF803FAb50935dc5103e706143323Dc9b0635.sol#270-298):
	External calls:
	- _safeTransfer(_token0,to,amount0Out) (../../sc/dataset/mainnet/0x1FddF803FAb50935dc5103e706143323Dc9b0635.sol#281)
		- (success,data) = token.call(abi.encodeWithSelector(SELECTOR,to,value)) (../../sc/dataset/mainnet/0x1FddF803FAb50935dc5103e706143323Dc9b0635.sol#149)
	- _safeTransfer(_token1,to,amount1Out) (../../sc/dataset/mainnet/0x1FddF803FAb50935dc5103e706143323Dc9b0635.sol#282)
		- (success,data) = token.call(abi.encodeWithSelector(SELECTOR,to,value)) (../../sc/dataset/mainnet/0x1FddF803FAb50935dc5103e706143323Dc9b0635.sol#149)
	- IUniswapV2Callee(to).uniswapV2Call(msg.sender,amount0Out,amount1Out,data) (../../sc/dataset/mainnet/0x1FddF803FAb50935dc5103e706143323Dc9b0635.sol#283)
	Event emitted after the call(s):
	- Swap(msg.sender,amount0In,amount1In,amount0Out,amount1Out,to) (../../sc/dataset/mainnet/0x1FddF803FAb50935dc5103e706143323Dc9b0635.sol#297)
	- Sync(reserve0,reserve1) (../../sc/dataset/mainnet/0x1FddF803FAb50935dc5103e706143323Dc9b0635.sol#189)
		- _update(balance0,balance1,_reserve0,_reserve1) (../../sc/dataset/mainnet/0x1FddF803FAb50935dc5103e706143323Dc9b0635.sol#296)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3
INFO:Detectors:
UniswapV2ERC20.permit(address,address,uint256,uint256,uint8,bytes32,bytes32) (../../sc/dataset/mainnet/0x1FddF803FAb50935dc5103e706143323Dc9b0635.sol#85-97) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(deadline >= block.timestamp,SwipeswapV2: EXPIRED) (../../sc/dataset/mainnet/0x1FddF803FAb50935dc5103e706143323Dc9b0635.sol#86)
UniswapV2Pair._update(uint256,uint256,uint112,uint112) (../../sc/dataset/mainnet/0x1FddF803FAb50935dc5103e706143323Dc9b0635.sol#177-190) uses timestamp for comparisons
	Dangerous comparisons:
	- timeElapsed > 0 && _reserve0 != 0 && _reserve1 != 0 (../../sc/dataset/mainnet/0x1FddF803FAb50935dc5103e706143323Dc9b0635.sol#181)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp
INFO:Detectors:
UniswapV2ERC20.constructor() (../../sc/dataset/mainnet/0x1FddF803FAb50935dc5103e706143323Dc9b0635.sol#28-42) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0x1FddF803FAb50935dc5103e706143323Dc9b0635.sol#30-32)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage
INFO:Detectors:
Different versions of Solidity are used:
	- Version used: ['=0.6.12', '>=0.5.0']
	- =0.6.12 (../../sc/dataset/mainnet/0x1FddF803FAb50935dc5103e706143323Dc9b0635.sol#6)
	- =0.6.12 (../../sc/dataset/mainnet/0x1FddF803FAb50935dc5103e706143323Dc9b0635.sol#101)
	- =0.6.12 (../../sc/dataset/mainnet/0x1FddF803FAb50935dc5103e706143323Dc9b0635.sol#316)
	- =0.6.12 (../../sc/dataset/mainnet/0x1FddF803FAb50935dc5103e706143323Dc9b0635.sol#342)
	- =0.6.12 (../../sc/dataset/mainnet/0x1FddF803FAb50935dc5103e706143323Dc9b0635.sol#415)
	- >=0.5.0 (../../sc/dataset/mainnet/0x1FddF803FAb50935dc5103e706143323Dc9b0635.sol#365)
	- >=0.5.0 (../../sc/dataset/mainnet/0x1FddF803FAb50935dc5103e706143323Dc9b0635.sol#385)
	- >=0.5.0 (../../sc/dataset/mainnet/0x1FddF803FAb50935dc5103e706143323Dc9b0635.sol#407)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#different-pragma-directives-are-used
INFO:Detectors:
Pragma version=0.6.12 (../../sc/dataset/mainnet/0x1FddF803FAb50935dc5103e706143323Dc9b0635.sol#6) allows old versions
Pragma version=0.6.12 (../../sc/dataset/mainnet/0x1FddF803FAb50935dc5103e706143323Dc9b0635.sol#101) allows old versions
Pragma version=0.6.12 (../../sc/dataset/mainnet/0x1FddF803FAb50935dc5103e706143323Dc9b0635.sol#316) allows old versions
Pragma version=0.6.12 (../../sc/dataset/mainnet/0x1FddF803FAb50935dc5103e706143323Dc9b0635.sol#342) allows old versions
Pragma version>=0.5.0 (../../sc/dataset/mainnet/0x1FddF803FAb50935dc5103e706143323Dc9b0635.sol#365) allows old versions
Pragma version>=0.5.0 (../../sc/dataset/mainnet/0x1FddF803FAb50935dc5103e706143323Dc9b0635.sol#385) allows old versions
Pragma version>=0.5.0 (../../sc/dataset/mainnet/0x1FddF803FAb50935dc5103e706143323Dc9b0635.sol#407) allows old versions
Pragma version=0.6.12 (../../sc/dataset/mainnet/0x1FddF803FAb50935dc5103e706143323Dc9b0635.sol#415) allows old versions
solc-0.6.12 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity
INFO:Detectors:
Low level call in UniswapV2Pair._safeTransfer(address,address,uint256) (../../sc/dataset/mainnet/0x1FddF803FAb50935dc5103e706143323Dc9b0635.sol#148-151):
	- (success,data) = token.call(abi.encodeWithSelector(SELECTOR,to,value)) (../../sc/dataset/mainnet/0x1FddF803FAb50935dc5103e706143323Dc9b0635.sol#149)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls
INFO:Detectors:
Variable UniswapV2ERC20.DOMAIN_SEPARATOR (../../sc/dataset/mainnet/0x1FddF803FAb50935dc5103e706143323Dc9b0635.sol#20) is not in mixedCase
Parameter UniswapV2Pair.initialize(address,address)._token0 (../../sc/dataset/mainnet/0x1FddF803FAb50935dc5103e706143323Dc9b0635.sol#170) is not in mixedCase
Parameter UniswapV2Pair.initialize(address,address)._token1 (../../sc/dataset/mainnet/0x1FddF803FAb50935dc5103e706143323Dc9b0635.sol#170) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions
INFO:Detectors:
Variable UniswapV2Pair.swap(uint256,uint256,address,bytes).balance0Adjusted (../../sc/dataset/mainnet/0x1FddF803FAb50935dc5103e706143323Dc9b0635.sol#291) is too similar to UniswapV2Pair.swap(uint256,uint256,address,bytes).balance1Adjusted (../../sc/dataset/mainnet/0x1FddF803FAb50935dc5103e706143323Dc9b0635.sol#292)
Variable UniswapV2Pair.price0CumulativeLast (../../sc/dataset/mainnet/0x1FddF803FAb50935dc5103e706143323Dc9b0635.sol#130) is too similar to UniswapV2Pair.price1CumulativeLast (../../sc/dataset/mainnet/0x1FddF803FAb50935dc5103e706143323Dc9b0635.sol#131)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#variable-names-too-similar
INFO:Detectors:
UniswapV2ERC20.DOMAIN_SEPARATOR (../../sc/dataset/mainnet/0x1FddF803FAb50935dc5103e706143323Dc9b0635.sol#20) should be immutable 
UniswapV2Pair.factory (../../sc/dataset/mainnet/0x1FddF803FAb50935dc5103e706143323Dc9b0635.sol#122) should be immutable 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-immutable
INFO:Slither:/bdata2/sc/dataset/mainnet/0x1FddF803FAb50935dc5103e706143323Dc9b0635.sol analyzed (9 contracts with 85 detectors), 32 result(s) found
