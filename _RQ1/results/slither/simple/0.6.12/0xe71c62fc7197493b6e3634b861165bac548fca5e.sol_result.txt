INFO:Detectors:
DogenMasterDog.safeTokenTransfer(address,uint256) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1531-1538) ignores return value by dogenToken.transfer(_to,rewardBal) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1534)
DogenMasterDog.safeTokenTransfer(address,uint256) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1531-1538) ignores return value by dogenToken.transfer(_to,_amount) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1536)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unchecked-transfer
INFO:Detectors:
DogenMasterDog.pendingRewards(uint256,address) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1449-1460) performs a multiplication on the result of a division:
	- reward = multiplier.mul(rewardPerBlock).mul(pool.allocPoint).div(totalAllocPoint) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1456)
	- accRewardPerShare = accRewardPerShare.add(reward.mul(1e12).div(lpSupply)) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1457)
DogenMasterDog.updatePool(uint256) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1471-1489) performs a multiplication on the result of a division:
	- dogenToken.mint(devAddr,reward.div(200).mul(7)) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1483)
DogenMasterDog.updatePool(uint256) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1471-1489) performs a multiplication on the result of a division:
	- dogenToken.mint(founderAddr,reward.div(200).mul(7)) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1484)
DogenMasterDog.updatePool(uint256) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1471-1489) performs a multiplication on the result of a division:
	- dogenToken.mint(communityAddr,reward.div(25).mul(2)) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1485)
DogenMasterDog.updatePool(uint256) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1471-1489) performs a multiplication on the result of a division:
	- reward = multiplier.mul(rewardPerBlock).mul(pool.allocPoint).div(totalAllocPoint) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1482)
	- pool.accRewardPerShare = pool.accRewardPerShare.add(reward.mul(1e12).div(lpSupply)) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1487)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#divide-before-multiply
INFO:Detectors:
DogenToken._writeCheckpoint(address,uint32,uint256,uint256) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1296-1314) uses a dangerous strict equality:
	- nCheckpoints > 0 && checkpoints[delegatee][nCheckpoints - 1].fromBlock == blockNumber (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1306)
DogenMasterDog.updatePool(uint256) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1471-1489) uses a dangerous strict equality:
	- lpSupply == 0 (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1477)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dangerous-strict-equalities
INFO:Detectors:
Reentrancy in DogenMasterDog.add(uint256,IERC20,bool) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1412-1424):
	External calls:
	- massUpdatePools() (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1414)
		- dogenToken.mint(devAddr,reward.div(200).mul(7)) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1483)
		- dogenToken.mint(founderAddr,reward.div(200).mul(7)) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1484)
		- dogenToken.mint(communityAddr,reward.div(25).mul(2)) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1485)
		- dogenToken.mint(address(this),reward) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1486)
	State variables written after the call(s):
	- poolInfo.push(PoolInfo(_lpToken,_allocPoint,lastRewardBlock,0)) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1418-1423)
	DogenMasterDog.poolInfo (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1376) can be used in cross function reentrancies:
	- DogenMasterDog.add(uint256,IERC20,bool) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1412-1424)
	- DogenMasterDog.deposit(uint256,uint256) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1492-1504)
	- DogenMasterDog.emergencyWithdraw(uint256) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1521-1528)
	- DogenMasterDog.massUpdatePools() (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1463-1468)
	- DogenMasterDog.pendingRewards(uint256,address) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1449-1460)
	- DogenMasterDog.poolInfo (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1376)
	- DogenMasterDog.poolLength() (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1406-1408)
	- DogenMasterDog.set(uint256,uint256,bool) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1427-1433)
	- DogenMasterDog.updatePool(uint256) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1471-1489)
	- DogenMasterDog.withdraw(uint256,uint256) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1507-1518)
	- totalAllocPoint = totalAllocPoint.add(_allocPoint) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1417)
	DogenMasterDog.totalAllocPoint (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1380) can be used in cross function reentrancies:
	- DogenMasterDog.add(uint256,IERC20,bool) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1412-1424)
	- DogenMasterDog.pendingRewards(uint256,address) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1449-1460)
	- DogenMasterDog.set(uint256,uint256,bool) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1427-1433)
	- DogenMasterDog.totalAllocPoint (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1380)
	- DogenMasterDog.updatePool(uint256) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1471-1489)
Reentrancy in DogenMasterDog.deposit(uint256,uint256) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1492-1504):
	External calls:
	- updatePool(_pid) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1495)
		- dogenToken.mint(devAddr,reward.div(200).mul(7)) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1483)
		- dogenToken.mint(founderAddr,reward.div(200).mul(7)) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1484)
		- dogenToken.mint(communityAddr,reward.div(25).mul(2)) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1485)
		- dogenToken.mint(address(this),reward) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1486)
	- safeTokenTransfer(msg.sender,pending) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1498)
		- dogenToken.transfer(_to,rewardBal) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1534)
		- dogenToken.transfer(_to,_amount) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1536)
	- pool.lpToken.safeTransferFrom(address(msg.sender),address(this),_amount) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1500)
	State variables written after the call(s):
	- user.amount = user.amount.add(_amount) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1501)
	DogenMasterDog.userInfo (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1378) can be used in cross function reentrancies:
	- DogenMasterDog.deposit(uint256,uint256) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1492-1504)
	- DogenMasterDog.emergencyWithdraw(uint256) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1521-1528)
	- DogenMasterDog.pendingRewards(uint256,address) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1449-1460)
	- DogenMasterDog.userInfo (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1378)
	- DogenMasterDog.withdraw(uint256,uint256) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1507-1518)
	- user.rewardDebt = user.amount.mul(pool.accRewardPerShare).div(1e12) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1502)
	DogenMasterDog.userInfo (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1378) can be used in cross function reentrancies:
	- DogenMasterDog.deposit(uint256,uint256) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1492-1504)
	- DogenMasterDog.emergencyWithdraw(uint256) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1521-1528)
	- DogenMasterDog.pendingRewards(uint256,address) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1449-1460)
	- DogenMasterDog.userInfo (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1378)
	- DogenMasterDog.withdraw(uint256,uint256) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1507-1518)
Reentrancy in DogenMasterDog.emergencyWithdraw(uint256) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1521-1528):
	External calls:
	- pool.lpToken.safeTransfer(address(msg.sender),user.amount) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1524)
	State variables written after the call(s):
	- user.amount = 0 (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1526)
	DogenMasterDog.userInfo (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1378) can be used in cross function reentrancies:
	- DogenMasterDog.deposit(uint256,uint256) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1492-1504)
	- DogenMasterDog.emergencyWithdraw(uint256) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1521-1528)
	- DogenMasterDog.pendingRewards(uint256,address) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1449-1460)
	- DogenMasterDog.userInfo (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1378)
	- DogenMasterDog.withdraw(uint256,uint256) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1507-1518)
	- user.rewardDebt = 0 (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1527)
	DogenMasterDog.userInfo (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1378) can be used in cross function reentrancies:
	- DogenMasterDog.deposit(uint256,uint256) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1492-1504)
	- DogenMasterDog.emergencyWithdraw(uint256) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1521-1528)
	- DogenMasterDog.pendingRewards(uint256,address) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1449-1460)
	- DogenMasterDog.userInfo (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1378)
	- DogenMasterDog.withdraw(uint256,uint256) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1507-1518)
Reentrancy in DogenMasterDog.set(uint256,uint256,bool) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1427-1433):
	External calls:
	- massUpdatePools() (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1429)
		- dogenToken.mint(devAddr,reward.div(200).mul(7)) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1483)
		- dogenToken.mint(founderAddr,reward.div(200).mul(7)) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1484)
		- dogenToken.mint(communityAddr,reward.div(25).mul(2)) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1485)
		- dogenToken.mint(address(this),reward) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1486)
	State variables written after the call(s):
	- poolInfo[_pid].allocPoint = _allocPoint (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1432)
	DogenMasterDog.poolInfo (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1376) can be used in cross function reentrancies:
	- DogenMasterDog.add(uint256,IERC20,bool) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1412-1424)
	- DogenMasterDog.deposit(uint256,uint256) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1492-1504)
	- DogenMasterDog.emergencyWithdraw(uint256) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1521-1528)
	- DogenMasterDog.massUpdatePools() (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1463-1468)
	- DogenMasterDog.pendingRewards(uint256,address) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1449-1460)
	- DogenMasterDog.poolInfo (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1376)
	- DogenMasterDog.poolLength() (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1406-1408)
	- DogenMasterDog.set(uint256,uint256,bool) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1427-1433)
	- DogenMasterDog.updatePool(uint256) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1471-1489)
	- DogenMasterDog.withdraw(uint256,uint256) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1507-1518)
	- totalAllocPoint = totalAllocPoint.sub(poolInfo[_pid].allocPoint).add(_allocPoint) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1431)
	DogenMasterDog.totalAllocPoint (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1380) can be used in cross function reentrancies:
	- DogenMasterDog.add(uint256,IERC20,bool) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1412-1424)
	- DogenMasterDog.pendingRewards(uint256,address) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1449-1460)
	- DogenMasterDog.set(uint256,uint256,bool) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1427-1433)
	- DogenMasterDog.totalAllocPoint (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1380)
	- DogenMasterDog.updatePool(uint256) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1471-1489)
Reentrancy in DogenMasterDog.updatePool(uint256) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1471-1489):
	External calls:
	- dogenToken.mint(devAddr,reward.div(200).mul(7)) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1483)
	- dogenToken.mint(founderAddr,reward.div(200).mul(7)) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1484)
	- dogenToken.mint(communityAddr,reward.div(25).mul(2)) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1485)
	- dogenToken.mint(address(this),reward) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1486)
	State variables written after the call(s):
	- pool.accRewardPerShare = pool.accRewardPerShare.add(reward.mul(1e12).div(lpSupply)) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1487)
	DogenMasterDog.poolInfo (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1376) can be used in cross function reentrancies:
	- DogenMasterDog.add(uint256,IERC20,bool) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1412-1424)
	- DogenMasterDog.deposit(uint256,uint256) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1492-1504)
	- DogenMasterDog.emergencyWithdraw(uint256) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1521-1528)
	- DogenMasterDog.massUpdatePools() (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1463-1468)
	- DogenMasterDog.pendingRewards(uint256,address) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1449-1460)
	- DogenMasterDog.poolInfo (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1376)
	- DogenMasterDog.poolLength() (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1406-1408)
	- DogenMasterDog.set(uint256,uint256,bool) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1427-1433)
	- DogenMasterDog.updatePool(uint256) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1471-1489)
	- DogenMasterDog.withdraw(uint256,uint256) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1507-1518)
	- pool.lastRewardBlock = block.number (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1488)
	DogenMasterDog.poolInfo (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1376) can be used in cross function reentrancies:
	- DogenMasterDog.add(uint256,IERC20,bool) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1412-1424)
	- DogenMasterDog.deposit(uint256,uint256) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1492-1504)
	- DogenMasterDog.emergencyWithdraw(uint256) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1521-1528)
	- DogenMasterDog.massUpdatePools() (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1463-1468)
	- DogenMasterDog.pendingRewards(uint256,address) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1449-1460)
	- DogenMasterDog.poolInfo (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1376)
	- DogenMasterDog.poolLength() (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1406-1408)
	- DogenMasterDog.set(uint256,uint256,bool) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1427-1433)
	- DogenMasterDog.updatePool(uint256) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1471-1489)
	- DogenMasterDog.withdraw(uint256,uint256) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1507-1518)
Reentrancy in DogenMasterDog.withdraw(uint256,uint256) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1507-1518):
	External calls:
	- updatePool(_pid) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1511)
		- dogenToken.mint(devAddr,reward.div(200).mul(7)) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1483)
		- dogenToken.mint(founderAddr,reward.div(200).mul(7)) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1484)
		- dogenToken.mint(communityAddr,reward.div(25).mul(2)) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1485)
		- dogenToken.mint(address(this),reward) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1486)
	- safeTokenTransfer(msg.sender,pending) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1513)
		- dogenToken.transfer(_to,rewardBal) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1534)
		- dogenToken.transfer(_to,_amount) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1536)
	State variables written after the call(s):
	- user.amount = user.amount.sub(_amount) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1514)
	DogenMasterDog.userInfo (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1378) can be used in cross function reentrancies:
	- DogenMasterDog.deposit(uint256,uint256) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1492-1504)
	- DogenMasterDog.emergencyWithdraw(uint256) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1521-1528)
	- DogenMasterDog.pendingRewards(uint256,address) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1449-1460)
	- DogenMasterDog.userInfo (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1378)
	- DogenMasterDog.withdraw(uint256,uint256) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1507-1518)
	- user.rewardDebt = user.amount.mul(pool.accRewardPerShare).div(1e12) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1515)
	DogenMasterDog.userInfo (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1378) can be used in cross function reentrancies:
	- DogenMasterDog.deposit(uint256,uint256) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1492-1504)
	- DogenMasterDog.emergencyWithdraw(uint256) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1521-1528)
	- DogenMasterDog.pendingRewards(uint256,address) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1449-1460)
	- DogenMasterDog.userInfo (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1378)
	- DogenMasterDog.withdraw(uint256,uint256) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1507-1518)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1
INFO:Detectors:
DogenToken.capUpdate(uint256) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#947-949) should emit an event for: 
	- _cap = _newCap (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#948) 
DogenToken.lockFromUpdate(uint256) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#952-954) should emit an event for: 
	- lockFromBlock = _newLockFrom (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#953) 
DogenToken.lockToUpdate(uint256) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#957-959) should emit an event for: 
	- lockToBlock = _newLockTo (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#958) 
DogenMasterDog.add(uint256,IERC20,bool) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1412-1424) should emit an event for: 
	- totalAllocPoint = totalAllocPoint.add(_allocPoint) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1417) 
DogenMasterDog.set(uint256,uint256,bool) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1427-1433) should emit an event for: 
	- totalAllocPoint = totalAllocPoint.sub(poolInfo[_pid].allocPoint).add(_allocPoint) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1431) 
DogenMasterDog.updateRewardPerBlock(uint256) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1559-1563) should emit an event for: 
	- rewardPerBlock = _rewardPerBlock (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1561) 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-arithmetic
INFO:Detectors:
DogenMasterDog.constructor(DogenToken,address,address,address,uint256,uint256,uint256)._devAddr (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1390) lacks a zero-check on :
		- devAddr = _devAddr (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1398)
DogenMasterDog.constructor(DogenToken,address,address,address,uint256,uint256,uint256)._founderAddr (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1391) lacks a zero-check on :
		- founderAddr = _founderAddr (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1399)
DogenMasterDog.constructor(DogenToken,address,address,address,uint256,uint256,uint256)._communityAddr (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1392) lacks a zero-check on :
		- communityAddr = _communityAddr (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1400)
DogenMasterDog.dev(address)._devAddr (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1541) lacks a zero-check on :
		- devAddr = _devAddr (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1543)
DogenMasterDog.founder(address)._founderAddr (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1547) lacks a zero-check on :
		- founderAddr = _founderAddr (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1549)
DogenMasterDog.community(address)._communityAddr (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1553) lacks a zero-check on :
		- communityAddr = _communityAddr (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1555)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation
INFO:Detectors:
DogenMasterDog.updatePool(uint256) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1471-1489) has external calls inside a loop: lpSupply = pool.lpToken.balanceOf(address(this)) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1476)
DogenMasterDog.updatePool(uint256) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1471-1489) has external calls inside a loop: dogenToken.mint(devAddr,reward.div(200).mul(7)) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1483)
DogenMasterDog.updatePool(uint256) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1471-1489) has external calls inside a loop: dogenToken.mint(founderAddr,reward.div(200).mul(7)) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1484)
DogenMasterDog.updatePool(uint256) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1471-1489) has external calls inside a loop: dogenToken.mint(communityAddr,reward.div(25).mul(2)) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1485)
DogenMasterDog.updatePool(uint256) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1471-1489) has external calls inside a loop: dogenToken.mint(address(this),reward) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1486)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation/#calls-inside-a-loop
INFO:Detectors:
Reentrancy in DogenMasterDog.deposit(uint256,uint256) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1492-1504):
	External calls:
	- updatePool(_pid) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1495)
		- dogenToken.mint(devAddr,reward.div(200).mul(7)) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1483)
		- dogenToken.mint(founderAddr,reward.div(200).mul(7)) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1484)
		- dogenToken.mint(communityAddr,reward.div(25).mul(2)) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1485)
		- dogenToken.mint(address(this),reward) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1486)
	- safeTokenTransfer(msg.sender,pending) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1498)
		- dogenToken.transfer(_to,rewardBal) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1534)
		- dogenToken.transfer(_to,_amount) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1536)
	- pool.lpToken.safeTransferFrom(address(msg.sender),address(this),_amount) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1500)
	Event emitted after the call(s):
	- Deposit(msg.sender,_pid,_amount) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1503)
Reentrancy in DogenMasterDog.emergencyWithdraw(uint256) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1521-1528):
	External calls:
	- pool.lpToken.safeTransfer(address(msg.sender),user.amount) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1524)
	Event emitted after the call(s):
	- EmergencyWithdraw(msg.sender,_pid,user.amount) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1525)
Reentrancy in DogenMasterDog.withdraw(uint256,uint256) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1507-1518):
	External calls:
	- updatePool(_pid) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1511)
		- dogenToken.mint(devAddr,reward.div(200).mul(7)) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1483)
		- dogenToken.mint(founderAddr,reward.div(200).mul(7)) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1484)
		- dogenToken.mint(communityAddr,reward.div(25).mul(2)) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1485)
		- dogenToken.mint(address(this),reward) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1486)
	- safeTokenTransfer(msg.sender,pending) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1513)
		- dogenToken.transfer(_to,rewardBal) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1534)
		- dogenToken.transfer(_to,_amount) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1536)
	- pool.lpToken.safeTransfer(address(msg.sender),_amount) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1516)
	Event emitted after the call(s):
	- Withdraw(msg.sender,_pid,_amount) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1517)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3
INFO:Detectors:
DogenToken.delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1162-1203) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(now <= expiry,DOGEN::delegateBySig: signature expired) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1201)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp
INFO:Detectors:
Address.isContract(address) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#272-281) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#279)
Address._verifyCallResult(bool,bytes,string) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#393-410) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#402-405)
DogenToken.getChainId() (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1321-1325) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1323)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage
INFO:Detectors:
Different versions of Solidity are used:
	- Version used: ['0.6.12', '>=0.6.0<0.8.0', '>=0.6.2<0.8.0', '^0.6.12']
	- 0.6.12 (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#889)
	- 0.6.12 (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#915)
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#11)
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#171)
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#415)
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#490)
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#515)
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#821)
	- >=0.6.2<0.8.0 (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#249)
	- ^0.6.12 (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1330)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#different-pragma-directives-are-used
INFO:Detectors:
Address.functionCall(address,bytes) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#325-327) is never used and should be removed
Address.functionCallWithValue(address,bytes,uint256) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#350-352) is never used and should be removed
Address.functionStaticCall(address,bytes) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#375-377) is never used and should be removed
Address.functionStaticCall(address,bytes,string) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#385-391) is never used and should be removed
Address.sendValue(address,uint256) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#299-305) is never used and should be removed
Context._msgData() (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#507-510) is never used and should be removed
ERC20._burn(address,uint256) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#760-768) is never used and should be removed
ERC20._setupDecimals(uint8) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#798-800) is never used and should be removed
SafeERC20.safeApprove(IERC20,address,uint256) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#448-457) is never used and should be removed
SafeERC20.safeDecreaseAllowance(IERC20,address,uint256) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#464-467) is never used and should be removed
SafeERC20.safeIncreaseAllowance(IERC20,address,uint256) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#459-462) is never used and should be removed
SafeMath.mod(uint256,uint256) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#147-149) is never used and should be removed
SafeMath.mod(uint256,uint256,string) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#163-166) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code
INFO:Detectors:
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#11) is too complex
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#171) is too complex
Pragma version>=0.6.2<0.8.0 (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#249) is too complex
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#415) is too complex
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#490) is too complex
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#515) is too complex
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#821) is too complex
Pragma version0.6.12 (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#889) allows old versions
Pragma version0.6.12 (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#915) allows old versions
Pragma version^0.6.12 (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1330) allows old versions
solc-0.6.12 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity
INFO:Detectors:
Low level call in Address.sendValue(address,uint256) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#299-305):
	- (success) = recipient.call{value: amount}() (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#303)
Low level call in Address.functionCallWithValue(address,bytes,uint256,string) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#360-367):
	- (success,returndata) = target.call{value: value}(data) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#365)
Low level call in Address.functionStaticCall(address,bytes,string) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#385-391):
	- (success,returndata) = target.staticcall(data) (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#389)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls
INFO:Detectors:
Parameter Authorizable.addAuthorized(address)._toAdd (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#901) is not in mixedCase
Parameter Authorizable.removeAuthorized(address)._toRemove (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#905) is not in mixedCase
Parameter DogenToken.capUpdate(uint256)._newCap (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#947) is not in mixedCase
Parameter DogenToken.lockFromUpdate(uint256)._newLockFrom (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#952) is not in mixedCase
Parameter DogenToken.lockToUpdate(uint256)._newLockTo (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#957) is not in mixedCase
Parameter DogenToken.mint(address,uint256)._to (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1012) is not in mixedCase
Parameter DogenToken.mint(address,uint256)._amount (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1012) is not in mixedCase
Parameter DogenToken.manualMint(address,uint256)._to (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1017) is not in mixedCase
Parameter DogenToken.manualMint(address,uint256)._amount (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1017) is not in mixedCase
Parameter DogenToken.totalBalanceOf(address)._holder (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1025) is not in mixedCase
Parameter DogenToken.lockOf(address)._holder (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1029) is not in mixedCase
Parameter DogenToken.lastUnlockBlock(address)._holder (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1033) is not in mixedCase
Parameter DogenToken.lock(address,uint256)._holder (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1037) is not in mixedCase
Parameter DogenToken.lock(address,uint256)._amount (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1037) is not in mixedCase
Parameter DogenToken.canUnlockAmount(address)._holder (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1051) is not in mixedCase
Parameter DogenToken.transferAll(address)._to (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1080) is not in mixedCase
Variable DogenToken._delegates (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1104) is not in mixedCase
Parameter DogenMasterDog.add(uint256,IERC20,bool)._allocPoint (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1412) is not in mixedCase
Parameter DogenMasterDog.add(uint256,IERC20,bool)._lpToken (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1412) is not in mixedCase
Parameter DogenMasterDog.add(uint256,IERC20,bool)._withUpdate (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1412) is not in mixedCase
Parameter DogenMasterDog.set(uint256,uint256,bool)._pid (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1427) is not in mixedCase
Parameter DogenMasterDog.set(uint256,uint256,bool)._allocPoint (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1427) is not in mixedCase
Parameter DogenMasterDog.set(uint256,uint256,bool)._withUpdate (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1427) is not in mixedCase
Parameter DogenMasterDog.getMultiplier(uint256,uint256)._from (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1436) is not in mixedCase
Parameter DogenMasterDog.getMultiplier(uint256,uint256)._to (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1436) is not in mixedCase
Parameter DogenMasterDog.pendingRewards(uint256,address)._pid (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1449) is not in mixedCase
Parameter DogenMasterDog.pendingRewards(uint256,address)._user (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1449) is not in mixedCase
Parameter DogenMasterDog.updatePool(uint256)._pid (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1471) is not in mixedCase
Parameter DogenMasterDog.deposit(uint256,uint256)._pid (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1492) is not in mixedCase
Parameter DogenMasterDog.deposit(uint256,uint256)._amount (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1492) is not in mixedCase
Parameter DogenMasterDog.withdraw(uint256,uint256)._pid (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1507) is not in mixedCase
Parameter DogenMasterDog.withdraw(uint256,uint256)._amount (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1507) is not in mixedCase
Parameter DogenMasterDog.emergencyWithdraw(uint256)._pid (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1521) is not in mixedCase
Parameter DogenMasterDog.safeTokenTransfer(address,uint256)._to (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1531) is not in mixedCase
Parameter DogenMasterDog.safeTokenTransfer(address,uint256)._amount (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1531) is not in mixedCase
Parameter DogenMasterDog.dev(address)._devAddr (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1541) is not in mixedCase
Parameter DogenMasterDog.founder(address)._founderAddr (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1547) is not in mixedCase
Parameter DogenMasterDog.community(address)._communityAddr (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1553) is not in mixedCase
Parameter DogenMasterDog.updateRewardPerBlock(uint256)._rewardPerBlock (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1559) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions
INFO:Detectors:
Redundant expression "this (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#508)" inContext (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#502-511)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#redundant-statements
INFO:Detectors:
DogenToken.slitherConstructorVariables() (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#919-1326) uses literals with too many digits:
	- _cap = 420000000000e18 (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#920)
DogenToken.slitherConstructorVariables() (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#919-1326) uses literals with too many digits:
	- manualMintLimit = 1000000e18 (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#925)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits
INFO:Detectors:
DogenToken.manualMintLimit (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#925) should be constant 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant
INFO:Detectors:
DogenMasterDog.bonusEndBlock (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1369) should be immutable 
DogenMasterDog.dogenToken (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1363) should be immutable 
DogenMasterDog.startBlock (../../sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol#1382) should be immutable 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-immutable
INFO:Slither:/bdata2/sc/dataset/mainnet/0xe71c62fc7197493b6e3634b861165bac548fca5e.sol analyzed (10 contracts with 85 detectors), 113 result(s) found
