Compilation warnings/errors on /bdata2/sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol:
Warning: Contract code size exceeds 24576 bytes (a limit introduced in Spurious Dragon). This contract may not be deployable on mainnet. Consider enabling the optimizer (with a low "runs" value!), turning off revert strings, or using libraries.
    --> /bdata2/sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol:1206:1:
     |
1206 | contract VNS6 is ERC20 {
     | ^ (Relevant source part starts here and spans across multiple lines).


INFO:Detectors:
VNS6.sendETHToWallets(uint256) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1429-1432) sends eth to arbitrary user
	Dangerous calls:
	- marketingWallet.transfer(address(this).balance) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1431)
VNS6.addLiquidity(uint256,uint256) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1679-1694) sends eth to arbitrary user
	Dangerous calls:
	- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,liquidityWallet,block.timestamp) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1685-1692)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#functions-that-send-ether-to-arbitrary-destinations
INFO:Detectors:
Reentrancy in VNS6._transfer(address,address,uint256) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1532-1632):
	External calls:
	- sendETHToWallets(devWalletTokens) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1585)
		- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1669-1675)
	- swapAndLiquify(swapTokens) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1588)
		- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,liquidityWallet,block.timestamp) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1685-1692)
		- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1669-1675)
	- swapAndSendDividends(sellTokens) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1591)
		- (success) = address(dividendTracker).call{value: dividends}() (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1699)
		- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1669-1675)
	External calls sending eth:
	- sendETHToWallets(devWalletTokens) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1585)
		- marketingWallet.transfer(address(this).balance) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1431)
	- swapAndLiquify(swapTokens) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1588)
		- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,liquidityWallet,block.timestamp) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1685-1692)
	- swapAndSendDividends(sellTokens) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1591)
		- (success) = address(dividendTracker).call{value: dividends}() (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1699)
	State variables written after the call(s):
	- super._transfer(from,address(this),fees) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1614)
		- _balances[sender] = _balances[sender].sub(amount,ERC20: transfer amount exceeds balance) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#667)
		- _balances[recipient] = _balances[recipient].add(amount) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#668)
	ERC20._balances (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#468) can be used in cross function reentrancies:
	- ERC20._mint(address,uint256) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#682-690)
	- ERC20._transfer(address,address,uint256) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#657-671)
	- ERC20.balanceOf(address) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#539-541)
	- super._transfer(from,to,amount) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1617)
		- _balances[sender] = _balances[sender].sub(amount,ERC20: transfer amount exceeds balance) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#667)
		- _balances[recipient] = _balances[recipient].add(amount) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#668)
	ERC20._balances (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#468) can be used in cross function reentrancies:
	- ERC20._mint(address,uint256) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#682-690)
	- ERC20._transfer(address,address,uint256) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#657-671)
	- ERC20.balanceOf(address) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#539-541)
	- swapping = false (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1593)
	VNS6.swapping (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1212) can be used in cross function reentrancies:
	- VNS6._transfer(address,address,uint256) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1532-1632)
Reentrancy in DividendPayingToken._withdrawDividendOfUser(address) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1104-1120):
	External calls:
	- (success) = user.call{gas: 3000,value: _withdrawableDividend}() (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1109)
	State variables written after the call(s):
	- withdrawnDividends[user] = withdrawnDividends[user].sub(_withdrawableDividend) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1112)
	DividendPayingToken.withdrawnDividends (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1057) can be used in cross function reentrancies:
	- DividendPayingToken._withdrawDividendOfUser(address) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1104-1120)
	- DividendPayingToken.withdrawableDividendOf(address) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1133-1135)
	- DividendPayingToken.withdrawnDividendOf(address) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1140-1142)
Reentrancy in VNS6DividendTracker.process(uint256) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1865-1910):
	External calls:
	- processAccount(address(account),true) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1891)
		- (success) = user.call{gas: 3000,value: _withdrawableDividend}() (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1109)
	State variables written after the call(s):
	- lastProcessedIndex = _lastProcessedIndex (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1907)
	VNS6DividendTracker.lastProcessedIndex (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1713) can be used in cross function reentrancies:
	- VNS6DividendTracker.getAccount(address) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1776-1819)
	- VNS6DividendTracker.getLastProcessedIndex() (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1762-1764)
	- VNS6DividendTracker.lastProcessedIndex (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1713)
	- VNS6DividendTracker.process(uint256) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1865-1910)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities
INFO:Detectors:
VNS6._transfer(address,address,uint256) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1532-1632) performs a multiplication on the result of a division:
	- fees = amount.mul(totalFees).div(100) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1605)
	- fees = fees.mul(sellFeeIncreaseFactor).div(100) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1609)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#divide-before-multiply
INFO:Detectors:
Reentrancy in VNS6.updateDividendTracker(address) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1337-1352):
	External calls:
	- newDividendTracker.excludeFromDividends(address(newDividendTracker)) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1344)
	- newDividendTracker.excludeFromDividends(address(this)) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1345)
	- newDividendTracker.excludeFromDividends(owner()) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1346)
	- newDividendTracker.excludeFromDividends(address(uniswapV2Router)) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1347)
	State variables written after the call(s):
	- dividendTracker = newDividendTracker (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1351)
	VNS6.dividendTracker (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1217) can be used in cross function reentrancies:
	- VNS6._setAutomatedMarketMakerPair(address,bool) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1418-1427)
	- VNS6._transfer(address,address,uint256) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1532-1632)
	- VNS6.changeMinimumHoldingLimit(uint256) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1393-1395)
	- VNS6.claim() (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1519-1521)
	- VNS6.constructor() (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1288-1331)
	- VNS6.dividendTokenBalanceOf(address) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1484-1486)
	- VNS6.dividendTracker (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1217)
	- VNS6.excludeFromDividends(address) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1380-1382)
	- VNS6.getAccountDividendsInfo(address) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1488-1499)
	- VNS6.getAccountDividendsInfoAtIndex(uint256) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1501-1512)
	- VNS6.getClaimWait() (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1460-1462)
	- VNS6.getLastProcessedIndex() (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1523-1525)
	- VNS6.getNumberOfDividendTokenHolders() (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1527-1529)
	- VNS6.getTotalDividendsDistributed() (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1468-1470)
	- VNS6.isExcludedFromDividends(address) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1476-1478)
	- VNS6.minimumLimitForDividend() (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1464-1466)
	- VNS6.processDividendTracker(uint256) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1514-1517)
	- VNS6.swapAndSendDividends(uint256) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1696-1704)
	- VNS6.updateClaimWait(uint256) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1456-1458)
	- VNS6.updateDividendTracker(address) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1337-1352)
	- VNS6.withdrawableDividendOf(address) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1480-1482)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1
INFO:Detectors:
VNS6._transfer(address,address,uint256).claims (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1625) is a local variable never initialized
VNS6._transfer(address,address,uint256).iterations (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1625) is a local variable never initialized
VNS6._transfer(address,address,uint256).lastProcessedIndex (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1625) is a local variable never initialized
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#uninitialized-local-variables
INFO:Detectors:
VNS6.claim() (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1519-1521) ignores return value by dividendTracker.processAccount(msg.sender,false) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1520)
VNS6._transfer(address,address,uint256) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1532-1632) ignores return value by dividendTracker.process(gas) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1625-1630)
VNS6.addLiquidity(uint256,uint256) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1679-1694) ignores return value by uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,liquidityWallet,block.timestamp) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1685-1692)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return
INFO:Detectors:
ERC20.allowance(address,address).owner (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#562) shadows:
	- Ownable.owner() (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#430-432) (function)
ERC20._approve(address,address,uint256).owner (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#727) shadows:
	- Ownable.owner() (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#430-432) (function)
DividendPayingToken.constructor(string,string)._name (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1061) shadows:
	- ERC20._name (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#475) (state variable)
DividendPayingToken.constructor(string,string)._symbol (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1061) shadows:
	- ERC20._symbol (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#476) (state variable)
DividendPayingToken.dividendOf(address)._owner (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1126) shadows:
	- Ownable._owner (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#414) (state variable)
DividendPayingToken.withdrawableDividendOf(address)._owner (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1133) shadows:
	- Ownable._owner (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#414) (state variable)
DividendPayingToken.withdrawnDividendOf(address)._owner (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1140) shadows:
	- Ownable._owner (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#414) (state variable)
DividendPayingToken.accumulativeDividendOf(address)._owner (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1150) shadows:
	- Ownable._owner (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#414) (state variable)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing
INFO:Detectors:
VNS6.setMaxWalletToken(uint256) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1376-1378) should emit an event for: 
	- maxWalletToken = maxToken * (10 ** 18) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1377) 
VNS6.setSellFactor(uint256) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1384-1386) should emit an event for: 
	- sellFeeIncreaseFactor = newFactor (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1385) 
VNS6.setSwapAtAmount(uint256) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1389-1391) should emit an event for: 
	- swapTokensAtAmount = newAmount * (10 ** 18) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1390) 
VNS6DividendTracker.setMinimumTokenBalanceForDividends(uint256) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1733-1735) should emit an event for: 
	- minimumTokenBalanceForDividends = newMinTokenBalForDividends * (10 ** 18) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1734) 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-arithmetic
INFO:Detectors:
VNS6.changeMarketingWallet(address).newAddress (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1407) lacks a zero-check on :
		- marketingWallet = newAddress (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1408)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation
INFO:Detectors:
DividendPayingToken._withdrawDividendOfUser(address) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1104-1120) has external calls inside a loop: (success) = user.call{gas: 3000,value: _withdrawableDividend}() (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1109)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation/#calls-inside-a-loop
INFO:Detectors:
Reentrancy in VNS6._transfer(address,address,uint256) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1532-1632):
	External calls:
	- sendETHToWallets(devWalletTokens) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1585)
		- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1669-1675)
	- swapAndLiquify(swapTokens) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1588)
		- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,liquidityWallet,block.timestamp) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1685-1692)
		- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1669-1675)
	External calls sending eth:
	- sendETHToWallets(devWalletTokens) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1585)
		- marketingWallet.transfer(address(this).balance) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1431)
	- swapAndLiquify(swapTokens) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1588)
		- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,liquidityWallet,block.timestamp) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1685-1692)
	State variables written after the call(s):
	- swapAndLiquify(swapTokens) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1588)
		- _allowances[owner][spender] = amount (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#734)
Reentrancy in VNS6._transfer(address,address,uint256) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1532-1632):
	External calls:
	- sendETHToWallets(devWalletTokens) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1585)
		- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1669-1675)
	- swapAndLiquify(swapTokens) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1588)
		- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,liquidityWallet,block.timestamp) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1685-1692)
		- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1669-1675)
	- swapAndSendDividends(sellTokens) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1591)
		- (success) = address(dividendTracker).call{value: dividends}() (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1699)
		- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1669-1675)
	External calls sending eth:
	- sendETHToWallets(devWalletTokens) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1585)
		- marketingWallet.transfer(address(this).balance) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1431)
	- swapAndLiquify(swapTokens) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1588)
		- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,liquidityWallet,block.timestamp) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1685-1692)
	- swapAndSendDividends(sellTokens) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1591)
		- (success) = address(dividendTracker).call{value: dividends}() (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1699)
	State variables written after the call(s):
	- swapAndSendDividends(sellTokens) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1591)
		- _allowances[owner][spender] = amount (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#734)
Reentrancy in VNS6DividendTracker.processAccount(address,bool) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1912-1922):
	External calls:
	- amount = _withdrawDividendOfUser(account) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1913)
		- (success) = user.call{gas: 3000,value: _withdrawableDividend}() (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1109)
	State variables written after the call(s):
	- lastClaimTimes[account] = block.timestamp (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1916)
Reentrancy in VNS6.swapAndLiquify(uint256) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1634-1656):
	External calls:
	- swapTokensForEth(half) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1645)
		- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1669-1675)
	- addLiquidity(otherHalf,newBalance) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1652)
		- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,liquidityWallet,block.timestamp) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1685-1692)
	External calls sending eth:
	- addLiquidity(otherHalf,newBalance) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1652)
		- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,liquidityWallet,block.timestamp) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1685-1692)
	State variables written after the call(s):
	- addLiquidity(otherHalf,newBalance) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1652)
		- _allowances[owner][spender] = amount (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#734)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2
INFO:Detectors:
Reentrancy in VNS6._setAutomatedMarketMakerPair(address,bool) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1418-1427):
	External calls:
	- dividendTracker.excludeFromDividends(pair) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1423)
	Event emitted after the call(s):
	- SetAutomatedMarketMakerPair(pair,value) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1426)
Reentrancy in VNS6._transfer(address,address,uint256) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1532-1632):
	External calls:
	- sendETHToWallets(devWalletTokens) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1585)
		- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1669-1675)
	- swapAndLiquify(swapTokens) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1588)
		- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,liquidityWallet,block.timestamp) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1685-1692)
		- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1669-1675)
	External calls sending eth:
	- sendETHToWallets(devWalletTokens) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1585)
		- marketingWallet.transfer(address(this).balance) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1431)
	- swapAndLiquify(swapTokens) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1588)
		- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,liquidityWallet,block.timestamp) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1685-1692)
	Event emitted after the call(s):
	- Approval(owner,spender,amount) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#735)
		- swapAndLiquify(swapTokens) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1588)
	- SwapAndLiquify(half,newBalance,otherHalf) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1654)
		- swapAndLiquify(swapTokens) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1588)
Reentrancy in VNS6._transfer(address,address,uint256) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1532-1632):
	External calls:
	- sendETHToWallets(devWalletTokens) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1585)
		- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1669-1675)
	- swapAndLiquify(swapTokens) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1588)
		- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,liquidityWallet,block.timestamp) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1685-1692)
		- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1669-1675)
	- swapAndSendDividends(sellTokens) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1591)
		- (success) = address(dividendTracker).call{value: dividends}() (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1699)
		- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1669-1675)
	External calls sending eth:
	- sendETHToWallets(devWalletTokens) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1585)
		- marketingWallet.transfer(address(this).balance) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1431)
	- swapAndLiquify(swapTokens) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1588)
		- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,liquidityWallet,block.timestamp) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1685-1692)
	- swapAndSendDividends(sellTokens) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1591)
		- (success) = address(dividendTracker).call{value: dividends}() (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1699)
	Event emitted after the call(s):
	- Approval(owner,spender,amount) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#735)
		- swapAndSendDividends(sellTokens) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1591)
	- SendDividends(tokens,dividends) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1702)
		- swapAndSendDividends(sellTokens) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1591)
	- Transfer(sender,recipient,amount) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#670)
		- super._transfer(from,to,amount) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1617)
	- Transfer(sender,recipient,amount) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#670)
		- super._transfer(from,address(this),fees) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1614)
Reentrancy in VNS6._transfer(address,address,uint256) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1532-1632):
	External calls:
	- sendETHToWallets(devWalletTokens) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1585)
		- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1669-1675)
	- swapAndLiquify(swapTokens) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1588)
		- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,liquidityWallet,block.timestamp) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1685-1692)
		- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1669-1675)
	- swapAndSendDividends(sellTokens) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1591)
		- (success) = address(dividendTracker).call{value: dividends}() (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1699)
		- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1669-1675)
	- dividendTracker.setBalance(address(from),balanceOf(from)) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1619)
	- dividendTracker.setBalance(address(to),balanceOf(to)) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1620)
	- dividendTracker.process(gas) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1625-1630)
	External calls sending eth:
	- sendETHToWallets(devWalletTokens) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1585)
		- marketingWallet.transfer(address(this).balance) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1431)
	- swapAndLiquify(swapTokens) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1588)
		- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,liquidityWallet,block.timestamp) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1685-1692)
	- swapAndSendDividends(sellTokens) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1591)
		- (success) = address(dividendTracker).call{value: dividends}() (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1699)
	Event emitted after the call(s):
	- ProcessedDividendTracker(iterations,claims,lastProcessedIndex,true,gas,tx.origin) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1626)
Reentrancy in VNS6DividendTracker.processAccount(address,bool) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1912-1922):
	External calls:
	- amount = _withdrawDividendOfUser(account) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1913)
		- (success) = user.call{gas: 3000,value: _withdrawableDividend}() (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1109)
	Event emitted after the call(s):
	- Claim(account,amount,automatic) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1917)
Reentrancy in VNS6.processDividendTracker(uint256) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1514-1517):
	External calls:
	- (iterations,claims,lastProcessedIndex) = dividendTracker.process(gas) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1515)
	Event emitted after the call(s):
	- ProcessedDividendTracker(iterations,claims,lastProcessedIndex,false,gas,tx.origin) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1516)
Reentrancy in VNS6.swapAndLiquify(uint256) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1634-1656):
	External calls:
	- swapTokensForEth(half) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1645)
		- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1669-1675)
	- addLiquidity(otherHalf,newBalance) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1652)
		- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,liquidityWallet,block.timestamp) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1685-1692)
	External calls sending eth:
	- addLiquidity(otherHalf,newBalance) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1652)
		- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,liquidityWallet,block.timestamp) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1685-1692)
	Event emitted after the call(s):
	- Approval(owner,spender,amount) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#735)
		- addLiquidity(otherHalf,newBalance) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1652)
	- SwapAndLiquify(half,newBalance,otherHalf) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1654)
Reentrancy in VNS6.swapAndSendDividends(uint256) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1696-1704):
	External calls:
	- swapTokensForEth(tokens) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1697)
		- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1669-1675)
	- (success) = address(dividendTracker).call{value: dividends}() (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1699)
	External calls sending eth:
	- (success) = address(dividendTracker).call{value: dividends}() (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1699)
	Event emitted after the call(s):
	- SendDividends(tokens,dividends) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1702)
Reentrancy in VNS6.updateDividendTracker(address) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1337-1352):
	External calls:
	- newDividendTracker.excludeFromDividends(address(newDividendTracker)) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1344)
	- newDividendTracker.excludeFromDividends(address(this)) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1345)
	- newDividendTracker.excludeFromDividends(owner()) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1346)
	- newDividendTracker.excludeFromDividends(address(uniswapV2Router)) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1347)
	Event emitted after the call(s):
	- UpdateDividendTracker(newAddress,address(dividendTracker)) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1349)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3
INFO:Detectors:
VNS6DividendTracker.getAccount(address) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1776-1819) uses timestamp for comparisons
	Dangerous comparisons:
	- nextClaimTime > block.timestamp (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1816-1818)
VNS6DividendTracker.canAutoClaim(uint256) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1840-1846) uses timestamp for comparisons
	Dangerous comparisons:
	- lastClaimTime > block.timestamp (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1841)
	- block.timestamp.sub(lastClaimTime) >= claimWait (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1845)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp
INFO:Detectors:
VNS6._transfer(address,address,uint256) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1532-1632) compares to a boolean constant:
	-from == uniswapV2Pair && pauseBuy == true && to != owner() (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1566)
VNS6._transfer(address,address,uint256) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1532-1632) compares to a boolean constant:
	-to == uniswapV2Pair && pauseSell == true && from != owner() (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1562)
VNS6._transfer(address,address,uint256) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1532-1632) compares to a boolean constant:
	-blackList[from] == true || blackList[to] == true (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1558)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#boolean-equality
INFO:Detectors:
VNS6._transfer(address,address,uint256) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1532-1632) has a high cyclomatic complexity (16).
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#cyclomatic-complexity
INFO:Detectors:
Context._msgData() (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#17-20) is never used and should be removed
DividendPayingToken._transfer(address,address,uint256) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1160-1166) is never used and should be removed
SafeMath.mod(uint256,uint256) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#366-368) is never used and should be removed
SafeMath.mod(uint256,uint256,string) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#382-385) is never used and should be removed
SafeMathInt.abs(int256) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#225-228) is never used and should be removed
SafeMathInt.div(int256,int256) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#196-202) is never used and should be removed
SafeMathInt.mul(int256,int256) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#184-191) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code
INFO:Detectors:
Pragma version^0.6.2 (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#9) allows old versions
solc-0.6.12 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity
INFO:Detectors:
Low level call in DividendPayingToken._withdrawDividendOfUser(address) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1104-1120):
	- (success) = user.call{gas: 3000,value: _withdrawableDividend}() (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1109)
Low level call in VNS6.swapAndSendDividends(uint256) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1696-1704):
	- (success) = address(dividendTracker).call{value: dividends}() (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1699)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls
INFO:Detectors:
Function IUniswapV2Router01.WETH() (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#761) is not in mixedCase
Function IUniswapV2Pair.DOMAIN_SEPARATOR() (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#929) is not in mixedCase
Function IUniswapV2Pair.PERMIT_TYPEHASH() (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#930) is not in mixedCase
Function IUniswapV2Pair.MINIMUM_LIQUIDITY() (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#947) is not in mixedCase
Parameter DividendPayingToken.dividendOf(address)._owner (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1126) is not in mixedCase
Parameter DividendPayingToken.withdrawableDividendOf(address)._owner (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1133) is not in mixedCase
Parameter DividendPayingToken.withdrawnDividendOf(address)._owner (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1140) is not in mixedCase
Parameter DividendPayingToken.accumulativeDividendOf(address)._owner (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1150) is not in mixedCase
Constant DividendPayingToken.magnitude (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1041) is not in UPPER_CASE_WITH_UNDERSCORES
Variable VNS6.ETHRewardsFee (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1226) is not in mixedCase
Variable VNS6.MarketingWalletFee (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1228) is not in mixedCase
Parameter VNS6DividendTracker.getAccount(address)._account (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1776) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions
INFO:Detectors:
Redundant expression "this (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#18)" inContext (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#12-21)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#redundant-statements
INFO:Detectors:
Reentrancy in VNS6._transfer(address,address,uint256) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1532-1632):
	External calls:
	- sendETHToWallets(devWalletTokens) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1585)
		- marketingWallet.transfer(address(this).balance) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1431)
	External calls sending eth:
	- sendETHToWallets(devWalletTokens) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1585)
		- marketingWallet.transfer(address(this).balance) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1431)
	- swapAndLiquify(swapTokens) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1588)
		- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,liquidityWallet,block.timestamp) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1685-1692)
	State variables written after the call(s):
	- swapAndLiquify(swapTokens) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1588)
		- _allowances[owner][spender] = amount (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#734)
	Event emitted after the call(s):
	- Approval(owner,spender,amount) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#735)
		- swapAndLiquify(swapTokens) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1588)
	- SwapAndLiquify(half,newBalance,otherHalf) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1654)
		- swapAndLiquify(swapTokens) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1588)
Reentrancy in VNS6._transfer(address,address,uint256) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1532-1632):
	External calls:
	- sendETHToWallets(devWalletTokens) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1585)
		- marketingWallet.transfer(address(this).balance) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1431)
	External calls sending eth:
	- sendETHToWallets(devWalletTokens) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1585)
		- marketingWallet.transfer(address(this).balance) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1431)
	- swapAndLiquify(swapTokens) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1588)
		- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,liquidityWallet,block.timestamp) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1685-1692)
	- swapAndSendDividends(sellTokens) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1591)
		- (success) = address(dividendTracker).call{value: dividends}() (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1699)
	State variables written after the call(s):
	- swapAndSendDividends(sellTokens) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1591)
		- _allowances[owner][spender] = amount (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#734)
	- super._transfer(from,address(this),fees) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1614)
		- _balances[sender] = _balances[sender].sub(amount,ERC20: transfer amount exceeds balance) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#667)
		- _balances[recipient] = _balances[recipient].add(amount) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#668)
	- super._transfer(from,to,amount) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1617)
		- _balances[sender] = _balances[sender].sub(amount,ERC20: transfer amount exceeds balance) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#667)
		- _balances[recipient] = _balances[recipient].add(amount) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#668)
	- swapping = false (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1593)
	Event emitted after the call(s):
	- Approval(owner,spender,amount) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#735)
		- swapAndSendDividends(sellTokens) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1591)
	- ProcessedDividendTracker(iterations,claims,lastProcessedIndex,true,gas,tx.origin) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1626)
	- SendDividends(tokens,dividends) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1702)
		- swapAndSendDividends(sellTokens) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1591)
	- Transfer(sender,recipient,amount) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#670)
		- super._transfer(from,address(this),fees) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1614)
	- Transfer(sender,recipient,amount) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#670)
		- super._transfer(from,to,amount) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1617)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-4
INFO:Detectors:
Variable IUniswapV2Router01.addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256).amountADesired (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#766) is too similar to IUniswapV2Router01.addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256).amountBDesired (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#767)
Variable DividendPayingToken._withdrawDividendOfUser(address)._withdrawableDividend (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1105) is too similar to VNS6DividendTracker.getAccount(address).withdrawableDividends (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1781)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#variable-names-too-similar
INFO:Detectors:
VNS6.constructor() (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1288-1331) uses literals with too many digits:
	- _mint(owner(),1000000000000000 * (10 ** 18)) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1330)
VNS6.slitherConstructorVariables() (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1206-1705) uses literals with too many digits:
	- swapTokensAtAmount = 1000000 * (10 ** 18) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1221)
VNS6.slitherConstructorVariables() (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1206-1705) uses literals with too many digits:
	- maxWalletToken = 10000000000000 * (10 ** 18) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1222)
VNS6DividendTracker.constructor() (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1727-1730) uses literals with too many digits:
	- minimumTokenBalanceForDividends = 500000000000 * (10 ** 18) (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#1729)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits
INFO:Detectors:
SafeMathInt.MAX_INT256 (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#179) is never used in SafeMathInt (../../sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol#177-235)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-state-variable
INFO:Slither:/bdata2/sc/dataset/mainnet/0x6D434D34e69D20D33Fe973A015BE474bF4A39ed8.sol analyzed (18 contracts with 85 detectors), 79 result(s) found
