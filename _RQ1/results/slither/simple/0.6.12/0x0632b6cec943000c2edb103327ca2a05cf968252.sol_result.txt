INFO:Detectors:
Reentrancy in Saitama._transfer(address,address,uint256) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#864-947):
	External calls:
	- swapAndLiquify(constractBal) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#884)
		- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#1103-1109)
	External calls sending eth:
	- swapAndLiquify(constractBal) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#884)
		- address(marketingAddress).transfer(marketingFee) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#1083)
		- address(charityWallet).transfer(charityFee) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#1087)
		- address(devWallet).transfer(balanceAfterCharity) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#1088)
	State variables written after the call(s):
	- transferAmount = collectBuyFee(sender,amount,rate) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#891)
		- _reflectionBalance[address(this)] = _reflectionBalance[address(this)].add(marketingFee.mul(rate)) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#964)
		- _reflectionBalance[address(this)] = _reflectionBalance[address(this)].add(marketingFee_scope_0.mul(rate)) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#975)
		- _reflectionBalance[address(this)] = _reflectionBalance[address(this)].add(marketingFee_scope_1.mul(rate)) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#986)
	Saitama._reflectionBalance (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#622) can be used in cross function reentrancies:
	- Saitama._getReflectionRate() (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#1048-1064)
	- Saitama._transfer(address,address,uint256) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#864-947)
	- Saitama.balanceOf(address) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#717-720)
	- Saitama.collectBuyFee(address,uint256,uint256) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#949-996)
	- Saitama.collectSellFee(address,uint256,uint256) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#999-1046)
	- Saitama.constructor() (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#680-699)
	- Saitama.excludeAccount(address) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#824-837)
	- _reflectionBalance[sender] = _reflectionBalance[sender].sub(amount.mul(rate)) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#895)
	Saitama._reflectionBalance (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#622) can be used in cross function reentrancies:
	- Saitama._getReflectionRate() (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#1048-1064)
	- Saitama._transfer(address,address,uint256) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#864-947)
	- Saitama.balanceOf(address) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#717-720)
	- Saitama.collectBuyFee(address,uint256,uint256) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#949-996)
	- Saitama.collectSellFee(address,uint256,uint256) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#999-1046)
	- Saitama.constructor() (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#680-699)
	- Saitama.excludeAccount(address) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#824-837)
	- _reflectionBalance[recipient] = _reflectionBalance[recipient].add(transferAmount.mul(rate)) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#896)
	Saitama._reflectionBalance (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#622) can be used in cross function reentrancies:
	- Saitama._getReflectionRate() (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#1048-1064)
	- Saitama._transfer(address,address,uint256) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#864-947)
	- Saitama.balanceOf(address) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#717-720)
	- Saitama.collectBuyFee(address,uint256,uint256) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#949-996)
	- Saitama.collectSellFee(address,uint256,uint256) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#999-1046)
	- Saitama.constructor() (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#680-699)
	- Saitama.excludeAccount(address) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#824-837)
	- transferAmount = collectSellFee(sender,amount,rate) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#913)
		- _reflectionBalance[address(this)] = _reflectionBalance[address(this)].add(marketingFee.mul(rate)) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#1014)
		- _reflectionBalance[address(this)] = _reflectionBalance[address(this)].add(marketingFee_scope_0.mul(rate)) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#1025)
		- _reflectionBalance[address(this)] = _reflectionBalance[address(this)].add(marketingFee_scope_1.mul(rate)) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#1036)
	Saitama._reflectionBalance (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#622) can be used in cross function reentrancies:
	- Saitama._getReflectionRate() (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#1048-1064)
	- Saitama._transfer(address,address,uint256) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#864-947)
	- Saitama.balanceOf(address) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#717-720)
	- Saitama.collectBuyFee(address,uint256,uint256) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#949-996)
	- Saitama.collectSellFee(address,uint256,uint256) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#999-1046)
	- Saitama.constructor() (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#680-699)
	- Saitama.excludeAccount(address) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#824-837)
	- _reflectionBalance[sender] = _reflectionBalance[sender].sub(amount.mul(rate)) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#917)
	Saitama._reflectionBalance (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#622) can be used in cross function reentrancies:
	- Saitama._getReflectionRate() (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#1048-1064)
	- Saitama._transfer(address,address,uint256) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#864-947)
	- Saitama.balanceOf(address) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#717-720)
	- Saitama.collectBuyFee(address,uint256,uint256) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#949-996)
	- Saitama.collectSellFee(address,uint256,uint256) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#999-1046)
	- Saitama.constructor() (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#680-699)
	- Saitama.excludeAccount(address) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#824-837)
	- _reflectionBalance[recipient] = _reflectionBalance[recipient].add(transferAmount.mul(rate)) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#918)
	Saitama._reflectionBalance (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#622) can be used in cross function reentrancies:
	- Saitama._getReflectionRate() (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#1048-1064)
	- Saitama._transfer(address,address,uint256) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#864-947)
	- Saitama.balanceOf(address) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#717-720)
	- Saitama.collectBuyFee(address,uint256,uint256) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#949-996)
	- Saitama.collectSellFee(address,uint256,uint256) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#999-1046)
	- Saitama.constructor() (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#680-699)
	- Saitama.excludeAccount(address) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#824-837)
	- _reflectionBalance[sender] = _reflectionBalance[sender].sub(amount.mul(rate)) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#934)
	Saitama._reflectionBalance (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#622) can be used in cross function reentrancies:
	- Saitama._getReflectionRate() (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#1048-1064)
	- Saitama._transfer(address,address,uint256) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#864-947)
	- Saitama.balanceOf(address) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#717-720)
	- Saitama.collectBuyFee(address,uint256,uint256) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#949-996)
	- Saitama.collectSellFee(address,uint256,uint256) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#999-1046)
	- Saitama.constructor() (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#680-699)
	- Saitama.excludeAccount(address) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#824-837)
	- _reflectionBalance[recipient] = _reflectionBalance[recipient].add(transferAmount.mul(rate)) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#935)
	Saitama._reflectionBalance (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#622) can be used in cross function reentrancies:
	- Saitama._getReflectionRate() (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#1048-1064)
	- Saitama._transfer(address,address,uint256) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#864-947)
	- Saitama.balanceOf(address) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#717-720)
	- Saitama.collectBuyFee(address,uint256,uint256) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#949-996)
	- Saitama.collectSellFee(address,uint256,uint256) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#999-1046)
	- Saitama.constructor() (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#680-699)
	- Saitama.excludeAccount(address) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#824-837)
	- transferAmount = collectBuyFee(sender,amount,rate) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#891)
		- _reflectionTotal = _reflectionTotal.sub(taxFee.mul(rate)) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#956)
	Saitama._reflectionTotal (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#632) can be used in cross function reentrancies:
	- Saitama._getReflectionRate() (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#1048-1064)
	- Saitama.collectBuyFee(address,uint256,uint256) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#949-996)
	- Saitama.collectSellFee(address,uint256,uint256) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#999-1046)
	- Saitama.constructor() (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#680-699)
	- Saitama.tokenFromReflection(uint256) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#811-822)
	- transferAmount = collectSellFee(sender,amount,rate) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#913)
		- _reflectionTotal = _reflectionTotal.sub(taxFee.mul(rate)) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#1006)
	Saitama._reflectionTotal (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#632) can be used in cross function reentrancies:
	- Saitama._getReflectionRate() (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#1048-1064)
	- Saitama.collectBuyFee(address,uint256,uint256) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#949-996)
	- Saitama.collectSellFee(address,uint256,uint256) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#999-1046)
	- Saitama.constructor() (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#680-699)
	- Saitama.tokenFromReflection(uint256) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#811-822)
	- transferAmount = collectBuyFee(sender,amount,rate) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#891)
		- _tokenBalance[address(this)] = _tokenBalance[address(this)].add(marketingFee) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#966)
		- _tokenBalance[address(this)] = _tokenBalance[address(this)].add(marketingFee_scope_0) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#977)
		- _tokenBalance[address(this)] = _tokenBalance[address(this)].add(marketingFee_scope_1) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#988)
	Saitama._tokenBalance (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#624) can be used in cross function reentrancies:
	- Saitama._getReflectionRate() (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#1048-1064)
	- Saitama._transfer(address,address,uint256) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#864-947)
	- Saitama.balanceOf(address) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#717-720)
	- Saitama.collectBuyFee(address,uint256,uint256) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#949-996)
	- Saitama.collectSellFee(address,uint256,uint256) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#999-1046)
	- Saitama.excludeAccount(address) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#824-837)
	- Saitama.includeAccount(address) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#839-850)
	- _tokenBalance[sender] = _tokenBalance[sender].sub(amount) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#900)
	Saitama._tokenBalance (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#624) can be used in cross function reentrancies:
	- Saitama._getReflectionRate() (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#1048-1064)
	- Saitama._transfer(address,address,uint256) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#864-947)
	- Saitama.balanceOf(address) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#717-720)
	- Saitama.collectBuyFee(address,uint256,uint256) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#949-996)
	- Saitama.collectSellFee(address,uint256,uint256) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#999-1046)
	- Saitama.excludeAccount(address) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#824-837)
	- Saitama.includeAccount(address) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#839-850)
	- _tokenBalance[recipient] = _tokenBalance[recipient].add(transferAmount) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#903)
	Saitama._tokenBalance (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#624) can be used in cross function reentrancies:
	- Saitama._getReflectionRate() (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#1048-1064)
	- Saitama._transfer(address,address,uint256) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#864-947)
	- Saitama.balanceOf(address) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#717-720)
	- Saitama.collectBuyFee(address,uint256,uint256) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#949-996)
	- Saitama.collectSellFee(address,uint256,uint256) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#999-1046)
	- Saitama.excludeAccount(address) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#824-837)
	- Saitama.includeAccount(address) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#839-850)
	- transferAmount = collectSellFee(sender,amount,rate) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#913)
		- _tokenBalance[address(this)] = _tokenBalance[address(this)].add(marketingFee) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#1016)
		- _tokenBalance[address(this)] = _tokenBalance[address(this)].add(marketingFee_scope_0) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#1027)
		- _tokenBalance[address(this)] = _tokenBalance[address(this)].add(marketingFee_scope_1) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#1038)
	Saitama._tokenBalance (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#624) can be used in cross function reentrancies:
	- Saitama._getReflectionRate() (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#1048-1064)
	- Saitama._transfer(address,address,uint256) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#864-947)
	- Saitama.balanceOf(address) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#717-720)
	- Saitama.collectBuyFee(address,uint256,uint256) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#949-996)
	- Saitama.collectSellFee(address,uint256,uint256) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#999-1046)
	- Saitama.excludeAccount(address) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#824-837)
	- Saitama.includeAccount(address) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#839-850)
	- _tokenBalance[sender] = _tokenBalance[sender].sub(amount) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#922)
	Saitama._tokenBalance (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#624) can be used in cross function reentrancies:
	- Saitama._getReflectionRate() (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#1048-1064)
	- Saitama._transfer(address,address,uint256) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#864-947)
	- Saitama.balanceOf(address) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#717-720)
	- Saitama.collectBuyFee(address,uint256,uint256) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#949-996)
	- Saitama.collectSellFee(address,uint256,uint256) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#999-1046)
	- Saitama.excludeAccount(address) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#824-837)
	- Saitama.includeAccount(address) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#839-850)
	- _tokenBalance[recipient] = _tokenBalance[recipient].add(transferAmount) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#925)
	Saitama._tokenBalance (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#624) can be used in cross function reentrancies:
	- Saitama._getReflectionRate() (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#1048-1064)
	- Saitama._transfer(address,address,uint256) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#864-947)
	- Saitama.balanceOf(address) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#717-720)
	- Saitama.collectBuyFee(address,uint256,uint256) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#949-996)
	- Saitama.collectSellFee(address,uint256,uint256) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#999-1046)
	- Saitama.excludeAccount(address) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#824-837)
	- Saitama.includeAccount(address) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#839-850)
	- _tokenBalance[sender] = _tokenBalance[sender].sub(amount) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#939)
	Saitama._tokenBalance (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#624) can be used in cross function reentrancies:
	- Saitama._getReflectionRate() (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#1048-1064)
	- Saitama._transfer(address,address,uint256) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#864-947)
	- Saitama.balanceOf(address) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#717-720)
	- Saitama.collectBuyFee(address,uint256,uint256) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#949-996)
	- Saitama.collectSellFee(address,uint256,uint256) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#999-1046)
	- Saitama.excludeAccount(address) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#824-837)
	- Saitama.includeAccount(address) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#839-850)
	- _tokenBalance[recipient] = _tokenBalance[recipient].add(transferAmount) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#942)
	Saitama._tokenBalance (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#624) can be used in cross function reentrancies:
	- Saitama._getReflectionRate() (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#1048-1064)
	- Saitama._transfer(address,address,uint256) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#864-947)
	- Saitama.balanceOf(address) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#717-720)
	- Saitama.collectBuyFee(address,uint256,uint256) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#949-996)
	- Saitama.collectSellFee(address,uint256,uint256) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#999-1046)
	- Saitama.excludeAccount(address) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#824-837)
	- Saitama.includeAccount(address) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#839-850)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities
INFO:Detectors:
Saitama.collectBuyFee(address,uint256,uint256) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#949-996) performs a multiplication on the result of a division:
	- taxFee = amount.mul(_taxFee).div(10 ** (_feeDecimal + 2)) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#954)
	- _reflectionTotal = _reflectionTotal.sub(taxFee.mul(rate)) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#956)
Saitama.collectBuyFee(address,uint256,uint256) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#949-996) performs a multiplication on the result of a division:
	- marketingFee = amount.mul(_marketingFee).div(10 ** (_feeDecimal + 2)) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#962)
	- _reflectionBalance[address(this)] = _reflectionBalance[address(this)].add(marketingFee.mul(rate)) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#964)
Saitama.collectBuyFee(address,uint256,uint256) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#949-996) performs a multiplication on the result of a division:
	- marketingFee_scope_0 = amount.mul(_devFee).div(10 ** (_feeDecimal + 2)) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#973)
	- _reflectionBalance[address(this)] = _reflectionBalance[address(this)].add(marketingFee_scope_0.mul(rate)) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#975)
Saitama.collectBuyFee(address,uint256,uint256) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#949-996) performs a multiplication on the result of a division:
	- marketingFee_scope_1 = amount.mul(_charityFee).div(10 ** (_feeDecimal + 2)) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#984)
	- _reflectionBalance[address(this)] = _reflectionBalance[address(this)].add(marketingFee_scope_1.mul(rate)) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#986)
Saitama.collectSellFee(address,uint256,uint256) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#999-1046) performs a multiplication on the result of a division:
	- taxFee = amount.mul(_SelltaxFee).div(10 ** (_feeDecimal + 2)) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#1004)
	- _reflectionTotal = _reflectionTotal.sub(taxFee.mul(rate)) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#1006)
Saitama.collectSellFee(address,uint256,uint256) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#999-1046) performs a multiplication on the result of a division:
	- marketingFee = amount.mul(_SellmarketingFee).div(10 ** (_feeDecimal + 2)) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#1012)
	- _reflectionBalance[address(this)] = _reflectionBalance[address(this)].add(marketingFee.mul(rate)) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#1014)
Saitama.collectSellFee(address,uint256,uint256) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#999-1046) performs a multiplication on the result of a division:
	- marketingFee_scope_0 = amount.mul(_SelldevFee).div(10 ** (_feeDecimal + 2)) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#1023)
	- _reflectionBalance[address(this)] = _reflectionBalance[address(this)].add(marketingFee_scope_0.mul(rate)) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#1025)
Saitama.collectSellFee(address,uint256,uint256) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#999-1046) performs a multiplication on the result of a division:
	- marketingFee_scope_1 = amount.mul(_SellcharityFee).div(10 ** (_feeDecimal + 2)) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#1034)
	- _reflectionBalance[address(this)] = _reflectionBalance[address(this)].add(marketingFee_scope_1.mul(rate)) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#1036)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#divide-before-multiply
INFO:Detectors:
Saitama.allowance(address,address).owner (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#732) shadows:
	- Ownable.owner() (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#513-515) (function)
Saitama._approve(address,address,uint256).owner (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#853) shadows:
	- Ownable.owner() (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#513-515) (function)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing
INFO:Detectors:
Saitama.setBuyFee(uint256,uint256,uint256,uint256) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#1129-1134) should emit an event for: 
	- _marketingFee = marketingFee (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#1130) 
	- _charityFee = charityFee (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#1131) 
	- _devFee = devFee (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#1132) 
	- _taxFee = taxFee (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#1133) 
Saitama.setSellFee(uint256,uint256,uint256,uint256) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#1136-1141) should emit an event for: 
	- _SellmarketingFee = marketingFee (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#1137) 
	- _SellcharityFee = charityFee (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#1138) 
	- _SelldevFee = devFee (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#1139) 
	- _SelltaxFee = taxFee (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#1140) 
Saitama.setMaxTxAmount(uint256) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#1158-1160) should emit an event for: 
	- maxTxAmount = amount (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#1159) 
Saitama.setMinTokensBeforeSwap(uint256) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#1162-1164) should emit an event for: 
	- minTokensBeforeSwap = amount (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#1163) 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-arithmetic
INFO:Detectors:
Saitama.setPair(address).pair (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#1112) lacks a zero-check on :
		- uniswapV2Pair = pair (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#1113)
Saitama.setWalletAddress(address,address,address)._marketingAddress (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#1143) lacks a zero-check on :
		- marketingAddress = _marketingAddress (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#1144)
Saitama.setWalletAddress(address,address,address)._devAddress (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#1143) lacks a zero-check on :
		- devWallet = _devAddress (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#1145)
Saitama.setWalletAddress(address,address,address)._charityAddress (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#1143) lacks a zero-check on :
		- charityWallet = _charityAddress (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#1146)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation
INFO:Detectors:
Reentrancy in Saitama._transfer(address,address,uint256) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#864-947):
	External calls:
	- swapAndLiquify(constractBal) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#884)
		- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#1103-1109)
	External calls sending eth:
	- swapAndLiquify(constractBal) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#884)
		- address(marketingAddress).transfer(marketingFee) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#1083)
		- address(charityWallet).transfer(charityFee) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#1087)
		- address(devWallet).transfer(balanceAfterCharity) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#1088)
	State variables written after the call(s):
	- transferAmount = collectBuyFee(sender,amount,rate) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#891)
		- _taxFeeTotal = _taxFeeTotal.add(taxFee) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#957)
	- transferAmount = collectSellFee(sender,amount,rate) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#913)
		- _taxFeeTotal = _taxFeeTotal.add(taxFee) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#1007)
Reentrancy in Saitama.transferFrom(address,address,uint256) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#750-759):
	External calls:
	- _transfer(sender,recipient,amount) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#755)
		- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#1103-1109)
	External calls sending eth:
	- _transfer(sender,recipient,amount) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#755)
		- address(marketingAddress).transfer(marketingFee) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#1083)
		- address(charityWallet).transfer(charityFee) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#1087)
		- address(devWallet).transfer(balanceAfterCharity) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#1088)
	State variables written after the call(s):
	- _approve(sender,_msgSender(),_allowances[sender][_msgSender()].sub(amount,ERC20: transfer amount exceeds allowance)) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#757)
		- _allowances[owner][spender] = amount (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#860)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2
INFO:Detectors:
Reentrancy in Saitama._transfer(address,address,uint256) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#864-947):
	External calls:
	- swapAndLiquify(constractBal) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#884)
		- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#1103-1109)
	External calls sending eth:
	- swapAndLiquify(constractBal) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#884)
		- address(marketingAddress).transfer(marketingFee) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#1083)
		- address(charityWallet).transfer(charityFee) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#1087)
		- address(devWallet).transfer(balanceAfterCharity) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#1088)
	Event emitted after the call(s):
	- Transfer(account,marketingAddress,marketingFee) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#1019)
		- transferAmount = collectSellFee(sender,amount,rate) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#913)
	- Transfer(account,marketingAddress,marketingFee) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#969)
		- transferAmount = collectBuyFee(sender,amount,rate) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#891)
	- Transfer(account,devWallet,marketingFee_scope_0) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#980)
		- transferAmount = collectBuyFee(sender,amount,rate) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#891)
	- Transfer(account,devWallet,marketingFee_scope_0) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#1030)
		- transferAmount = collectSellFee(sender,amount,rate) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#913)
	- Transfer(sender,recipient,transferAmount) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#906)
	- Transfer(account,charityWallet,marketingFee_scope_1) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#1041)
		- transferAmount = collectSellFee(sender,amount,rate) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#913)
	- Transfer(account,charityWallet,marketingFee_scope_1) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#991)
		- transferAmount = collectBuyFee(sender,amount,rate) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#891)
	- Transfer(sender,recipient,transferAmount) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#928)
	- Transfer(sender,recipient,transferAmount) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#945)
Reentrancy in Saitama.transferFrom(address,address,uint256) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#750-759):
	External calls:
	- _transfer(sender,recipient,amount) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#755)
		- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#1103-1109)
	External calls sending eth:
	- _transfer(sender,recipient,amount) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#755)
		- address(marketingAddress).transfer(marketingFee) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#1083)
		- address(charityWallet).transfer(charityFee) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#1087)
		- address(devWallet).transfer(balanceAfterCharity) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#1088)
	Event emitted after the call(s):
	- Approval(owner,spender,amount) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#861)
		- _approve(sender,_msgSender(),_allowances[sender][_msgSender()].sub(amount,ERC20: transfer amount exceeds allowance)) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#757)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3
INFO:Detectors:
Address.isContract(address) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#322-336) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#332-334)
Address._functionCallWithValue(address,bytes,uint256,string) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#451-479) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#471-474)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage
INFO:Detectors:
Saitama._transfer(address,address,uint256) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#864-947) compares to a boolean constant:
	-require(bool,string)(tradingEnable == true,trading is disable) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#873)
Saitama._transfer(address,address,uint256) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#864-947) compares to a boolean constant:
	-require(bool,string)(_blackList[sender] != true,Address is blackListed) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#872)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#boolean-equality
INFO:Detectors:
Saitama.includeAccount(address) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#839-850) has costly operations inside a loop:
	- _excluded.pop() (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#846)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#costly-operations-inside-a-loop
INFO:Detectors:
Address._functionCallWithValue(address,bytes,uint256,string) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#451-479) is never used and should be removed
Address.functionCall(address,bytes) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#386-391) is never used and should be removed
Address.functionCall(address,bytes,string) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#399-405) is never used and should be removed
Address.functionCallWithValue(address,bytes,uint256) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#418-430) is never used and should be removed
Address.functionCallWithValue(address,bytes,uint256,string) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#438-449) is never used and should be removed
Address.isContract(address) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#322-336) is never used and should be removed
Address.sendValue(address,uint256) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#354-366) is never used and should be removed
Context._msgData() (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#34-37) is never used and should be removed
SafeMath.ceil(uint256,uint256) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#294-298) is never used and should be removed
SafeMath.mod(uint256,uint256) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#269-271) is never used and should be removed
SafeMath.mod(uint256,uint256,string) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#285-292) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code
INFO:Detectors:
Saitama._reflectionTotal (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#632) is set pre-construction with a non-constant function or state variable:
	- (MAX - (MAX % _tokenTotal))
Saitama.maxTxAmount (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#666) is set pre-construction with a non-constant function or state variable:
	- _tokenTotal
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#function-initializing-state
INFO:Detectors:
Pragma version^0.6.0 (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#17) allows old versions
solc-0.6.12 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity
INFO:Detectors:
Low level call in Address.sendValue(address,uint256) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#354-366):
	- (success) = recipient.call{value: amount}() (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#361)
Low level call in Address._functionCallWithValue(address,bytes,uint256,string) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#451-479):
	- (success,returndata) = target.call{value: weiValue}(data) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#460-462)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls
INFO:Detectors:
Function IUniswapV2Router01.WETH() (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#562) is not in mixedCase
Parameter Saitama.setWalletAddress(address,address,address)._marketingAddress (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#1143) is not in mixedCase
Parameter Saitama.setWalletAddress(address,address,address)._devAddress (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#1143) is not in mixedCase
Parameter Saitama.setWalletAddress(address,address,address)._charityAddress (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#1143) is not in mixedCase
Variable Saitama._reflectionBalance (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#622) is not in mixedCase
Variable Saitama._balanceLimit (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#623) is not in mixedCase
Variable Saitama._tokenBalance (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#624) is not in mixedCase
Variable Saitama._blackList (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#626) is not in mixedCase
Variable Saitama._allowances (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#627) is not in mixedCase
Variable Saitama._tokenTotal (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#631) is not in mixedCase
Variable Saitama._reflectionTotal (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#632) is not in mixedCase
Variable Saitama._isExcluded (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#635) is not in mixedCase
Variable Saitama._excluded (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#636) is not in mixedCase
Variable Saitama._feeDecimal (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#638) is not in mixedCase
Variable Saitama._taxFee (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#639) is not in mixedCase
Variable Saitama._marketingFee (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#640) is not in mixedCase
Variable Saitama._charityFee (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#641) is not in mixedCase
Variable Saitama._devFee (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#642) is not in mixedCase
Variable Saitama._SelltaxFee (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#644) is not in mixedCase
Variable Saitama._SellmarketingFee (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#645) is not in mixedCase
Variable Saitama._SellcharityFee (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#646) is not in mixedCase
Variable Saitama._SelldevFee (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#647) is not in mixedCase
Variable Saitama.DEAD (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#654) is not in mixedCase
Variable Saitama._taxFeeTotal (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#657) is not in mixedCase
Variable Saitama._burnFeeTotal (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#658) is not in mixedCase
Variable Saitama._liquidityFeeTotal (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#659) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions
INFO:Detectors:
Redundant expression "this (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#35)" inContext (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#29-38)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#redundant-statements
INFO:Detectors:
Reentrancy in Saitama._transfer(address,address,uint256) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#864-947):
	External calls:
	- swapAndLiquify(constractBal) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#884)
		- address(marketingAddress).transfer(marketingFee) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#1083)
		- address(charityWallet).transfer(charityFee) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#1087)
		- address(devWallet).transfer(balanceAfterCharity) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#1088)
	State variables written after the call(s):
	- transferAmount = collectBuyFee(sender,amount,rate) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#891)
		- _reflectionBalance[address(this)] = _reflectionBalance[address(this)].add(marketingFee.mul(rate)) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#964)
		- _reflectionBalance[address(this)] = _reflectionBalance[address(this)].add(marketingFee_scope_0.mul(rate)) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#975)
		- _reflectionBalance[address(this)] = _reflectionBalance[address(this)].add(marketingFee_scope_1.mul(rate)) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#986)
	- _reflectionBalance[sender] = _reflectionBalance[sender].sub(amount.mul(rate)) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#895)
	- _reflectionBalance[recipient] = _reflectionBalance[recipient].add(transferAmount.mul(rate)) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#896)
	- transferAmount = collectSellFee(sender,amount,rate) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#913)
		- _reflectionBalance[address(this)] = _reflectionBalance[address(this)].add(marketingFee.mul(rate)) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#1014)
		- _reflectionBalance[address(this)] = _reflectionBalance[address(this)].add(marketingFee_scope_0.mul(rate)) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#1025)
		- _reflectionBalance[address(this)] = _reflectionBalance[address(this)].add(marketingFee_scope_1.mul(rate)) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#1036)
	- _reflectionBalance[sender] = _reflectionBalance[sender].sub(amount.mul(rate)) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#917)
	- _reflectionBalance[recipient] = _reflectionBalance[recipient].add(transferAmount.mul(rate)) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#918)
	- _reflectionBalance[sender] = _reflectionBalance[sender].sub(amount.mul(rate)) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#934)
	- _reflectionBalance[recipient] = _reflectionBalance[recipient].add(transferAmount.mul(rate)) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#935)
	- transferAmount = collectBuyFee(sender,amount,rate) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#891)
		- _reflectionTotal = _reflectionTotal.sub(taxFee.mul(rate)) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#956)
	- transferAmount = collectSellFee(sender,amount,rate) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#913)
		- _reflectionTotal = _reflectionTotal.sub(taxFee.mul(rate)) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#1006)
	- transferAmount = collectBuyFee(sender,amount,rate) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#891)
		- _taxFeeTotal = _taxFeeTotal.add(taxFee) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#957)
	- transferAmount = collectSellFee(sender,amount,rate) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#913)
		- _taxFeeTotal = _taxFeeTotal.add(taxFee) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#1007)
	- transferAmount = collectBuyFee(sender,amount,rate) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#891)
		- _tokenBalance[address(this)] = _tokenBalance[address(this)].add(marketingFee) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#966)
		- _tokenBalance[address(this)] = _tokenBalance[address(this)].add(marketingFee_scope_0) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#977)
		- _tokenBalance[address(this)] = _tokenBalance[address(this)].add(marketingFee_scope_1) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#988)
	- _tokenBalance[sender] = _tokenBalance[sender].sub(amount) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#900)
	- _tokenBalance[recipient] = _tokenBalance[recipient].add(transferAmount) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#903)
	- transferAmount = collectSellFee(sender,amount,rate) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#913)
		- _tokenBalance[address(this)] = _tokenBalance[address(this)].add(marketingFee) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#1016)
		- _tokenBalance[address(this)] = _tokenBalance[address(this)].add(marketingFee_scope_0) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#1027)
		- _tokenBalance[address(this)] = _tokenBalance[address(this)].add(marketingFee_scope_1) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#1038)
	- _tokenBalance[sender] = _tokenBalance[sender].sub(amount) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#922)
	- _tokenBalance[recipient] = _tokenBalance[recipient].add(transferAmount) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#925)
	- _tokenBalance[sender] = _tokenBalance[sender].sub(amount) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#939)
	- _tokenBalance[recipient] = _tokenBalance[recipient].add(transferAmount) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#942)
	Event emitted after the call(s):
	- Transfer(account,marketingAddress,marketingFee) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#1019)
		- transferAmount = collectSellFee(sender,amount,rate) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#913)
	- Transfer(account,marketingAddress,marketingFee) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#969)
		- transferAmount = collectBuyFee(sender,amount,rate) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#891)
	- Transfer(account,devWallet,marketingFee_scope_0) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#980)
		- transferAmount = collectBuyFee(sender,amount,rate) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#891)
	- Transfer(account,devWallet,marketingFee_scope_0) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#1030)
		- transferAmount = collectSellFee(sender,amount,rate) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#913)
	- Transfer(sender,recipient,transferAmount) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#906)
	- Transfer(account,charityWallet,marketingFee_scope_1) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#1041)
		- transferAmount = collectSellFee(sender,amount,rate) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#913)
	- Transfer(account,charityWallet,marketingFee_scope_1) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#991)
		- transferAmount = collectBuyFee(sender,amount,rate) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#891)
	- Transfer(sender,recipient,transferAmount) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#928)
	- Transfer(sender,recipient,transferAmount) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#945)
Reentrancy in Saitama.transferFrom(address,address,uint256) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#750-759):
	External calls:
	- _transfer(sender,recipient,amount) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#755)
		- address(marketingAddress).transfer(marketingFee) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#1083)
		- address(charityWallet).transfer(charityFee) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#1087)
		- address(devWallet).transfer(balanceAfterCharity) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#1088)
	State variables written after the call(s):
	- _approve(sender,_msgSender(),_allowances[sender][_msgSender()].sub(amount,ERC20: transfer amount exceeds allowance)) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#757)
		- _allowances[owner][spender] = amount (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#860)
	Event emitted after the call(s):
	- Approval(owner,spender,amount) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#861)
		- _approve(sender,_msgSender(),_allowances[sender][_msgSender()].sub(amount,ERC20: transfer amount exceeds allowance)) (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#757)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-4
INFO:Detectors:
Variable IUniswapV2Router01.addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256).amountADesired (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#566) is too similar to IUniswapV2Router01.addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256).amountBDesired (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#567)
Variable Saitama.collectSellFee(address,uint256,uint256).marketingFee_scope_0 (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#1023) is too similar to Saitama.collectBuyFee(address,uint256,uint256).marketingFee_scope_1 (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#984)
Variable Saitama.collectBuyFee(address,uint256,uint256).marketingFee_scope_0 (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#973) is too similar to Saitama.collectBuyFee(address,uint256,uint256).marketingFee_scope_1 (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#984)
Variable Saitama.collectSellFee(address,uint256,uint256).marketingFee_scope_0 (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#1023) is too similar to Saitama.collectSellFee(address,uint256,uint256).marketingFee_scope_1 (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#1034)
Variable Saitama.collectBuyFee(address,uint256,uint256).marketingFee_scope_0 (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#973) is too similar to Saitama.collectSellFee(address,uint256,uint256).marketingFee_scope_1 (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#1034)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#variable-names-too-similar
INFO:Detectors:
Saitama._balanceLimit (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#623) is never used in Saitama (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#614-1168)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-state-variable
INFO:Detectors:
Saitama.DEAD (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#654) should be constant 
Saitama._burnFeeTotal (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#658) should be constant 
Saitama._decimals (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#620) should be constant 
Saitama._feeDecimal (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#638) should be constant 
Saitama._liquidityFeeTotal (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#659) should be constant 
Saitama._name (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#618) should be constant 
Saitama._symbol (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#619) should be constant 
Saitama._tokenTotal (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#631) should be constant 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant
INFO:Detectors:
Saitama.uniswapV2Router (../../sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol#668) should be immutable 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-immutable
INFO:Slither:/bdata2/sc/dataset/mainnet/0x0632b6cec943000c2edb103327ca2a05cf968252.sol analyzed (10 contracts with 85 detectors), 89 result(s) found
