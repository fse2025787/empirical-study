Compilation warnings/errors on /bdata2/sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol:
Warning: Variable is shadowed in inline assembly by an instruction of the same name
   --> /bdata2/sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol:701:5:
    |
701 |     function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {
    |     ^ (Relevant source part starts here and spans across multiple lines).

Warning: Variable is shadowed in inline assembly by an instruction of the same name
   --> /bdata2/sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol:767:5:
    |
767 |     function add(AddressSet storage set, address value) internal returns (bool) {
    |     ^ (Relevant source part starts here and spans across multiple lines).

Warning: Variable is shadowed in inline assembly by an instruction of the same name
   --> /bdata2/sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol:840:5:
    |
840 |     function add(UintSet storage set, uint256 value) internal returns (bool) {
    |     ^ (Relevant source part starts here and spans across multiple lines).

Warning: Variable is shadowed in inline assembly by an instruction of the same name
   --> /bdata2/sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol:701:5:
    |
701 |     function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {
    |     ^ (Relevant source part starts here and spans across multiple lines).

Warning: Variable is shadowed in inline assembly by an instruction of the same name
   --> /bdata2/sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol:767:5:
    |
767 |     function add(AddressSet storage set, address value) internal returns (bool) {
    |     ^ (Relevant source part starts here and spans across multiple lines).

Warning: Variable is shadowed in inline assembly by an instruction of the same name
   --> /bdata2/sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol:840:5:
    |
840 |     function add(UintSet storage set, uint256 value) internal returns (bool) {
    |     ^ (Relevant source part starts here and spans across multiple lines).

Warning: Contract code size exceeds 24576 bytes (a limit introduced in Spurious Dragon). This contract may not be deployable on mainnet. Consider enabling the optimizer (with a low "runs" value!), turning off revert strings, or using libraries.
    --> /bdata2/sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol:1186:1:
     |
1186 | contract GamblerShiba is IERC20, Ownable, GShibaRNG {
     | ^ (Relevant source part starts here and spans across multiple lines).


INFO:Detectors:
GamblerShiba.sendETHTodev(uint256) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1449-1464) sends eth to arbitrary user
	Dangerous calls:
	- platinumWinner.transfer(winnerReward.mul(4)) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1458)
	- goldWinner.transfer(winnerReward.mul(3)) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1459)
	- silverWinner.transfer(winnerReward.mul(2)) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1460)
	- bronzeWinner.transfer(winnerReward.mul(1)) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1461)
	- _feeWalletAddress.transfer(amount.mul(2).div(3)) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1463)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#functions-that-send-ether-to-arbitrary-destinations
INFO:Detectors:
Reentrancy in GamblerShiba._transfer(address,address,uint256) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1365-1429):
	External calls:
	- swapTokensForEth(contractTokenBalance) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1411)
		- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1440-1446)
	External calls sending eth:
	- sendETHTodev(address(this).balance) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1415)
		- platinumWinner.transfer(winnerReward.mul(4)) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1458)
		- goldWinner.transfer(winnerReward.mul(3)) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1459)
		- silverWinner.transfer(winnerReward.mul(2)) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1460)
		- bronzeWinner.transfer(winnerReward.mul(1)) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1461)
		- _feeWalletAddress.transfer(amount.mul(2).div(3)) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1463)
	State variables written after the call(s):
	- _tokenTransfer(sender,recipient,amount,takeFee) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1428)
		- _tOwned[address(this)] = _tOwned[address(this)].add(tdev) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1508)
		- _tOwned[sender] = _tOwned[sender].sub(tAmount) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1497)
		- _tOwned[recipient] = _tOwned[recipient].add(transferAmount) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1498)
	GamblerShiba._tOwned (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1190) can be used in cross function reentrancies:
	- GamblerShiba._takedev(uint256) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1507-1509)
	- GamblerShiba._transferStandard(address,address,uint256) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1493-1505)
	- GamblerShiba.balanceOf(address) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1274-1276)
	- GamblerShiba.constructor(address) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1235-1256)
	- _tokenTransfer(sender,recipient,amount,takeFee) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1428)
		- ethAmounts[_account] += ethAmount (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1058)
		- ethAmounts[_account] -= ethAmount (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1061)
		- ethAmounts[_account] = ethAmount - ethAmounts[_account] (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1064)
	GShibaRNG.ethAmounts (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#931) can be used in cross function reentrancies:
	- GShibaRNG.addWalletToGamblingList(address,uint256) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1008-1045)
	- GShibaRNG.checkAndChangeGamblingWinner() (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1094-1115)
	- GShibaRNG.ethAmounts (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#931)
	- GShibaRNG.migrate(address,uint256) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1161-1171)
	- GShibaRNG.removeWalletFromGamblingList(address,uint256) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1047-1072)
	- _tokenTransfer(sender,recipient,amount,takeFee) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1428)
		- gamblingWeights[_account] = 0 (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1059)
		- gamblingWeights[_account] = calcWeight(ethAmounts[_account],IERC20(address(this)).balanceOf(_account)) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1062)
		- gamblingWeights[_account] = 0 (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1066)
	GShibaRNG.gamblingWeights (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#930) can be used in cross function reentrancies:
	- GShibaRNG.addWalletToGamblingList(address,uint256) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1008-1045)
	- GShibaRNG.gamblingWeights (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#930)
	- GShibaRNG.migrate(address,uint256) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1161-1171)
	- GShibaRNG.removeWalletFromGamblingList(address,uint256) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1047-1072)
	- _tokenTransfer(sender,recipient,amount,takeFee) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1428)
		- isEthAmountNegative[_account] = true (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1065)
	GShibaRNG.isEthAmountNegative (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#933) can be used in cross function reentrancies:
	- GShibaRNG.addWalletToGamblingList(address,uint256) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1008-1045)
	- GShibaRNG.isEthAmountNegative (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#933)
	- GShibaRNG.removeWalletFromGamblingList(address,uint256) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1047-1072)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities
INFO:Detectors:
GShibaRNG.rand(uint256) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1074-1092) performs a multiplication on the result of a division:
	- (seed - ((seed / (max - 1)) * (max - 1))) + 1 (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1091)
GamblerShiba.sendETHTodev(uint256) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1449-1464) performs a multiplication on the result of a division:
	- winnerReward = amount.div(30) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1454)
	- platinumWinner.transfer(winnerReward.mul(4)) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1458)
GamblerShiba.sendETHTodev(uint256) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1449-1464) performs a multiplication on the result of a division:
	- winnerReward = amount.div(30) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1454)
	- goldWinner.transfer(winnerReward.mul(3)) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1459)
GamblerShiba.sendETHTodev(uint256) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1449-1464) performs a multiplication on the result of a division:
	- winnerReward = amount.div(30) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1454)
	- silverWinner.transfer(winnerReward.mul(2)) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1460)
GamblerShiba.sendETHTodev(uint256) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1449-1464) performs a multiplication on the result of a division:
	- winnerReward = amount.div(30) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1454)
	- bronzeWinner.transfer(winnerReward.mul(1)) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1461)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#divide-before-multiply
INFO:Detectors:
GShibaRNG.constructor(address) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#956-977) ignores return value by platinumSet.add(_initialWinner) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#963)
GShibaRNG.constructor(address) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#956-977) ignores return value by goldSet.add(_initialWinner) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#964)
GShibaRNG.constructor(address) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#956-977) ignores return value by silverSet.add(_initialWinner) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#965)
GShibaRNG.constructor(address) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#956-977) ignores return value by bronzeSet.add(_initialWinner) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#966)
GShibaRNG.addNewWallet(address,uint256) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1000-1002) ignores return value by gamblingWallets[tier].add(_account) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1001)
GShibaRNG.removeWallet(address,uint256) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1004-1006) ignores return value by gamblingWallets[tier].remove(_account) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1005)
GShibaRNG.migrate(address,uint256) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1161-1171) ignores return value by gamblingWallets[tier].add(_user) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1166)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return
INFO:Detectors:
GamblerShiba.allowance(address,address).owner (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1283) shadows:
	- Ownable.owner() (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#64-66) (function)
GamblerShiba._approve(address,address,uint256).owner (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1357) shadows:
	- Ownable.owner() (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#64-66) (function)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing
INFO:Detectors:
GamblerShiba.setMaxTxPercent(uint256) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1347-1351) should emit an event for: 
	- _maxTxAmount = _tTotal.mul(maxTxPercent).div(10 ** 2) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1348-1350) 
GamblerShiba.setMaxTxAmount(uint256) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1353-1355) should emit an event for: 
	- _maxTxAmount = maxTx (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1354) 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-arithmetic
INFO:Detectors:
GamblerShiba.constructor(address).feeWalletAddress (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1235) lacks a zero-check on :
		- _feeWalletAddress = feeWalletAddress (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1239)
GamblerShiba.setMigrationContract(address)._migrator (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1536) lacks a zero-check on :
		- migrator = _migrator (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1540)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation
INFO:Detectors:
Reentrancy in GamblerShiba._transfer(address,address,uint256) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1365-1429):
	External calls:
	- swapTokensForEth(contractTokenBalance) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1411)
		- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1440-1446)
	External calls sending eth:
	- sendETHTodev(address(this).balance) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1415)
		- platinumWinner.transfer(winnerReward.mul(4)) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1458)
		- goldWinner.transfer(winnerReward.mul(3)) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1459)
		- silverWinner.transfer(winnerReward.mul(2)) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1460)
		- bronzeWinner.transfer(winnerReward.mul(1)) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1461)
		- _feeWalletAddress.transfer(amount.mul(2).div(3)) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1463)
	State variables written after the call(s):
	- _tokenTransfer(sender,recipient,amount,takeFee) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1428)
		- _devFee = _previousdevFee (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1340)
		- _devFee = 0 (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1336)
	- _tokenTransfer(sender,recipient,amount,takeFee) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1428)
		- _previousdevFee = _devFee (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1335)
	- sendETHTodev(address(this).balance) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1415)
		- bronzeWinner = address(gamblingWallets[3].at(bronzeWinnerIndex)) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1106)
	- sendETHTodev(address(this).balance) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1415)
		- goldWinner = address(gamblingWallets[1].at(goldWinnerIndex)) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1104)
	- sendETHTodev(address(this).balance) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1415)
		- lastTotalFee += winnerReward (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1456)
	- sendETHTodev(address(this).balance) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1415)
		- platinumWinner = address(gamblingWallets[0].at(platinumWinnerIndex)) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1103)
	- sendETHTodev(address(this).balance) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1415)
		- silverWinner = address(gamblingWallets[2].at(silverWinnerIndex)) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1105)
Reentrancy in GamblerShiba.transferFrom(address,address,uint256) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1292-1296):
	External calls:
	- _transfer(sender,recipient,amount) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1293)
		- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1440-1446)
	External calls sending eth:
	- _transfer(sender,recipient,amount) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1293)
		- platinumWinner.transfer(winnerReward.mul(4)) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1458)
		- goldWinner.transfer(winnerReward.mul(3)) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1459)
		- silverWinner.transfer(winnerReward.mul(2)) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1460)
		- bronzeWinner.transfer(winnerReward.mul(1)) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1461)
		- _feeWalletAddress.transfer(amount.mul(2).div(3)) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1463)
	State variables written after the call(s):
	- _approve(sender,_msgSender(),_allowances[sender][_msgSender()].sub(amount,ERC20: transfer amount exceeds allowance)) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1294)
		- _allowances[owner][spender] = amount (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1361)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2
INFO:Detectors:
Reentrancy in GamblerShiba._transfer(address,address,uint256) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1365-1429):
	External calls:
	- swapTokensForEth(contractTokenBalance) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1411)
		- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1440-1446)
	External calls sending eth:
	- sendETHTodev(address(this).balance) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1415)
		- platinumWinner.transfer(winnerReward.mul(4)) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1458)
		- goldWinner.transfer(winnerReward.mul(3)) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1459)
		- silverWinner.transfer(winnerReward.mul(2)) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1460)
		- bronzeWinner.transfer(winnerReward.mul(1)) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1461)
		- _feeWalletAddress.transfer(amount.mul(2).div(3)) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1463)
	Event emitted after the call(s):
	- Transfer(sender,recipient,transferAmount) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1504)
		- _tokenTransfer(sender,recipient,amount,takeFee) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1428)
	- newWinnersSelected(block.timestamp,platinumWinner,goldWinner,silverWinner,bronzeWinner,ethAmounts[platinumWinner],ethAmounts[goldWinner],ethAmounts[silverWinner],ethAmounts[bronzeWinner],IERC20(address(this)).balanceOf(platinumWinner),IERC20(address(this)).balanceOf(goldWinner),IERC20(address(this)).balanceOf(silverWinner),IERC20(address(this)).balanceOf(bronzeWinner),lastTotalFee) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1108-1113)
		- sendETHTodev(address(this).balance) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1415)
Reentrancy in GamblerShiba.transferFrom(address,address,uint256) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1292-1296):
	External calls:
	- _transfer(sender,recipient,amount) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1293)
		- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1440-1446)
	External calls sending eth:
	- _transfer(sender,recipient,amount) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1293)
		- platinumWinner.transfer(winnerReward.mul(4)) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1458)
		- goldWinner.transfer(winnerReward.mul(3)) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1459)
		- silverWinner.transfer(winnerReward.mul(2)) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1460)
		- bronzeWinner.transfer(winnerReward.mul(1)) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1461)
		- _feeWalletAddress.transfer(amount.mul(2).div(3)) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1463)
	Event emitted after the call(s):
	- Approval(owner,spender,amount) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1362)
		- _approve(sender,_msgSender(),_allowances[sender][_msgSender()].sub(amount,ERC20: transfer amount exceeds allowance)) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1294)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3
INFO:Detectors:
GShibaRNG.checkAndChangeGamblingWinner() (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1094-1115) uses timestamp for comparisons
	Dangerous comparisons:
	- lastTotalFee >= randFee (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1097)
GamblerShiba._transfer(address,address,uint256) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1365-1429) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(block.timestamp >= timestamp[sender],Cooldown) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1390)
GamblerShiba.sendETHTodev(uint256) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1449-1464) uses timestamp for comparisons
	Dangerous comparisons:
	- block.timestamp >= eligibleRNG (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1450)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp
INFO:Detectors:
Address.isContract(address) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#431-440) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#438)
Address._functionCallWithValue(address,bytes,uint256,string) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#524-545) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#537-540)
EnumerableSet.values(EnumerableSet.AddressSet) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#817-826) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#821-823)
EnumerableSet.values(EnumerableSet.UintSet) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#890-899) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#894-896)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage
INFO:Detectors:
GShibaRNG.removeGoverner(address) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1147-1159) has costly operations inside a loop:
	- governers.pop() (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1154)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#costly-operations-inside-a-loop
INFO:Detectors:
GamblerShiba._transfer(address,address,uint256) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1365-1429) has a high cyclomatic complexity (12).
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#cyclomatic-complexity
INFO:Detectors:
Address._functionCallWithValue(address,bytes,uint256,string) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#524-545) is never used and should be removed
Address.functionCall(address,bytes) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#484-486) is never used and should be removed
Address.functionCall(address,bytes,string) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#494-496) is never used and should be removed
Address.functionCallWithValue(address,bytes,uint256) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#509-511) is never used and should be removed
Address.functionCallWithValue(address,bytes,uint256,string) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#519-522) is never used and should be removed
Address.isContract(address) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#431-440) is never used and should be removed
Address.sendValue(address,uint256) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#458-464) is never used and should be removed
Context._msgData() (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#28-31) is never used and should be removed
EnumerableSet._values(EnumerableSet.Set) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#685-687) is never used and should be removed
EnumerableSet.add(EnumerableSet.Bytes32Set,bytes32) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#701-703) is never used and should be removed
EnumerableSet.add(EnumerableSet.UintSet,uint256) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#840-842) is never used and should be removed
EnumerableSet.at(EnumerableSet.Bytes32Set,uint256) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#739-741) is never used and should be removed
EnumerableSet.at(EnumerableSet.UintSet,uint256) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#878-880) is never used and should be removed
EnumerableSet.contains(EnumerableSet.AddressSet,address) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#784-786) is never used and should be removed
EnumerableSet.contains(EnumerableSet.Bytes32Set,bytes32) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#718-720) is never used and should be removed
EnumerableSet.contains(EnumerableSet.UintSet,uint256) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#857-859) is never used and should be removed
EnumerableSet.length(EnumerableSet.Bytes32Set) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#725-727) is never used and should be removed
EnumerableSet.length(EnumerableSet.UintSet) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#864-866) is never used and should be removed
EnumerableSet.remove(EnumerableSet.Bytes32Set,bytes32) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#711-713) is never used and should be removed
EnumerableSet.remove(EnumerableSet.UintSet,uint256) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#850-852) is never used and should be removed
EnumerableSet.values(EnumerableSet.AddressSet) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#817-826) is never used and should be removed
EnumerableSet.values(EnumerableSet.Bytes32Set) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#751-753) is never used and should be removed
EnumerableSet.values(EnumerableSet.UintSet) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#890-899) is never used and should be removed
GamblerShiba._getMaxTxAmount() (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1514-1516) is never used and should be removed
SafeMath.div(uint256,uint256,string) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#360-363) is never used and should be removed
SafeMath.mod(uint256,uint256) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#322-325) is never used and should be removed
SafeMath.mod(uint256,uint256,string) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#380-383) is never used and should be removed
SafeMath.tryAdd(uint256,uint256) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#194-198) is never used and should be removed
SafeMath.tryDiv(uint256,uint256) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#230-233) is never used and should be removed
SafeMath.tryMod(uint256,uint256) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#240-243) is never used and should be removed
SafeMath.tryMul(uint256,uint256) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#215-223) is never used and should be removed
SafeMath.trySub(uint256,uint256) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#205-208) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code
INFO:Detectors:
GamblerShiba._previousdevFee (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1209) is set pre-construction with a non-constant function or state variable:
	- _devFee
GamblerShiba._maxTxAmount (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1222) is set pre-construction with a non-constant function or state variable:
	- _tTotal / 400
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#function-initializing-state
INFO:Detectors:
Pragma version^0.6.12 (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#9) allows old versions
solc-0.6.12 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity
INFO:Detectors:
Low level call in Address.sendValue(address,uint256) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#458-464):
	- (success) = recipient.call{value: amount}() (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#462)
Low level call in Address._functionCallWithValue(address,bytes,uint256,string) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#524-545):
	- (success,returndata) = target.call{value: weiValue}(data) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#528)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls
INFO:Detectors:
Function IUniswapV2Router02.WETH() (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#400) is not in mixedCase
Event GShibaRNGnewWinnersSelected(uint256,address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#946-949) is not in CapWords
Parameter GShibaRNG.addNewWallet(address,uint256)._account (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1000) is not in mixedCase
Parameter GShibaRNG.removeWallet(address,uint256)._account (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1004) is not in mixedCase
Parameter GShibaRNG.addWalletToGamblingList(address,uint256)._account (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1008) is not in mixedCase
Parameter GShibaRNG.addWalletToGamblingList(address,uint256)._amount (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1008) is not in mixedCase
Parameter GShibaRNG.removeWalletFromGamblingList(address,uint256)._account (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1047) is not in mixedCase
Parameter GShibaRNG.removeWalletFromGamblingList(address,uint256)._amount (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1047) is not in mixedCase
Parameter GShibaRNG.setEthWeight(uint256)._ethWeight (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1121) is not in mixedCase
Parameter GShibaRNG.setTierWeights(uint256,uint256,uint256)._platinumMin (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1125) is not in mixedCase
Parameter GShibaRNG.setTierWeights(uint256,uint256,uint256)._goldMin (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1125) is not in mixedCase
Parameter GShibaRNG.setTierWeights(uint256,uint256,uint256)._silverMin (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1125) is not in mixedCase
Parameter GShibaRNG.setFeeMinMax(uint256,uint256)._feeMin (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1133) is not in mixedCase
Parameter GShibaRNG.setFeeMinMax(uint256,uint256)._feeMax (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1133) is not in mixedCase
Parameter GShibaRNG.addGoverner(address)._governer (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1140) is not in mixedCase
Parameter GShibaRNG.removeGoverner(address)._governer (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1147) is not in mixedCase
Parameter GShibaRNG.migrate(address,uint256)._user (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1161) is not in mixedCase
Parameter GShibaRNG.migrate(address,uint256)._gShibaAmount (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1161) is not in mixedCase
Function GamblerShiba._getETHBalance() (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1518-1520) is not in mixedCase
Parameter GamblerShiba.allowDex(bool)._tradingEnabled (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1522) is not in mixedCase
Parameter GamblerShiba.toggleCoolDown(bool)._cooldownEnabled (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1527) is not in mixedCase
Parameter GamblerShiba.toggleFeeEnabled(bool)._feeEnabled (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1531) is not in mixedCase
Parameter GamblerShiba.setMigrationContract(address)._migrator (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1536) is not in mixedCase
Variable GamblerShiba._coolDown (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1202) is not in mixedCase
Variable GamblerShiba._devFee (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1208) is not in mixedCase
Variable GamblerShiba._maxTxAmount (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1222) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions
INFO:Detectors:
Redundant expression "this (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#29)" inContext (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#23-32)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#redundant-statements
INFO:Detectors:
Reentrancy in GamblerShiba._transfer(address,address,uint256) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1365-1429):
	External calls:
	- sendETHTodev(address(this).balance) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1415)
		- platinumWinner.transfer(winnerReward.mul(4)) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1458)
		- goldWinner.transfer(winnerReward.mul(3)) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1459)
		- silverWinner.transfer(winnerReward.mul(2)) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1460)
		- bronzeWinner.transfer(winnerReward.mul(1)) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1461)
		- _feeWalletAddress.transfer(amount.mul(2).div(3)) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1463)
	State variables written after the call(s):
	- _tokenTransfer(sender,recipient,amount,takeFee) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1428)
		- _devFee = _previousdevFee (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1340)
		- _devFee = 0 (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1336)
	- _tokenTransfer(sender,recipient,amount,takeFee) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1428)
		- _previousdevFee = _devFee (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1335)
	- _tokenTransfer(sender,recipient,amount,takeFee) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1428)
		- _tOwned[address(this)] = _tOwned[address(this)].add(tdev) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1508)
		- _tOwned[sender] = _tOwned[sender].sub(tAmount) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1497)
		- _tOwned[recipient] = _tOwned[recipient].add(transferAmount) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1498)
	- _tokenTransfer(sender,recipient,amount,takeFee) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1428)
		- ethAmounts[_account] += ethAmount (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1058)
		- ethAmounts[_account] -= ethAmount (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1061)
		- ethAmounts[_account] = ethAmount - ethAmounts[_account] (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1064)
	- _tokenTransfer(sender,recipient,amount,takeFee) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1428)
		- gamblingWeights[_account] = 0 (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1059)
		- gamblingWeights[_account] = calcWeight(ethAmounts[_account],IERC20(address(this)).balanceOf(_account)) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1062)
		- gamblingWeights[_account] = 0 (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1066)
	- _tokenTransfer(sender,recipient,amount,takeFee) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1428)
		- isEthAmountNegative[_account] = true (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1065)
	Event emitted after the call(s):
	- Transfer(sender,recipient,transferAmount) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1504)
		- _tokenTransfer(sender,recipient,amount,takeFee) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1428)
Reentrancy in GamblerShiba.transferFrom(address,address,uint256) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1292-1296):
	External calls:
	- _transfer(sender,recipient,amount) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1293)
		- platinumWinner.transfer(winnerReward.mul(4)) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1458)
		- goldWinner.transfer(winnerReward.mul(3)) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1459)
		- silverWinner.transfer(winnerReward.mul(2)) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1460)
		- bronzeWinner.transfer(winnerReward.mul(1)) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1461)
		- _feeWalletAddress.transfer(amount.mul(2).div(3)) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1463)
	State variables written after the call(s):
	- _approve(sender,_msgSender(),_allowances[sender][_msgSender()].sub(amount,ERC20: transfer amount exceeds allowance)) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1294)
		- _allowances[owner][spender] = amount (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1361)
	Event emitted after the call(s):
	- Approval(owner,spender,amount) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1362)
		- _approve(sender,_msgSender(),_allowances[sender][_msgSender()].sub(amount,ERC20: transfer amount exceeds allowance)) (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1294)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-4
INFO:Detectors:
GamblerShiba.slitherConstructorVariables() (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1186-1543) uses literals with too many digits:
	- _tTotal = 1000000000000 * 10 ** 18 (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1200)
GamblerShiba.slitherConstructorVariables() (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1186-1543) uses literals with too many digits:
	- _numOfTokensToExchangeFordev = 5000000000000000 (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1223)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits
INFO:Detectors:
GamblerShiba._coolDown (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1202) should be constant 
GamblerShiba._decimals (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1206) should be constant 
GamblerShiba._name (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1204) should be constant 
GamblerShiba._numOfTokensToExchangeFordev (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1223) should be constant 
GamblerShiba._symbol (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1205) should be constant 
GamblerShiba._tTotal (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1200) should be constant 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant
INFO:Detectors:
GShibaRNG.uniswapV2Router (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#935) should be immutable 
GamblerShiba._feeWalletAddress (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1211) should be immutable 
GamblerShiba.uniswapV2Pair (../../sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol#1213) should be immutable 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-immutable
INFO:Slither:/bdata2/sc/dataset/mainnet/0xf7a4eb498314575cd865e43d256f20f5bd0d02e3.sol analyzed (10 contracts with 85 detectors), 111 result(s) found
