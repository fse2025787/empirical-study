INFO:Detectors:
Reentrancy in StrongInu._transfer(address,address,uint256) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#849-900):
	External calls:
	- swapAndLiquify(contractTokenBalance) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#869)
		- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#989-995)
	External calls sending eth:
	- swapAndLiquify(contractTokenBalance) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#869)
		- address(liquidityWallet).transfer(newBalance) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#975)
	State variables written after the call(s):
	- transferAmount = collectFee(sender,transferAmount,rate) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#877)
		- _reflectionBalance[address(this)] = _reflectionBalance[address(this)].add(liquidityFee.mul(rate)) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#917)
		- _reflectionBalance[DEAD] = _reflectionBalance[DEAD].add(burnFee.mul(rate)) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#929)
	StrongInu._reflectionBalance (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#622) can be used in cross function reentrancies:
	- StrongInu._getReflectionRate() (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#941-957)
	- StrongInu._transfer(address,address,uint256) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#849-900)
	- StrongInu.balanceOf(address) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#703-706)
	- StrongInu.collectFee(address,uint256,uint256) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#902-939)
	- StrongInu.constructor() (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#667-685)
	- StrongInu.excludeAccount(address) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#809-822)
	- _reflectionBalance[sender] = _reflectionBalance[sender].sub(amount.mul(rate)) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#882)
	StrongInu._reflectionBalance (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#622) can be used in cross function reentrancies:
	- StrongInu._getReflectionRate() (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#941-957)
	- StrongInu._transfer(address,address,uint256) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#849-900)
	- StrongInu.balanceOf(address) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#703-706)
	- StrongInu.collectFee(address,uint256,uint256) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#902-939)
	- StrongInu.constructor() (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#667-685)
	- StrongInu.excludeAccount(address) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#809-822)
	- _reflectionBalance[recipient] = _reflectionBalance[recipient].add(transferAmount.mul(rate)) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#884)
	StrongInu._reflectionBalance (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#622) can be used in cross function reentrancies:
	- StrongInu._getReflectionRate() (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#941-957)
	- StrongInu._transfer(address,address,uint256) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#849-900)
	- StrongInu.balanceOf(address) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#703-706)
	- StrongInu.collectFee(address,uint256,uint256) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#902-939)
	- StrongInu.constructor() (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#667-685)
	- StrongInu.excludeAccount(address) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#809-822)
	- transferAmount = collectFee(sender,transferAmount,rate) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#877)
		- _reflectionTotal = _reflectionTotal.sub(taxFee.mul(rate)) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#909)
		- _reflectionTotal = _reflectionTotal.sub(burnFee.mul(rate)) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#933)
	StrongInu._reflectionTotal (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#628) can be used in cross function reentrancies:
	- StrongInu._getReflectionRate() (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#941-957)
	- StrongInu.collectFee(address,uint256,uint256) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#902-939)
	- StrongInu.constructor() (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#667-685)
	- StrongInu.tokenFromReflection(uint256) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#796-807)
	- transferAmount = collectFee(sender,transferAmount,rate) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#877)
		- _tokenBalance[address(this)] = _tokenBalance[address(this)].add(liquidityFee) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#919)
		- _tokenBalance[DEAD] = _tokenBalance[DEAD].add(burnFee) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#931)
	StrongInu._tokenBalance (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#623) can be used in cross function reentrancies:
	- StrongInu._getReflectionRate() (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#941-957)
	- StrongInu._transfer(address,address,uint256) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#849-900)
	- StrongInu.balanceOf(address) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#703-706)
	- StrongInu.collectFee(address,uint256,uint256) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#902-939)
	- StrongInu.excludeAccount(address) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#809-822)
	- StrongInu.includeAccount(address) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#824-835)
	- _tokenBalance[sender] = _tokenBalance[sender].sub(amount) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#888)
	StrongInu._tokenBalance (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#623) can be used in cross function reentrancies:
	- StrongInu._getReflectionRate() (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#941-957)
	- StrongInu._transfer(address,address,uint256) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#849-900)
	- StrongInu.balanceOf(address) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#703-706)
	- StrongInu.collectFee(address,uint256,uint256) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#902-939)
	- StrongInu.excludeAccount(address) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#809-822)
	- StrongInu.includeAccount(address) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#824-835)
	- _tokenBalance[recipient] = _tokenBalance[recipient].add(transferAmount) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#891)
	StrongInu._tokenBalance (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#623) can be used in cross function reentrancies:
	- StrongInu._getReflectionRate() (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#941-957)
	- StrongInu._transfer(address,address,uint256) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#849-900)
	- StrongInu.balanceOf(address) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#703-706)
	- StrongInu.collectFee(address,uint256,uint256) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#902-939)
	- StrongInu.excludeAccount(address) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#809-822)
	- StrongInu.includeAccount(address) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#824-835)
	- transferAmount = collectFee(sender,transferAmount,rate) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#877)
		- _tokenTotal = _tokenTotal.sub(burnFee) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#928)
	StrongInu._tokenTotal (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#627) can be used in cross function reentrancies:
	- StrongInu._getReflectionRate() (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#941-957)
	- StrongInu.collectFee(address,uint256,uint256) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#902-939)
	- StrongInu.constructor() (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#667-685)
	- StrongInu.reflectionFromToken(uint256,bool) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#780-794)
	- StrongInu.totalSupply() (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#699-701)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities
INFO:Detectors:
StrongInu.collectFee(address,uint256,uint256) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#902-939) performs a multiplication on the result of a division:
	- taxFee = amount.mul(_taxFee).div(10 ** (_feeDecimal + 2)) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#907)
	- _reflectionTotal = _reflectionTotal.sub(taxFee.mul(rate)) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#909)
StrongInu.collectFee(address,uint256,uint256) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#902-939) performs a multiplication on the result of a division:
	- liquidityFee = amount.mul(_liquidityFee).div(10 ** (_feeDecimal + 2)) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#915)
	- _reflectionBalance[address(this)] = _reflectionBalance[address(this)].add(liquidityFee.mul(rate)) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#917)
StrongInu.collectFee(address,uint256,uint256) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#902-939) performs a multiplication on the result of a division:
	- burnFee = amount.mul(_burnFee).div(10 ** (_feeDecimal + 2)) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#926)
	- _reflectionBalance[DEAD] = _reflectionBalance[DEAD].add(burnFee.mul(rate)) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#929)
StrongInu.collectFee(address,uint256,uint256) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#902-939) performs a multiplication on the result of a division:
	- burnFee = amount.mul(_burnFee).div(10 ** (_feeDecimal + 2)) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#926)
	- _reflectionTotal = _reflectionTotal.sub(burnFee.mul(rate)) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#933)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#divide-before-multiply
INFO:Detectors:
StrongInu.allowance(address,address).owner (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#718) shadows:
	- Ownable.owner() (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#512-514) (function)
StrongInu._approve(address,address,uint256).owner (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#838) shadows:
	- Ownable.owner() (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#512-514) (function)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing
INFO:Detectors:
StrongInu.setTaxFee(uint256) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#1016-1018) should emit an event for: 
	- _taxFee = fee (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#1017) 
StrongInu.setBurnFee(uint256) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#1020-1022) should emit an event for: 
	- _burnFee = fee (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#1021) 
StrongInu.setLiquidityFee(uint256) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#1024-1026) should emit an event for: 
	- _liquidityFee = fee (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#1025) 
StrongInu.setMaxTxAmount(uint256) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#1029-1031) should emit an event for: 
	- maxTxAmount = amount (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#1030) 
StrongInu.setMinTokensBeforeSwap(uint256) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#1033-1035) should emit an event for: 
	- minTokensBeforeSwap = amount (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#1034) 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-arithmetic
INFO:Detectors:
StrongInu.setPair(address).pair (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#999) lacks a zero-check on :
		- uniswapV2Pair = pair (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#1000)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation
INFO:Detectors:
Reentrancy in StrongInu._transfer(address,address,uint256) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#849-900):
	External calls:
	- swapAndLiquify(contractTokenBalance) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#869)
		- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#989-995)
	External calls sending eth:
	- swapAndLiquify(contractTokenBalance) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#869)
		- address(liquidityWallet).transfer(newBalance) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#975)
	State variables written after the call(s):
	- transferAmount = collectFee(sender,transferAmount,rate) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#877)
		- _burnFeeTotal = _burnFeeTotal.add(burnFee) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#934)
	- transferAmount = collectFee(sender,transferAmount,rate) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#877)
		- _liquidityFeeTotal = _liquidityFeeTotal.add(liquidityFee) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#921)
	- transferAmount = collectFee(sender,transferAmount,rate) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#877)
		- _taxFeeTotal = _taxFeeTotal.add(taxFee) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#910)
Reentrancy in StrongInu.transferFrom(address,address,uint256) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#736-745):
	External calls:
	- _transfer(sender,recipient,amount) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#741)
		- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#989-995)
	External calls sending eth:
	- _transfer(sender,recipient,amount) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#741)
		- address(liquidityWallet).transfer(newBalance) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#975)
	State variables written after the call(s):
	- _approve(sender,_msgSender(),_allowances[sender][_msgSender()].sub(amount,ERC20: transfer amount exceeds allowance)) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#743)
		- _allowances[owner][spender] = amount (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#845)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2
INFO:Detectors:
Reentrancy in StrongInu._transfer(address,address,uint256) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#849-900):
	External calls:
	- swapAndLiquify(contractTokenBalance) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#869)
		- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#989-995)
	External calls sending eth:
	- swapAndLiquify(contractTokenBalance) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#869)
		- address(liquidityWallet).transfer(newBalance) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#975)
	Event emitted after the call(s):
	- Transfer(account,address(this),liquidityFee) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#922)
		- transferAmount = collectFee(sender,transferAmount,rate) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#877)
	- Transfer(sender,recipient,transferAmount) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#893)
	- Transfer(account,DEAD,burnFee) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#935)
		- transferAmount = collectFee(sender,transferAmount,rate) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#877)
	- Transfer(sender,recipient,transferAmount) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#898)
Reentrancy in StrongInu.transferFrom(address,address,uint256) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#736-745):
	External calls:
	- _transfer(sender,recipient,amount) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#741)
		- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#989-995)
	External calls sending eth:
	- _transfer(sender,recipient,amount) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#741)
		- address(liquidityWallet).transfer(newBalance) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#975)
	Event emitted after the call(s):
	- Approval(owner,spender,amount) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#846)
		- _approve(sender,_msgSender(),_allowances[sender][_msgSender()].sub(amount,ERC20: transfer amount exceeds allowance)) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#743)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3
INFO:Detectors:
Address.isContract(address) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#320-334) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#330-332)
Address._functionCallWithValue(address,bytes,uint256,string) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#449-477) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#469-472)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage
INFO:Detectors:
StrongInu.includeAccount(address) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#824-835) has costly operations inside a loop:
	- _excluded.pop() (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#831)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#costly-operations-inside-a-loop
INFO:Detectors:
Address._functionCallWithValue(address,bytes,uint256,string) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#449-477) is never used and should be removed
Address.functionCall(address,bytes) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#384-389) is never used and should be removed
Address.functionCall(address,bytes,string) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#397-403) is never used and should be removed
Address.functionCallWithValue(address,bytes,uint256) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#416-428) is never used and should be removed
Address.functionCallWithValue(address,bytes,uint256,string) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#436-447) is never used and should be removed
Address.isContract(address) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#320-334) is never used and should be removed
Address.sendValue(address,uint256) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#352-364) is never used and should be removed
Context._msgData() (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#32-35) is never used and should be removed
SafeMath.ceil(uint256,uint256) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#292-296) is never used and should be removed
SafeMath.mod(uint256,uint256) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#267-269) is never used and should be removed
SafeMath.mod(uint256,uint256,string) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#283-290) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code
INFO:Detectors:
StrongInu._tokenTotal (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#627) is set pre-construction with a non-constant function or state variable:
	- 1_000_000_000 * (10 ** decimals())
StrongInu._reflectionTotal (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#628) is set pre-construction with a non-constant function or state variable:
	- (MAX - (MAX % _tokenTotal))
StrongInu.maxTxAmount (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#652) is set pre-construction with a non-constant function or state variable:
	- 10_000_000 * (10 ** decimals())
StrongInu.minTokensBeforeSwap (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#653) is set pre-construction with a non-constant function or state variable:
	- 10_000 * (10 ** decimals())
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#function-initializing-state
INFO:Detectors:
Pragma version^0.6.12 (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#9) allows old versions
solc-0.6.12 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity
INFO:Detectors:
Low level call in Address.sendValue(address,uint256) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#352-364):
	- (success) = recipient.call{value: amount}() (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#359)
Low level call in Address._functionCallWithValue(address,bytes,uint256,string) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#449-477):
	- (success,returndata) = target.call{value: weiValue}(data) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#458-460)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls
INFO:Detectors:
Function IUniswapV2Router01.WETH() (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#561) is not in mixedCase
Variable StrongInu._reflectionBalance (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#622) is not in mixedCase
Variable StrongInu._tokenBalance (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#623) is not in mixedCase
Variable StrongInu._allowances (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#624) is not in mixedCase
Variable StrongInu._tokenTotal (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#627) is not in mixedCase
Variable StrongInu._reflectionTotal (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#628) is not in mixedCase
Variable StrongInu._isExcluded (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#631) is not in mixedCase
Variable StrongInu._excluded (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#632) is not in mixedCase
Variable StrongInu._feeDecimal (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#635) is not in mixedCase
Variable StrongInu._taxFee (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#636) is not in mixedCase
Variable StrongInu._liquidityFee (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#637) is not in mixedCase
Variable StrongInu._burnFee (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#638) is not in mixedCase
Variable StrongInu.DEAD (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#642) is not in mixedCase
Variable StrongInu._taxFeeTotal (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#644) is not in mixedCase
Variable StrongInu._burnFeeTotal (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#645) is not in mixedCase
Variable StrongInu._liquidityFeeTotal (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#646) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions
INFO:Detectors:
Redundant expression "this (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#33)" inContext (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#27-36)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#redundant-statements
INFO:Detectors:
Reentrancy in StrongInu._transfer(address,address,uint256) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#849-900):
	External calls:
	- swapAndLiquify(contractTokenBalance) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#869)
		- address(liquidityWallet).transfer(newBalance) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#975)
	State variables written after the call(s):
	- transferAmount = collectFee(sender,transferAmount,rate) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#877)
		- _burnFeeTotal = _burnFeeTotal.add(burnFee) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#934)
	- transferAmount = collectFee(sender,transferAmount,rate) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#877)
		- _liquidityFeeTotal = _liquidityFeeTotal.add(liquidityFee) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#921)
	- transferAmount = collectFee(sender,transferAmount,rate) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#877)
		- _reflectionBalance[address(this)] = _reflectionBalance[address(this)].add(liquidityFee.mul(rate)) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#917)
		- _reflectionBalance[DEAD] = _reflectionBalance[DEAD].add(burnFee.mul(rate)) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#929)
	- _reflectionBalance[sender] = _reflectionBalance[sender].sub(amount.mul(rate)) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#882)
	- _reflectionBalance[recipient] = _reflectionBalance[recipient].add(transferAmount.mul(rate)) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#884)
	- transferAmount = collectFee(sender,transferAmount,rate) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#877)
		- _reflectionTotal = _reflectionTotal.sub(taxFee.mul(rate)) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#909)
		- _reflectionTotal = _reflectionTotal.sub(burnFee.mul(rate)) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#933)
	- transferAmount = collectFee(sender,transferAmount,rate) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#877)
		- _taxFeeTotal = _taxFeeTotal.add(taxFee) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#910)
	- transferAmount = collectFee(sender,transferAmount,rate) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#877)
		- _tokenBalance[address(this)] = _tokenBalance[address(this)].add(liquidityFee) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#919)
		- _tokenBalance[DEAD] = _tokenBalance[DEAD].add(burnFee) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#931)
	- _tokenBalance[sender] = _tokenBalance[sender].sub(amount) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#888)
	- _tokenBalance[recipient] = _tokenBalance[recipient].add(transferAmount) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#891)
	- transferAmount = collectFee(sender,transferAmount,rate) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#877)
		- _tokenTotal = _tokenTotal.sub(burnFee) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#928)
	Event emitted after the call(s):
	- Transfer(account,address(this),liquidityFee) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#922)
		- transferAmount = collectFee(sender,transferAmount,rate) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#877)
	- Transfer(sender,recipient,transferAmount) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#893)
	- Transfer(account,DEAD,burnFee) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#935)
		- transferAmount = collectFee(sender,transferAmount,rate) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#877)
	- Transfer(sender,recipient,transferAmount) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#898)
Reentrancy in StrongInu.transferFrom(address,address,uint256) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#736-745):
	External calls:
	- _transfer(sender,recipient,amount) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#741)
		- address(liquidityWallet).transfer(newBalance) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#975)
	State variables written after the call(s):
	- _approve(sender,_msgSender(),_allowances[sender][_msgSender()].sub(amount,ERC20: transfer amount exceeds allowance)) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#743)
		- _allowances[owner][spender] = amount (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#845)
	Event emitted after the call(s):
	- Approval(owner,spender,amount) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#846)
		- _approve(sender,_msgSender(),_allowances[sender][_msgSender()].sub(amount,ERC20: transfer amount exceeds allowance)) (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#743)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-4
INFO:Detectors:
Variable IUniswapV2Router01.addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256).amountADesired (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#565) is too similar to IUniswapV2Router01.addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256).amountBDesired (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#566)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#variable-names-too-similar
INFO:Detectors:
StrongInu.DEAD (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#642) should be constant 
StrongInu._decimals (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#620) should be constant 
StrongInu._feeDecimal (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#635) should be constant 
StrongInu._name (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#618) should be constant 
StrongInu._symbol (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#619) should be constant 
StrongInu.liquidityWallet (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#641) should be constant 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant
INFO:Detectors:
StrongInu.uniswapV2Router (../../sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol#655) should be immutable 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-immutable
INFO:Slither:/bdata2/sc/dataset/mainnet/0x6fa4fbc6c22501fb7697d91be0fd83cb17d1c106.sol analyzed (10 contracts with 85 detectors), 66 result(s) found
