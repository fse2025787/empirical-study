INFO:Detectors:
Staking.addReward(address,uint256,uint256) (../../sc/dataset/mainnet/0x13534878a6ce8b50105333d7006aacbc69a07104.sol#1066-1077) uses arbitrary from in transferFrom: YIELD.safeTransferFrom(from,address(this),amount) (../../sc/dataset/mainnet/0x13534878a6ce8b50105333d7006aacbc69a07104.sol#1075)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#arbitrary-from-in-transferfrom
INFO:Detectors:
Reentrancy in Staking.exit() (../../sc/dataset/mainnet/0x13534878a6ce8b50105333d7006aacbc69a07104.sol#1096-1099):
	External calls:
	- withdraw(s_balances[msg.sender]) (../../sc/dataset/mainnet/0x13534878a6ce8b50105333d7006aacbc69a07104.sol#1097)
		- returndata = address(token).functionCall(data,SafeERC20: low-level call failed) (../../sc/dataset/mainnet/0x13534878a6ce8b50105333d7006aacbc69a07104.sol#941)
		- (success,returndata) = target.call{value: weiValue}(data) (../../sc/dataset/mainnet/0x13534878a6ce8b50105333d7006aacbc69a07104.sol#556)
		- IERC20(address(PAIR)).safeTransfer(msg.sender,amount) (../../sc/dataset/mainnet/0x13534878a6ce8b50105333d7006aacbc69a07104.sol#1105)
	- getReward() (../../sc/dataset/mainnet/0x13534878a6ce8b50105333d7006aacbc69a07104.sol#1098)
		- returndata = address(token).functionCall(data,SafeERC20: low-level call failed) (../../sc/dataset/mainnet/0x13534878a6ce8b50105333d7006aacbc69a07104.sol#941)
		- YIELD.safeTransfer(msg.sender,reward) (../../sc/dataset/mainnet/0x13534878a6ce8b50105333d7006aacbc69a07104.sol#1113)
		- (success,returndata) = target.call{value: weiValue}(data) (../../sc/dataset/mainnet/0x13534878a6ce8b50105333d7006aacbc69a07104.sol#556)
	External calls sending eth:
	- withdraw(s_balances[msg.sender]) (../../sc/dataset/mainnet/0x13534878a6ce8b50105333d7006aacbc69a07104.sol#1097)
		- (success,returndata) = target.call{value: weiValue}(data) (../../sc/dataset/mainnet/0x13534878a6ce8b50105333d7006aacbc69a07104.sol#556)
	- getReward() (../../sc/dataset/mainnet/0x13534878a6ce8b50105333d7006aacbc69a07104.sol#1098)
		- (success,returndata) = target.call{value: weiValue}(data) (../../sc/dataset/mainnet/0x13534878a6ce8b50105333d7006aacbc69a07104.sol#556)
	State variables written after the call(s):
	- getReward() (../../sc/dataset/mainnet/0x13534878a6ce8b50105333d7006aacbc69a07104.sol#1098)
		- s_lastUpdateTime = lastTimeRewardApplicable (../../sc/dataset/mainnet/0x13534878a6ce8b50105333d7006aacbc69a07104.sol#1034)
	Staking.s_lastUpdateTime (../../sc/dataset/mainnet/0x13534878a6ce8b50105333d7006aacbc69a07104.sol#1014) can be used in cross function reentrancies:
	- Staking.addReward(address,uint256,uint256) (../../sc/dataset/mainnet/0x13534878a6ce8b50105333d7006aacbc69a07104.sol#1066-1077)
	- Staking.lastUpdateTime() (../../sc/dataset/mainnet/0x13534878a6ce8b50105333d7006aacbc69a07104.sol#1187-1189)
	- Staking.rewardPerToken() (../../sc/dataset/mainnet/0x13534878a6ce8b50105333d7006aacbc69a07104.sol#1132-1146)
	- Staking.updateReward(address) (../../sc/dataset/mainnet/0x13534878a6ce8b50105333d7006aacbc69a07104.sol#1028-1040)
	- getReward() (../../sc/dataset/mainnet/0x13534878a6ce8b50105333d7006aacbc69a07104.sol#1098)
		- s_leftover = s_leftover.add(lastTimeRewardApplicable.sub(s_lastUpdateTime).mul(s_rewardRate)) (../../sc/dataset/mainnet/0x13534878a6ce8b50105333d7006aacbc69a07104.sol#1032)
	Staking.s_leftover (../../sc/dataset/mainnet/0x13534878a6ce8b50105333d7006aacbc69a07104.sol#1017) can be used in cross function reentrancies:
	- Staking.collectLeftover() (../../sc/dataset/mainnet/0x13534878a6ce8b50105333d7006aacbc69a07104.sol#1079-1085)
	- Staking.leftover() (../../sc/dataset/mainnet/0x13534878a6ce8b50105333d7006aacbc69a07104.sol#1211-1213)
	- Staking.updateReward(address) (../../sc/dataset/mainnet/0x13534878a6ce8b50105333d7006aacbc69a07104.sol#1028-1040)
	- getReward() (../../sc/dataset/mainnet/0x13534878a6ce8b50105333d7006aacbc69a07104.sol#1098)
		- s_rewardPerTokenStored = rewardPerToken() (../../sc/dataset/mainnet/0x13534878a6ce8b50105333d7006aacbc69a07104.sol#1029)
	Staking.s_rewardPerTokenStored (../../sc/dataset/mainnet/0x13534878a6ce8b50105333d7006aacbc69a07104.sol#1015) can be used in cross function reentrancies:
	- Staking.rewardPerToken() (../../sc/dataset/mainnet/0x13534878a6ce8b50105333d7006aacbc69a07104.sol#1132-1146)
	- Staking.rewardPerTokenStored() (../../sc/dataset/mainnet/0x13534878a6ce8b50105333d7006aacbc69a07104.sol#1191-1193)
	- Staking.updateReward(address) (../../sc/dataset/mainnet/0x13534878a6ce8b50105333d7006aacbc69a07104.sol#1028-1040)
	- getReward() (../../sc/dataset/mainnet/0x13534878a6ce8b50105333d7006aacbc69a07104.sol#1098)
		- s_rewards[msg.sender] = 0 (../../sc/dataset/mainnet/0x13534878a6ce8b50105333d7006aacbc69a07104.sol#1112)
		- s_rewards[account] = earned(account) (../../sc/dataset/mainnet/0x13534878a6ce8b50105333d7006aacbc69a07104.sol#1036)
	Staking.s_rewards (../../sc/dataset/mainnet/0x13534878a6ce8b50105333d7006aacbc69a07104.sol#1020) can be used in cross function reentrancies:
	- Staking.earned(address) (../../sc/dataset/mainnet/0x13534878a6ce8b50105333d7006aacbc69a07104.sol#1118-1130)
	- Staking.getReward() (../../sc/dataset/mainnet/0x13534878a6ce8b50105333d7006aacbc69a07104.sol#1109-1116)
	- Staking.rewards(address) (../../sc/dataset/mainnet/0x13534878a6ce8b50105333d7006aacbc69a07104.sol#1203-1205)
	- Staking.updateReward(address) (../../sc/dataset/mainnet/0x13534878a6ce8b50105333d7006aacbc69a07104.sol#1028-1040)
	- getReward() (../../sc/dataset/mainnet/0x13534878a6ce8b50105333d7006aacbc69a07104.sol#1098)
		- s_userRewardPerTokenPaid[account] = s_rewardPerTokenStored (../../sc/dataset/mainnet/0x13534878a6ce8b50105333d7006aacbc69a07104.sol#1037)
	Staking.s_userRewardPerTokenPaid (../../sc/dataset/mainnet/0x13534878a6ce8b50105333d7006aacbc69a07104.sol#1019) can be used in cross function reentrancies:
	- Staking.earned(address) (../../sc/dataset/mainnet/0x13534878a6ce8b50105333d7006aacbc69a07104.sol#1118-1130)
	- Staking.updateReward(address) (../../sc/dataset/mainnet/0x13534878a6ce8b50105333d7006aacbc69a07104.sol#1028-1040)
	- Staking.userRewardPerTokenPaid(address) (../../sc/dataset/mainnet/0x13534878a6ce8b50105333d7006aacbc69a07104.sol#1199-1201)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities
INFO:Detectors:
Staking.pairLimit(address).totalSupply (../../sc/dataset/mainnet/0x13534878a6ce8b50105333d7006aacbc69a07104.sol#1153) shadows:
	- Staking.totalSupply() (../../sc/dataset/mainnet/0x13534878a6ce8b50105333d7006aacbc69a07104.sol#1175-1177) (function)
Staking.pairInfo().totalSupply (../../sc/dataset/mainnet/0x13534878a6ce8b50105333d7006aacbc69a07104.sol#1159) shadows:
	- Staking.totalSupply() (../../sc/dataset/mainnet/0x13534878a6ce8b50105333d7006aacbc69a07104.sol#1175-1177) (function)
Staking.pairOtherBalance(uint256).totalSupply (../../sc/dataset/mainnet/0x13534878a6ce8b50105333d7006aacbc69a07104.sol#1166) shadows:
	- Staking.totalSupply() (../../sc/dataset/mainnet/0x13534878a6ce8b50105333d7006aacbc69a07104.sol#1175-1177) (function)
Staking.pairYieldBalance(uint256).totalSupply (../../sc/dataset/mainnet/0x13534878a6ce8b50105333d7006aacbc69a07104.sol#1171) shadows:
	- Staking.totalSupply() (../../sc/dataset/mainnet/0x13534878a6ce8b50105333d7006aacbc69a07104.sol#1175-1177) (function)
Staking.updateReward(address).lastTimeRewardApplicable (../../sc/dataset/mainnet/0x13534878a6ce8b50105333d7006aacbc69a07104.sol#1030) shadows:
	- Staking.lastTimeRewardApplicable() (../../sc/dataset/mainnet/0x13534878a6ce8b50105333d7006aacbc69a07104.sol#1148-1150) (function)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing
INFO:Detectors:
Staking.setStakingLimit(uint256) (../../sc/dataset/mainnet/0x13534878a6ce8b50105333d7006aacbc69a07104.sol#1062-1064) should emit an event for: 
	- s_stakingLimit = other (../../sc/dataset/mainnet/0x13534878a6ce8b50105333d7006aacbc69a07104.sol#1063) 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-arithmetic
INFO:Detectors:
Reentrancy in Staking.addReward(address,uint256,uint256) (../../sc/dataset/mainnet/0x13534878a6ce8b50105333d7006aacbc69a07104.sol#1066-1077):
	External calls:
	- YIELD.safeTransferFrom(from,address(this),amount) (../../sc/dataset/mainnet/0x13534878a6ce8b50105333d7006aacbc69a07104.sol#1075)
	Event emitted after the call(s):
	- RewardAdded(msg.sender,amount,duration) (../../sc/dataset/mainnet/0x13534878a6ce8b50105333d7006aacbc69a07104.sol#1076)
Reentrancy in Staking.collectLeftover() (../../sc/dataset/mainnet/0x13534878a6ce8b50105333d7006aacbc69a07104.sol#1079-1085):
	External calls:
	- YIELD.safeTransfer(msg.sender,amount) (../../sc/dataset/mainnet/0x13534878a6ce8b50105333d7006aacbc69a07104.sol#1083)
	Event emitted after the call(s):
	- LeftoverCollected(msg.sender,amount) (../../sc/dataset/mainnet/0x13534878a6ce8b50105333d7006aacbc69a07104.sol#1084)
Reentrancy in Staking.exit() (../../sc/dataset/mainnet/0x13534878a6ce8b50105333d7006aacbc69a07104.sol#1096-1099):
	External calls:
	- withdraw(s_balances[msg.sender]) (../../sc/dataset/mainnet/0x13534878a6ce8b50105333d7006aacbc69a07104.sol#1097)
		- returndata = address(token).functionCall(data,SafeERC20: low-level call failed) (../../sc/dataset/mainnet/0x13534878a6ce8b50105333d7006aacbc69a07104.sol#941)
		- (success,returndata) = target.call{value: weiValue}(data) (../../sc/dataset/mainnet/0x13534878a6ce8b50105333d7006aacbc69a07104.sol#556)
		- IERC20(address(PAIR)).safeTransfer(msg.sender,amount) (../../sc/dataset/mainnet/0x13534878a6ce8b50105333d7006aacbc69a07104.sol#1105)
	- getReward() (../../sc/dataset/mainnet/0x13534878a6ce8b50105333d7006aacbc69a07104.sol#1098)
		- returndata = address(token).functionCall(data,SafeERC20: low-level call failed) (../../sc/dataset/mainnet/0x13534878a6ce8b50105333d7006aacbc69a07104.sol#941)
		- YIELD.safeTransfer(msg.sender,reward) (../../sc/dataset/mainnet/0x13534878a6ce8b50105333d7006aacbc69a07104.sol#1113)
		- (success,returndata) = target.call{value: weiValue}(data) (../../sc/dataset/mainnet/0x13534878a6ce8b50105333d7006aacbc69a07104.sol#556)
	External calls sending eth:
	- withdraw(s_balances[msg.sender]) (../../sc/dataset/mainnet/0x13534878a6ce8b50105333d7006aacbc69a07104.sol#1097)
		- (success,returndata) = target.call{value: weiValue}(data) (../../sc/dataset/mainnet/0x13534878a6ce8b50105333d7006aacbc69a07104.sol#556)
	- getReward() (../../sc/dataset/mainnet/0x13534878a6ce8b50105333d7006aacbc69a07104.sol#1098)
		- (success,returndata) = target.call{value: weiValue}(data) (../../sc/dataset/mainnet/0x13534878a6ce8b50105333d7006aacbc69a07104.sol#556)
	Event emitted after the call(s):
	- RewardPaid(msg.sender,reward) (../../sc/dataset/mainnet/0x13534878a6ce8b50105333d7006aacbc69a07104.sol#1114)
		- getReward() (../../sc/dataset/mainnet/0x13534878a6ce8b50105333d7006aacbc69a07104.sol#1098)
Reentrancy in Staking.getReward() (../../sc/dataset/mainnet/0x13534878a6ce8b50105333d7006aacbc69a07104.sol#1109-1116):
	External calls:
	- YIELD.safeTransfer(msg.sender,reward) (../../sc/dataset/mainnet/0x13534878a6ce8b50105333d7006aacbc69a07104.sol#1113)
	Event emitted after the call(s):
	- RewardPaid(msg.sender,reward) (../../sc/dataset/mainnet/0x13534878a6ce8b50105333d7006aacbc69a07104.sol#1114)
Reentrancy in Staking.stake(uint256) (../../sc/dataset/mainnet/0x13534878a6ce8b50105333d7006aacbc69a07104.sol#1087-1094):
	External calls:
	- IERC20(address(PAIR)).safeTransferFrom(msg.sender,address(this),amount) (../../sc/dataset/mainnet/0x13534878a6ce8b50105333d7006aacbc69a07104.sol#1092)
	Event emitted after the call(s):
	- Staked(msg.sender,amount) (../../sc/dataset/mainnet/0x13534878a6ce8b50105333d7006aacbc69a07104.sol#1093)
Reentrancy in Staking.withdraw(uint256) (../../sc/dataset/mainnet/0x13534878a6ce8b50105333d7006aacbc69a07104.sol#1101-1107):
	External calls:
	- IERC20(address(PAIR)).safeTransfer(msg.sender,amount) (../../sc/dataset/mainnet/0x13534878a6ce8b50105333d7006aacbc69a07104.sol#1105)
	Event emitted after the call(s):
	- Withdrawn(msg.sender,amount) (../../sc/dataset/mainnet/0x13534878a6ce8b50105333d7006aacbc69a07104.sol#1106)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3
INFO:Detectors:
Staking.addReward(address,uint256,uint256) (../../sc/dataset/mainnet/0x13534878a6ce8b50105333d7006aacbc69a07104.sol#1066-1077) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(amount > duration,Staking: Cannot approve less than 1) (../../sc/dataset/mainnet/0x13534878a6ce8b50105333d7006aacbc69a07104.sol#1067)
	- now < s_periodFinish (../../sc/dataset/mainnet/0x13534878a6ce8b50105333d7006aacbc69a07104.sol#1070)
Staking.getReward() (../../sc/dataset/mainnet/0x13534878a6ce8b50105333d7006aacbc69a07104.sol#1109-1116) uses timestamp for comparisons
	Dangerous comparisons:
	- reward > 0 (../../sc/dataset/mainnet/0x13534878a6ce8b50105333d7006aacbc69a07104.sol#1111)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp
INFO:Detectors:
Address.isContract(address) (../../sc/dataset/mainnet/0x13534878a6ce8b50105333d7006aacbc69a07104.sol#459-468) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0x13534878a6ce8b50105333d7006aacbc69a07104.sol#466)
Address._functionCallWithValue(address,bytes,uint256,string) (../../sc/dataset/mainnet/0x13534878a6ce8b50105333d7006aacbc69a07104.sol#552-573) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0x13534878a6ce8b50105333d7006aacbc69a07104.sol#565-568)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage
INFO:Detectors:
AccessControl._setRoleAdmin(bytes32,bytes32) (../../sc/dataset/mainnet/0x13534878a6ce8b50105333d7006aacbc69a07104.sol#789-792) is never used and should be removed
Address.functionCall(address,bytes) (../../sc/dataset/mainnet/0x13534878a6ce8b50105333d7006aacbc69a07104.sol#512-514) is never used and should be removed
Address.functionCallWithValue(address,bytes,uint256) (../../sc/dataset/mainnet/0x13534878a6ce8b50105333d7006aacbc69a07104.sol#537-539) is never used and should be removed
Address.functionCallWithValue(address,bytes,uint256,string) (../../sc/dataset/mainnet/0x13534878a6ce8b50105333d7006aacbc69a07104.sol#547-550) is never used and should be removed
Address.sendValue(address,uint256) (../../sc/dataset/mainnet/0x13534878a6ce8b50105333d7006aacbc69a07104.sol#486-492) is never used and should be removed
Context._msgData() (../../sc/dataset/mainnet/0x13534878a6ce8b50105333d7006aacbc69a07104.sol#591-594) is never used and should be removed
EnumerableSet.add(EnumerableSet.UintSet,uint256) (../../sc/dataset/mainnet/0x13534878a6ce8b50105333d7006aacbc69a07104.sol#395-397) is never used and should be removed
EnumerableSet.at(EnumerableSet.UintSet,uint256) (../../sc/dataset/mainnet/0x13534878a6ce8b50105333d7006aacbc69a07104.sol#433-435) is never used and should be removed
EnumerableSet.contains(EnumerableSet.UintSet,uint256) (../../sc/dataset/mainnet/0x13534878a6ce8b50105333d7006aacbc69a07104.sol#412-414) is never used and should be removed
EnumerableSet.length(EnumerableSet.UintSet) (../../sc/dataset/mainnet/0x13534878a6ce8b50105333d7006aacbc69a07104.sol#419-421) is never used and should be removed
EnumerableSet.remove(EnumerableSet.UintSet,uint256) (../../sc/dataset/mainnet/0x13534878a6ce8b50105333d7006aacbc69a07104.sol#405-407) is never used and should be removed
Math.average(uint256,uint256) (../../sc/dataset/mainnet/0x13534878a6ce8b50105333d7006aacbc69a07104.sol#36-39) is never used and should be removed
Math.max(uint256,uint256) (../../sc/dataset/mainnet/0x13534878a6ce8b50105333d7006aacbc69a07104.sol#21-23) is never used and should be removed
SafeERC20.safeApprove(IERC20,address,uint256) (../../sc/dataset/mainnet/0x13534878a6ce8b50105333d7006aacbc69a07104.sol#909-918) is never used and should be removed
SafeERC20.safeDecreaseAllowance(IERC20,address,uint256) (../../sc/dataset/mainnet/0x13534878a6ce8b50105333d7006aacbc69a07104.sol#925-928) is never used and should be removed
SafeERC20.safeIncreaseAllowance(IERC20,address,uint256) (../../sc/dataset/mainnet/0x13534878a6ce8b50105333d7006aacbc69a07104.sol#920-923) is never used and should be removed
SafeMath.mod(uint256,uint256) (../../sc/dataset/mainnet/0x13534878a6ce8b50105333d7006aacbc69a07104.sol#176-178) is never used and should be removed
SafeMath.mod(uint256,uint256,string) (../../sc/dataset/mainnet/0x13534878a6ce8b50105333d7006aacbc69a07104.sol#192-195) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code
INFO:Detectors:
Pragma version0.6.12 (../../sc/dataset/mainnet/0x13534878a6ce8b50105333d7006aacbc69a07104.sol#12) allows old versions
solc-0.6.12 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity
INFO:Detectors:
Low level call in Address.sendValue(address,uint256) (../../sc/dataset/mainnet/0x13534878a6ce8b50105333d7006aacbc69a07104.sol#486-492):
	- (success) = recipient.call{value: amount}() (../../sc/dataset/mainnet/0x13534878a6ce8b50105333d7006aacbc69a07104.sol#490)
Low level call in Address._functionCallWithValue(address,bytes,uint256,string) (../../sc/dataset/mainnet/0x13534878a6ce8b50105333d7006aacbc69a07104.sol#552-573):
	- (success,returndata) = target.call{value: weiValue}(data) (../../sc/dataset/mainnet/0x13534878a6ce8b50105333d7006aacbc69a07104.sol#556)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls
INFO:Detectors:
Function IUniswapV2Pair.DOMAIN_SEPARATOR() (../../sc/dataset/mainnet/0x13534878a6ce8b50105333d7006aacbc69a07104.sol#964) is not in mixedCase
Function IUniswapV2Pair.PERMIT_TYPEHASH() (../../sc/dataset/mainnet/0x13534878a6ce8b50105333d7006aacbc69a07104.sol#965) is not in mixedCase
Function IUniswapV2Pair.MINIMUM_LIQUIDITY() (../../sc/dataset/mainnet/0x13534878a6ce8b50105333d7006aacbc69a07104.sol#982) is not in mixedCase
Variable Staking.PAIR (../../sc/dataset/mainnet/0x13534878a6ce8b50105333d7006aacbc69a07104.sol#1005) is not in mixedCase
Variable Staking.YIELD (../../sc/dataset/mainnet/0x13534878a6ce8b50105333d7006aacbc69a07104.sol#1007) is not in mixedCase
Variable Staking.s_totalSupply (../../sc/dataset/mainnet/0x13534878a6ce8b50105333d7006aacbc69a07104.sol#1011) is not in mixedCase
Variable Staking.s_periodFinish (../../sc/dataset/mainnet/0x13534878a6ce8b50105333d7006aacbc69a07104.sol#1012) is not in mixedCase
Variable Staking.s_rewardRate (../../sc/dataset/mainnet/0x13534878a6ce8b50105333d7006aacbc69a07104.sol#1013) is not in mixedCase
Variable Staking.s_lastUpdateTime (../../sc/dataset/mainnet/0x13534878a6ce8b50105333d7006aacbc69a07104.sol#1014) is not in mixedCase
Variable Staking.s_rewardPerTokenStored (../../sc/dataset/mainnet/0x13534878a6ce8b50105333d7006aacbc69a07104.sol#1015) is not in mixedCase
Variable Staking.s_stakingLimit (../../sc/dataset/mainnet/0x13534878a6ce8b50105333d7006aacbc69a07104.sol#1016) is not in mixedCase
Variable Staking.s_leftover (../../sc/dataset/mainnet/0x13534878a6ce8b50105333d7006aacbc69a07104.sol#1017) is not in mixedCase
Variable Staking.s_balances (../../sc/dataset/mainnet/0x13534878a6ce8b50105333d7006aacbc69a07104.sol#1018) is not in mixedCase
Variable Staking.s_userRewardPerTokenPaid (../../sc/dataset/mainnet/0x13534878a6ce8b50105333d7006aacbc69a07104.sol#1019) is not in mixedCase
Variable Staking.s_rewards (../../sc/dataset/mainnet/0x13534878a6ce8b50105333d7006aacbc69a07104.sol#1020) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions
INFO:Detectors:
Redundant expression "this (../../sc/dataset/mainnet/0x13534878a6ce8b50105333d7006aacbc69a07104.sol#592)" inContext (../../sc/dataset/mainnet/0x13534878a6ce8b50105333d7006aacbc69a07104.sol#586-595)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#redundant-statements
INFO:Detectors:
Staking.PAIR (../../sc/dataset/mainnet/0x13534878a6ce8b50105333d7006aacbc69a07104.sol#1005) should be immutable 
Staking.YIELD (../../sc/dataset/mainnet/0x13534878a6ce8b50105333d7006aacbc69a07104.sol#1007) should be immutable 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-immutable
INFO:Slither:/bdata2/sc/dataset/mainnet/0x13534878a6ce8b50105333d7006aacbc69a07104.sol analyzed (10 contracts with 85 detectors), 58 result(s) found
