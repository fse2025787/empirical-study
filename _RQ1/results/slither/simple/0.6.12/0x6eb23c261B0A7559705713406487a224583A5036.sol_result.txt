INFO:Detectors:
Reentrancy in LockPosition.invest(uint256,uint256) (../../sc/dataset/mainnet/0x6eb23c261B0A7559705713406487a224583A5036.sol#147-163):
	External calls:
	- IERC20(salesPeriod.pay).safeTransferFrom(msg.sender,recipient,amount) (../../sc/dataset/mainnet/0x6eb23c261B0A7559705713406487a224583A5036.sol#158)
	State variables written after the call(s):
	- lockedInfo.lockedAmount = lockedInfo.lockedAmount.add(number) (../../sc/dataset/mainnet/0x6eb23c261B0A7559705713406487a224583A5036.sol#160)
	LockPosition.investList (../../sc/dataset/mainnet/0x6eb23c261B0A7559705713406487a224583A5036.sol#37) can be used in cross function reentrancies:
	- LockPosition.invest(uint256,uint256) (../../sc/dataset/mainnet/0x6eb23c261B0A7559705713406487a224583A5036.sol#147-163)
	- LockPosition.investList (../../sc/dataset/mainnet/0x6eb23c261B0A7559705713406487a224583A5036.sol#37)
	- LockPosition.unlock(uint256) (../../sc/dataset/mainnet/0x6eb23c261B0A7559705713406487a224583A5036.sol#167-178)
	- lockedInfo.purchased = lockedInfo.purchased.add(amount) (../../sc/dataset/mainnet/0x6eb23c261B0A7559705713406487a224583A5036.sol#161)
	LockPosition.investList (../../sc/dataset/mainnet/0x6eb23c261B0A7559705713406487a224583A5036.sol#37) can be used in cross function reentrancies:
	- LockPosition.invest(uint256,uint256) (../../sc/dataset/mainnet/0x6eb23c261B0A7559705713406487a224583A5036.sol#147-163)
	- LockPosition.investList (../../sc/dataset/mainnet/0x6eb23c261B0A7559705713406487a224583A5036.sol#37)
	- LockPosition.unlock(uint256) (../../sc/dataset/mainnet/0x6eb23c261B0A7559705713406487a224583A5036.sol#167-178)
	- salesPeriod.salesVolume = salesPeriod.salesVolume.add(number) (../../sc/dataset/mainnet/0x6eb23c261B0A7559705713406487a224583A5036.sol#159)
	LockPosition.salesPeriods (../../sc/dataset/mainnet/0x6eb23c261B0A7559705713406487a224583A5036.sol#35) can be used in cross function reentrancies:
	- LockPosition.invest(uint256,uint256) (../../sc/dataset/mainnet/0x6eb23c261B0A7559705713406487a224583A5036.sol#147-163)
	- LockPosition.isAllowInvest(address,uint256) (../../sc/dataset/mainnet/0x6eb23c261B0A7559705713406487a224583A5036.sol#100-114)
	- LockPosition.salesPeriods (../../sc/dataset/mainnet/0x6eb23c261B0A7559705713406487a224583A5036.sol#35)
	- LockPosition.saveSalesPeriod(LockPosition.SalesPeriod) (../../sc/dataset/mainnet/0x6eb23c261B0A7559705713406487a224583A5036.sol#135-142)
	- LockPosition.unlock(uint256) (../../sc/dataset/mainnet/0x6eb23c261B0A7559705713406487a224583A5036.sol#167-178)
Reentrancy in LockPosition.unlock(uint256) (../../sc/dataset/mainnet/0x6eb23c261B0A7559705713406487a224583A5036.sol#167-178):
	External calls:
	- IGovToken(target).mint(msg.sender,unlockAmount) (../../sc/dataset/mainnet/0x6eb23c261B0A7559705713406487a224583A5036.sol#174)
	State variables written after the call(s):
	- lockedInfo.unlockedAmount = lockedInfo.unlockedAmount.add(unlockAmount) (../../sc/dataset/mainnet/0x6eb23c261B0A7559705713406487a224583A5036.sol#175)
	LockPosition.investList (../../sc/dataset/mainnet/0x6eb23c261B0A7559705713406487a224583A5036.sol#37) can be used in cross function reentrancies:
	- LockPosition.invest(uint256,uint256) (../../sc/dataset/mainnet/0x6eb23c261B0A7559705713406487a224583A5036.sol#147-163)
	- LockPosition.investList (../../sc/dataset/mainnet/0x6eb23c261B0A7559705713406487a224583A5036.sol#37)
	- LockPosition.unlock(uint256) (../../sc/dataset/mainnet/0x6eb23c261B0A7559705713406487a224583A5036.sol#167-178)
	- lockedInfo.lockedAmount = 0 (../../sc/dataset/mainnet/0x6eb23c261B0A7559705713406487a224583A5036.sol#176)
	LockPosition.investList (../../sc/dataset/mainnet/0x6eb23c261B0A7559705713406487a224583A5036.sol#37) can be used in cross function reentrancies:
	- LockPosition.invest(uint256,uint256) (../../sc/dataset/mainnet/0x6eb23c261B0A7559705713406487a224583A5036.sol#147-163)
	- LockPosition.investList (../../sc/dataset/mainnet/0x6eb23c261B0A7559705713406487a224583A5036.sol#37)
	- LockPosition.unlock(uint256) (../../sc/dataset/mainnet/0x6eb23c261B0A7559705713406487a224583A5036.sol#167-178)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1
INFO:Detectors:
LockPosition.transferOwnership(address) (../../sc/dataset/mainnet/0x6eb23c261B0A7559705713406487a224583A5036.sol#123-125) should emit an event for: 
	- owner = newOwner (../../sc/dataset/mainnet/0x6eb23c261B0A7559705713406487a224583A5036.sol#124) 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-access-control
INFO:Detectors:
LockPosition.init(address,address)._target (../../sc/dataset/mainnet/0x6eb23c261B0A7559705713406487a224583A5036.sol#84) lacks a zero-check on :
		- target = _target (../../sc/dataset/mainnet/0x6eb23c261B0A7559705713406487a224583A5036.sol#87)
LockPosition.init(address,address)._recipient (../../sc/dataset/mainnet/0x6eb23c261B0A7559705713406487a224583A5036.sol#84) lacks a zero-check on :
		- recipient = _recipient (../../sc/dataset/mainnet/0x6eb23c261B0A7559705713406487a224583A5036.sol#88)
LockPosition.updateRecipient(address)._recipient (../../sc/dataset/mainnet/0x6eb23c261B0A7559705713406487a224583A5036.sol#117) lacks a zero-check on :
		- recipient = _recipient (../../sc/dataset/mainnet/0x6eb23c261B0A7559705713406487a224583A5036.sol#118)
LockPosition.transferOwnership(address).newOwner (../../sc/dataset/mainnet/0x6eb23c261B0A7559705713406487a224583A5036.sol#123) lacks a zero-check on :
		- owner = newOwner (../../sc/dataset/mainnet/0x6eb23c261B0A7559705713406487a224583A5036.sol#124)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation
INFO:Detectors:
LockPosition.isAllowInvest(address,uint256) (../../sc/dataset/mainnet/0x6eb23c261B0A7559705713406487a224583A5036.sol#100-114) has external calls inside a loop: balance = fund.balanceOf(account) (../../sc/dataset/mainnet/0x6eb23c261B0A7559705713406487a224583A5036.sol#105)
LockPosition.isAllowInvest(address,uint256) (../../sc/dataset/mainnet/0x6eb23c261B0A7559705713406487a224583A5036.sol#100-114) has external calls inside a loop: amount = fund.convertToCash(balance) (../../sc/dataset/mainnet/0x6eb23c261B0A7559705713406487a224583A5036.sol#106)
LockPosition.isAllowInvest(address,uint256) (../../sc/dataset/mainnet/0x6eb23c261B0A7559705713406487a224583A5036.sol#100-114) has external calls inside a loop: assets = salesPeriod.fundLimit.mul(calcDecimal(fund.ioToken())) (../../sc/dataset/mainnet/0x6eb23c261B0A7559705713406487a224583A5036.sol#107)
LockPosition.calcDecimal(address) (../../sc/dataset/mainnet/0x6eb23c261B0A7559705713406487a224583A5036.sol#94-97) has external calls inside a loop: 10 ** uint256(ioToken.decimals()) (../../sc/dataset/mainnet/0x6eb23c261B0A7559705713406487a224583A5036.sol#96)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation/#calls-inside-a-loop
INFO:Detectors:
Reentrancy in LockPosition.invest(uint256,uint256) (../../sc/dataset/mainnet/0x6eb23c261B0A7559705713406487a224583A5036.sol#147-163):
	External calls:
	- IERC20(salesPeriod.pay).safeTransferFrom(msg.sender,recipient,amount) (../../sc/dataset/mainnet/0x6eb23c261B0A7559705713406487a224583A5036.sol#158)
	Event emitted after the call(s):
	- Invest(msg.sender,period,number,amount) (../../sc/dataset/mainnet/0x6eb23c261B0A7559705713406487a224583A5036.sol#162)
Reentrancy in LockPosition.unlock(uint256) (../../sc/dataset/mainnet/0x6eb23c261B0A7559705713406487a224583A5036.sol#167-178):
	External calls:
	- IGovToken(target).mint(msg.sender,unlockAmount) (../../sc/dataset/mainnet/0x6eb23c261B0A7559705713406487a224583A5036.sol#174)
	Event emitted after the call(s):
	- unLocked(msg.sender,period,unlockAmount) (../../sc/dataset/mainnet/0x6eb23c261B0A7559705713406487a224583A5036.sol#177)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3
INFO:Detectors:
LockPosition.saveSalesPeriod(LockPosition.SalesPeriod) (../../sc/dataset/mainnet/0x6eb23c261B0A7559705713406487a224583A5036.sol#135-142) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(salesPeriods[salesPeriod.period].pay == address(0) || salesPeriods[salesPeriod.period].startTime >= block.timestamp,already active) (../../sc/dataset/mainnet/0x6eb23c261B0A7559705713406487a224583A5036.sol#136-137)
LockPosition.invest(uint256,uint256) (../../sc/dataset/mainnet/0x6eb23c261B0A7559705713406487a224583A5036.sol#147-163) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(salesPeriod.startTime <= block.timestamp && salesPeriod.endTime >= block.timestamp,not active) (../../sc/dataset/mainnet/0x6eb23c261B0A7559705713406487a224583A5036.sol#150-151)
LockPosition.unlock(uint256) (../../sc/dataset/mainnet/0x6eb23c261B0A7559705713406487a224583A5036.sol#167-178) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(block.timestamp >= salesPeriod.endTime,not complete) (../../sc/dataset/mainnet/0x6eb23c261B0A7559705713406487a224583A5036.sol#170)
	- require(bool,string)(block.timestamp.sub(salesPeriod.endTime) >= salesPeriod.lockTime,locked) (../../sc/dataset/mainnet/0x6eb23c261B0A7559705713406487a224583A5036.sol#171)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp
INFO:Detectors:
Address.isContract(address) (../../sc/dataset/mainnet/0x6eb23c261B0A7559705713406487a224583A5036.sol#571-580) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0x6eb23c261B0A7559705713406487a224583A5036.sol#578)
Address._verifyCallResult(bool,bytes,string) (../../sc/dataset/mainnet/0x6eb23c261B0A7559705713406487a224583A5036.sol#716-733) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0x6eb23c261B0A7559705713406487a224583A5036.sol#725-728)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage
INFO:Detectors:
Different versions of Solidity are used:
	- Version used: ['>=0.6.0<0.8.0', '>=0.6.2<0.8.0', '^0.6.12']
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x6eb23c261B0A7559705713406487a224583A5036.sol#257)
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x6eb23c261B0A7559705713406487a224583A5036.sol#333)
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x6eb23c261B0A7559705713406487a224583A5036.sol#738)
	- >=0.6.2<0.8.0 (../../sc/dataset/mainnet/0x6eb23c261B0A7559705713406487a224583A5036.sol#548)
	- ABIEncoderV2 (../../sc/dataset/mainnet/0x6eb23c261B0A7559705713406487a224583A5036.sol#2)
	- ^0.6.12 (../../sc/dataset/mainnet/0x6eb23c261B0A7559705713406487a224583A5036.sol#5)
	- ^0.6.12 (../../sc/dataset/mainnet/0x6eb23c261B0A7559705713406487a224583A5036.sol#182)
	- ^0.6.12 (../../sc/dataset/mainnet/0x6eb23c261B0A7559705713406487a224583A5036.sol#208)
	- ^0.6.12 (../../sc/dataset/mainnet/0x6eb23c261B0A7559705713406487a224583A5036.sol#235)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#different-pragma-directives-are-used
INFO:Detectors:
Address.functionCall(address,bytes) (../../sc/dataset/mainnet/0x6eb23c261B0A7559705713406487a224583A5036.sol#624-626) is never used and should be removed
Address.functionCallWithValue(address,bytes,uint256) (../../sc/dataset/mainnet/0x6eb23c261B0A7559705713406487a224583A5036.sol#649-651) is never used and should be removed
Address.functionDelegateCall(address,bytes) (../../sc/dataset/mainnet/0x6eb23c261B0A7559705713406487a224583A5036.sol#698-700) is never used and should be removed
Address.functionDelegateCall(address,bytes,string) (../../sc/dataset/mainnet/0x6eb23c261B0A7559705713406487a224583A5036.sol#708-714) is never used and should be removed
Address.functionStaticCall(address,bytes) (../../sc/dataset/mainnet/0x6eb23c261B0A7559705713406487a224583A5036.sol#674-676) is never used and should be removed
Address.functionStaticCall(address,bytes,string) (../../sc/dataset/mainnet/0x6eb23c261B0A7559705713406487a224583A5036.sol#684-690) is never used and should be removed
Address.sendValue(address,uint256) (../../sc/dataset/mainnet/0x6eb23c261B0A7559705713406487a224583A5036.sol#598-604) is never used and should be removed
SafeERC20.safeApprove(IERC20,address,uint256) (../../sc/dataset/mainnet/0x6eb23c261B0A7559705713406487a224583A5036.sol#291-300) is never used and should be removed
SafeERC20.safeDecreaseAllowance(IERC20,address,uint256) (../../sc/dataset/mainnet/0x6eb23c261B0A7559705713406487a224583A5036.sol#307-310) is never used and should be removed
SafeERC20.safeIncreaseAllowance(IERC20,address,uint256) (../../sc/dataset/mainnet/0x6eb23c261B0A7559705713406487a224583A5036.sol#302-305) is never used and should be removed
SafeERC20.safeTransfer(IERC20,address,uint256) (../../sc/dataset/mainnet/0x6eb23c261B0A7559705713406487a224583A5036.sol#276-278) is never used and should be removed
SafeMath.div(uint256,uint256,string) (../../sc/dataset/mainnet/0x6eb23c261B0A7559705713406487a224583A5036.sol#520-523) is never used and should be removed
SafeMath.mod(uint256,uint256) (../../sc/dataset/mainnet/0x6eb23c261B0A7559705713406487a224583A5036.sol#482-485) is never used and should be removed
SafeMath.mod(uint256,uint256,string) (../../sc/dataset/mainnet/0x6eb23c261B0A7559705713406487a224583A5036.sol#540-543) is never used and should be removed
SafeMath.sub(uint256,uint256,string) (../../sc/dataset/mainnet/0x6eb23c261B0A7559705713406487a224583A5036.sol#500-503) is never used and should be removed
SafeMath.tryAdd(uint256,uint256) (../../sc/dataset/mainnet/0x6eb23c261B0A7559705713406487a224583A5036.sol#354-358) is never used and should be removed
SafeMath.tryDiv(uint256,uint256) (../../sc/dataset/mainnet/0x6eb23c261B0A7559705713406487a224583A5036.sol#390-393) is never used and should be removed
SafeMath.tryMod(uint256,uint256) (../../sc/dataset/mainnet/0x6eb23c261B0A7559705713406487a224583A5036.sol#400-403) is never used and should be removed
SafeMath.tryMul(uint256,uint256) (../../sc/dataset/mainnet/0x6eb23c261B0A7559705713406487a224583A5036.sol#375-383) is never used and should be removed
SafeMath.trySub(uint256,uint256) (../../sc/dataset/mainnet/0x6eb23c261B0A7559705713406487a224583A5036.sol#365-368) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code
INFO:Detectors:
Pragma version^0.6.12 (../../sc/dataset/mainnet/0x6eb23c261B0A7559705713406487a224583A5036.sol#5) allows old versions
Pragma version^0.6.12 (../../sc/dataset/mainnet/0x6eb23c261B0A7559705713406487a224583A5036.sol#182) allows old versions
Pragma version^0.6.12 (../../sc/dataset/mainnet/0x6eb23c261B0A7559705713406487a224583A5036.sol#208) allows old versions
Pragma version^0.6.12 (../../sc/dataset/mainnet/0x6eb23c261B0A7559705713406487a224583A5036.sol#235) allows old versions
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x6eb23c261B0A7559705713406487a224583A5036.sol#257) is too complex
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x6eb23c261B0A7559705713406487a224583A5036.sol#333) is too complex
Pragma version>=0.6.2<0.8.0 (../../sc/dataset/mainnet/0x6eb23c261B0A7559705713406487a224583A5036.sol#548) is too complex
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x6eb23c261B0A7559705713406487a224583A5036.sol#738) is too complex
solc-0.6.12 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity
INFO:Detectors:
Low level call in Address.sendValue(address,uint256) (../../sc/dataset/mainnet/0x6eb23c261B0A7559705713406487a224583A5036.sol#598-604):
	- (success) = recipient.call{value: amount}() (../../sc/dataset/mainnet/0x6eb23c261B0A7559705713406487a224583A5036.sol#602)
Low level call in Address.functionCallWithValue(address,bytes,uint256,string) (../../sc/dataset/mainnet/0x6eb23c261B0A7559705713406487a224583A5036.sol#659-666):
	- (success,returndata) = target.call{value: value}(data) (../../sc/dataset/mainnet/0x6eb23c261B0A7559705713406487a224583A5036.sol#664)
Low level call in Address.functionStaticCall(address,bytes,string) (../../sc/dataset/mainnet/0x6eb23c261B0A7559705713406487a224583A5036.sol#684-690):
	- (success,returndata) = target.staticcall(data) (../../sc/dataset/mainnet/0x6eb23c261B0A7559705713406487a224583A5036.sol#688)
Low level call in Address.functionDelegateCall(address,bytes,string) (../../sc/dataset/mainnet/0x6eb23c261B0A7559705713406487a224583A5036.sol#708-714):
	- (success,returndata) = target.delegatecall(data) (../../sc/dataset/mainnet/0x6eb23c261B0A7559705713406487a224583A5036.sol#712)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls
INFO:Detectors:
Event LockPositionunLocked(address,uint256,uint256) (../../sc/dataset/mainnet/0x6eb23c261B0A7559705713406487a224583A5036.sol#42) is not in CapWords
Parameter LockPosition.init(address,address)._target (../../sc/dataset/mainnet/0x6eb23c261B0A7559705713406487a224583A5036.sol#84) is not in mixedCase
Parameter LockPosition.init(address,address)._recipient (../../sc/dataset/mainnet/0x6eb23c261B0A7559705713406487a224583A5036.sol#84) is not in mixedCase
Parameter LockPosition.updateRecipient(address)._recipient (../../sc/dataset/mainnet/0x6eb23c261B0A7559705713406487a224583A5036.sol#117) is not in mixedCase
Parameter LockPosition.bindFund(address[])._funds (../../sc/dataset/mainnet/0x6eb23c261B0A7559705713406487a224583A5036.sol#129) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions
INFO:Slither:/bdata2/sc/dataset/mainnet/0x6eb23c261B0A7559705713406487a224583A5036.sol analyzed (8 contracts with 85 detectors), 57 result(s) found
