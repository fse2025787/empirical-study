Compilation warnings/errors on /bdata2/sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol:
Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> /bdata2/sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol

Warning: Source file does not specify required compiler version! Consider adding "pragma solidity ^0.6.12;"
--> /bdata2/sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol

Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    --> /bdata2/sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol:1616:26:
     |
1616 |     function tendTrigger(uint256 callCostInWei) public view virtual returns (bool) {
     |                          ^^^^^^^^^^^^^^^^^^^^^

Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    --> /bdata2/sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol:2224:9:
     |
2224 |         address _vault,
     |         ^^^^^^^^^^^^^^

Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    --> /bdata2/sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol:2299:29:
     |
2299 |     function adjustPosition(uint256 _debtOutstanding) internal override {
     |                             ^^^^^^^^^^^^^^^^^^^^^^^^

Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    --> /bdata2/sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol:2355:24:
     |
2355 |     function ethToWant(uint256 _amtInWei)
     |                        ^^^^^^^^^^^^^^^^^

Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    --> /bdata2/sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol:2567:9:
     |
2567 |         address operator,
     |         ^^^^^^^^^^^^^^^^

Warning: Function state mutability can be restricted to pure
    --> /bdata2/sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol:1204:5:
     |
1204 |     function delegatedAssets() external view virtual returns (uint256) {
     |     ^ (Relevant source part starts here and spans across multiple lines).

Warning: Function state mutability can be restricted to pure
    --> /bdata2/sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol:1616:5:
     |
1616 |     function tendTrigger(uint256 callCostInWei) public view virtual returns (bool) {
     |     ^ (Relevant source part starts here and spans across multiple lines).

Warning: Contract code size exceeds 24576 bytes (a limit introduced in Spurious Dragon). This contract may not be deployable on mainnet. Consider enabling the optimizer (with a low "runs" value!), turning off revert strings, or using libraries.
    --> /bdata2/sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol:2175:1:
     |
2175 | contract Strategy is BaseStrategy, IERC721Receiver {
     | ^ (Relevant source part starts here and spans across multiple lines).


INFO:Detectors:
Reentrancy in Strategy.adjustPosition(uint256) (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2299-2302):
	External calls:
	- _claim() (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2300)
		- returndata = address(token).functionCall(data,SafeERC20: low-level call failed) (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#969)
		- vestNft.withdraw(vestId()) (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2417)
		- (success,returndata) = target.call{value: weiValue}(data) (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#129)
		- reward.safeTransfer(keep,_rewardAmountToKeep) (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2425)
	- _invest() (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2301)
		- futureInterest = pool.calculateInterestAmount(loose,timeLeft) (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2389)
		- pool.topupDeposit(depositId,loose) (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2391)
		- futureInterest_scope_0 = pool.calculateInterestAmount(loose,maturationPeriod) (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2396)
		- (depositId,None) = pool.deposit(loose,uint64(now + maturationPeriod)) (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2401-2404)
	External calls sending eth:
	- _claim() (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2300)
		- (success,returndata) = target.call{value: weiValue}(data) (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#129)
	State variables written after the call(s):
	- _invest() (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2301)
		- (depositId,None) = pool.deposit(loose,uint64(now + maturationPeriod)) (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2401-2404)
	Strategy.depositId (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2185) can be used in cross function reentrancies:
	- Strategy._claim() (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2414-2428)
	- Strategy._invest() (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2380-2407)
	- Strategy._poolWithdraw(uint256) (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2435-2448)
	- Strategy.balanceOfPooled() (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2457-2466)
	- Strategy.depositId (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2185)
	- Strategy.getDepositInfo() (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2480-2486)
	- Strategy.getEarlyWithdrawFee() (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2502-2509)
	- Strategy.hasMatured() (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2492-2495)
	- Strategy.onERC721Received(address,address,uint256,bytes) (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2566-2580)
	- Strategy.overrideDepositId(uint64) (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2450-2452)
	- Strategy.prepareMigration(address) (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2338-2346)
	- Strategy.prepareReturn(uint256) (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2256-2296)
	- Strategy.vestId() (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2497-2499)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities
INFO:Detectors:
Strategy._poolWithdraw(uint256) (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2435-2448) uses a dangerous strict equality:
	- require(bool,string)(getEarlyWithdrawFee() == 0,!free) (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2440)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dangerous-strict-equalities
INFO:Detectors:
Reentrancy in Strategy._invest() (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2380-2407):
	External calls:
	- futureInterest_scope_0 = pool.calculateInterestAmount(loose,maturationPeriod) (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2396)
	- (depositId,None) = pool.deposit(loose,uint64(now + maturationPeriod)) (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2401-2404)
	State variables written after the call(s):
	- (depositId,None) = pool.deposit(loose,uint64(now + maturationPeriod)) (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2401-2404)
	Strategy.depositId (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2185) can be used in cross function reentrancies:
	- Strategy._claim() (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2414-2428)
	- Strategy._invest() (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2380-2407)
	- Strategy._poolWithdraw(uint256) (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2435-2448)
	- Strategy.balanceOfPooled() (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2457-2466)
	- Strategy.depositId (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2185)
	- Strategy.getDepositInfo() (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2480-2486)
	- Strategy.getEarlyWithdrawFee() (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2502-2509)
	- Strategy.hasMatured() (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2492-2495)
	- Strategy.onERC721Received(address,address,uint256,bytes) (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2566-2580)
	- Strategy.overrideDepositId(uint64) (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2450-2452)
	- Strategy.prepareMigration(address) (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2338-2346)
	- Strategy.prepareReturn(uint256) (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2256-2296)
	- Strategy.vestId() (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2497-2499)
Reentrancy in Strategy.prepareReturn(uint256) (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2256-2296):
	External calls:
	- freed = liquidateAllPositions() (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2273)
		- pool.withdraw(depositId,_virtualAmount,! hasMatured()) (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2446)
	- (freed,_loss) = liquidatePosition(toLiquidate) (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2278)
		- pool.withdraw(depositId,_virtualAmount,! hasMatured()) (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2446)
	State variables written after the call(s):
	- depositId = 0 (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2294)
	Strategy.depositId (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2185) can be used in cross function reentrancies:
	- Strategy._claim() (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2414-2428)
	- Strategy._invest() (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2380-2407)
	- Strategy._poolWithdraw(uint256) (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2435-2448)
	- Strategy.balanceOfPooled() (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2457-2466)
	- Strategy.depositId (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2185)
	- Strategy.getDepositInfo() (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2480-2486)
	- Strategy.getEarlyWithdrawFee() (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2502-2509)
	- Strategy.hasMatured() (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2492-2495)
	- Strategy.onERC721Received(address,address,uint256,bytes) (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2566-2580)
	- Strategy.overrideDepositId(uint64) (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2450-2452)
	- Strategy.prepareMigration(address) (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2338-2346)
	- Strategy.prepareReturn(uint256) (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2256-2296)
	- Strategy.vestId() (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2497-2499)
Reentrancy in BaseStrategy.setRewards(address) (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#1384-1390):
	External calls:
	- vault.approve(rewards,0) (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#1386)
	State variables written after the call(s):
	- rewards = _rewards (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#1387)
	BaseStrategy.rewards (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#1210) can be used in cross function reentrancies:
	- BaseStrategy._initialize(address,address,address,address) (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#1312-1334)
	- BaseStrategy.rewards (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#1210)
	- BaseStrategy.setRewards(address) (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#1384-1390)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1
INFO:Detectors:
BaseStrategy.sweep(address).i (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#1863) is a local variable never initialized
Strategy.prepareReturn(uint256).freed (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2270) is a local variable never initialized
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#uninitialized-local-variables
INFO:Detectors:
BaseStrategy._initialize(address,address,address,address) (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#1312-1334) ignores return value by vault.approve(rewards,uint256(- 1)) (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#1333)
BaseStrategy.setRewards(address) (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#1384-1390) ignores return value by vault.approve(rewards,0) (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#1386)
BaseStrategy.setRewards(address) (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#1384-1390) ignores return value by vault.approve(rewards,uint256(- 1)) (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#1388)
Strategy._invest() (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2380-2407) ignores return value by pool.topupDeposit(depositId,loose) (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2391)
Strategy._claim() (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2414-2428) ignores return value by vestNft.withdraw(vestId()) (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2417)
Strategy._poolWithdraw(uint256) (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2435-2448) ignores return value by pool.withdraw(depositId,_virtualAmount,! hasMatured()) (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2446)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return
INFO:Detectors:
ERC20.constructor(string,string).name (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#529) shadows:
	- ERC20.name() (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#538-540) (function)
ERC20.constructor(string,string).symbol (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#529) shadows:
	- ERC20.symbol() (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#546-548) (function)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing
INFO:Detectors:
Strategy.overrideDepositId(uint64) (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2450-2452) should emit an event for: 
	- depositId = _id (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2451) 
Strategy.setMaturationPeriod(uint64) (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2533-2540) should emit an event for: 
	- maturationPeriod = _maturationUnix (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2539) 
Strategy.setMinWithdraw(uint256) (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2548-2550) should emit an event for: 
	- minWithdraw = _minWithdraw (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2549) 
Strategy.setKeepParams(address,uint256) (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2556-2563) should emit an event for: 
	- keepBips = _keepBips (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2562) 
Strategy.onERC721Received(address,address,uint256,bytes) (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2566-2580) should emit an event for: 
	- depositId = uint64(tokenId) (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2577) 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-arithmetic
INFO:Detectors:
BaseStrategy.setHealthCheck(address)._healthCheck (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#1336) lacks a zero-check on :
		- healthCheck = _healthCheck (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#1337)
Strategy.setOldStrategy(address)._oldStrategy (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2543) lacks a zero-check on :
		- oldStrategy = _oldStrategy (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2544)
Strategy.setKeepParams(address,uint256)._keep (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2556) lacks a zero-check on :
		- keep = _keep (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2561)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation
INFO:Detectors:
Reentrancy in BaseStrategy._initialize(address,address,address,address) (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#1312-1334):
	External calls:
	- want.safeApprove(_vault,uint256(- 1)) (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#1322)
	State variables written after the call(s):
	- debtThreshold = 0 (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#1331)
	- keeper = _keeper (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#1325)
	- maxReportDelay = 86400 (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#1329)
	- minReportDelay = 0 (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#1328)
	- profitFactor = 100 (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#1330)
	- rewards = _rewards (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#1324)
	- strategist = _strategist (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#1323)
Reentrancy in Strategy._initializeStrat(address,address,string) (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2223-2244):
	External calls:
	- want.safeApprove(address(pool),max) (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2239)
	State variables written after the call(s):
	- keep = governance() (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2242)
	- keepBips = 0 (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2243)
Reentrancy in BaseStrategy.harvest() (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#1722-1758):
	External calls:
	- debtOutstanding = vault.report(profit,loss,debtPayment) (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#1745)
	State variables written after the call(s):
	- doHealthCheck = true (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#1754)
Reentrancy in Strategy.initialize(address,address,address,address,address,string) (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2211-2221):
	External calls:
	- _initialize(_vault,_strategist,_rewards,_keeper) (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2219)
		- returndata = address(token).functionCall(data,SafeERC20: low-level call failed) (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#969)
		- want.safeApprove(_vault,uint256(- 1)) (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#1322)
		- (success,returndata) = target.call{value: weiValue}(data) (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#129)
		- vault.approve(rewards,uint256(- 1)) (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#1333)
	- _initializeStrat(_vault,_pool,_strategyName) (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2220)
		- returndata = address(token).functionCall(data,SafeERC20: low-level call failed) (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#969)
		- (success,returndata) = target.call{value: weiValue}(data) (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#129)
		- want.safeApprove(address(pool),max) (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2239)
	External calls sending eth:
	- _initialize(_vault,_strategist,_rewards,_keeper) (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2219)
		- (success,returndata) = target.call{value: weiValue}(data) (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#129)
	- _initializeStrat(_vault,_pool,_strategyName) (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2220)
		- (success,returndata) = target.call{value: weiValue}(data) (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#129)
	State variables written after the call(s):
	- _initializeStrat(_vault,_pool,_strategyName) (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2220)
		- depositNft = INft(pool.depositNFT()) (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2233)
	- _initializeStrat(_vault,_pool,_strategyName) (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2220)
		- healthCheck = address(0xDDCea799fF1699e98EDF118e0629A974Df7DF012) (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2234)
	- _initializeStrat(_vault,_pool,_strategyName) (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2220)
		- keep = governance() (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2242)
	- _initializeStrat(_vault,_pool,_strategyName) (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2220)
		- keepBips = 0 (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2243)
	- _initializeStrat(_vault,_pool,_strategyName) (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2220)
		- maturationPeriod = 5 * 24 * 60 * 60 (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2237)
	- _initializeStrat(_vault,_pool,_strategyName) (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2220)
		- reward = IERC20(vestNft.token()) (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2232)
	- _initializeStrat(_vault,_pool,_strategyName) (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2220)
		- strategyName = _strategyName (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2228)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2
INFO:Detectors:
Reentrancy in BaseStrategyInitializable.clone(address,address,address,address) (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#1889-1910):
	External calls:
	- BaseStrategyInitializable(newStrategy).initialize(_vault,_strategist,_rewards,_keeper) (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#1907)
	Event emitted after the call(s):
	- Cloned(newStrategy) (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#1909)
Reentrancy in BaseStrategy.harvest() (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#1722-1758):
	External calls:
	- debtOutstanding = vault.report(profit,loss,debtPayment) (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#1745)
	Event emitted after the call(s):
	- Harvested(profit,loss,debtPayment,debtOutstanding) (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#1757)
Reentrancy in BaseStrategy.setEmergencyExit() (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#1814-1819):
	External calls:
	- vault.revokeStrategy() (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#1816)
	Event emitted after the call(s):
	- EmergencyExitEnabled() (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#1818)
Reentrancy in BaseStrategy.setRewards(address) (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#1384-1390):
	External calls:
	- vault.approve(rewards,0) (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#1386)
	- vault.approve(rewards,uint256(- 1)) (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#1388)
	Event emitted after the call(s):
	- UpdatedRewards(_rewards) (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#1389)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3
INFO:Detectors:
BaseStrategy.harvestTrigger(uint256) (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#1670-1703) uses timestamp for comparisons
	Dangerous comparisons:
	- block.timestamp.sub(params.lastReport) < minReportDelay (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#1678)
	- block.timestamp.sub(params.lastReport) >= maxReportDelay (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#1681)
Strategy.prepareReturn(uint256) (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2256-2296) uses timestamp for comparisons
	Dangerous comparisons:
	- toLiquidate > 0 (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2277)
	- _profit > _loss (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2285)
	- totalAssets > totalDebt (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2268)
Strategy.liquidatePosition(uint256) (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2304-2328) uses timestamp for comparisons
	Dangerous comparisons:
	- _amountNeeded > 0 (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2309)
	- _amountNeeded > loose (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2311)
Strategy._invest() (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2380-2407) uses timestamp for comparisons
	Dangerous comparisons:
	- depositId != 0 (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2383)
	- loose > 0 && ! hasMatured() (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2387)
	- futureInterest > 0 (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2390)
Strategy._claim() (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2414-2428) uses timestamp for comparisons
	Dangerous comparisons:
	- depositId != 0 && balanceOfClaimableReward() > 0 (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2416)
Strategy._poolWithdraw(uint256) (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2435-2448) uses timestamp for comparisons
	Dangerous comparisons:
	- ! hasMatured() && ! allowEarlyWithdrawFee (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2439)
	- require(bool,string)(getEarlyWithdrawFee() == 0,!free) (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2440)
	- _virtualAmount > minWithdraw (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2443)
Strategy.balanceOfPooled() (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2457-2466) uses timestamp for comparisons
	Dangerous comparisons:
	- depositId != 0 (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2458)
Strategy.hasMatured() (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2492-2495) uses timestamp for comparisons
	Dangerous comparisons:
	- depositId != 0 (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2493-2494)
	- now > getDepositInfo().maturationTimestamp (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2493-2494)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp
INFO:Detectors:
Address.isContract(address) (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#32-41) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#39)
Address._functionCallWithValue(address,bytes,uint256,string) (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#125-146) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#138-141)
BaseStrategyInitializable.clone(address,address,address,address) (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#1889-1910) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#1898-1905)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage
INFO:Detectors:
Address.functionCall(address,bytes) (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#85-87) is never used and should be removed
Address.functionCallWithValue(address,bytes,uint256) (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#110-112) is never used and should be removed
Address.functionCallWithValue(address,bytes,uint256,string) (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#120-123) is never used and should be removed
Address.sendValue(address,uint256) (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#59-65) is never used and should be removed
Context._msgData() (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#166-169) is never used and should be removed
ERC20._burn(address,uint256) (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#722-730) is never used and should be removed
ERC20._mint(address,uint256) (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#701-709) is never used and should be removed
ERC20._setupDecimals(uint8) (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#760-762) is never used and should be removed
Math.average(uint256,uint256) (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#316-319) is never used and should be removed
Math.max(uint256,uint256) (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#301-303) is never used and should be removed
SafeERC20.safeDecreaseAllowance(IERC20,address,uint256) (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#953-956) is never used and should be removed
SafeERC20.safeIncreaseAllowance(IERC20,address,uint256) (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#948-951) is never used and should be removed
SafeERC20.safeTransferFrom(IERC20,address,address,uint256) (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#926-928) is never used and should be removed
SafeMath.mod(uint256,uint256) (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#458-460) is never used and should be removed
SafeMath.mod(uint256,uint256,string) (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#474-477) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code
INFO:Detectors:
solc-0.6.12 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity
INFO:Detectors:
Low level call in Address.sendValue(address,uint256) (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#59-65):
	- (success) = recipient.call{value: amount}() (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#63)
Low level call in Address._functionCallWithValue(address,bytes,uint256,string) (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#125-146):
	- (success,returndata) = target.call{value: weiValue}(data) (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#129)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls
INFO:Detectors:
Parameter BaseStrategy.setHealthCheck(address)._healthCheck (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#1336) is not in mixedCase
Parameter BaseStrategy.setDoHealthCheck(bool)._doHealthCheck (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#1340) is not in mixedCase
Parameter BaseStrategy.setStrategist(address)._strategist (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#1351) is not in mixedCase
Parameter BaseStrategy.setKeeper(address)._keeper (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#1370) is not in mixedCase
Parameter BaseStrategy.setRewards(address)._rewards (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#1384) is not in mixedCase
Parameter BaseStrategy.setMinReportDelay(uint256)._delay (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#1404) is not in mixedCase
Parameter BaseStrategy.setMaxReportDelay(uint256)._delay (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#1421) is not in mixedCase
Parameter BaseStrategy.setProfitFactor(uint256)._profitFactor (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#1436) is not in mixedCase
Parameter BaseStrategy.setDebtThreshold(uint256)._debtThreshold (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#1454) is not in mixedCase
Parameter BaseStrategy.setMetadataURI(string)._metadataURI (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#1467) is not in mixedCase
Parameter BaseStrategy.withdraw(uint256)._amountNeeded (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#1768) is not in mixedCase
Parameter BaseStrategy.migrate(address)._newStrategy (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#1797) is not in mixedCase
Parameter BaseStrategy.sweep(address)._token (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#1858) is not in mixedCase
Parameter BaseStrategyInitializable.initialize(address,address,address,address)._vault (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#1876) is not in mixedCase
Parameter BaseStrategyInitializable.initialize(address,address,address,address)._strategist (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#1877) is not in mixedCase
Parameter BaseStrategyInitializable.initialize(address,address,address,address)._rewards (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#1878) is not in mixedCase
Parameter BaseStrategyInitializable.initialize(address,address,address,address)._keeper (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#1879) is not in mixedCase
Parameter BaseStrategyInitializable.clone(address)._vault (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#1884) is not in mixedCase
Parameter BaseStrategyInitializable.clone(address,address,address,address)._vault (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#1890) is not in mixedCase
Parameter BaseStrategyInitializable.clone(address,address,address,address)._strategist (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#1891) is not in mixedCase
Parameter BaseStrategyInitializable.clone(address,address,address,address)._rewards (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#1892) is not in mixedCase
Parameter BaseStrategyInitializable.clone(address,address,address,address)._keeper (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#1893) is not in mixedCase
Parameter Strategy.initialize(address,address,address,address,address,string)._vault (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2212) is not in mixedCase
Parameter Strategy.initialize(address,address,address,address,address,string)._strategist (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2213) is not in mixedCase
Parameter Strategy.initialize(address,address,address,address,address,string)._rewards (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2214) is not in mixedCase
Parameter Strategy.initialize(address,address,address,address,address,string)._keeper (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2215) is not in mixedCase
Parameter Strategy.initialize(address,address,address,address,address,string)._pool (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2216) is not in mixedCase
Parameter Strategy.initialize(address,address,address,address,address,string)._strategyName (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2217) is not in mixedCase
Parameter Strategy.prepareReturn(uint256)._debtOutstanding (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2256) is not in mixedCase
Parameter Strategy.liquidatePosition(uint256)._amountNeeded (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2304) is not in mixedCase
Parameter Strategy.prepareMigration(address)._newStrategy (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2338) is not in mixedCase
Parameter Strategy.poolWithdraw(uint256)._virtualAmount (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2430) is not in mixedCase
Parameter Strategy.overrideDepositId(uint64)._id (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2450) is not in mixedCase
Parameter Strategy.setTradeFactory(address)._tradeFactory (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2513) is not in mixedCase
Parameter Strategy.setMaturationPeriod(uint64)._maturationUnix (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2533) is not in mixedCase
Parameter Strategy.setOldStrategy(address)._oldStrategy (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2543) is not in mixedCase
Parameter Strategy.setMinWithdraw(uint256)._minWithdraw (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2548) is not in mixedCase
Parameter Strategy.setAllowWithdrawFee(bool)._allow (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2552) is not in mixedCase
Parameter Strategy.setKeepParams(address,uint256)._keep (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2556) is not in mixedCase
Parameter Strategy.setKeepParams(address,uint256)._keepBips (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2556) is not in mixedCase
Constant Strategy.basisMax (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2193) is not in UPPER_CASE_WITH_UNDERSCORES
Constant Strategy.max (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#2195) is not in UPPER_CASE_WITH_UNDERSCORES
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions
INFO:Detectors:
Redundant expression "this (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#167)" inContext (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#161-170)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#redundant-statements
INFO:Detectors:
BaseStrategyInitializable.clone(address,address,address,address) (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#1889-1910) uses literals with too many digits:
	- mstore(uint256,uint256)(clone_code_clone_asm_0,0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000) (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#1901)
BaseStrategyInitializable.clone(address,address,address,address) (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#1889-1910) uses literals with too many digits:
	- mstore(uint256,uint256)(clone_code_clone_asm_0 + 0x28,0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000) (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#1903)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits
INFO:Detectors:
BaseStrategyInitializable (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#1869-1911) does not implement functions:
	- BaseStrategy.adjustPosition(uint256) (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#1576)
	- BaseStrategy.estimatedTotalAssets() (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#1520)
	- BaseStrategy.ethToWant(uint256) (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#1494)
	- BaseStrategy.liquidateAllPositions() (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#1596)
	- BaseStrategy.liquidatePosition(uint256) (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#1588)
	- BaseStrategy.name() (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#1187)
	- BaseStrategy.prepareMigration(address) (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#1783)
	- BaseStrategy.prepareReturn(uint256) (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#1558-1565)
	- BaseStrategy.protectedTokens() (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#1839)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unimplemented-functions
INFO:Detectors:
BaseStrategyInitializable.isOriginal (../../sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol#1870) should be constant 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant
INFO:Slither:/bdata2/sc/dataset/mainnet/0xf864f92e88054aa05639324090b411c1d55b4a5b.sol analyzed (24 contracts with 85 detectors), 107 result(s) found
