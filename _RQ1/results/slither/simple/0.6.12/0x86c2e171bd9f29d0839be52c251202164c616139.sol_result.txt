INFO:Detectors:
Pyronomics.sendETHToMarketing(uint256) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#931-934) sends eth to arbitrary user
	Dangerous calls:
	- _MarketingWalletAddress.transfer(amount.mul(3).div(8)) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#932)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#functions-that-send-ether-to-arbitrary-destinations
INFO:Detectors:
Reentrancy in Pyronomics._transfer(address,address,uint256) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#870-911):
	External calls:
	- swapTokensForEth(contractTokenBalance) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#893)
		- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#922-928)
	External calls sending eth:
	- sendETHToMarketing(address(this).balance) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#897)
		- _MarketingWalletAddress.transfer(amount.mul(3).div(8)) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#932)
	State variables written after the call(s):
	- _tokenTransfer(sender,recipient,amount,takeFee) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#910)
		- _rOwned[address(this)] = _rOwned[address(this)].add(rMarketing) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#1015)
		- _rOwned[sender] = _rOwned[sender].sub(rAmount) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#974)
		- _rOwned[sender] = _rOwned[sender].sub(rAmount) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#983)
		- _rOwned[sender] = _rOwned[sender].sub(rAmount) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#994)
		- _rOwned[recipient] = _rOwned[recipient].add(rTransferAmount) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#975)
		- _rOwned[sender] = _rOwned[sender].sub(rAmount) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#1004)
		- _rOwned[recipient] = _rOwned[recipient].add(rTransferAmount) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#995)
		- _rOwned[recipient] = _rOwned[recipient].add(rTransferAmount) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#985)
		- _rOwned[recipient] = _rOwned[recipient].add(rTransferAmount) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#1006)
	Pyronomics._rOwned (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#665) can be used in cross function reentrancies:
	- Pyronomics._getCurrentSupply() (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#1054-1064)
	- Pyronomics._takeMarketing(uint256) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#1012-1018)
	- Pyronomics._transferBothExcluded(address,address,uint256) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#1001-1010)
	- Pyronomics._transferFromExcluded(address,address,uint256) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#991-999)
	- Pyronomics._transferStandard(address,address,uint256) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#972-979)
	- Pyronomics._transferToExcluded(address,address,uint256) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#981-989)
	- Pyronomics.balanceOf(address) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#747-750)
	- Pyronomics.constructor(address) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#709-729)
	- Pyronomics.deliver(uint256) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#794-801)
	- Pyronomics.excludeAccount(address) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#820-828)
	- _tokenTransfer(sender,recipient,amount,takeFee) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#910)
		- _rTotal = _rTotal.sub(rFee) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#1021)
	Pyronomics._rTotal (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#675) can be used in cross function reentrancies:
	- Pyronomics._getCurrentSupply() (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#1054-1064)
	- Pyronomics._reflectFee(uint256,uint256) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#1020-1023)
	- Pyronomics.constructor(address) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#709-729)
	- Pyronomics.deliver(uint256) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#794-801)
	- Pyronomics.tokenFromReflection(uint256) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#814-818)
	- _tokenTransfer(sender,recipient,amount,takeFee) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#910)
		- _tOwned[address(this)] = _tOwned[address(this)].add(tMarketing) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#1017)
		- _tOwned[sender] = _tOwned[sender].sub(tAmount) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#993)
		- _tOwned[sender] = _tOwned[sender].sub(tAmount) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#1003)
		- _tOwned[recipient] = _tOwned[recipient].add(tTransferAmount) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#984)
		- _tOwned[recipient] = _tOwned[recipient].add(tTransferAmount) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#1005)
	Pyronomics._tOwned (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#666) can be used in cross function reentrancies:
	- Pyronomics._getCurrentSupply() (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#1054-1064)
	- Pyronomics._takeMarketing(uint256) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#1012-1018)
	- Pyronomics._transferBothExcluded(address,address,uint256) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#1001-1010)
	- Pyronomics._transferFromExcluded(address,address,uint256) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#991-999)
	- Pyronomics._transferToExcluded(address,address,uint256) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#981-989)
	- Pyronomics.balanceOf(address) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#747-750)
	- Pyronomics.excludeAccount(address) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#820-828)
	- Pyronomics.includeAccount(address) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#830-841)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities
INFO:Detectors:
Pyronomics._setTaxFee(uint256) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#1078-1081) contains a tautology or contradiction:
	- require(bool,string)(taxFee >= 0 && taxFee <= 99,taxFee should be in 0 - 99) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#1079)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#tautology-or-contradiction
INFO:Detectors:
Pyronomics.addToBlackList(address[]).i (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#1104) is a local variable never initialized
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#uninitialized-local-variables
INFO:Detectors:
Pyronomics.allowance(address,address).owner (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#757) shadows:
	- Ownable.owner() (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#400-402) (function)
Pyronomics._approve(address,address,uint256).owner (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#862) shadows:
	- Ownable.owner() (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#400-402) (function)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing
INFO:Detectors:
Pyronomics._setTaxFee(uint256) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#1078-1081) should emit an event for: 
	- _taxFee = taxFee (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#1080) 
Pyronomics._setMarketingFee(uint256) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#1083-1086) should emit an event for: 
	- _MarketingFee = MarketingFee (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#1085) 
Pyronomics._setMaxTxAmount(uint256) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#1093-1095) should emit an event for: 
	- _maxTxAmount = maxTxAmount (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#1094) 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-arithmetic
INFO:Detectors:
Pyronomics.constructor(address).MarketingWalletAddress (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#709) lacks a zero-check on :
		- _MarketingWalletAddress = MarketingWalletAddress (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#710)
Pyronomics._setMarketingWallet(address).MarketingWalletAddress (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#1088) lacks a zero-check on :
		- _MarketingWalletAddress = MarketingWalletAddress (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#1089)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation
INFO:Detectors:
Reentrancy in Pyronomics._transfer(address,address,uint256) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#870-911):
	External calls:
	- swapTokensForEth(contractTokenBalance) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#893)
		- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#922-928)
	External calls sending eth:
	- sendETHToMarketing(address(this).balance) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#897)
		- _MarketingWalletAddress.transfer(amount.mul(3).div(8)) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#932)
	State variables written after the call(s):
	- _tokenTransfer(sender,recipient,amount,takeFee) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#910)
		- _MarketingFee = _previousMarketingFee (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#855)
		- _MarketingFee = 0 (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#850)
	- _tokenTransfer(sender,recipient,amount,takeFee) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#910)
		- _previousMarketingFee = _MarketingFee (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#847)
	- _tokenTransfer(sender,recipient,amount,takeFee) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#910)
		- _previousTaxFee = _taxFee (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#846)
	- _tokenTransfer(sender,recipient,amount,takeFee) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#910)
		- _tFeeTotal = _tFeeTotal.add(tFee) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#1022)
	- _tokenTransfer(sender,recipient,amount,takeFee) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#910)
		- _taxFee = _previousTaxFee (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#854)
		- _taxFee = 0 (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#849)
Reentrancy in Pyronomics.transferFrom(address,address,uint256) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#766-770):
	External calls:
	- _transfer(sender,recipient,amount) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#767)
		- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#922-928)
	External calls sending eth:
	- _transfer(sender,recipient,amount) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#767)
		- _MarketingWalletAddress.transfer(amount.mul(3).div(8)) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#932)
	State variables written after the call(s):
	- _approve(sender,_msgSender(),_allowances[sender][_msgSender()].sub(amount,ERC20: transfer amount exceeds allowance)) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#768)
		- _allowances[owner][spender] = amount (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#866)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2
INFO:Detectors:
Reentrancy in Pyronomics._transfer(address,address,uint256) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#870-911):
	External calls:
	- swapTokensForEth(contractTokenBalance) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#893)
		- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#922-928)
	External calls sending eth:
	- sendETHToMarketing(address(this).balance) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#897)
		- _MarketingWalletAddress.transfer(amount.mul(3).div(8)) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#932)
	Event emitted after the call(s):
	- Transfer(sender,recipient,tTransferAmount) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#978)
		- _tokenTransfer(sender,recipient,amount,takeFee) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#910)
	- Transfer(sender,recipient,tTransferAmount) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#988)
		- _tokenTransfer(sender,recipient,amount,takeFee) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#910)
	- Transfer(sender,recipient,tTransferAmount) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#998)
		- _tokenTransfer(sender,recipient,amount,takeFee) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#910)
	- Transfer(sender,recipient,tTransferAmount) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#1009)
		- _tokenTransfer(sender,recipient,amount,takeFee) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#910)
Reentrancy in Pyronomics.transferFrom(address,address,uint256) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#766-770):
	External calls:
	- _transfer(sender,recipient,amount) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#767)
		- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#922-928)
	External calls sending eth:
	- _transfer(sender,recipient,amount) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#767)
		- _MarketingWalletAddress.transfer(amount.mul(3).div(8)) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#932)
	Event emitted after the call(s):
	- Approval(owner,spender,amount) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#867)
		- _approve(sender,_msgSender(),_allowances[sender][_msgSender()].sub(amount,ERC20: transfer amount exceeds allowance)) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#768)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3
INFO:Detectors:
Ownable.unlock() (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#447-452) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(now > _lockTime,Contract is locked until 7 days) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#449)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp
INFO:Detectors:
Address.isContract(address) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#264-273) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#271)
Address._functionCallWithValue(address,bytes,uint256,string) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#357-378) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#370-373)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage
INFO:Detectors:
Pyronomics.includeAccount(address) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#830-841) has costly operations inside a loop:
	- _excluded.pop() (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#837)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#costly-operations-inside-a-loop
INFO:Detectors:
Address._functionCallWithValue(address,bytes,uint256,string) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#357-378) is never used and should be removed
Address.functionCall(address,bytes) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#317-319) is never used and should be removed
Address.functionCall(address,bytes,string) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#327-329) is never used and should be removed
Address.functionCallWithValue(address,bytes,uint256) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#342-344) is never used and should be removed
Address.functionCallWithValue(address,bytes,uint256,string) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#352-355) is never used and should be removed
Address.isContract(address) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#264-273) is never used and should be removed
Address.sendValue(address,uint256) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#291-297) is never used and should be removed
Context._msgData() (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#26-29) is never used and should be removed
Pyronomics._getTaxFee() (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#1066-1068) is never used and should be removed
SafeMath.mod(uint256,uint256) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#224-226) is never used and should be removed
SafeMath.mod(uint256,uint256,string) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#240-243) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code
INFO:Detectors:
Pyronomics._rTotal (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#675) is set pre-construction with a non-constant function or state variable:
	- (MAX - (MAX % _tTotal))
Pyronomics._previousTaxFee (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#685) is set pre-construction with a non-constant function or state variable:
	- _taxFee
Pyronomics._previousMarketingFee (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#686) is set pre-construction with a non-constant function or state variable:
	- _MarketingFee
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#function-initializing-state
INFO:Detectors:
Pragma version^0.6.12 (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#19) allows old versions
solc-0.6.12 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity
INFO:Detectors:
Low level call in Address.sendValue(address,uint256) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#291-297):
	- (success) = recipient.call{value: amount}() (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#295)
Low level call in Address._functionCallWithValue(address,bytes,uint256,string) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#357-378):
	- (success,returndata) = target.call{value: weiValue}(data) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#361)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls
INFO:Detectors:
Function IUniswapV2Pair.DOMAIN_SEPARATOR() (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#486) is not in mixedCase
Function IUniswapV2Pair.PERMIT_TYPEHASH() (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#487) is not in mixedCase
Function IUniswapV2Pair.MINIMUM_LIQUIDITY() (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#504) is not in mixedCase
Function IUniswapV2Router01.WETH() (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#524) is not in mixedCase
Function Pyronomics._getMaxTxAmount() (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#1070-1072) is not in mixedCase
Function Pyronomics._getETHBalance() (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#1074-1076) is not in mixedCase
Function Pyronomics._setTaxFee(uint256) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#1078-1081) is not in mixedCase
Function Pyronomics._setMarketingFee(uint256) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#1083-1086) is not in mixedCase
Parameter Pyronomics._setMarketingFee(uint256).MarketingFee (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#1083) is not in mixedCase
Function Pyronomics._setMarketingWallet(address) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#1088-1091) is not in mixedCase
Parameter Pyronomics._setMarketingWallet(address).MarketingWalletAddress (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#1088) is not in mixedCase
Function Pyronomics._setMaxTxAmount(uint256) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#1093-1095) is not in mixedCase
Variable Pyronomics._isBlacklisted (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#662) is not in mixedCase
Variable Pyronomics._liquidityFee (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#682) is not in mixedCase
Variable Pyronomics._MarketingFee (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#684) is not in mixedCase
Variable Pyronomics._MarketingWalletAddress (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#688) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions
INFO:Detectors:
Redundant expression "this (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#27)" inContext (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#21-30)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#redundant-statements
INFO:Detectors:
Reentrancy in Pyronomics._transfer(address,address,uint256) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#870-911):
	External calls:
	- sendETHToMarketing(address(this).balance) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#897)
		- _MarketingWalletAddress.transfer(amount.mul(3).div(8)) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#932)
	State variables written after the call(s):
	- _tokenTransfer(sender,recipient,amount,takeFee) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#910)
		- _MarketingFee = _previousMarketingFee (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#855)
		- _MarketingFee = 0 (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#850)
	- _tokenTransfer(sender,recipient,amount,takeFee) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#910)
		- _previousMarketingFee = _MarketingFee (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#847)
	- _tokenTransfer(sender,recipient,amount,takeFee) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#910)
		- _previousTaxFee = _taxFee (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#846)
	- _tokenTransfer(sender,recipient,amount,takeFee) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#910)
		- _rOwned[address(this)] = _rOwned[address(this)].add(rMarketing) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#1015)
		- _rOwned[sender] = _rOwned[sender].sub(rAmount) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#974)
		- _rOwned[sender] = _rOwned[sender].sub(rAmount) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#983)
		- _rOwned[sender] = _rOwned[sender].sub(rAmount) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#994)
		- _rOwned[recipient] = _rOwned[recipient].add(rTransferAmount) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#975)
		- _rOwned[sender] = _rOwned[sender].sub(rAmount) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#1004)
		- _rOwned[recipient] = _rOwned[recipient].add(rTransferAmount) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#995)
		- _rOwned[recipient] = _rOwned[recipient].add(rTransferAmount) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#985)
		- _rOwned[recipient] = _rOwned[recipient].add(rTransferAmount) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#1006)
	- _tokenTransfer(sender,recipient,amount,takeFee) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#910)
		- _rTotal = _rTotal.sub(rFee) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#1021)
	- _tokenTransfer(sender,recipient,amount,takeFee) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#910)
		- _tFeeTotal = _tFeeTotal.add(tFee) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#1022)
	- _tokenTransfer(sender,recipient,amount,takeFee) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#910)
		- _tOwned[address(this)] = _tOwned[address(this)].add(tMarketing) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#1017)
		- _tOwned[sender] = _tOwned[sender].sub(tAmount) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#993)
		- _tOwned[sender] = _tOwned[sender].sub(tAmount) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#1003)
		- _tOwned[recipient] = _tOwned[recipient].add(tTransferAmount) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#984)
		- _tOwned[recipient] = _tOwned[recipient].add(tTransferAmount) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#1005)
	- _tokenTransfer(sender,recipient,amount,takeFee) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#910)
		- _taxFee = _previousTaxFee (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#854)
		- _taxFee = 0 (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#849)
	Event emitted after the call(s):
	- Transfer(sender,recipient,tTransferAmount) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#978)
		- _tokenTransfer(sender,recipient,amount,takeFee) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#910)
	- Transfer(sender,recipient,tTransferAmount) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#998)
		- _tokenTransfer(sender,recipient,amount,takeFee) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#910)
	- Transfer(sender,recipient,tTransferAmount) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#988)
		- _tokenTransfer(sender,recipient,amount,takeFee) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#910)
	- Transfer(sender,recipient,tTransferAmount) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#1009)
		- _tokenTransfer(sender,recipient,amount,takeFee) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#910)
Reentrancy in Pyronomics.transferFrom(address,address,uint256) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#766-770):
	External calls:
	- _transfer(sender,recipient,amount) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#767)
		- _MarketingWalletAddress.transfer(amount.mul(3).div(8)) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#932)
	State variables written after the call(s):
	- _approve(sender,_msgSender(),_allowances[sender][_msgSender()].sub(amount,ERC20: transfer amount exceeds allowance)) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#768)
		- _allowances[owner][spender] = amount (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#866)
	Event emitted after the call(s):
	- Approval(owner,spender,amount) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#867)
		- _approve(sender,_msgSender(),_allowances[sender][_msgSender()].sub(amount,ERC20: transfer amount exceeds allowance)) (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#768)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-4
INFO:Detectors:
Variable IUniswapV2Router01.addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256).amountADesired (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#529) is too similar to IUniswapV2Router01.addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256).amountBDesired (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#530)
Variable Pyronomics._transferBothExcluded(address,address,uint256).rTransferAmount (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#1002) is too similar to Pyronomics._transferFromExcluded(address,address,uint256).tTransferAmount (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#992)
Variable Pyronomics._transferStandard(address,address,uint256).rTransferAmount (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#973) is too similar to Pyronomics._getTValues(uint256,uint256,uint256).tTransferAmount (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#1038)
Variable Pyronomics._transferFromExcluded(address,address,uint256).rTransferAmount (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#992) is too similar to Pyronomics._transferToExcluded(address,address,uint256).tTransferAmount (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#982)
Variable Pyronomics._transferBothExcluded(address,address,uint256).rTransferAmount (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#1002) is too similar to Pyronomics._transferStandard(address,address,uint256).tTransferAmount (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#973)
Variable Pyronomics._transferStandard(address,address,uint256).rTransferAmount (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#973) is too similar to Pyronomics._transferToExcluded(address,address,uint256).tTransferAmount (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#982)
Variable Pyronomics._transferBothExcluded(address,address,uint256).rTransferAmount (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#1002) is too similar to Pyronomics._getValues(uint256).tTransferAmount (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#1029)
Variable Pyronomics._transferBothExcluded(address,address,uint256).rTransferAmount (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#1002) is too similar to Pyronomics._getTValues(uint256,uint256,uint256).tTransferAmount (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#1038)
Variable Pyronomics._transferToExcluded(address,address,uint256).rTransferAmount (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#982) is too similar to Pyronomics._transferToExcluded(address,address,uint256).tTransferAmount (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#982)
Variable Pyronomics._transferFromExcluded(address,address,uint256).rTransferAmount (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#992) is too similar to Pyronomics._transferFromExcluded(address,address,uint256).tTransferAmount (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#992)
Variable Pyronomics._transferStandard(address,address,uint256).rTransferAmount (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#973) is too similar to Pyronomics._transferFromExcluded(address,address,uint256).tTransferAmount (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#992)
Variable Pyronomics._transferBothExcluded(address,address,uint256).rTransferAmount (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#1002) is too similar to Pyronomics._transferToExcluded(address,address,uint256).tTransferAmount (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#982)
Variable Pyronomics._transferBothExcluded(address,address,uint256).rTransferAmount (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#1002) is too similar to Pyronomics._transferBothExcluded(address,address,uint256).tTransferAmount (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#1002)
Variable Pyronomics._transferStandard(address,address,uint256).rTransferAmount (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#973) is too similar to Pyronomics._transferStandard(address,address,uint256).tTransferAmount (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#973)
Variable Pyronomics._getValues(uint256).rTransferAmount (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#1031) is too similar to Pyronomics._transferToExcluded(address,address,uint256).tTransferAmount (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#982)
Variable Pyronomics._transferStandard(address,address,uint256).rTransferAmount (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#973) is too similar to Pyronomics._getValues(uint256).tTransferAmount (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#1029)
Variable Pyronomics._transferToExcluded(address,address,uint256).rTransferAmount (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#982) is too similar to Pyronomics._transferStandard(address,address,uint256).tTransferAmount (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#973)
Variable Pyronomics._getValues(uint256).rTransferAmount (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#1031) is too similar to Pyronomics._transferStandard(address,address,uint256).tTransferAmount (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#973)
Variable Pyronomics._transferFromExcluded(address,address,uint256).rTransferAmount (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#992) is too similar to Pyronomics._getValues(uint256).tTransferAmount (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#1029)
Variable Pyronomics.reflectionFromToken(uint256,bool).rTransferAmount (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#809) is too similar to Pyronomics._transferBothExcluded(address,address,uint256).tTransferAmount (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#1002)
Variable Pyronomics._transferToExcluded(address,address,uint256).rTransferAmount (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#982) is too similar to Pyronomics._getTValues(uint256,uint256,uint256).tTransferAmount (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#1038)
Variable Pyronomics._getValues(uint256).rTransferAmount (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#1031) is too similar to Pyronomics._getTValues(uint256,uint256,uint256).tTransferAmount (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#1038)
Variable Pyronomics.reflectionFromToken(uint256,bool).rTransferAmount (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#809) is too similar to Pyronomics._getValues(uint256).tTransferAmount (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#1029)
Variable Pyronomics._getRValues(uint256,uint256,uint256).rTransferAmount (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#1045) is too similar to Pyronomics._transferFromExcluded(address,address,uint256).tTransferAmount (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#992)
Variable Pyronomics._getRValues(uint256,uint256,uint256).rTransferAmount (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#1045) is too similar to Pyronomics._transferStandard(address,address,uint256).tTransferAmount (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#973)
Variable Pyronomics._transferFromExcluded(address,address,uint256).rTransferAmount (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#992) is too similar to Pyronomics._transferStandard(address,address,uint256).tTransferAmount (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#973)
Variable Pyronomics._getValues(uint256).rTransferAmount (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#1031) is too similar to Pyronomics._transferFromExcluded(address,address,uint256).tTransferAmount (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#992)
Variable Pyronomics._transferToExcluded(address,address,uint256).rTransferAmount (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#982) is too similar to Pyronomics._transferBothExcluded(address,address,uint256).tTransferAmount (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#1002)
Variable Pyronomics._getValues(uint256).rTransferAmount (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#1031) is too similar to Pyronomics._transferBothExcluded(address,address,uint256).tTransferAmount (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#1002)
Variable Pyronomics._getRValues(uint256,uint256,uint256).rTransferAmount (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#1045) is too similar to Pyronomics._getTValues(uint256,uint256,uint256).tTransferAmount (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#1038)
Variable Pyronomics.reflectionFromToken(uint256,bool).rTransferAmount (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#809) is too similar to Pyronomics._transferFromExcluded(address,address,uint256).tTransferAmount (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#992)
Variable Pyronomics._transferFromExcluded(address,address,uint256).rTransferAmount (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#992) is too similar to Pyronomics._getTValues(uint256,uint256,uint256).tTransferAmount (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#1038)
Variable Pyronomics.reflectionFromToken(uint256,bool).rTransferAmount (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#809) is too similar to Pyronomics._transferStandard(address,address,uint256).tTransferAmount (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#973)
Variable Pyronomics._getRValues(uint256,uint256,uint256).rTransferAmount (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#1045) is too similar to Pyronomics._transferToExcluded(address,address,uint256).tTransferAmount (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#982)
Variable Pyronomics._transferToExcluded(address,address,uint256).rTransferAmount (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#982) is too similar to Pyronomics._getValues(uint256).tTransferAmount (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#1029)
Variable Pyronomics._getValues(uint256).rTransferAmount (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#1031) is too similar to Pyronomics._getValues(uint256).tTransferAmount (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#1029)
Variable Pyronomics.reflectionFromToken(uint256,bool).rTransferAmount (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#809) is too similar to Pyronomics._getTValues(uint256,uint256,uint256).tTransferAmount (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#1038)
Variable Pyronomics._getRValues(uint256,uint256,uint256).rTransferAmount (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#1045) is too similar to Pyronomics._transferBothExcluded(address,address,uint256).tTransferAmount (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#1002)
Variable Pyronomics._transferFromExcluded(address,address,uint256).rTransferAmount (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#992) is too similar to Pyronomics._transferBothExcluded(address,address,uint256).tTransferAmount (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#1002)
Variable Pyronomics.reflectionFromToken(uint256,bool).rTransferAmount (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#809) is too similar to Pyronomics._transferToExcluded(address,address,uint256).tTransferAmount (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#982)
Variable Pyronomics._getRValues(uint256,uint256,uint256).rTransferAmount (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#1045) is too similar to Pyronomics._getValues(uint256).tTransferAmount (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#1029)
Variable Pyronomics._transferToExcluded(address,address,uint256).rTransferAmount (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#982) is too similar to Pyronomics._transferFromExcluded(address,address,uint256).tTransferAmount (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#992)
Variable Pyronomics._transferStandard(address,address,uint256).rTransferAmount (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#973) is too similar to Pyronomics._transferBothExcluded(address,address,uint256).tTransferAmount (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#1002)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#variable-names-too-similar
INFO:Detectors:
Pyronomics.slitherConstructorVariables() (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#658-1110) uses literals with too many digits:
	- _tTotal = 10000000000000 * 10 ** 9 (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#674)
Pyronomics.slitherConstructorVariables() (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#658-1110) uses literals with too many digits:
	- _maxTxAmount = 200000000000e9 (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#696)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits
INFO:Detectors:
Pyronomics._decimals (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#680) should be constant 
Pyronomics._liquidityFee (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#682) should be constant 
Pyronomics._name (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#678) should be constant 
Pyronomics._numOfTokensToExchangeForMarketing (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#698) should be constant 
Pyronomics._symbol (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#679) should be constant 
Pyronomics._tTotal (../../sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol#674) should be constant 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant
INFO:Slither:/bdata2/sc/dataset/mainnet/0x86c2e171bd9f29d0839be52c251202164c616139.sol analyzed (10 contracts with 85 detectors), 107 result(s) found
