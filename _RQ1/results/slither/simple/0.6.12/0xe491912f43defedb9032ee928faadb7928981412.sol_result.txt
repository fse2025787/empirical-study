Compilation warnings/errors on /bdata2/sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol:
Warning: Contract code size exceeds 24576 bytes (a limit introduced in Spurious Dragon). This contract may not be deployable on mainnet. Consider enabling the optimizer (with a low "runs" value!), turning off revert strings, or using libraries.
   --> /bdata2/sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol:618:1:
    |
618 | contract arNXMVault is Ownable {
    | ^ (Relevant source part starts here and spans across multiple lines).


INFO:Detectors:
arNXMVault.pullNXM(address,uint256,address) (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#1280-1287) uses arbitrary from in transferFrom: nxm.transferFrom(_from,address(this),_amount) (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#1284)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#arbitrary-from-in-transferfrom
INFO:Detectors:
arNXMVault.pullNXM(address,uint256,address) (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#1280-1287) ignores return value by nxm.transferFrom(_from,address(this),_amount) (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#1284)
arNXMVault.pullNXM(address,uint256,address) (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#1280-1287) ignores return value by wNxm.transfer(_to,_amount) (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#1286)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unchecked-transfer
INFO:Detectors:
arNXMVault.arNxmValue(uint256) (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#883-903) performs a multiplication on the result of a division:
	- oneAmount = (totalAr.mul(1e18)).div(totalN) (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#900)
	- arAmount = _nAmount.mul(oneAmount).div(1e18) (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#901)
arNXMVault.nxmValue(uint256) (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#910-926) performs a multiplication on the result of a division:
	- oneAmount = (totalN.mul(1e18)).div(totalAr) (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#924)
	- nAmount = _arAmount.mul(oneAmount).div(1e18) (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#925)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#divide-before-multiply
INFO:Detectors:
arNXMVault._currentReward() (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#1179-1199) uses a dangerous strict equality:
	- timeElapsed == 0 (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#1186)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dangerous-strict-equalities
INFO:Detectors:
Reentrancy in arNXMVault._getRewardsNxm() (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#1008-1020):
	External calls:
	- finalReward = _feeRewardsNxm(fullReward) (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#1016)
		- arNxm.mint(beneficiary,adminReward) (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#1037)
		- arNxm.mint(address(this),referReward) (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#1040)
		- rewardManager.notifyRewardAmount(referReward) (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#1041)
	- pool.withdrawReward(address(this)) (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#1018)
	State variables written after the call(s):
	- lastReward = finalReward (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#1019)
	arNXMVault.lastReward (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#658) can be used in cross function reentrancies:
	- arNXMVault._currentReward() (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#1179-1199)
	- arNXMVault._getRewardsNxm() (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#1008-1020)
	- arNXMVault.arNxmValue(uint256) (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#883-903)
	- arNXMVault.lastReward (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#658)
	- arNXMVault.nxmValue(uint256) (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#910-926)
Reentrancy in arNXMVault._stakeNxm(address[],uint256[]) (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#1100-1138):
	External calls:
	- _approveNxm(_getTokenController(),toStake) (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#1112)
		- nxm.approve(_to,_amount) (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#1227)
	- pool.depositAndStake(toStake,activeProtocols,amounts) (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#1135)
	State variables written after the call(s):
	- delete activeProtocols (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#1136)
	arNXMVault.activeProtocols (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#667) can be used in cross function reentrancies:
	- arNXMVault._stakeNxm(address[],uint256[]) (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#1100-1138)
	- delete amounts (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#1137)
	arNXMVault.amounts (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#664) can be used in cross function reentrancies:
	- arNXMVault._stakeNxm(address[],uint256[]) (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#1100-1138)
Reentrancy in arNXMVault.getRewardNxm() (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#849-862):
	External calls:
	- rewards = _getRewardsNxm() (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#854)
		- pool.withdrawReward(address(this)) (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#1018)
		- arNxm.mint(beneficiary,adminReward) (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#1037)
		- arNxm.mint(address(this),referReward) (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#1040)
		- rewardManager.notifyRewardAmount(referReward) (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#1041)
	State variables written after the call(s):
	- lastRewardTimestamp = block.timestamp (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#857)
	arNXMVault.lastRewardTimestamp (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#1425) can be used in cross function reentrancies:
	- arNXMVault._currentReward() (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#1179-1199)
	- arNXMVault.getRewardNxm() (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#849-862)
	- arNXMVault.lastRewardTimestamp (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#1425)
	- lastRewardTimestamp = block.timestamp (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#860)
	arNXMVault.lastRewardTimestamp (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#1425) can be used in cross function reentrancies:
	- arNXMVault._currentReward() (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#1179-1199)
	- arNXMVault.getRewardNxm() (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#849-862)
	- arNXMVault.lastRewardTimestamp (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#1425)
Reentrancy in arNXMVault.withdrawFinalize() (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#823-844):
	External calls:
	- arNxm.burn(address(this),arAmount) (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#837)
	- _wrapNxm(nAmount) (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#838)
		- nxm.approve(_to,_amount) (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#1227)
		- IWNXM(address(wNxm)).wrap(_amount) (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#1208)
	- wNxm.safeTransfer(msg.sender,nAmount) (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#839)
	State variables written after the call(s):
	- delete withdrawals[msg.sender] (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#840)
	arNXMVault.withdrawals (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#1456) can be used in cross function reentrancies:
	- arNXMVault.withdraw(uint256,bool) (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#786-818)
	- arNXMVault.withdrawFinalize() (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#823-844)
	- arNXMVault.withdrawals (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#1456)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1
INFO:Detectors:
arNXMVault.initialize(address,address,address,address,address) (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#715-743) ignores return value by arNxm.approve(_rewardManager,uint256(- 1)) (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#742)
arNXMVault.deposit(uint256,address,bool) (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#751-779) ignores return value by arNxm.mint(msg.sender,arAmount) (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#776)
arNXMVault.withdraw(uint256,bool) (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#786-818) ignores return value by arNxm.burn(msg.sender,_arAmount) (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#801)
arNXMVault.withdrawFinalize() (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#823-844) ignores return value by arNxm.burn(address(this),arAmount) (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#837)
arNXMVault.getShieldMiningRewards(address,address[],address[],address[]) (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#871-876) ignores return value by IShieldMining(_shieldMining).claimRewards(_protocols,_sponsors,_tokens) (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#875)
arNXMVault._feeRewardsNxm(uint256) (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#1027-1045) ignores return value by arNxm.mint(beneficiary,adminReward) (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#1037)
arNXMVault._feeRewardsNxm(uint256) (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#1027-1045) ignores return value by arNxm.mint(address(this),referReward) (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#1040)
arNXMVault._approveNxm(address,uint256) (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#1224-1228) ignores return value by nxm.approve(_to,_amount) (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#1227)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return
INFO:Detectors:
arNXMVault.changeReserveAmount(uint256) (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#1334-1339) should emit an event for: 
	- reserveAmount = _reserveAmount (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#1338) 
arNXMVault.changeReferPercent(uint256) (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#1345-1351) should emit an event for: 
	- referPercent = _referPercent (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#1350) 
arNXMVault.changeWithdrawFee(uint256) (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#1357-1363) should emit an event for: 
	- withdrawFee = _withdrawFee (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#1362) 
arNXMVault.changeWithdrawDelay(uint256) (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#1369-1374) should emit an event for: 
	- withdrawDelay = _withdrawDelay (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#1373) 
arNXMVault.changeAdminPercent(uint256) (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#1380-1386) should emit an event for: 
	- adminPercent = _adminPercent (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#1385) 
arNXMVault.changeRewardDuration(uint256) (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#1392-1398) should emit an event for: 
	- rewardDuration = _rewardDuration (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#1397) 
arNXMVault.changePauseDuration(uint256) (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#1404-1410) should emit an event for: 
	- pauseDuration = _pauseDuration (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#1409) 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-arithmetic
INFO:Detectors:
Ownable.transferOwnership(address).newOwner (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#87) lacks a zero-check on :
		- _pendingOwner = newOwner (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#88)
Ownable.transferSecondOwnership(address).newOwner (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#111) lacks a zero-check on :
		- _pendingSecond = newOwner (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#112)
arNXMVault.changeBeneficiary(address)._newBeneficiary (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#1416) lacks a zero-check on :
		- beneficiary = _newBeneficiary (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#1420)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation
INFO:Detectors:
Reentrancy in arNXMVault._stakeNxm(address[],uint256[]) (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#1100-1138):
	External calls:
	- _approveNxm(_getTokenController(),toStake) (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#1112)
		- nxm.approve(_to,_amount) (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#1227)
	State variables written after the call(s):
	- activeProtocols.push(currentProtocols[i]) (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#1120)
	- activeProtocols.push(protocol) (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#1128)
	- amounts.push(pool.stakerContractStake(address(this),currentProtocols[i])) (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#1119)
	- amounts.push(_stakeAmounts[i_scope_0]) (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#1129)
	- amounts[curIndex] += _stakeAmounts[i_scope_0] (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#1131)
Reentrancy in arNXMVault.withdraw(uint256,bool) (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#786-818):
	External calls:
	- arNxm.safeTransferFrom(msg.sender,address(this),_arAmount) (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#808)
	State variables written after the call(s):
	- withdrawals[msg.sender] = WithdrawalRequest(uint48(block.timestamp),prevWithdrawal.nAmount + uint104(nAmount),prevWithdrawal.arAmount + uint104(_arAmount)) (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#810-814)
Reentrancy in arNXMVault.withdrawFinalize() (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#823-844):
	External calls:
	- arNxm.burn(address(this),arAmount) (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#837)
	- _wrapNxm(nAmount) (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#838)
		- nxm.approve(_to,_amount) (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#1227)
		- IWNXM(address(wNxm)).wrap(_amount) (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#1208)
	- wNxm.safeTransfer(msg.sender,nAmount) (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#839)
	State variables written after the call(s):
	- totalPending = totalPending.sub(nAmount) (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#841)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2
INFO:Detectors:
Reentrancy in arNXMVault.deposit(uint256,address,bool) (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#751-779):
	External calls:
	- rewardManager.stake(refToSet,msg.sender,prevBal) (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#762)
	- nxm.safeTransferFrom(msg.sender,address(this),_nAmount) (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#769)
	- wNxm.safeTransferFrom(msg.sender,address(this),_nAmount) (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#771)
	- _unwrapWnxm(_nAmount) (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#772)
		- IWNXM(address(wNxm)).unwrap(_amount) (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#1218)
	- arNxm.mint(msg.sender,arAmount) (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#776)
	Event emitted after the call(s):
	- Deposit(msg.sender,_nAmount,arAmount,block.timestamp) (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#778)
Reentrancy in arNXMVault.getRewardNxm() (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#849-862):
	External calls:
	- rewards = _getRewardsNxm() (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#854)
		- pool.withdrawReward(address(this)) (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#1018)
		- arNxm.mint(beneficiary,adminReward) (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#1037)
		- arNxm.mint(address(this),referReward) (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#1040)
		- rewardManager.notifyRewardAmount(referReward) (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#1041)
	Event emitted after the call(s):
	- NxmReward(rewards,block.timestamp,prevAum) (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#858)
Reentrancy in arNXMVault.withdraw(uint256,bool) (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#786-818):
	External calls:
	- arNxm.burn(msg.sender,_arAmount) (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#801)
	- _wrapNxm(disbursement) (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#802)
		- nxm.approve(_to,_amount) (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#1227)
		- IWNXM(address(wNxm)).wrap(_amount) (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#1208)
	- wNxm.safeTransfer(msg.sender,disbursement) (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#803)
	Event emitted after the call(s):
	- Withdrawal(msg.sender,nAmount,_arAmount,block.timestamp) (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#805)
Reentrancy in arNXMVault.withdraw(uint256,bool) (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#786-818):
	External calls:
	- arNxm.safeTransferFrom(msg.sender,address(this),_arAmount) (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#808)
	Event emitted after the call(s):
	- WithdrawRequested(msg.sender,_arAmount,nAmount,block.timestamp,block.timestamp.add(withdrawDelay)) (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#816)
Reentrancy in arNXMVault.withdrawFinalize() (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#823-844):
	External calls:
	- arNxm.burn(address(this),arAmount) (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#837)
	- _wrapNxm(nAmount) (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#838)
		- nxm.approve(_to,_amount) (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#1227)
		- IWNXM(address(wNxm)).wrap(_amount) (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#1208)
	- wNxm.safeTransfer(msg.sender,nAmount) (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#839)
	Event emitted after the call(s):
	- Withdrawal(msg.sender,nAmount,arAmount,block.timestamp) (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#843)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3
INFO:Detectors:
arNXMVault.withdraw(uint256,bool) (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#786-818) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(block.timestamp.sub(withdrawalsPaused) > pauseDuration,Withdrawals are temporarily paused.) (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#790)
arNXMVault.withdrawFinalize() (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#823-844) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(block.timestamp.sub(withdrawalsPaused) > pauseDuration,Withdrawals are temporarily paused.) (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#832)
	- require(bool,string)(requestTime.add(withdrawDelay) <= block.timestamp,Not ready to withdraw) (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#833)
arNXMVault.getRewardNxm() (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#849-862) uses timestamp for comparisons
	Dangerous comparisons:
	- lastRewardTimestamp == 0 (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#859)
arNXMVault.pauseWithdrawals(uint256) (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#973-985) uses timestamp for comparisons
	Dangerous comparisons:
	- status == 14 && block.timestamp.sub(dateUpdate) <= 604800 (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#982)
arNXMVault._currentReward() (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#1179-1199) uses timestamp for comparisons
	Dangerous comparisons:
	- timeElapsed == 0 (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#1186)
	- timeElapsed >= duration (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#1191)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp
INFO:Detectors:
Address.isContract(address) (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#154-167) uses assembly
	- INLINE ASM (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#165)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage
INFO:Detectors:
Different versions of Solidity are used:
	- Version used: ['^0.6.0', '^0.6.6']
	- ^0.6.0 (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#596)
	- ^0.6.6 (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#10)
	- ^0.6.6 (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#137)
	- ^0.6.6 (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#209)
	- ^0.6.6 (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#279)
	- ^0.6.6 (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#362)
	- ^0.6.6 (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#436)
	- ^0.6.6 (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#523)
	- ^0.6.6 (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#577)
	- ^0.6.6 (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#585)
	- ^0.6.6 (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#609)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#different-pragma-directives-are-used
INFO:Detectors:
Address.sendValue(address,uint256) (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#197-203) is never used and should be removed
Address.toPayable(address) (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#175-177) is never used and should be removed
SafeERC20.safeApprove(IERC20,address,uint256) (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#385-394) is never used and should be removed
SafeERC20.safeDecreaseAllowance(IERC20,address,uint256) (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#401-404) is never used and should be removed
SafeERC20.safeIncreaseAllowance(IERC20,address,uint256) (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#396-399) is never used and should be removed
SafeMath.mod(uint256,uint256) (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#271-274) is never used and should be removed
arNXMVault._protocolUnstakeable(address,uint256) (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#1157-1173) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code
INFO:Detectors:
Pragma version^0.6.6 (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#10) allows old versions
Pragma version^0.6.6 (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#137) allows old versions
Pragma version^0.6.6 (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#209) allows old versions
Pragma version^0.6.6 (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#279) allows old versions
Pragma version^0.6.6 (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#362) allows old versions
Pragma version^0.6.6 (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#436) allows old versions
Pragma version^0.6.6 (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#523) allows old versions
Pragma version^0.6.6 (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#577) allows old versions
Pragma version^0.6.6 (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#585) allows old versions
Pragma version^0.6.0 (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#596) allows old versions
Pragma version^0.6.6 (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#609) allows old versions
solc-0.6.12 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity
INFO:Detectors:
Low level call in Address.sendValue(address,uint256) (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#197-203):
	- (success) = recipient.call{value: amount}() (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#201)
Low level call in SafeERC20.callOptionalReturn(IERC20,bytes) (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#412-431):
	- (success,returndata) = address(token).call(data) (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#424)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls
INFO:Detectors:
arNXMVault (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#618-1459) should inherit from IGovernance (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#567-569)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-inheritance
INFO:Detectors:
Variable Ownable.__gap (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#131) is not in mixedCase
Function IPooledStaking.MAX_EXPOSURE() (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#542) is not in mixedCase
Contract arNXMVault (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#618-1459) is not in CapWords
Parameter arNXMVault.initialize(address,address,address,address,address)._wNxm (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#716) is not in mixedCase
Parameter arNXMVault.initialize(address,address,address,address,address)._arNxm (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#717) is not in mixedCase
Parameter arNXMVault.initialize(address,address,address,address,address)._nxm (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#718) is not in mixedCase
Parameter arNXMVault.initialize(address,address,address,address,address)._nxmMaster (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#719) is not in mixedCase
Parameter arNXMVault.initialize(address,address,address,address,address)._rewardManager (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#720) is not in mixedCase
Parameter arNXMVault.deposit(uint256,address,bool)._nAmount (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#751) is not in mixedCase
Parameter arNXMVault.deposit(uint256,address,bool)._referrer (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#751) is not in mixedCase
Parameter arNXMVault.deposit(uint256,address,bool)._isNxm (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#751) is not in mixedCase
Parameter arNXMVault.withdraw(uint256,bool)._arAmount (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#786) is not in mixedCase
Parameter arNXMVault.withdraw(uint256,bool)._payFee (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#786) is not in mixedCase
Parameter arNXMVault.getShieldMiningRewards(address,address[],address[],address[])._shieldMining (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#871) is not in mixedCase
Parameter arNXMVault.getShieldMiningRewards(address,address[],address[],address[])._protocols (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#871) is not in mixedCase
Parameter arNXMVault.getShieldMiningRewards(address,address[],address[],address[])._sponsors (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#871) is not in mixedCase
Parameter arNXMVault.getShieldMiningRewards(address,address[],address[],address[])._tokens (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#871) is not in mixedCase
Parameter arNXMVault.arNxmValue(uint256)._nAmount (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#883) is not in mixedCase
Parameter arNXMVault.nxmValue(uint256)._arAmount (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#910) is not in mixedCase
Parameter arNXMVault.pauseWithdrawals(uint256)._claimId (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#973) is not in mixedCase
Parameter arNXMVault.alertTransfer(address,address,uint256)._from (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#994) is not in mixedCase
Parameter arNXMVault.alertTransfer(address,address,uint256)._to (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#994) is not in mixedCase
Parameter arNXMVault.alertTransfer(address,address,uint256)._amount (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#994) is not in mixedCase
Parameter arNXMVault.stakeNxm(address[],uint256[])._protocols (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#1070) is not in mixedCase
Parameter arNXMVault.stakeNxm(address[],uint256[])._stakeAmounts (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#1070) is not in mixedCase
Parameter arNXMVault.unstakeNxm(uint256,address[],uint256[])._lastId (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#1077) is not in mixedCase
Parameter arNXMVault.unstakeNxm(uint256,address[],uint256[])._protocols (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#1077) is not in mixedCase
Parameter arNXMVault.unstakeNxm(uint256,address[],uint256[])._unstakeAmounts (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#1077) is not in mixedCase
Parameter arNXMVault.pullNXM(address,uint256,address)._from (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#1280) is not in mixedCase
Parameter arNXMVault.pullNXM(address,uint256,address)._amount (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#1280) is not in mixedCase
Parameter arNXMVault.pullNXM(address,uint256,address)._to (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#1280) is not in mixedCase
Parameter arNXMVault.buyNxmWithEther(uint256)._minNxm (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#1293) is not in mixedCase
Parameter arNXMVault.submitVote(uint256,uint256)._proposalId (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#1307) is not in mixedCase
Parameter arNXMVault.submitVote(uint256,uint256)._solutionChosen (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#1307) is not in mixedCase
Parameter arNXMVault.changeReserveAmount(uint256)._reserveAmount (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#1334) is not in mixedCase
Parameter arNXMVault.changeReferPercent(uint256)._referPercent (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#1345) is not in mixedCase
Parameter arNXMVault.changeWithdrawFee(uint256)._withdrawFee (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#1357) is not in mixedCase
Parameter arNXMVault.changeWithdrawDelay(uint256)._withdrawDelay (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#1369) is not in mixedCase
Parameter arNXMVault.changeAdminPercent(uint256)._adminPercent (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#1380) is not in mixedCase
Parameter arNXMVault.changeRewardDuration(uint256)._rewardDuration (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#1392) is not in mixedCase
Parameter arNXMVault.changePauseDuration(uint256)._pauseDuration (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#1404) is not in mixedCase
Parameter arNXMVault.changeBeneficiary(address)._newBeneficiary (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#1416) is not in mixedCase
Variable arNXMVault.____deprecated____0 (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#626) is not in mixedCase
Variable arNXMVault.____deprecated____1 (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#633) is not in mixedCase
Variable arNXMVault.____deprecated____2 (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#1430) is not in mixedCase
Variable arNXMVault.____deprecated____3 (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#1434) is not in mixedCase
Variable arNXMVault.____deprecated____4 (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#1437) is not in mixedCase
Variable arNXMVault.____deprecated____5 (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#1440) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions
INFO:Detectors:
Variable arNXMVault.____deprecated____0 (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#626) is too similar to arNXMVault.____deprecated____1 (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#633)
Variable arNXMVault.____deprecated____0 (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#626) is too similar to arNXMVault.____deprecated____2 (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#1430)
Variable arNXMVault.____deprecated____1 (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#633) is too similar to arNXMVault.____deprecated____2 (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#1430)
Variable arNXMVault.____deprecated____2 (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#1430) is too similar to arNXMVault.____deprecated____3 (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#1434)
Variable arNXMVault.____deprecated____0 (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#626) is too similar to arNXMVault.____deprecated____3 (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#1434)
Variable arNXMVault.____deprecated____1 (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#633) is too similar to arNXMVault.____deprecated____3 (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#1434)
Variable arNXMVault.____deprecated____0 (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#626) is too similar to arNXMVault.____deprecated____4 (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#1437)
Variable arNXMVault.____deprecated____1 (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#633) is too similar to arNXMVault.____deprecated____4 (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#1437)
Variable arNXMVault.____deprecated____2 (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#1430) is too similar to arNXMVault.____deprecated____4 (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#1437)
Variable arNXMVault.____deprecated____3 (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#1434) is too similar to arNXMVault.____deprecated____4 (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#1437)
Variable arNXMVault.____deprecated____0 (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#626) is too similar to arNXMVault.____deprecated____5 (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#1440)
Variable arNXMVault.____deprecated____1 (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#633) is too similar to arNXMVault.____deprecated____5 (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#1440)
Variable arNXMVault.____deprecated____2 (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#1430) is too similar to arNXMVault.____deprecated____5 (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#1440)
Variable arNXMVault.____deprecated____3 (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#1434) is too similar to arNXMVault.____deprecated____5 (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#1440)
Variable arNXMVault.____deprecated____4 (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#1437) is too similar to arNXMVault.____deprecated____5 (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#1440)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#variable-names-too-similar
INFO:Detectors:
arNXMVault.____deprecated____0 (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#626) is never used in arNXMVault (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#618-1459)
arNXMVault.____deprecated____1 (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#633) is never used in arNXMVault (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#618-1459)
arNXMVault.____deprecated____2 (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#1430) is never used in arNXMVault (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#618-1459)
arNXMVault.____deprecated____3 (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#1434) is never used in arNXMVault (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#618-1459)
arNXMVault.____deprecated____4 (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#1437) is never used in arNXMVault (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#618-1459)
arNXMVault.____deprecated____5 (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#1440) is never used in arNXMVault (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#618-1459)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-state-variable
INFO:Detectors:
arNXMVault.____deprecated____0 (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#626) should be constant 
arNXMVault.____deprecated____1 (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#633) should be constant 
arNXMVault.____deprecated____2 (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#1430) should be constant 
arNXMVault.____deprecated____3 (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#1434) should be constant 
arNXMVault.____deprecated____4 (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#1437) should be constant 
arNXMVault.lastRestake (../../sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol#655) should be constant 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant
INFO:Slither:/bdata2/sc/dataset/mainnet/0xe491912f43defedb9032ee928faadb7928981412.sol analyzed (16 contracts with 85 detectors), 140 result(s) found
