INFO:Detectors:
Staking.depositFor(address,uint256) (../../sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol#375-388) ignores return value by stakedToken.transferFrom(address(msg.sender),address(this),amount) (../../sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol#386)
Staking.sendReward(address,uint256) (../../sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol#390-395) ignores return value by rewardToken.transfer(user,amount.sub(_daoShare)) (../../sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol#392)
Staking.sendReward(address,uint256) (../../sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol#390-395) ignores return value by rewardToken.transfer(daoWallet,_daoShare) (../../sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol#393)
Staking.withdraw(uint256) (../../sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol#397-412) ignores return value by stakedToken.transfer(address(msg.sender),amount) (../../sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol#407)
Staking.emergencyWithdraw() (../../sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol#415-424) ignores return value by stakedToken.transfer(msg.sender,user.depositAmount) (../../sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol#418)
Staking.emergencyWithdrawFor(address) (../../sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol#426-435) ignores return value by stakedToken.transfer(_user,user.depositAmount) (../../sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol#429)
Staking.withdrawRewardTokens(address,uint256) (../../sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol#437-439) ignores return value by rewardToken.transfer(to,amount) (../../sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol#438)
Staking.withdrawAllStakedtokens(address) (../../sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol#443-446) ignores return value by stakedToken.transfer(to,totalStakedTokens) (../../sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol#445)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unchecked-transfer
INFO:Detectors:
Reentrancy in Staking.depositFor(address,uint256) (../../sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol#375-388):
	External calls:
	- sendReward(_user,_pendingReward) (../../sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol#381)
		- rewardToken.transfer(user,amount.sub(_daoShare)) (../../sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol#392)
		- rewardToken.transfer(daoWallet,_daoShare) (../../sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol#393)
	State variables written after the call(s):
	- user.depositAmount = user.depositAmount.add(amount) (../../sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol#384)
	Staking.users (../../sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol#297) can be used in cross function reentrancies:
	- Staking.depositFor(address,uint256) (../../sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol#375-388)
	- Staking.emergencyWithdraw() (../../sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol#415-424)
	- Staking.emergencyWithdrawFor(address) (../../sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol#426-435)
	- Staking.pendingReward(address) (../../sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol#358-369)
	- Staking.users (../../sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol#297)
	- Staking.withdraw(uint256) (../../sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol#397-412)
	- user.paidReward = user.depositAmount.mul(rewardTillNowPerToken).div(scale) (../../sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol#385)
	Staking.users (../../sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol#297) can be used in cross function reentrancies:
	- Staking.depositFor(address,uint256) (../../sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol#375-388)
	- Staking.emergencyWithdraw() (../../sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol#415-424)
	- Staking.emergencyWithdrawFor(address) (../../sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol#426-435)
	- Staking.pendingReward(address) (../../sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol#358-369)
	- Staking.users (../../sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol#297)
	- Staking.withdraw(uint256) (../../sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol#397-412)
Reentrancy in Staking.emergencyWithdraw() (../../sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol#415-424):
	External calls:
	- stakedToken.transfer(msg.sender,user.depositAmount) (../../sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol#418)
	State variables written after the call(s):
	- user.depositAmount = 0 (../../sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol#422)
	Staking.users (../../sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol#297) can be used in cross function reentrancies:
	- Staking.depositFor(address,uint256) (../../sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol#375-388)
	- Staking.emergencyWithdraw() (../../sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol#415-424)
	- Staking.emergencyWithdrawFor(address) (../../sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol#426-435)
	- Staking.pendingReward(address) (../../sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol#358-369)
	- Staking.users (../../sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol#297)
	- Staking.withdraw(uint256) (../../sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol#397-412)
	- user.paidReward = 0 (../../sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol#423)
	Staking.users (../../sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol#297) can be used in cross function reentrancies:
	- Staking.depositFor(address,uint256) (../../sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol#375-388)
	- Staking.emergencyWithdraw() (../../sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol#415-424)
	- Staking.emergencyWithdrawFor(address) (../../sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol#426-435)
	- Staking.pendingReward(address) (../../sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol#358-369)
	- Staking.users (../../sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol#297)
	- Staking.withdraw(uint256) (../../sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol#397-412)
Reentrancy in Staking.emergencyWithdrawFor(address) (../../sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol#426-435):
	External calls:
	- stakedToken.transfer(_user,user.depositAmount) (../../sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol#429)
	State variables written after the call(s):
	- user.depositAmount = 0 (../../sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol#433)
	Staking.users (../../sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol#297) can be used in cross function reentrancies:
	- Staking.depositFor(address,uint256) (../../sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol#375-388)
	- Staking.emergencyWithdraw() (../../sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol#415-424)
	- Staking.emergencyWithdrawFor(address) (../../sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol#426-435)
	- Staking.pendingReward(address) (../../sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol#358-369)
	- Staking.users (../../sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol#297)
	- Staking.withdraw(uint256) (../../sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol#397-412)
	- user.paidReward = 0 (../../sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol#434)
	Staking.users (../../sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol#297) can be used in cross function reentrancies:
	- Staking.depositFor(address,uint256) (../../sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol#375-388)
	- Staking.emergencyWithdraw() (../../sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol#415-424)
	- Staking.emergencyWithdrawFor(address) (../../sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol#426-435)
	- Staking.pendingReward(address) (../../sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol#358-369)
	- Staking.users (../../sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol#297)
	- Staking.withdraw(uint256) (../../sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol#397-412)
Reentrancy in Staking.withdraw(uint256) (../../sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol#397-412):
	External calls:
	- sendReward(msg.sender,_pendingReward) (../../sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol#403)
		- rewardToken.transfer(user,amount.sub(_daoShare)) (../../sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol#392)
		- rewardToken.transfer(daoWallet,_daoShare) (../../sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol#393)
	State variables written after the call(s):
	- user.depositAmount = user.depositAmount.sub(amount) (../../sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol#406)
	Staking.users (../../sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol#297) can be used in cross function reentrancies:
	- Staking.depositFor(address,uint256) (../../sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol#375-388)
	- Staking.emergencyWithdraw() (../../sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol#415-424)
	- Staking.emergencyWithdrawFor(address) (../../sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol#426-435)
	- Staking.pendingReward(address) (../../sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol#358-369)
	- Staking.users (../../sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol#297)
	- Staking.withdraw(uint256) (../../sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol#397-412)
Reentrancy in Staking.withdraw(uint256) (../../sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol#397-412):
	External calls:
	- sendReward(msg.sender,_pendingReward) (../../sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol#403)
		- rewardToken.transfer(user,amount.sub(_daoShare)) (../../sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol#392)
		- rewardToken.transfer(daoWallet,_daoShare) (../../sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol#393)
	- stakedToken.transfer(address(msg.sender),amount) (../../sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol#407)
	State variables written after the call(s):
	- user.paidReward = user.depositAmount.mul(rewardTillNowPerToken).div(scale) (../../sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol#411)
	Staking.users (../../sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol#297) can be used in cross function reentrancies:
	- Staking.depositFor(address,uint256) (../../sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol#375-388)
	- Staking.emergencyWithdraw() (../../sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol#415-424)
	- Staking.emergencyWithdrawFor(address) (../../sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol#426-435)
	- Staking.pendingReward(address) (../../sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol#358-369)
	- Staking.users (../../sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol#297)
	- Staking.withdraw(uint256) (../../sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol#397-412)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1
INFO:Detectors:
Staking.setDaoShare(uint256) (../../sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol#335-337) should emit an event for: 
	- daoShare = _daoShare (../../sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol#336) 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-arithmetic
INFO:Detectors:
Staking.constructor(address,address,uint256,uint256,address)._daoWallet (../../sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol#321) lacks a zero-check on :
		- daoWallet = _daoWallet (../../sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol#328)
Staking.setDaoWallet(address)._daoWallet (../../sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol#331) lacks a zero-check on :
		- daoWallet = _daoWallet (../../sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol#332)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation
INFO:Detectors:
Reentrancy in Staking.depositFor(address,uint256) (../../sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol#375-388):
	External calls:
	- sendReward(_user,_pendingReward) (../../sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol#381)
		- rewardToken.transfer(user,amount.sub(_daoShare)) (../../sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol#392)
		- rewardToken.transfer(daoWallet,_daoShare) (../../sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol#393)
	- stakedToken.transferFrom(address(msg.sender),address(this),amount) (../../sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol#386)
	Event emitted after the call(s):
	- Deposit(_user,amount) (../../sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol#387)
Reentrancy in Staking.emergencyWithdraw() (../../sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol#415-424):
	External calls:
	- stakedToken.transfer(msg.sender,user.depositAmount) (../../sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol#418)
	Event emitted after the call(s):
	- EmergencyWithdraw(msg.sender,user.depositAmount) (../../sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol#420)
Reentrancy in Staking.emergencyWithdrawFor(address) (../../sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol#426-435):
	External calls:
	- stakedToken.transfer(_user,user.depositAmount) (../../sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol#429)
	Event emitted after the call(s):
	- EmergencyWithdraw(_user,user.depositAmount) (../../sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol#431)
Reentrancy in Staking.sendReward(address,uint256) (../../sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol#390-395):
	External calls:
	- rewardToken.transfer(user,amount.sub(_daoShare)) (../../sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol#392)
	- rewardToken.transfer(daoWallet,_daoShare) (../../sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol#393)
	Event emitted after the call(s):
	- RewardClaimed(user,amount) (../../sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol#394)
Reentrancy in Staking.withdraw(uint256) (../../sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol#397-412):
	External calls:
	- sendReward(msg.sender,_pendingReward) (../../sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol#403)
		- rewardToken.transfer(user,amount.sub(_daoShare)) (../../sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol#392)
		- rewardToken.transfer(daoWallet,_daoShare) (../../sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol#393)
	- stakedToken.transfer(address(msg.sender),amount) (../../sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol#407)
	Event emitted after the call(s):
	- Withdraw(msg.sender,amount) (../../sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol#408)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3
INFO:Detectors:
Different versions of Solidity are used:
	- Version used: ['0.6.12', '>=0.6.0<0.8.0']
	- 0.6.12 (../../sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol#273)
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol#11)
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol#38)
	- >=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol#108)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#different-pragma-directives-are-used
INFO:Detectors:
Context._msgData() (../../sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol#28-31) is never used and should be removed
SafeMath.mod(uint256,uint256) (../../sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol#244-246) is never used and should be removed
SafeMath.mod(uint256,uint256,string) (../../sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol#260-263) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code
INFO:Detectors:
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol#11) is too complex
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol#38) is too complex
Pragma version>=0.6.0<0.8.0 (../../sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol#108) is too complex
Pragma version0.6.12 (../../sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol#273) allows old versions
solc-0.6.12 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity
INFO:Detectors:
Parameter Staking.setDaoWallet(address)._daoWallet (../../sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol#331) is not in mixedCase
Parameter Staking.setDaoShare(uint256)._daoShare (../../sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol#335) is not in mixedCase
Parameter Staking.setRewardPerBlock(uint256)._rewardPerBlock (../../sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol#339) is not in mixedCase
Parameter Staking.pendingReward(address)._user (../../sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol#358) is not in mixedCase
Parameter Staking.depositFor(address,uint256)._user (../../sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol#375) is not in mixedCase
Parameter Staking.emergencyWithdrawFor(address)._user (../../sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol#426) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions
INFO:Detectors:
Redundant expression "this (../../sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol#29)" inContext (../../sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol#23-32)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#redundant-statements
INFO:Detectors:
Staking.scale (../../sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol#302) should be constant 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant
INFO:Detectors:
Staking.rewardToken (../../sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol#308) should be immutable 
Staking.stakedToken (../../sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol#307) should be immutable 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-immutable
INFO:Slither:/bdata2/sc/dataset/mainnet/0x136193485A8f4870f31B864429a72A9037a1fCE2.sol analyzed (6 contracts with 85 detectors), 40 result(s) found
