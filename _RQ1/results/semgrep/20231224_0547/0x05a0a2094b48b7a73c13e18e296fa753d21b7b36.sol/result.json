{
    "errors": [],
    "fails": [],
    "findings": [
        {
            "category": "best-practice",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 82,
            "message": "By demanding that the receiver of the owner permissions actively accept via a contract call of its own,  `Ownable2Step` and `Ownable2StepUpgradeable` prevent the contract ownership from accidentally being transferred  to an address that cannot handle it.",
            "name": "use-ownable2step"
        },
        {
            "category": "best-practice",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 203,
            "message": "By demanding that the receiver of the owner permissions actively accept via a contract call of its own,  `Ownable2Step` and `Ownable2StepUpgradeable` prevent the contract ownership from accidentally being transferred  to an address that cannot handle it.",
            "name": "use-ownable2step"
        },
        {
            "category": "best-practice",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 713,
            "message": "By demanding that the receiver of the owner permissions actively accept via a contract call of its own,  `Ownable2Step` and `Ownable2StepUpgradeable` prevent the contract ownership from accidentally being transferred  to an address that cannot handle it.",
            "name": "use-ownable2step"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 539,
            "message": "Caching the array length outside a loop saves reading it on each iteration, as long as the array's length is not changed during the loop.",
            "name": "array-length-outside-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 1200,
            "message": "Caching the array length outside a loop saves reading it on each iteration, as long as the array's length is not changed during the loop.",
            "name": "array-length-outside-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 1207,
            "message": "Caching the array length outside a loop saves reading it on each iteration, as long as the array's length is not changed during the loop.",
            "name": "array-length-outside-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 1225,
            "message": "Caching the array length outside a loop saves reading it on each iteration, as long as the array's length is not changed during the loop.",
            "name": "array-length-outside-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 1232,
            "message": "Caching the array length outside a loop saves reading it on each iteration, as long as the array's length is not changed during the loop.",
            "name": "array-length-outside-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 100,
            "message": "Uninitialized variables are assigned with the types default value. Explicitly initializing a variable with its default value costs unnecessary gas.",
            "name": "init-variables-with-default-value"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 265,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 266,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 267,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 268,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 269,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 270,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 271,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 272,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 736,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 737,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 738,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 739,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 740,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 741,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 742,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 743,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 744,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 745,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 860,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 861,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 862,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 863,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 864,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 865,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 866,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 867,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 868,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 869,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 454,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 482,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 485,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 486,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 487,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 489,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 490,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 491,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 496,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 498,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 499,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 500,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 502,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 503,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 504,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 511,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 513,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 514,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 515,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 517,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 518,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 519,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 524,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 526,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 527,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 528,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 530,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 531,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 532,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 539,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 540,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 540,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 540,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 558,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 1200,
            "message": "A lot of times there is no risk that the loop counter can overflow. Using Solidity's unchecked block saves the overflow checks.",
            "name": "unnecessary-checked-arithmetic-in-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 1207,
            "message": "A lot of times there is no risk that the loop counter can overflow. Using Solidity's unchecked block saves the overflow checks.",
            "name": "unnecessary-checked-arithmetic-in-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 1225,
            "message": "A lot of times there is no risk that the loop counter can overflow. Using Solidity's unchecked block saves the overflow checks.",
            "name": "unnecessary-checked-arithmetic-in-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 1232,
            "message": "A lot of times there is no risk that the loop counter can overflow. Using Solidity's unchecked block saves the overflow checks.",
            "name": "unnecessary-checked-arithmetic-in-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 1329,
            "message": "A lot of times there is no risk that the loop counter can overflow. Using Solidity's unchecked block saves the overflow checks.",
            "name": "unnecessary-checked-arithmetic-in-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 1370,
            "message": "A lot of times there is no risk that the loop counter can overflow. Using Solidity's unchecked block saves the overflow checks.",
            "name": "unnecessary-checked-arithmetic-in-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 755,
            "message": "Using multiple require statements is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-multiple-require"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 1363,
            "message": "Using multiple require statements is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-multiple-require"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 1398,
            "message": "Using multiple require statements is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-multiple-require"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 430,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 431,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 432,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 1007,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 1008,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 1009,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 1010,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 1011,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 1012,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 1013,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 1014,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 1015,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 1016,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 1041,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 1042,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 1043,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 1044,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 1045,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 1046,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 1047,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 1048,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 1049,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 1050,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 1055,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 1056,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 1057,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 1332,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 1333,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 1334,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 1335,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 1336,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 1337,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 1338,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 1339,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 1340,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 1341,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 1347,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 1348,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 1349,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 1350,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 1351,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 1352,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 1353,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 1354,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 1355,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 1356,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 1373,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 1374,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 1375,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 1376,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 1377,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 1378,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 1379,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 1380,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 1381,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 1382,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 1385,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 1386,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 1387,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 1388,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 1389,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 1390,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 1391,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 1392,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 1393,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 1394,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 1402,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 1403,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 1404,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 1405,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 1406,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 1407,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 1408,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 1409,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 1410,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 1424,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 1425,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 1426,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 1427,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 1428,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 1429,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 1430,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 1426,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 1427,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 1428,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 1429,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 1430,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 1428,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 1429,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 1430,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 1443,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 1444,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 1445,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 1447,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 1448,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 1449,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 1451,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 1452,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 1453,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 452,
            "message": "Consider using the prefix increment expression whenever the return value is not needed. The prefix increment expression is cheaper in terms of gas.",
            "name": "use-prefix-increment-not-postfix"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 453,
            "message": "Consider using the prefix increment expression whenever the return value is not needed. The prefix increment expression is cheaper in terms of gas.",
            "name": "use-prefix-increment-not-postfix"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 480,
            "message": "Consider using the prefix increment expression whenever the return value is not needed. The prefix increment expression is cheaper in terms of gas.",
            "name": "use-prefix-increment-not-postfix"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 509,
            "message": "Consider using the prefix increment expression whenever the return value is not needed. The prefix increment expression is cheaper in terms of gas.",
            "name": "use-prefix-increment-not-postfix"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 539,
            "message": "Consider using the prefix increment expression whenever the return value is not needed. The prefix increment expression is cheaper in terms of gas.",
            "name": "use-prefix-increment-not-postfix"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 556,
            "message": "Consider using the prefix increment expression whenever the return value is not needed. The prefix increment expression is cheaper in terms of gas.",
            "name": "use-prefix-increment-not-postfix"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 557,
            "message": "Consider using the prefix increment expression whenever the return value is not needed. The prefix increment expression is cheaper in terms of gas.",
            "name": "use-prefix-increment-not-postfix"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 1200,
            "message": "Consider using the prefix increment expression whenever the return value is not needed. The prefix increment expression is cheaper in terms of gas.",
            "name": "use-prefix-increment-not-postfix"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 1207,
            "message": "Consider using the prefix increment expression whenever the return value is not needed. The prefix increment expression is cheaper in terms of gas.",
            "name": "use-prefix-increment-not-postfix"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 1225,
            "message": "Consider using the prefix increment expression whenever the return value is not needed. The prefix increment expression is cheaper in terms of gas.",
            "name": "use-prefix-increment-not-postfix"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 1232,
            "message": "Consider using the prefix increment expression whenever the return value is not needed. The prefix increment expression is cheaper in terms of gas.",
            "name": "use-prefix-increment-not-postfix"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 1329,
            "message": "Consider using the prefix increment expression whenever the return value is not needed. The prefix increment expression is cheaper in terms of gas.",
            "name": "use-prefix-increment-not-postfix"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x05a0a2094b48b7a73c13e18e296fa753d21b7b36.sol",
            "line": 1370,
            "message": "Consider using the prefix increment expression whenever the return value is not needed. The prefix increment expression is cheaper in terms of gas.",
            "name": "use-prefix-increment-not-postfix"
        }
    ],
    "infos": [],
    "parser": {
        "id": "semgrep",
        "mode": "solidity",
        "version": "2023/08/21"
    }
}
