{
    "errors": [],
    "fails": [],
    "findings": [
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x6EbeAf8e8E946F0716E6533A6f2cefc83f60e8Ab.sol",
            "line": 293,
            "message": "Caching the array length outside a loop saves reading it on each iteration, as long as the array's length is not changed during the loop.",
            "name": "array-length-outside-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x6EbeAf8e8E946F0716E6533A6f2cefc83f60e8Ab.sol",
            "line": 452,
            "message": "Caching the array length outside a loop saves reading it on each iteration, as long as the array's length is not changed during the loop.",
            "name": "array-length-outside-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x6EbeAf8e8E946F0716E6533A6f2cefc83f60e8Ab.sol",
            "line": 453,
            "message": "Caching the array length outside a loop saves reading it on each iteration, as long as the array's length is not changed during the loop.",
            "name": "array-length-outside-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x6EbeAf8e8E946F0716E6533A6f2cefc83f60e8Ab.sol",
            "line": 1214,
            "message": "Caching the array length outside a loop saves reading it on each iteration, as long as the array's length is not changed during the loop.",
            "name": "array-length-outside-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x6EbeAf8e8E946F0716E6533A6f2cefc83f60e8Ab.sol",
            "line": 1226,
            "message": "Caching the array length outside a loop saves reading it on each iteration, as long as the array's length is not changed during the loop.",
            "name": "array-length-outside-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x6EbeAf8e8E946F0716E6533A6f2cefc83f60e8Ab.sol",
            "line": 1252,
            "message": "Caching the array length outside a loop saves reading it on each iteration, as long as the array's length is not changed during the loop.",
            "name": "array-length-outside-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x6EbeAf8e8E946F0716E6533A6f2cefc83f60e8Ab.sol",
            "line": 1271,
            "message": "Caching the array length outside a loop saves reading it on each iteration, as long as the array's length is not changed during the loop.",
            "name": "array-length-outside-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x6EbeAf8e8E946F0716E6533A6f2cefc83f60e8Ab.sol",
            "line": 1290,
            "message": "Caching the array length outside a loop saves reading it on each iteration, as long as the array's length is not changed during the loop.",
            "name": "array-length-outside-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x6EbeAf8e8E946F0716E6533A6f2cefc83f60e8Ab.sol",
            "line": 1320,
            "message": "Caching the array length outside a loop saves reading it on each iteration, as long as the array's length is not changed during the loop.",
            "name": "array-length-outside-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x6EbeAf8e8E946F0716E6533A6f2cefc83f60e8Ab.sol",
            "line": 1428,
            "message": "Caching the array length outside a loop saves reading it on each iteration, as long as the array's length is not changed during the loop.",
            "name": "array-length-outside-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x6EbeAf8e8E946F0716E6533A6f2cefc83f60e8Ab.sol",
            "line": 111,
            "message": "Uninitialized variables are assigned with the types default value. Explicitly initializing a variable with its default value costs unnecessary gas.",
            "name": "init-variables-with-default-value"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x6EbeAf8e8E946F0716E6533A6f2cefc83f60e8Ab.sol",
            "line": 85,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x6EbeAf8e8E946F0716E6533A6f2cefc83f60e8Ab.sol",
            "line": 86,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x6EbeAf8e8E946F0716E6533A6f2cefc83f60e8Ab.sol",
            "line": 87,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x6EbeAf8e8E946F0716E6533A6f2cefc83f60e8Ab.sol",
            "line": 113,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x6EbeAf8e8E946F0716E6533A6f2cefc83f60e8Ab.sol",
            "line": 114,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x6EbeAf8e8E946F0716E6533A6f2cefc83f60e8Ab.sol",
            "line": 115,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x6EbeAf8e8E946F0716E6533A6f2cefc83f60e8Ab.sol",
            "line": 649,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x6EbeAf8e8E946F0716E6533A6f2cefc83f60e8Ab.sol",
            "line": 650,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x6EbeAf8e8E946F0716E6533A6f2cefc83f60e8Ab.sol",
            "line": 651,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x6EbeAf8e8E946F0716E6533A6f2cefc83f60e8Ab.sol",
            "line": 652,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x6EbeAf8e8E946F0716E6533A6f2cefc83f60e8Ab.sol",
            "line": 653,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x6EbeAf8e8E946F0716E6533A6f2cefc83f60e8Ab.sol",
            "line": 654,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x6EbeAf8e8E946F0716E6533A6f2cefc83f60e8Ab.sol",
            "line": 655,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x6EbeAf8e8E946F0716E6533A6f2cefc83f60e8Ab.sol",
            "line": 1047,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x6EbeAf8e8E946F0716E6533A6f2cefc83f60e8Ab.sol",
            "line": 1048,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x6EbeAf8e8E946F0716E6533A6f2cefc83f60e8Ab.sol",
            "line": 1049,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x6EbeAf8e8E946F0716E6533A6f2cefc83f60e8Ab.sol",
            "line": 1050,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x6EbeAf8e8E946F0716E6533A6f2cefc83f60e8Ab.sol",
            "line": 1051,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x6EbeAf8e8E946F0716E6533A6f2cefc83f60e8Ab.sol",
            "line": 1052,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x6EbeAf8e8E946F0716E6533A6f2cefc83f60e8Ab.sol",
            "line": 1401,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x6EbeAf8e8E946F0716E6533A6f2cefc83f60e8Ab.sol",
            "line": 1402,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x6EbeAf8e8E946F0716E6533A6f2cefc83f60e8Ab.sol",
            "line": 1403,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x6EbeAf8e8E946F0716E6533A6f2cefc83f60e8Ab.sol",
            "line": 298,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x6EbeAf8e8E946F0716E6533A6f2cefc83f60e8Ab.sol",
            "line": 452,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x6EbeAf8e8E946F0716E6533A6f2cefc83f60e8Ab.sol",
            "line": 453,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x6EbeAf8e8E946F0716E6533A6f2cefc83f60e8Ab.sol",
            "line": 453,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x6EbeAf8e8E946F0716E6533A6f2cefc83f60e8Ab.sol",
            "line": 1320,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x6EbeAf8e8E946F0716E6533A6f2cefc83f60e8Ab.sol",
            "line": 1321,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x6EbeAf8e8E946F0716E6533A6f2cefc83f60e8Ab.sol",
            "line": 293,
            "message": "A lot of times there is no risk that the loop counter can overflow. Using Solidity's unchecked block saves the overflow checks.",
            "name": "unnecessary-checked-arithmetic-in-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x6EbeAf8e8E946F0716E6533A6f2cefc83f60e8Ab.sol",
            "line": 452,
            "message": "A lot of times there is no risk that the loop counter can overflow. Using Solidity's unchecked block saves the overflow checks.",
            "name": "unnecessary-checked-arithmetic-in-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x6EbeAf8e8E946F0716E6533A6f2cefc83f60e8Ab.sol",
            "line": 1214,
            "message": "A lot of times there is no risk that the loop counter can overflow. Using Solidity's unchecked block saves the overflow checks.",
            "name": "unnecessary-checked-arithmetic-in-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x6EbeAf8e8E946F0716E6533A6f2cefc83f60e8Ab.sol",
            "line": 1226,
            "message": "A lot of times there is no risk that the loop counter can overflow. Using Solidity's unchecked block saves the overflow checks.",
            "name": "unnecessary-checked-arithmetic-in-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x6EbeAf8e8E946F0716E6533A6f2cefc83f60e8Ab.sol",
            "line": 1252,
            "message": "A lot of times there is no risk that the loop counter can overflow. Using Solidity's unchecked block saves the overflow checks.",
            "name": "unnecessary-checked-arithmetic-in-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x6EbeAf8e8E946F0716E6533A6f2cefc83f60e8Ab.sol",
            "line": 1271,
            "message": "A lot of times there is no risk that the loop counter can overflow. Using Solidity's unchecked block saves the overflow checks.",
            "name": "unnecessary-checked-arithmetic-in-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x6EbeAf8e8E946F0716E6533A6f2cefc83f60e8Ab.sol",
            "line": 1290,
            "message": "A lot of times there is no risk that the loop counter can overflow. Using Solidity's unchecked block saves the overflow checks.",
            "name": "unnecessary-checked-arithmetic-in-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x6EbeAf8e8E946F0716E6533A6f2cefc83f60e8Ab.sol",
            "line": 1320,
            "message": "A lot of times there is no risk that the loop counter can overflow. Using Solidity's unchecked block saves the overflow checks.",
            "name": "unnecessary-checked-arithmetic-in-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x6EbeAf8e8E946F0716E6533A6f2cefc83f60e8Ab.sol",
            "line": 1428,
            "message": "A lot of times there is no risk that the loop counter can overflow. Using Solidity's unchecked block saves the overflow checks.",
            "name": "unnecessary-checked-arithmetic-in-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x6EbeAf8e8E946F0716E6533A6f2cefc83f60e8Ab.sol",
            "line": 455,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x6EbeAf8e8E946F0716E6533A6f2cefc83f60e8Ab.sol",
            "line": 456,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x6EbeAf8e8E946F0716E6533A6f2cefc83f60e8Ab.sol",
            "line": 457,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x6EbeAf8e8E946F0716E6533A6f2cefc83f60e8Ab.sol",
            "line": 1163,
            "message": "Consider using the prefix decrement expression whenever the return value is not needed. The prefix decrement expression is cheaper in terms of gas.",
            "name": "use-prefix-decrement-not-postfix"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x6EbeAf8e8E946F0716E6533A6f2cefc83f60e8Ab.sol",
            "line": 1336,
            "message": "Consider using the prefix decrement expression whenever the return value is not needed. The prefix decrement expression is cheaper in terms of gas.",
            "name": "use-prefix-decrement-not-postfix"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x6EbeAf8e8E946F0716E6533A6f2cefc83f60e8Ab.sol",
            "line": 239,
            "message": "Consider using the prefix increment expression whenever the return value is not needed. The prefix increment expression is cheaper in terms of gas.",
            "name": "use-prefix-increment-not-postfix"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x6EbeAf8e8E946F0716E6533A6f2cefc83f60e8Ab.sol",
            "line": 293,
            "message": "Consider using the prefix increment expression whenever the return value is not needed. The prefix increment expression is cheaper in terms of gas.",
            "name": "use-prefix-increment-not-postfix"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x6EbeAf8e8E946F0716E6533A6f2cefc83f60e8Ab.sol",
            "line": 393,
            "message": "Consider using the prefix increment expression whenever the return value is not needed. The prefix increment expression is cheaper in terms of gas.",
            "name": "use-prefix-increment-not-postfix"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x6EbeAf8e8E946F0716E6533A6f2cefc83f60e8Ab.sol",
            "line": 452,
            "message": "Consider using the prefix increment expression whenever the return value is not needed. The prefix increment expression is cheaper in terms of gas.",
            "name": "use-prefix-increment-not-postfix"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x6EbeAf8e8E946F0716E6533A6f2cefc83f60e8Ab.sol",
            "line": 974,
            "message": "Consider using the prefix increment expression whenever the return value is not needed. The prefix increment expression is cheaper in terms of gas.",
            "name": "use-prefix-increment-not-postfix"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x6EbeAf8e8E946F0716E6533A6f2cefc83f60e8Ab.sol",
            "line": 975,
            "message": "Consider using the prefix increment expression whenever the return value is not needed. The prefix increment expression is cheaper in terms of gas.",
            "name": "use-prefix-increment-not-postfix"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x6EbeAf8e8E946F0716E6533A6f2cefc83f60e8Ab.sol",
            "line": 976,
            "message": "Consider using the prefix increment expression whenever the return value is not needed. The prefix increment expression is cheaper in terms of gas.",
            "name": "use-prefix-increment-not-postfix"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x6EbeAf8e8E946F0716E6533A6f2cefc83f60e8Ab.sol",
            "line": 977,
            "message": "Consider using the prefix increment expression whenever the return value is not needed. The prefix increment expression is cheaper in terms of gas.",
            "name": "use-prefix-increment-not-postfix"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x6EbeAf8e8E946F0716E6533A6f2cefc83f60e8Ab.sol",
            "line": 978,
            "message": "Consider using the prefix increment expression whenever the return value is not needed. The prefix increment expression is cheaper in terms of gas.",
            "name": "use-prefix-increment-not-postfix"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x6EbeAf8e8E946F0716E6533A6f2cefc83f60e8Ab.sol",
            "line": 999,
            "message": "Consider using the prefix increment expression whenever the return value is not needed. The prefix increment expression is cheaper in terms of gas.",
            "name": "use-prefix-increment-not-postfix"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x6EbeAf8e8E946F0716E6533A6f2cefc83f60e8Ab.sol",
            "line": 1214,
            "message": "Consider using the prefix increment expression whenever the return value is not needed. The prefix increment expression is cheaper in terms of gas.",
            "name": "use-prefix-increment-not-postfix"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x6EbeAf8e8E946F0716E6533A6f2cefc83f60e8Ab.sol",
            "line": 1226,
            "message": "Consider using the prefix increment expression whenever the return value is not needed. The prefix increment expression is cheaper in terms of gas.",
            "name": "use-prefix-increment-not-postfix"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x6EbeAf8e8E946F0716E6533A6f2cefc83f60e8Ab.sol",
            "line": 1244,
            "message": "Consider using the prefix increment expression whenever the return value is not needed. The prefix increment expression is cheaper in terms of gas.",
            "name": "use-prefix-increment-not-postfix"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x6EbeAf8e8E946F0716E6533A6f2cefc83f60e8Ab.sol",
            "line": 1252,
            "message": "Consider using the prefix increment expression whenever the return value is not needed. The prefix increment expression is cheaper in terms of gas.",
            "name": "use-prefix-increment-not-postfix"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x6EbeAf8e8E946F0716E6533A6f2cefc83f60e8Ab.sol",
            "line": 1271,
            "message": "Consider using the prefix increment expression whenever the return value is not needed. The prefix increment expression is cheaper in terms of gas.",
            "name": "use-prefix-increment-not-postfix"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x6EbeAf8e8E946F0716E6533A6f2cefc83f60e8Ab.sol",
            "line": 1290,
            "message": "Consider using the prefix increment expression whenever the return value is not needed. The prefix increment expression is cheaper in terms of gas.",
            "name": "use-prefix-increment-not-postfix"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x6EbeAf8e8E946F0716E6533A6f2cefc83f60e8Ab.sol",
            "line": 1320,
            "message": "Consider using the prefix increment expression whenever the return value is not needed. The prefix increment expression is cheaper in terms of gas.",
            "name": "use-prefix-increment-not-postfix"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x6EbeAf8e8E946F0716E6533A6f2cefc83f60e8Ab.sol",
            "line": 1428,
            "message": "Consider using the prefix increment expression whenever the return value is not needed. The prefix increment expression is cheaper in terms of gas.",
            "name": "use-prefix-increment-not-postfix"
        }
    ],
    "infos": [],
    "parser": {
        "id": "semgrep",
        "mode": "solidity",
        "version": "2023/08/21"
    }
}
