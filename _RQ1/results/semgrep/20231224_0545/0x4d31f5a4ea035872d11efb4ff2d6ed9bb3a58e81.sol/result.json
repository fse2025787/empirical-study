{
    "errors": [],
    "fails": [],
    "findings": [
        {
            "category": "best-practice",
            "filename": "/bdata2/sc/dataset/mainnet/0x4d31f5a4ea035872d11efb4ff2d6ed9bb3a58e81.sol",
            "line": 127,
            "message": "By demanding that the receiver of the owner permissions actively accept via a contract call of its own,  `Ownable2Step` and `Ownable2StepUpgradeable` prevent the contract ownership from accidentally being transferred  to an address that cannot handle it.",
            "name": "use-ownable2step"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x4d31f5a4ea035872d11efb4ff2d6ed9bb3a58e81.sol",
            "line": 152,
            "message": "Uninitialized variables are assigned with the types default value. Explicitly initializing a variable with its default value costs unnecessary gas.",
            "name": "init-variables-with-default-value"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x4d31f5a4ea035872d11efb4ff2d6ed9bb3a58e81.sol",
            "line": 161,
            "message": "Uninitialized variables are assigned with the types default value. Explicitly initializing a variable with its default value costs unnecessary gas.",
            "name": "init-variables-with-default-value"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x4d31f5a4ea035872d11efb4ff2d6ed9bb3a58e81.sol",
            "line": 81,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x4d31f5a4ea035872d11efb4ff2d6ed9bb3a58e81.sol",
            "line": 82,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x4d31f5a4ea035872d11efb4ff2d6ed9bb3a58e81.sol",
            "line": 83,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x4d31f5a4ea035872d11efb4ff2d6ed9bb3a58e81.sol",
            "line": 173,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x4d31f5a4ea035872d11efb4ff2d6ed9bb3a58e81.sol",
            "line": 174,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x4d31f5a4ea035872d11efb4ff2d6ed9bb3a58e81.sol",
            "line": 175,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x4d31f5a4ea035872d11efb4ff2d6ed9bb3a58e81.sol",
            "line": 176,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x4d31f5a4ea035872d11efb4ff2d6ed9bb3a58e81.sol",
            "line": 177,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x4d31f5a4ea035872d11efb4ff2d6ed9bb3a58e81.sol",
            "line": 178,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x4d31f5a4ea035872d11efb4ff2d6ed9bb3a58e81.sol",
            "line": 179,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x4d31f5a4ea035872d11efb4ff2d6ed9bb3a58e81.sol",
            "line": 180,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x4d31f5a4ea035872d11efb4ff2d6ed9bb3a58e81.sol",
            "line": 181,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x4d31f5a4ea035872d11efb4ff2d6ed9bb3a58e81.sol",
            "line": 182,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x4d31f5a4ea035872d11efb4ff2d6ed9bb3a58e81.sol",
            "line": 402,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x4d31f5a4ea035872d11efb4ff2d6ed9bb3a58e81.sol",
            "line": 402,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x4d31f5a4ea035872d11efb4ff2d6ed9bb3a58e81.sol",
            "line": 402,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x4d31f5a4ea035872d11efb4ff2d6ed9bb3a58e81.sol",
            "line": 403,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x4d31f5a4ea035872d11efb4ff2d6ed9bb3a58e81.sol",
            "line": 403,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x4d31f5a4ea035872d11efb4ff2d6ed9bb3a58e81.sol",
            "line": 404,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x4d31f5a4ea035872d11efb4ff2d6ed9bb3a58e81.sol",
            "line": 405,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x4d31f5a4ea035872d11efb4ff2d6ed9bb3a58e81.sol",
            "line": 405,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x4d31f5a4ea035872d11efb4ff2d6ed9bb3a58e81.sol",
            "line": 406,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x4d31f5a4ea035872d11efb4ff2d6ed9bb3a58e81.sol",
            "line": 406,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x4d31f5a4ea035872d11efb4ff2d6ed9bb3a58e81.sol",
            "line": 406,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x4d31f5a4ea035872d11efb4ff2d6ed9bb3a58e81.sol",
            "line": 406,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x4d31f5a4ea035872d11efb4ff2d6ed9bb3a58e81.sol",
            "line": 407,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x4d31f5a4ea035872d11efb4ff2d6ed9bb3a58e81.sol",
            "line": 407,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x4d31f5a4ea035872d11efb4ff2d6ed9bb3a58e81.sol",
            "line": 408,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x4d31f5a4ea035872d11efb4ff2d6ed9bb3a58e81.sol",
            "line": 408,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x4d31f5a4ea035872d11efb4ff2d6ed9bb3a58e81.sol",
            "line": 408,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x4d31f5a4ea035872d11efb4ff2d6ed9bb3a58e81.sol",
            "line": 410,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x4d31f5a4ea035872d11efb4ff2d6ed9bb3a58e81.sol",
            "line": 410,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x4d31f5a4ea035872d11efb4ff2d6ed9bb3a58e81.sol",
            "line": 410,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x4d31f5a4ea035872d11efb4ff2d6ed9bb3a58e81.sol",
            "line": 411,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x4d31f5a4ea035872d11efb4ff2d6ed9bb3a58e81.sol",
            "line": 411,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x4d31f5a4ea035872d11efb4ff2d6ed9bb3a58e81.sol",
            "line": 411,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x4d31f5a4ea035872d11efb4ff2d6ed9bb3a58e81.sol",
            "line": 411,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x4d31f5a4ea035872d11efb4ff2d6ed9bb3a58e81.sol",
            "line": 411,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x4d31f5a4ea035872d11efb4ff2d6ed9bb3a58e81.sol",
            "line": 412,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x4d31f5a4ea035872d11efb4ff2d6ed9bb3a58e81.sol",
            "line": 422,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x4d31f5a4ea035872d11efb4ff2d6ed9bb3a58e81.sol",
            "line": 423,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x4d31f5a4ea035872d11efb4ff2d6ed9bb3a58e81.sol",
            "line": 429,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x4d31f5a4ea035872d11efb4ff2d6ed9bb3a58e81.sol",
            "line": 429,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x4d31f5a4ea035872d11efb4ff2d6ed9bb3a58e81.sol",
            "line": 446,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x4d31f5a4ea035872d11efb4ff2d6ed9bb3a58e81.sol",
            "line": 446,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x4d31f5a4ea035872d11efb4ff2d6ed9bb3a58e81.sol",
            "line": 486,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x4d31f5a4ea035872d11efb4ff2d6ed9bb3a58e81.sol",
            "line": 199,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x4d31f5a4ea035872d11efb4ff2d6ed9bb3a58e81.sol",
            "line": 228,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x4d31f5a4ea035872d11efb4ff2d6ed9bb3a58e81.sol",
            "line": 243,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x4d31f5a4ea035872d11efb4ff2d6ed9bb3a58e81.sol",
            "line": 272,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x4d31f5a4ea035872d11efb4ff2d6ed9bb3a58e81.sol",
            "line": 218,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x4d31f5a4ea035872d11efb4ff2d6ed9bb3a58e81.sol",
            "line": 219,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x4d31f5a4ea035872d11efb4ff2d6ed9bb3a58e81.sol",
            "line": 220,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x4d31f5a4ea035872d11efb4ff2d6ed9bb3a58e81.sol",
            "line": 221,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x4d31f5a4ea035872d11efb4ff2d6ed9bb3a58e81.sol",
            "line": 231,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x4d31f5a4ea035872d11efb4ff2d6ed9bb3a58e81.sol",
            "line": 232,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x4d31f5a4ea035872d11efb4ff2d6ed9bb3a58e81.sol",
            "line": 233,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x4d31f5a4ea035872d11efb4ff2d6ed9bb3a58e81.sol",
            "line": 234,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x4d31f5a4ea035872d11efb4ff2d6ed9bb3a58e81.sol",
            "line": 454,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x4d31f5a4ea035872d11efb4ff2d6ed9bb3a58e81.sol",
            "line": 455,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x4d31f5a4ea035872d11efb4ff2d6ed9bb3a58e81.sol",
            "line": 456,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x4d31f5a4ea035872d11efb4ff2d6ed9bb3a58e81.sol",
            "line": 457,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x4d31f5a4ea035872d11efb4ff2d6ed9bb3a58e81.sol",
            "line": 458,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x4d31f5a4ea035872d11efb4ff2d6ed9bb3a58e81.sol",
            "line": 459,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x4d31f5a4ea035872d11efb4ff2d6ed9bb3a58e81.sol",
            "line": 460,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x4d31f5a4ea035872d11efb4ff2d6ed9bb3a58e81.sol",
            "line": 461,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x4d31f5a4ea035872d11efb4ff2d6ed9bb3a58e81.sol",
            "line": 462,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x4d31f5a4ea035872d11efb4ff2d6ed9bb3a58e81.sol",
            "line": 463,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x4d31f5a4ea035872d11efb4ff2d6ed9bb3a58e81.sol",
            "line": 522,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x4d31f5a4ea035872d11efb4ff2d6ed9bb3a58e81.sol",
            "line": 523,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x4d31f5a4ea035872d11efb4ff2d6ed9bb3a58e81.sol",
            "line": 524,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x4d31f5a4ea035872d11efb4ff2d6ed9bb3a58e81.sol",
            "line": 525,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x4d31f5a4ea035872d11efb4ff2d6ed9bb3a58e81.sol",
            "line": 526,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x4d31f5a4ea035872d11efb4ff2d6ed9bb3a58e81.sol",
            "line": 527,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x4d31f5a4ea035872d11efb4ff2d6ed9bb3a58e81.sol",
            "line": 528,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x4d31f5a4ea035872d11efb4ff2d6ed9bb3a58e81.sol",
            "line": 529,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x4d31f5a4ea035872d11efb4ff2d6ed9bb3a58e81.sol",
            "line": 530,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x4d31f5a4ea035872d11efb4ff2d6ed9bb3a58e81.sol",
            "line": 531,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x4d31f5a4ea035872d11efb4ff2d6ed9bb3a58e81.sol",
            "line": 538,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x4d31f5a4ea035872d11efb4ff2d6ed9bb3a58e81.sol",
            "line": 539,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x4d31f5a4ea035872d11efb4ff2d6ed9bb3a58e81.sol",
            "line": 540,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x4d31f5a4ea035872d11efb4ff2d6ed9bb3a58e81.sol",
            "line": 541,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x4d31f5a4ea035872d11efb4ff2d6ed9bb3a58e81.sol",
            "line": 542,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x4d31f5a4ea035872d11efb4ff2d6ed9bb3a58e81.sol",
            "line": 543,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x4d31f5a4ea035872d11efb4ff2d6ed9bb3a58e81.sol",
            "line": 544,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x4d31f5a4ea035872d11efb4ff2d6ed9bb3a58e81.sol",
            "line": 545,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x4d31f5a4ea035872d11efb4ff2d6ed9bb3a58e81.sol",
            "line": 546,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x4d31f5a4ea035872d11efb4ff2d6ed9bb3a58e81.sol",
            "line": 547,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x4d31f5a4ea035872d11efb4ff2d6ed9bb3a58e81.sol",
            "line": 485,
            "message": "Consider using the prefix decrement expression whenever the return value is not needed. The prefix decrement expression is cheaper in terms of gas.",
            "name": "use-prefix-decrement-not-postfix"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x4d31f5a4ea035872d11efb4ff2d6ed9bb3a58e81.sol",
            "line": 259,
            "message": "Consider using the prefix increment expression whenever the return value is not needed. The prefix increment expression is cheaper in terms of gas.",
            "name": "use-prefix-increment-not-postfix"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x4d31f5a4ea035872d11efb4ff2d6ed9bb3a58e81.sol",
            "line": 228,
            "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met.",
            "name": "use-short-revert-string"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x4d31f5a4ea035872d11efb4ff2d6ed9bb3a58e81.sol",
            "line": 243,
            "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met.",
            "name": "use-short-revert-string"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x4d31f5a4ea035872d11efb4ff2d6ed9bb3a58e81.sol",
            "line": 272,
            "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met.",
            "name": "use-short-revert-string"
        }
    ],
    "infos": [],
    "parser": {
        "id": "semgrep",
        "mode": "solidity",
        "version": "2023/08/21"
    }
}
