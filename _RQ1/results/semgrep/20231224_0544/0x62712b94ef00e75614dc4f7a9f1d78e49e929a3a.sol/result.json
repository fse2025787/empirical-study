{
    "errors": [],
    "fails": [],
    "findings": [
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 203,
            "message": "<x> += <y> costs more gas than <x> = <x> + <y> for state variables.",
            "name": "inefficient-state-variable-increment"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 323,
            "message": "<x> += <y> costs more gas than <x> = <x> + <y> for state variables.",
            "name": "inefficient-state-variable-increment"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 327,
            "message": "<x> += <y> costs more gas than <x> = <x> + <y> for state variables.",
            "name": "inefficient-state-variable-increment"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 333,
            "message": "<x> += <y> costs more gas than <x> = <x> + <y> for state variables.",
            "name": "inefficient-state-variable-increment"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 181,
            "message": "Uninitialized variables are assigned with the types default value. Explicitly initializing a variable with its default value costs unnecessary gas.",
            "name": "init-variables-with-default-value"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 183,
            "message": "Uninitialized variables are assigned with the types default value. Explicitly initializing a variable with its default value costs unnecessary gas.",
            "name": "init-variables-with-default-value"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 184,
            "message": "Uninitialized variables are assigned with the types default value. Explicitly initializing a variable with its default value costs unnecessary gas.",
            "name": "init-variables-with-default-value"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 190,
            "message": "Uninitialized variables are assigned with the types default value. Explicitly initializing a variable with its default value costs unnecessary gas.",
            "name": "init-variables-with-default-value"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 191,
            "message": "Uninitialized variables are assigned with the types default value. Explicitly initializing a variable with its default value costs unnecessary gas.",
            "name": "init-variables-with-default-value"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 195,
            "message": "Uninitialized variables are assigned with the types default value. Explicitly initializing a variable with its default value costs unnecessary gas.",
            "name": "init-variables-with-default-value"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 207,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 208,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 209,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 210,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 211,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 212,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 213,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 214,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 215,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 216,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 211,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 211,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 320,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 323,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 324,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 324,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 325,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 327,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 328,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 329,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 329,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 333,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 333,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 334,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 335,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 335,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 335,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 535,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 535,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 535,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 535,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 535,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 535,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 537,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 537,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 538,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 541,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 541,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 541,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 541,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 541,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 541,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 543,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 543,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 544,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 544,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 210,
            "message": "A lot of times there is no risk that the loop counter can overflow. Using Solidity's unchecked block saves the overflow checks.",
            "name": "unnecessary-checked-arithmetic-in-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 95,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 96,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 97,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 98,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 99,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 100,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 101,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 102,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 103,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 104,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 115,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 116,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 117,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 118,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 119,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 120,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 121,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 122,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 123,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 124,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 220,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 221,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 222,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 223,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 230,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 231,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 232,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 233,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 275,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 276,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 277,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 278,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 279,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 280,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 281,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 282,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 283,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 284,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 303,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 304,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 305,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 306,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 312,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 313,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 314,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 315,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 346,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 347,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 348,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 349,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 373,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 374,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 375,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 376,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 382,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 383,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 384,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 385,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 403,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 404,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 405,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 406,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 434,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 435,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 436,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 437,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 466,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 467,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 468,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 469,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 493,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 494,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 495,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 496,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 526,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 527,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 528,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 529,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 530,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 531,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 532,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 533,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 534,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 535,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 565,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 566,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 567,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 568,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 569,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 570,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 571,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 572,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 50,
            "message": "Consider using the prefix decrement expression whenever the return value is not needed. The prefix decrement expression is cheaper in terms of gas.",
            "name": "use-prefix-decrement-not-postfix"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 288,
            "message": "Consider using the prefix decrement expression whenever the return value is not needed. The prefix decrement expression is cheaper in terms of gas.",
            "name": "use-prefix-decrement-not-postfix"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 321,
            "message": "Consider using the prefix decrement expression whenever the return value is not needed. The prefix decrement expression is cheaper in terms of gas.",
            "name": "use-prefix-decrement-not-postfix"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 38,
            "message": "Consider using the prefix increment expression whenever the return value is not needed. The prefix increment expression is cheaper in terms of gas.",
            "name": "use-prefix-increment-not-postfix"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 70,
            "message": "Consider using the prefix increment expression whenever the return value is not needed. The prefix increment expression is cheaper in terms of gas.",
            "name": "use-prefix-increment-not-postfix"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 72,
            "message": "Consider using the prefix increment expression whenever the return value is not needed. The prefix increment expression is cheaper in terms of gas.",
            "name": "use-prefix-increment-not-postfix"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x62712b94ef00e75614dc4f7a9f1d78e49e929a3a.sol",
            "line": 210,
            "message": "Consider using the prefix increment expression whenever the return value is not needed. The prefix increment expression is cheaper in terms of gas.",
            "name": "use-prefix-increment-not-postfix"
        }
    ],
    "infos": [],
    "parser": {
        "id": "semgrep",
        "mode": "solidity",
        "version": "2023/08/21"
    }
}
