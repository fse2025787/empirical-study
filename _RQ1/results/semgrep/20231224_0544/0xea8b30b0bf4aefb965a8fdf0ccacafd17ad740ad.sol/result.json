{
    "errors": [],
    "fails": [],
    "findings": [
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0xea8b30b0bf4aefb965a8fdf0ccacafd17ad740ad.sol",
            "line": 184,
            "message": "Caching the array length outside a loop saves reading it on each iteration, as long as the array's length is not changed during the loop.",
            "name": "array-length-outside-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0xea8b30b0bf4aefb965a8fdf0ccacafd17ad740ad.sol",
            "line": 208,
            "message": "Caching the array length outside a loop saves reading it on each iteration, as long as the array's length is not changed during the loop.",
            "name": "array-length-outside-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0xea8b30b0bf4aefb965a8fdf0ccacafd17ad740ad.sol",
            "line": 28,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0xea8b30b0bf4aefb965a8fdf0ccacafd17ad740ad.sol",
            "line": 29,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0xea8b30b0bf4aefb965a8fdf0ccacafd17ad740ad.sol",
            "line": 30,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0xea8b30b0bf4aefb965a8fdf0ccacafd17ad740ad.sol",
            "line": 67,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0xea8b30b0bf4aefb965a8fdf0ccacafd17ad740ad.sol",
            "line": 68,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0xea8b30b0bf4aefb965a8fdf0ccacafd17ad740ad.sol",
            "line": 69,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0xea8b30b0bf4aefb965a8fdf0ccacafd17ad740ad.sol",
            "line": 70,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0xea8b30b0bf4aefb965a8fdf0ccacafd17ad740ad.sol",
            "line": 71,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0xea8b30b0bf4aefb965a8fdf0ccacafd17ad740ad.sol",
            "line": 72,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0xea8b30b0bf4aefb965a8fdf0ccacafd17ad740ad.sol",
            "line": 73,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0xea8b30b0bf4aefb965a8fdf0ccacafd17ad740ad.sol",
            "line": 74,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0xea8b30b0bf4aefb965a8fdf0ccacafd17ad740ad.sol",
            "line": 139,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0xea8b30b0bf4aefb965a8fdf0ccacafd17ad740ad.sol",
            "line": 140,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0xea8b30b0bf4aefb965a8fdf0ccacafd17ad740ad.sol",
            "line": 141,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0xea8b30b0bf4aefb965a8fdf0ccacafd17ad740ad.sol",
            "line": 142,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0xea8b30b0bf4aefb965a8fdf0ccacafd17ad740ad.sol",
            "line": 143,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0xea8b30b0bf4aefb965a8fdf0ccacafd17ad740ad.sol",
            "line": 144,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0xea8b30b0bf4aefb965a8fdf0ccacafd17ad740ad.sol",
            "line": 145,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0xea8b30b0bf4aefb965a8fdf0ccacafd17ad740ad.sol",
            "line": 146,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0xea8b30b0bf4aefb965a8fdf0ccacafd17ad740ad.sol",
            "line": 147,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0xea8b30b0bf4aefb965a8fdf0ccacafd17ad740ad.sol",
            "line": 148,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0xea8b30b0bf4aefb965a8fdf0ccacafd17ad740ad.sol",
            "line": 215,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0xea8b30b0bf4aefb965a8fdf0ccacafd17ad740ad.sol",
            "line": 237,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0xea8b30b0bf4aefb965a8fdf0ccacafd17ad740ad.sol",
            "line": 184,
            "message": "A lot of times there is no risk that the loop counter can overflow. Using Solidity's unchecked block saves the overflow checks.",
            "name": "unnecessary-checked-arithmetic-in-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0xea8b30b0bf4aefb965a8fdf0ccacafd17ad740ad.sol",
            "line": 208,
            "message": "A lot of times there is no risk that the loop counter can overflow. Using Solidity's unchecked block saves the overflow checks.",
            "name": "unnecessary-checked-arithmetic-in-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0xea8b30b0bf4aefb965a8fdf0ccacafd17ad740ad.sol",
            "line": 214,
            "message": "A lot of times there is no risk that the loop counter can overflow. Using Solidity's unchecked block saves the overflow checks.",
            "name": "unnecessary-checked-arithmetic-in-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0xea8b30b0bf4aefb965a8fdf0ccacafd17ad740ad.sol",
            "line": 236,
            "message": "A lot of times there is no risk that the loop counter can overflow. Using Solidity's unchecked block saves the overflow checks.",
            "name": "unnecessary-checked-arithmetic-in-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0xea8b30b0bf4aefb965a8fdf0ccacafd17ad740ad.sol",
            "line": 201,
            "message": "Using multiple require statements is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-multiple-require"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0xea8b30b0bf4aefb965a8fdf0ccacafd17ad740ad.sol",
            "line": 228,
            "message": "Using multiple require statements is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-multiple-require"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0xea8b30b0bf4aefb965a8fdf0ccacafd17ad740ad.sol",
            "line": 184,
            "message": "Consider using the prefix increment expression whenever the return value is not needed. The prefix increment expression is cheaper in terms of gas.",
            "name": "use-prefix-increment-not-postfix"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0xea8b30b0bf4aefb965a8fdf0ccacafd17ad740ad.sol",
            "line": 208,
            "message": "Consider using the prefix increment expression whenever the return value is not needed. The prefix increment expression is cheaper in terms of gas.",
            "name": "use-prefix-increment-not-postfix"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0xea8b30b0bf4aefb965a8fdf0ccacafd17ad740ad.sol",
            "line": 214,
            "message": "Consider using the prefix increment expression whenever the return value is not needed. The prefix increment expression is cheaper in terms of gas.",
            "name": "use-prefix-increment-not-postfix"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0xea8b30b0bf4aefb965a8fdf0ccacafd17ad740ad.sol",
            "line": 236,
            "message": "Consider using the prefix increment expression whenever the return value is not needed. The prefix increment expression is cheaper in terms of gas.",
            "name": "use-prefix-increment-not-postfix"
        }
    ],
    "infos": [],
    "parser": {
        "id": "semgrep",
        "mode": "solidity",
        "version": "2023/08/21"
    }
}
