{
    "errors": [],
    "fails": [],
    "findings": [
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x9C6471DC5B5BC216a74fC37056042256fd5E95B3.sol",
            "line": 400,
            "message": "Caching the array length outside a loop saves reading it on each iteration, as long as the array's length is not changed during the loop.",
            "name": "array-length-outside-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x9C6471DC5B5BC216a74fC37056042256fd5E95B3.sol",
            "line": 401,
            "message": "Caching the array length outside a loop saves reading it on each iteration, as long as the array's length is not changed during the loop.",
            "name": "array-length-outside-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x9C6471DC5B5BC216a74fC37056042256fd5E95B3.sol",
            "line": 562,
            "message": "Caching the array length outside a loop saves reading it on each iteration, as long as the array's length is not changed during the loop.",
            "name": "array-length-outside-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x9C6471DC5B5BC216a74fC37056042256fd5E95B3.sol",
            "line": 563,
            "message": "Caching the array length outside a loop saves reading it on each iteration, as long as the array's length is not changed during the loop.",
            "name": "array-length-outside-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x9C6471DC5B5BC216a74fC37056042256fd5E95B3.sol",
            "line": 571,
            "message": "Caching the array length outside a loop saves reading it on each iteration, as long as the array's length is not changed during the loop.",
            "name": "array-length-outside-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x9C6471DC5B5BC216a74fC37056042256fd5E95B3.sol",
            "line": 578,
            "message": "Caching the array length outside a loop saves reading it on each iteration, as long as the array's length is not changed during the loop.",
            "name": "array-length-outside-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x9C6471DC5B5BC216a74fC37056042256fd5E95B3.sol",
            "line": 579,
            "message": "Caching the array length outside a loop saves reading it on each iteration, as long as the array's length is not changed during the loop.",
            "name": "array-length-outside-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x9C6471DC5B5BC216a74fC37056042256fd5E95B3.sol",
            "line": 39,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x9C6471DC5B5BC216a74fC37056042256fd5E95B3.sol",
            "line": 40,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x9C6471DC5B5BC216a74fC37056042256fd5E95B3.sol",
            "line": 41,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x9C6471DC5B5BC216a74fC37056042256fd5E95B3.sol",
            "line": 247,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x9C6471DC5B5BC216a74fC37056042256fd5E95B3.sol",
            "line": 248,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x9C6471DC5B5BC216a74fC37056042256fd5E95B3.sol",
            "line": 249,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x9C6471DC5B5BC216a74fC37056042256fd5E95B3.sol",
            "line": 391,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x9C6471DC5B5BC216a74fC37056042256fd5E95B3.sol",
            "line": 378,
            "message": "A lot of times there is no risk that the loop counter can overflow. Using Solidity's unchecked block saves the overflow checks.",
            "name": "unnecessary-checked-arithmetic-in-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x9C6471DC5B5BC216a74fC37056042256fd5E95B3.sol",
            "line": 389,
            "message": "A lot of times there is no risk that the loop counter can overflow. Using Solidity's unchecked block saves the overflow checks.",
            "name": "unnecessary-checked-arithmetic-in-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x9C6471DC5B5BC216a74fC37056042256fd5E95B3.sol",
            "line": 400,
            "message": "A lot of times there is no risk that the loop counter can overflow. Using Solidity's unchecked block saves the overflow checks.",
            "name": "unnecessary-checked-arithmetic-in-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x9C6471DC5B5BC216a74fC37056042256fd5E95B3.sol",
            "line": 401,
            "message": "A lot of times there is no risk that the loop counter can overflow. Using Solidity's unchecked block saves the overflow checks.",
            "name": "unnecessary-checked-arithmetic-in-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x9C6471DC5B5BC216a74fC37056042256fd5E95B3.sol",
            "line": 74,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x9C6471DC5B5BC216a74fC37056042256fd5E95B3.sol",
            "line": 143,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x9C6471DC5B5BC216a74fC37056042256fd5E95B3.sol",
            "line": 179,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x9C6471DC5B5BC216a74fC37056042256fd5E95B3.sol",
            "line": 197,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x9C6471DC5B5BC216a74fC37056042256fd5E95B3.sol",
            "line": 330,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x9C6471DC5B5BC216a74fC37056042256fd5E95B3.sol",
            "line": 388,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x9C6471DC5B5BC216a74fC37056042256fd5E95B3.sol",
            "line": 392,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x9C6471DC5B5BC216a74fC37056042256fd5E95B3.sol",
            "line": 402,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x9C6471DC5B5BC216a74fC37056042256fd5E95B3.sol",
            "line": 412,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x9C6471DC5B5BC216a74fC37056042256fd5E95B3.sol",
            "line": 424,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x9C6471DC5B5BC216a74fC37056042256fd5E95B3.sol",
            "line": 430,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x9C6471DC5B5BC216a74fC37056042256fd5E95B3.sol",
            "line": 431,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x9C6471DC5B5BC216a74fC37056042256fd5E95B3.sol",
            "line": 443,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x9C6471DC5B5BC216a74fC37056042256fd5E95B3.sol",
            "line": 619,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x9C6471DC5B5BC216a74fC37056042256fd5E95B3.sol",
            "line": 629,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x9C6471DC5B5BC216a74fC37056042256fd5E95B3.sol",
            "line": 392,
            "message": "Using multiple require statements is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-multiple-require"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x9C6471DC5B5BC216a74fC37056042256fd5E95B3.sol",
            "line": 434,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x9C6471DC5B5BC216a74fC37056042256fd5E95B3.sol",
            "line": 435,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x9C6471DC5B5BC216a74fC37056042256fd5E95B3.sol",
            "line": 436,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x9C6471DC5B5BC216a74fC37056042256fd5E95B3.sol",
            "line": 437,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x9C6471DC5B5BC216a74fC37056042256fd5E95B3.sol",
            "line": 438,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x9C6471DC5B5BC216a74fC37056042256fd5E95B3.sol",
            "line": 436,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x9C6471DC5B5BC216a74fC37056042256fd5E95B3.sol",
            "line": 437,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x9C6471DC5B5BC216a74fC37056042256fd5E95B3.sol",
            "line": 438,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x9C6471DC5B5BC216a74fC37056042256fd5E95B3.sol",
            "line": 469,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x9C6471DC5B5BC216a74fC37056042256fd5E95B3.sol",
            "line": 470,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x9C6471DC5B5BC216a74fC37056042256fd5E95B3.sol",
            "line": 471,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x9C6471DC5B5BC216a74fC37056042256fd5E95B3.sol",
            "line": 472,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x9C6471DC5B5BC216a74fC37056042256fd5E95B3.sol",
            "line": 473,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x9C6471DC5B5BC216a74fC37056042256fd5E95B3.sol",
            "line": 359,
            "message": "Consider using the prefix decrement expression whenever the return value is not needed. The prefix decrement expression is cheaper in terms of gas.",
            "name": "use-prefix-decrement-not-postfix"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x9C6471DC5B5BC216a74fC37056042256fd5E95B3.sol",
            "line": 435,
            "message": "Consider using the prefix decrement expression whenever the return value is not needed. The prefix decrement expression is cheaper in terms of gas.",
            "name": "use-prefix-decrement-not-postfix"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x9C6471DC5B5BC216a74fC37056042256fd5E95B3.sol",
            "line": 355,
            "message": "Consider using the prefix increment expression whenever the return value is not needed. The prefix increment expression is cheaper in terms of gas.",
            "name": "use-prefix-increment-not-postfix"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x9C6471DC5B5BC216a74fC37056042256fd5E95B3.sol",
            "line": 378,
            "message": "Consider using the prefix increment expression whenever the return value is not needed. The prefix increment expression is cheaper in terms of gas.",
            "name": "use-prefix-increment-not-postfix"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x9C6471DC5B5BC216a74fC37056042256fd5E95B3.sol",
            "line": 389,
            "message": "Consider using the prefix increment expression whenever the return value is not needed. The prefix increment expression is cheaper in terms of gas.",
            "name": "use-prefix-increment-not-postfix"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x9C6471DC5B5BC216a74fC37056042256fd5E95B3.sol",
            "line": 400,
            "message": "Consider using the prefix increment expression whenever the return value is not needed. The prefix increment expression is cheaper in terms of gas.",
            "name": "use-prefix-increment-not-postfix"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x9C6471DC5B5BC216a74fC37056042256fd5E95B3.sol",
            "line": 401,
            "message": "Consider using the prefix increment expression whenever the return value is not needed. The prefix increment expression is cheaper in terms of gas.",
            "name": "use-prefix-increment-not-postfix"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x9C6471DC5B5BC216a74fC37056042256fd5E95B3.sol",
            "line": 437,
            "message": "Consider using the prefix increment expression whenever the return value is not needed. The prefix increment expression is cheaper in terms of gas.",
            "name": "use-prefix-increment-not-postfix"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x9C6471DC5B5BC216a74fC37056042256fd5E95B3.sol",
            "line": 506,
            "message": "Consider using the prefix increment expression whenever the return value is not needed. The prefix increment expression is cheaper in terms of gas.",
            "name": "use-prefix-increment-not-postfix"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x9C6471DC5B5BC216a74fC37056042256fd5E95B3.sol",
            "line": 512,
            "message": "Consider using the prefix increment expression whenever the return value is not needed. The prefix increment expression is cheaper in terms of gas.",
            "name": "use-prefix-increment-not-postfix"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x9C6471DC5B5BC216a74fC37056042256fd5E95B3.sol",
            "line": 562,
            "message": "Consider using the prefix increment expression whenever the return value is not needed. The prefix increment expression is cheaper in terms of gas.",
            "name": "use-prefix-increment-not-postfix"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x9C6471DC5B5BC216a74fC37056042256fd5E95B3.sol",
            "line": 571,
            "message": "Consider using the prefix increment expression whenever the return value is not needed. The prefix increment expression is cheaper in terms of gas.",
            "name": "use-prefix-increment-not-postfix"
        }
    ],
    "infos": [],
    "parser": {
        "id": "semgrep",
        "mode": "solidity",
        "version": "2023/08/21"
    }
}
