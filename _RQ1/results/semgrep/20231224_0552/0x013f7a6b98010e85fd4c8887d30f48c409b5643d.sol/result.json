{
    "errors": [],
    "fails": [],
    "findings": [
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x013f7a6b98010e85fd4c8887d30f48c409b5643d.sol",
            "line": 613,
            "message": "Caching the array length outside a loop saves reading it on each iteration, as long as the array's length is not changed during the loop.",
            "name": "array-length-outside-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x013f7a6b98010e85fd4c8887d30f48c409b5643d.sol",
            "line": 617,
            "message": "Caching the array length outside a loop saves reading it on each iteration, as long as the array's length is not changed during the loop.",
            "name": "array-length-outside-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x013f7a6b98010e85fd4c8887d30f48c409b5643d.sol",
            "line": 621,
            "message": "Caching the array length outside a loop saves reading it on each iteration, as long as the array's length is not changed during the loop.",
            "name": "array-length-outside-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x013f7a6b98010e85fd4c8887d30f48c409b5643d.sol",
            "line": 622,
            "message": "Caching the array length outside a loop saves reading it on each iteration, as long as the array's length is not changed during the loop.",
            "name": "array-length-outside-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x013f7a6b98010e85fd4c8887d30f48c409b5643d.sol",
            "line": 568,
            "message": "Consider swapping variables using `(self[swap], self[root]) = (self[root], self[swap])` to save gas",
            "name": "non-optimal-variables-swap"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x013f7a6b98010e85fd4c8887d30f48c409b5643d.sol",
            "line": 569,
            "message": "Consider swapping variables using `(self[swap], self[root]) = (self[root], self[swap])` to save gas",
            "name": "non-optimal-variables-swap"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x013f7a6b98010e85fd4c8887d30f48c409b5643d.sol",
            "line": 570,
            "message": "Consider swapping variables using `(self[swap], self[root]) = (self[root], self[swap])` to save gas",
            "name": "non-optimal-variables-swap"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x013f7a6b98010e85fd4c8887d30f48c409b5643d.sol",
            "line": 581,
            "message": "Consider swapping variables using `(self[end], self[0]) = (self[0], self[end])` to save gas",
            "name": "non-optimal-variables-swap"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x013f7a6b98010e85fd4c8887d30f48c409b5643d.sol",
            "line": 582,
            "message": "Consider swapping variables using `(self[end], self[0]) = (self[0], self[end])` to save gas",
            "name": "non-optimal-variables-swap"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x013f7a6b98010e85fd4c8887d30f48c409b5643d.sol",
            "line": 583,
            "message": "Consider swapping variables using `(self[end], self[0]) = (self[0], self[end])` to save gas",
            "name": "non-optimal-variables-swap"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x013f7a6b98010e85fd4c8887d30f48c409b5643d.sol",
            "line": 597,
            "message": "Consider swapping variables using `(self[swap], self[root]) = (self[root], self[swap])` to save gas",
            "name": "non-optimal-variables-swap"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x013f7a6b98010e85fd4c8887d30f48c409b5643d.sol",
            "line": 598,
            "message": "Consider swapping variables using `(self[swap], self[root]) = (self[root], self[swap])` to save gas",
            "name": "non-optimal-variables-swap"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x013f7a6b98010e85fd4c8887d30f48c409b5643d.sol",
            "line": 599,
            "message": "Consider swapping variables using `(self[swap], self[root]) = (self[root], self[swap])` to save gas",
            "name": "non-optimal-variables-swap"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x013f7a6b98010e85fd4c8887d30f48c409b5643d.sol",
            "line": 35,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x013f7a6b98010e85fd4c8887d30f48c409b5643d.sol",
            "line": 36,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x013f7a6b98010e85fd4c8887d30f48c409b5643d.sol",
            "line": 37,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x013f7a6b98010e85fd4c8887d30f48c409b5643d.sol",
            "line": 38,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x013f7a6b98010e85fd4c8887d30f48c409b5643d.sol",
            "line": 39,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x013f7a6b98010e85fd4c8887d30f48c409b5643d.sol",
            "line": 40,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x013f7a6b98010e85fd4c8887d30f48c409b5643d.sol",
            "line": 41,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x013f7a6b98010e85fd4c8887d30f48c409b5643d.sol",
            "line": 42,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x013f7a6b98010e85fd4c8887d30f48c409b5643d.sol",
            "line": 43,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x013f7a6b98010e85fd4c8887d30f48c409b5643d.sol",
            "line": 44,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x013f7a6b98010e85fd4c8887d30f48c409b5643d.sol",
            "line": 288,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x013f7a6b98010e85fd4c8887d30f48c409b5643d.sol",
            "line": 289,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x013f7a6b98010e85fd4c8887d30f48c409b5643d.sol",
            "line": 290,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x013f7a6b98010e85fd4c8887d30f48c409b5643d.sol",
            "line": 291,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x013f7a6b98010e85fd4c8887d30f48c409b5643d.sol",
            "line": 292,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x013f7a6b98010e85fd4c8887d30f48c409b5643d.sol",
            "line": 293,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x013f7a6b98010e85fd4c8887d30f48c409b5643d.sol",
            "line": 1352,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x013f7a6b98010e85fd4c8887d30f48c409b5643d.sol",
            "line": 1353,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x013f7a6b98010e85fd4c8887d30f48c409b5643d.sol",
            "line": 1354,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x013f7a6b98010e85fd4c8887d30f48c409b5643d.sol",
            "line": 1355,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x013f7a6b98010e85fd4c8887d30f48c409b5643d.sol",
            "line": 613,
            "message": "A lot of times there is no risk that the loop counter can overflow. Using Solidity's unchecked block saves the overflow checks.",
            "name": "unnecessary-checked-arithmetic-in-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x013f7a6b98010e85fd4c8887d30f48c409b5643d.sol",
            "line": 617,
            "message": "A lot of times there is no risk that the loop counter can overflow. Using Solidity's unchecked block saves the overflow checks.",
            "name": "unnecessary-checked-arithmetic-in-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x013f7a6b98010e85fd4c8887d30f48c409b5643d.sol",
            "line": 92,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x013f7a6b98010e85fd4c8887d30f48c409b5643d.sol",
            "line": 296,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x013f7a6b98010e85fd4c8887d30f48c409b5643d.sol",
            "line": 380,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x013f7a6b98010e85fd4c8887d30f48c409b5643d.sol",
            "line": 391,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x013f7a6b98010e85fd4c8887d30f48c409b5643d.sol",
            "line": 1364,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x013f7a6b98010e85fd4c8887d30f48c409b5643d.sol",
            "line": 1398,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x013f7a6b98010e85fd4c8887d30f48c409b5643d.sol",
            "line": 1459,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x013f7a6b98010e85fd4c8887d30f48c409b5643d.sol",
            "line": 1461,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x013f7a6b98010e85fd4c8887d30f48c409b5643d.sol",
            "line": 1462,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x013f7a6b98010e85fd4c8887d30f48c409b5643d.sol",
            "line": 1463,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x013f7a6b98010e85fd4c8887d30f48c409b5643d.sol",
            "line": 97,
            "message": "Using multiple require statements is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-multiple-require"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x013f7a6b98010e85fd4c8887d30f48c409b5643d.sol",
            "line": 1372,
            "message": "Using multiple require statements is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-multiple-require"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x013f7a6b98010e85fd4c8887d30f48c409b5643d.sol",
            "line": 1373,
            "message": "Using multiple require statements is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-multiple-require"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x013f7a6b98010e85fd4c8887d30f48c409b5643d.sol",
            "line": 1374,
            "message": "Using multiple require statements is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-multiple-require"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x013f7a6b98010e85fd4c8887d30f48c409b5643d.sol",
            "line": 1375,
            "message": "Using multiple require statements is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-multiple-require"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x013f7a6b98010e85fd4c8887d30f48c409b5643d.sol",
            "line": 1376,
            "message": "Using multiple require statements is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-multiple-require"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x013f7a6b98010e85fd4c8887d30f48c409b5643d.sol",
            "line": 1398,
            "message": "Using multiple require statements is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-multiple-require"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x013f7a6b98010e85fd4c8887d30f48c409b5643d.sol",
            "line": 1463,
            "message": "Using multiple require statements is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-multiple-require"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x013f7a6b98010e85fd4c8887d30f48c409b5643d.sol",
            "line": 1469,
            "message": "Using multiple require statements is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-multiple-require"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x013f7a6b98010e85fd4c8887d30f48c409b5643d.sol",
            "line": 1470,
            "message": "Using multiple require statements is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-multiple-require"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x013f7a6b98010e85fd4c8887d30f48c409b5643d.sol",
            "line": 1471,
            "message": "Using multiple require statements is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-multiple-require"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x013f7a6b98010e85fd4c8887d30f48c409b5643d.sol",
            "line": 563,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x013f7a6b98010e85fd4c8887d30f48c409b5643d.sol",
            "line": 564,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x013f7a6b98010e85fd4c8887d30f48c409b5643d.sol",
            "line": 592,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x013f7a6b98010e85fd4c8887d30f48c409b5643d.sol",
            "line": 593,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x013f7a6b98010e85fd4c8887d30f48c409b5643d.sol",
            "line": 622,
            "message": "Consider using the prefix decrement expression whenever the return value is not needed. The prefix decrement expression is cheaper in terms of gas.",
            "name": "use-prefix-decrement-not-postfix"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x013f7a6b98010e85fd4c8887d30f48c409b5643d.sol",
            "line": 623,
            "message": "Consider using the prefix decrement expression whenever the return value is not needed. The prefix decrement expression is cheaper in terms of gas.",
            "name": "use-prefix-decrement-not-postfix"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x013f7a6b98010e85fd4c8887d30f48c409b5643d.sol",
            "line": 613,
            "message": "Consider using the prefix increment expression whenever the return value is not needed. The prefix increment expression is cheaper in terms of gas.",
            "name": "use-prefix-increment-not-postfix"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x013f7a6b98010e85fd4c8887d30f48c409b5643d.sol",
            "line": 617,
            "message": "Consider using the prefix increment expression whenever the return value is not needed. The prefix increment expression is cheaper in terms of gas.",
            "name": "use-prefix-increment-not-postfix"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x013f7a6b98010e85fd4c8887d30f48c409b5643d.sol",
            "line": 1200,
            "message": "Consider using the prefix increment expression whenever the return value is not needed. The prefix increment expression is cheaper in terms of gas.",
            "name": "use-prefix-increment-not-postfix"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x013f7a6b98010e85fd4c8887d30f48c409b5643d.sol",
            "line": 1202,
            "message": "Consider using the prefix increment expression whenever the return value is not needed. The prefix increment expression is cheaper in terms of gas.",
            "name": "use-prefix-increment-not-postfix"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x013f7a6b98010e85fd4c8887d30f48c409b5643d.sol",
            "line": 1291,
            "message": "Consider using the prefix increment expression whenever the return value is not needed. The prefix increment expression is cheaper in terms of gas.",
            "name": "use-prefix-increment-not-postfix"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x013f7a6b98010e85fd4c8887d30f48c409b5643d.sol",
            "line": 1459,
            "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met.",
            "name": "use-short-revert-string"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x013f7a6b98010e85fd4c8887d30f48c409b5643d.sol",
            "line": 1461,
            "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met.",
            "name": "use-short-revert-string"
        }
    ],
    "infos": [],
    "parser": {
        "id": "semgrep",
        "mode": "solidity",
        "version": "2023/08/21"
    }
}
