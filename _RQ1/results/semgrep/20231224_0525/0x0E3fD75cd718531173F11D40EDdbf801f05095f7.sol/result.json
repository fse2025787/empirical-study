{
    "errors": [],
    "fails": [],
    "findings": [
        {
            "category": "best-practice",
            "filename": "/bdata2/sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol",
            "line": 578,
            "message": "To guarantee arguments type safety it is recommended to use `abi.encodeCall` instead of `abi.encodeWithSelector`.",
            "name": "use-abi-encodecall-instead-of-encodewithselector"
        },
        {
            "category": "best-practice",
            "filename": "/bdata2/sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol",
            "line": 579,
            "message": "To guarantee arguments type safety it is recommended to use `abi.encodeCall` instead of `abi.encodeWithSelector`.",
            "name": "use-abi-encodecall-instead-of-encodewithselector"
        },
        {
            "category": "best-practice",
            "filename": "/bdata2/sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol",
            "line": 580,
            "message": "To guarantee arguments type safety it is recommended to use `abi.encodeCall` instead of `abi.encodeWithSelector`.",
            "name": "use-abi-encodecall-instead-of-encodewithselector"
        },
        {
            "category": "best-practice",
            "filename": "/bdata2/sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol",
            "line": 581,
            "message": "To guarantee arguments type safety it is recommended to use `abi.encodeCall` instead of `abi.encodeWithSelector`.",
            "name": "use-abi-encodecall-instead-of-encodewithselector"
        },
        {
            "category": "best-practice",
            "filename": "/bdata2/sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol",
            "line": 504,
            "message": "By demanding that the receiver of the owner permissions actively accept via a contract call of its own,  `Ownable2Step` and `Ownable2StepUpgradeable` prevent the contract ownership from accidentally being transferred  to an address that cannot handle it.",
            "name": "use-ownable2step"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol",
            "line": 738,
            "message": "Caching the array length outside a loop saves reading it on each iteration, as long as the array's length is not changed during the loop.",
            "name": "array-length-outside-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol",
            "line": 523,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol",
            "line": 524,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol",
            "line": 525,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol",
            "line": 526,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol",
            "line": 527,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol",
            "line": 528,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol",
            "line": 529,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol",
            "line": 530,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol",
            "line": 531,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol",
            "line": 541,
            "message": "A lot of times there is no risk that the loop counter can overflow. Using Solidity's unchecked block saves the overflow checks.",
            "name": "unnecessary-checked-arithmetic-in-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol",
            "line": 551,
            "message": "A lot of times there is no risk that the loop counter can overflow. Using Solidity's unchecked block saves the overflow checks.",
            "name": "unnecessary-checked-arithmetic-in-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol",
            "line": 738,
            "message": "A lot of times there is no risk that the loop counter can overflow. Using Solidity's unchecked block saves the overflow checks.",
            "name": "unnecessary-checked-arithmetic-in-loop"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol",
            "line": 25,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol",
            "line": 45,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol",
            "line": 526,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol",
            "line": 527,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol",
            "line": 607,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol",
            "line": 662,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol",
            "line": 683,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol",
            "line": 702,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol",
            "line": 898,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol",
            "line": 936,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol",
            "line": 936,
            "message": "Using multiple require statements is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-multiple-require"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol",
            "line": 622,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol",
            "line": 745,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol",
            "line": 622,
            "message": "Consider using the prefix decrement expression whenever the return value is not needed. The prefix decrement expression is cheaper in terms of gas.",
            "name": "use-prefix-decrement-not-postfix"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol",
            "line": 745,
            "message": "Consider using the prefix decrement expression whenever the return value is not needed. The prefix decrement expression is cheaper in terms of gas.",
            "name": "use-prefix-decrement-not-postfix"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol",
            "line": 541,
            "message": "Consider using the prefix increment expression whenever the return value is not needed. The prefix increment expression is cheaper in terms of gas.",
            "name": "use-prefix-increment-not-postfix"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol",
            "line": 551,
            "message": "Consider using the prefix increment expression whenever the return value is not needed. The prefix increment expression is cheaper in terms of gas.",
            "name": "use-prefix-increment-not-postfix"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol",
            "line": 738,
            "message": "Consider using the prefix increment expression whenever the return value is not needed. The prefix increment expression is cheaper in terms of gas.",
            "name": "use-prefix-increment-not-postfix"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol",
            "line": 869,
            "message": "Consider using the prefix increment expression whenever the return value is not needed. The prefix increment expression is cheaper in terms of gas.",
            "name": "use-prefix-increment-not-postfix"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol",
            "line": 45,
            "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas",
            "name": "use-short-revert-string"
        },
        {
            "category": "performance",
            "filename": "/bdata2/sc/dataset/mainnet/0x0E3fD75cd718531173F11D40EDdbf801f05095f7.sol",
            "line": 527,
            "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas",
            "name": "use-short-revert-string"
        }
    ],
    "infos": [],
    "parser": {
        "id": "semgrep",
        "mode": "solidity",
        "version": "2023/08/21"
    }
}
