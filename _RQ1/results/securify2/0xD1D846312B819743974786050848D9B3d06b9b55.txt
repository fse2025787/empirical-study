[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Owned
Line:        70
Source: 
>      */
>     function transferOwnership(address _newOwner) public override ownerOnly {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(_newOwner != owner, "ERR_SAME_OWNER");

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Owned
Line:        78
Source: 
>      */
>     function acceptOwnership() public override {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(msg.sender == newOwner, "ERR_ACCESS_DENIED");

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Owned
Line:        70
Source: 
>      */
>     function transferOwnership(address _newOwner) public override ownerOnly {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(_newOwner != owner, "ERR_SAME_OWNER");

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Owned
Line:        78
Source: 
>      */
>     function acceptOwnership() public override {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(msg.sender == newOwner, "ERR_ACCESS_DENIED");

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    TokenHolder
Line:        294
Source: 
>      */
>     function withdrawTokens(
>     ^^^^^^^^^^^^^^^^^^^^^^^^
>         IERC20Token _token,

[0m
[0;31mSeverity:    INFO
Pattern:     Low Level Calls
Description: Usage of <address>.call should be avoided
Type:        Violation
Contract:    TokenHandler
Line:        197
Source: 
>     ) internal {
>         (bool success, bytes memory data) = address(_token).call(
>                                             ^^^^^^^^^^^^^^^^^^^^^
>             abi.encodeWithSelector(APPROVE_FUNC_SELECTOR, _spender, _value)

[0m
[0;31mSeverity:    INFO
Pattern:     Low Level Calls
Description: Usage of <address>.call should be avoided
Type:        Violation
Contract:    TokenHandler
Line:        217
Source: 
>     ) internal {
>         (bool success, bytes memory data) = address(_token).call(
>                                             ^^^^^^^^^^^^^^^^^^^^^
>             abi.encodeWithSelector(TRANSFER_FUNC_SELECTOR, _to, _value)

[0m
[0;31mSeverity:    INFO
Pattern:     Low Level Calls
Description: Usage of <address>.call should be avoided
Type:        Violation
Contract:    TokenHandler
Line:        239
Source: 
>     ) internal {
>         (bool success, bytes memory data) = address(_token).call(
>                                             ^^^^^^^^^^^^^^^^^^^^^
>             abi.encodeWithSelector(TRANSFER_FROM_FUNC_SELECTOR, _from, _to, _value)

[0m
[0;31mSeverity:    INFO
Pattern:     Low Level Calls
Description: Usage of <address>.call should be avoided
Type:        Violation
Contract:    TokenHandler
Line:        197
Source: 
>     ) internal {
>         (bool success, bytes memory data) = address(_token).call(
>                                             ^^^^^^^^^^^^^^^^^^^^^
>             abi.encodeWithSelector(APPROVE_FUNC_SELECTOR, _spender, _value)

[0m
[0;31mSeverity:    INFO
Pattern:     Low Level Calls
Description: Usage of <address>.call should be avoided
Type:        Violation
Contract:    TokenHandler
Line:        217
Source: 
>     ) internal {
>         (bool success, bytes memory data) = address(_token).call(
>                                             ^^^^^^^^^^^^^^^^^^^^^
>             abi.encodeWithSelector(TRANSFER_FUNC_SELECTOR, _to, _value)

[0m
[0;31mSeverity:    INFO
Pattern:     Low Level Calls
Description: Usage of <address>.call should be avoided
Type:        Violation
Contract:    TokenHandler
Line:        239
Source: 
>     ) internal {
>         (bool success, bytes memory data) = address(_token).call(
>                                             ^^^^^^^^^^^^^^^^^^^^^
>             abi.encodeWithSelector(TRANSFER_FROM_FUNC_SELECTOR, _from, _to, _value)

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    TokenHolder
Line:        294
Source: 
>      */
>     function withdrawTokens(
>     ^^^^^^^^^^^^^^^^^^^^^^^^
>         IERC20Token _token,

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    Utils
Line:        96
Source: 
>     // verifies that a value is greater than zero
>     modifier greaterThanZero(uint256 _value) {
>                              ^^^^^^^^^^^^^^
>         _greaterThanZero(_value);

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    Utils
Line:        107
Source: 
>     // validates an address - currently only checks that it isn't null
>     modifier validAddress(address _address) {
>                           ^^^^^^^^^^^^^^^^
>         _validAddress(_address);

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    Utils
Line:        118
Source: 
>     // verifies that the address is different than this contract address
>     modifier notThis(address _address) {
>                      ^^^^^^^^^^^^^^^^
>         _notThis(_address);

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    Utils
Line:        129
Source: 
>     // validates an external address - currently only checks that it isn't null or this
>     modifier validExternalAddress(address _address) {
>                                   ^^^^^^^^^^^^^^^^
>         _validExternalAddress(_address);

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    Owned
Line:        35
Source: 
>     address public override owner;
>     address public newOwner;
>     ^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    Owned
Line:        72
Source: 
>         require(_newOwner != owner, "ERR_SAME_OWNER");
>         newOwner = _newOwner;
>         ^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    TokenHandler
Line:        197
Source: 
>     ) internal {
>         (bool success, bytes memory data) = address(_token).call(
>                                             ^^^^^^^^^^^^^^^^^^^^^
>             abi.encodeWithSelector(APPROVE_FUNC_SELECTOR, _spender, _value)

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    TokenHandler
Line:        217
Source: 
>     ) internal {
>         (bool success, bytes memory data) = address(_token).call(
>                                             ^^^^^^^^^^^^^^^^^^^^^
>             abi.encodeWithSelector(TRANSFER_FUNC_SELECTOR, _to, _value)

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    TokenHandler
Line:        239
Source: 
>     ) internal {
>         (bool success, bytes memory data) = address(_token).call(
>                                             ^^^^^^^^^^^^^^^^^^^^^
>             abi.encodeWithSelector(TRANSFER_FROM_FUNC_SELECTOR, _from, _to, _value)

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    TokenHandler
Line:        197
Source: 
>     ) internal {
>         (bool success, bytes memory data) = address(_token).call(
>                                             ^^^^^^^^^^^^^^^^^^^^^
>             abi.encodeWithSelector(APPROVE_FUNC_SELECTOR, _spender, _value)

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    TokenHandler
Line:        239
Source: 
>     ) internal {
>         (bool success, bytes memory data) = address(_token).call(
>                                             ^^^^^^^^^^^^^^^^^^^^^
>             abi.encodeWithSelector(TRANSFER_FROM_FUNC_SELECTOR, _from, _to, _value)

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    TokenHandler
Line:        179
Source: 
> contract TokenHandler {
>     bytes4 private constant APPROVE_FUNC_SELECTOR = bytes4(keccak256("approve(address,uint256)"));
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes4 private constant TRANSFER_FUNC_SELECTOR = bytes4(keccak256("transfer(address,uint256)"));

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    TokenHandler
Line:        180
Source: 
>     bytes4 private constant APPROVE_FUNC_SELECTOR = bytes4(keccak256("approve(address,uint256)"));
>     bytes4 private constant TRANSFER_FUNC_SELECTOR = bytes4(keccak256("transfer(address,uint256)"));
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes4 private constant TRANSFER_FROM_FUNC_SELECTOR = bytes4(keccak256("transferFrom(address,address,uint256)"));

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    TokenHandler
Line:        181
Source: 
>     bytes4 private constant TRANSFER_FUNC_SELECTOR = bytes4(keccak256("transfer(address,uint256)"));
>     bytes4 private constant TRANSFER_FROM_FUNC_SELECTOR = bytes4(keccak256("transferFrom(address,address,uint256)"));
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    TokenHandler
Line:        179
Source: 
> contract TokenHandler {
>     bytes4 private constant APPROVE_FUNC_SELECTOR = bytes4(keccak256("approve(address,uint256)"));
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes4 private constant TRANSFER_FUNC_SELECTOR = bytes4(keccak256("transfer(address,uint256)"));

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    TokenHandler
Line:        181
Source: 
>     bytes4 private constant TRANSFER_FUNC_SELECTOR = bytes4(keccak256("transfer(address,uint256)"));
>     bytes4 private constant TRANSFER_FROM_FUNC_SELECTOR = bytes4(keccak256("transferFrom(address,address,uint256)"));
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
