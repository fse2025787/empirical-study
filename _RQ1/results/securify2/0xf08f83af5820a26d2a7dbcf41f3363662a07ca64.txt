pragma directive defines a prior version to 0.7.6. Changing pragma version to 0.7.6....
Traceback (most recent call last):
  File "__main__.py", line 286, in <module>
    main()
  File "__main__.py", line 277, in main
    matches.extend(pattern.find_matches())
  File "/bdata2//tools/securify/master/securify2/securify/analyses/patterns/ast/naming_convention_pattern.py", line 17, in find_matches
    ast_root = self.get_ast_root()
  File "/bdata2//tools/securify/master/securify2/securify/analyses/patterns/ast/abstract_ast_pattern.py", line 18, in get_ast_root
    ast_root = self.analysis_context.ast
  File "/bdata2//tools/securify/master/securify2/securify/analyses/analysis.py", line 74, in ast
    self._ast = self.config.ast_compiler(self)
  File "__main__.py", line 253, in <lambda>
    ast_compiler=lambda t: solidity_ast_compiler.compile_ast(t.source_file),
  File "/bdata2//tools/securify/master/securify2/securify/solidity/solidity_ast_compiler.py", line 31, in compile_ast
    compile_output = compile_standard(compile_input, allow_paths='/')
  File "/home//.conda/envs/securify2/lib/python3.7/site-packages/solc/main.py", line 181, in compile_standard
    message=error_message,
solc.exceptions.SolcError: fixed_pragma.sol:1900:5: ParserError: Function, variable, struct or modifier declaration expected.
/**
^ (Relevant source part starts here and spans across multiple lines).

    > command: `solc --allow-paths / --standard-json`
    > return code: `0`
    > stderr:
    {"errors":[{"component":"general","errorCode":"9182","formattedMessage":"fixed_pragma.sol:1900:5: ParserError: Function, variable, struct or modifier declaration expected.\n    /**\n    ^ (Relevant source part starts here and spans across multiple lines).\n","message":"Function, variable, struct or modifier declaration expected.","severity":"error","sourceLocation":{"end":57344,"file":"fixed_pragma.sol","start":56792},"type":"ParserError"}],"sources":{}}

    > stdout:
