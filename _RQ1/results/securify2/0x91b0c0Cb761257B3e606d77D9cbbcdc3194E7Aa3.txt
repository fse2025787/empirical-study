pragma directive defines a prior version to 0.5.17. Changing pragma version to 0.5.17....
[0;33mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Warning
Contract:    AMERICANINU
Line:        92
Source: 
>   uint8  constant tokenDecimals = 18;
>   uint256 _totalSupply = 1000000000000000000000000000000000;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint256 public basePercent = 100;

[0m
[0;33mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Warning
Contract:    AMERICANINU
Line:        93
Source: 
>   uint256 _totalSupply = 1000000000000000000000000000000000;
>   uint256 public basePercent = 100;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    ERC20Detailed
Line:        69
Source: 
> 
>   function name() public view returns(string memory) {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     return _name;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    ERC20Detailed
Line:        73
Source: 
> 
>   function symbol() public view returns(string memory) {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     return _symbol;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    ERC20Detailed
Line:        77
Source: 
> 
>   function decimals() public view returns(uint8) {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     return _decimals;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    AMERICANINU
Line:        99
Source: 
> 
>   function totalSupply() public view returns (uint256) {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     return _totalSupply;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    AMERICANINU
Line:        103
Source: 
> 
>   function balanceOf(address owner) public view returns (uint256) {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     return _balances[owner];

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    AMERICANINU
Line:        107
Source: 
> 
>   function allowance(address owner, address spender) public view returns (uint256) {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     return _allowed[owner][spender];

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    AMERICANINU
Line:        134
Source: 
> 
>   function multiTransfer(address[] memory receivers, uint256[] memory amounts) public {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     for (uint256 i = 0; i < receivers.length; i++) {

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    AMERICANINU
Line:        140
Source: 
> 
>   function approve(address spender, uint256 value) public returns (bool) {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     require(spender != address(0));

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    AMERICANINU
Line:        147
Source: 
> 
>   function transferFrom(address from, address to, uint256 value) public returns (bool) {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     require(value <= _balances[from]);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    AMERICANINU
Line:        168
Source: 
> 
>   function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     require(spender != address(0));

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    AMERICANINU
Line:        175
Source: 
> 
>   function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     require(spender != address(0));

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Locked Ether
Description: Contracts that may receive ether must also allow users to
             extract the deposited ether from the contract.
Type:        Violation
Contract:    AMERICANINU
Line:        82
Source: 
> 
> contract AMERICANINU is ERC20Detailed {
> ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    AMERICANINU
Line:        111
Source: 
> 
>   function findOnePercent(uint256 value) public view returns (uint256)  {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 roundValue = value.ceil(basePercent);

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    AMERICANINU
Line:        134
Source: 
> 
>   function multiTransfer(address[] memory receivers, uint256[] memory amounts) public {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     for (uint256 i = 0; i < receivers.length; i++) {

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    AMERICANINU
Line:        188
Source: 
> 
>   function burn(uint256 amount) external {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     _burn(msg.sender, amount);

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    AMERICANINU
Line:        103
Source: 
> 
>   function balanceOf(address owner) public view returns (uint256) {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     return _balances[owner];

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    AMERICANINU
Line:        107
Source: 
> 
>   function allowance(address owner, address spender) public view returns (uint256) {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     return _allowed[owner][spender];

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    AMERICANINU
Line:        117
Source: 
> 
>   function transfer(address to, uint256 value) public returns (bool) {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     require(value <= _balances[msg.sender]);

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    AMERICANINU
Line:        140
Source: 
> 
>   function approve(address spender, uint256 value) public returns (bool) {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     require(spender != address(0));

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    AMERICANINU
Line:        147
Source: 
> 
>   function transferFrom(address from, address to, uint256 value) public returns (bool) {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     require(value <= _balances[from]);

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    AMERICANINU
Line:        168
Source: 
> 
>   function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     require(spender != address(0));

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    AMERICANINU
Line:        175
Source: 
> 
>   function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     require(spender != address(0));

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Multiplication after division
Description: Information might be lost due to division before
             multiplication
Type:        Violation
Contract:    SafeMath
Line:        29
Source: 
>     }
>     uint256 c = a * b;
>                 ^^^^^
>     assert(c / a == b);

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Shadowed Local Variable
Description: Reports local variable declarations that shadow
             declarations from outer scopes.
Type:        Violation
Contract:    ERC20Detailed
Line:        63
Source: 
> 
>   constructor(string memory name, string memory symbol, uint8 decimals) public {
>               ^^^^^^^^^^^^^^^^^^
>     _name = name;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Shadowed Local Variable
Description: Reports local variable declarations that shadow
             declarations from outer scopes.
Type:        Violation
Contract:    ERC20Detailed
Line:        63
Source: 
> 
>   constructor(string memory name, string memory symbol, uint8 decimals) public {
>                                   ^^^^^^^^^^^^^^^^^^^^
>     _name = name;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Shadowed Local Variable
Description: Reports local variable declarations that shadow
             declarations from outer scopes.
Type:        Violation
Contract:    ERC20Detailed
Line:        63
Source: 
> 
>   constructor(string memory name, string memory symbol, uint8 decimals) public {
>                                                         ^^^^^^^^^^^^^^
>     _name = name;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    AMERICANINU
Line:        89
Source: 
> 
>   string constant tokenName = "American Inu";
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   string constant tokenSymbol = "AMERICANINU";

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    AMERICANINU
Line:        90
Source: 
>   string constant tokenName = "American Inu";
>   string constant tokenSymbol = "AMERICANINU";
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint8  constant tokenDecimals = 18;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    AMERICANINU
Line:        91
Source: 
>   string constant tokenSymbol = "AMERICANINU";
>   uint8  constant tokenDecimals = 18;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint256 _totalSupply = 1000000000000000000000000000000000;

[0m
[0;33mSeverity:    HIGH
Pattern:     State Variable Shadowing
Description: State variables in inherited contract should not be named
             identically to inherited variables
Type:        Warning
Contract:    AMERICANINU
Line:        85
Source: 
>   using SafeMath for uint256;
>   mapping (address => uint256) private _balances;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   mapping (address => mapping (address => uint256)) private _allowed;

[0m
[0;33mSeverity:    HIGH
Pattern:     State Variable Shadowing
Description: State variables in inherited contract should not be named
             identically to inherited variables
Type:        Warning
Contract:    AMERICANINU
Line:        86
Source: 
>   mapping (address => uint256) private _balances;
>   mapping (address => mapping (address => uint256)) private _allowed;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     State Variable Shadowing
Description: State variables in inherited contract should not be named
             identically to inherited variables
Type:        Warning
Contract:    AMERICANINU
Line:        89
Source: 
> 
>   string constant tokenName = "American Inu";
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   string constant tokenSymbol = "AMERICANINU";

[0m
[0;33mSeverity:    HIGH
Pattern:     State Variable Shadowing
Description: State variables in inherited contract should not be named
             identically to inherited variables
Type:        Warning
Contract:    AMERICANINU
Line:        90
Source: 
>   string constant tokenName = "American Inu";
>   string constant tokenSymbol = "AMERICANINU";
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint8  constant tokenDecimals = 18;

[0m
[0;33mSeverity:    HIGH
Pattern:     State Variable Shadowing
Description: State variables in inherited contract should not be named
             identically to inherited variables
Type:        Warning
Contract:    AMERICANINU
Line:        91
Source: 
>   string constant tokenSymbol = "AMERICANINU";
>   uint8  constant tokenDecimals = 18;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint256 _totalSupply = 1000000000000000000000000000000000;

[0m
[0;33mSeverity:    HIGH
Pattern:     State Variable Shadowing
Description: State variables in inherited contract should not be named
             identically to inherited variables
Type:        Warning
Contract:    AMERICANINU
Line:        92
Source: 
>   uint8  constant tokenDecimals = 18;
>   uint256 _totalSupply = 1000000000000000000000000000000000;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint256 public basePercent = 100;

[0m
[0;33mSeverity:    HIGH
Pattern:     State Variable Shadowing
Description: State variables in inherited contract should not be named
             identically to inherited variables
Type:        Warning
Contract:    AMERICANINU
Line:        93
Source: 
>   uint256 _totalSupply = 1000000000000000000000000000000000;
>   uint256 public basePercent = 100;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    AMERICANINU
Line:        89
Source: 
> 
>   string constant tokenName = "American Inu";
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   string constant tokenSymbol = "AMERICANINU";

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    AMERICANINU
Line:        90
Source: 
>   string constant tokenName = "American Inu";
>   string constant tokenSymbol = "AMERICANINU";
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint8  constant tokenDecimals = 18;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    AMERICANINU
Line:        91
Source: 
>   string constant tokenSymbol = "AMERICANINU";
>   uint8  constant tokenDecimals = 18;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint256 _totalSupply = 1000000000000000000000000000000000;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    AMERICANINU
Line:        92
Source: 
>   uint8  constant tokenDecimals = 18;
>   uint256 _totalSupply = 1000000000000000000000000000000000;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint256 public basePercent = 100;

[0m
[0;31mSeverity:    INFO
Pattern:     Too Many Digit Literals
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    AMERICANINU
Line:        92
Source: 
>   uint8  constant tokenDecimals = 18;
>   uint256 _totalSupply = 1000000000000000000000000000000000;
>                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint256 public basePercent = 100;

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    ERC20Detailed
Line:        61
Source: 
>   string private _symbol;
>   uint8 private _decimals;
>   ^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    AMERICANINU
Line:        89
Source: 
> 
>   string constant tokenName = "American Inu";
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   string constant tokenSymbol = "AMERICANINU";

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    AMERICANINU
Line:        90
Source: 
>   string constant tokenName = "American Inu";
>   string constant tokenSymbol = "AMERICANINU";
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint8  constant tokenDecimals = 18;

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    AMERICANINU
Line:        91
Source: 
>   string constant tokenSymbol = "AMERICANINU";
>   uint8  constant tokenDecimals = 18;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint256 _totalSupply = 1000000000000000000000000000000000;

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    AMERICANINU
Line:        92
Source: 
>   uint8  constant tokenDecimals = 18;
>   uint256 _totalSupply = 1000000000000000000000000000000000;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint256 public basePercent = 100;

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    AMERICANINU
Line:        93
Source: 
>   uint256 _totalSupply = 1000000000000000000000000000000000;
>   uint256 public basePercent = 100;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    AMERICANINU
Line:        195
Source: 
>     require(amount <= _balances[account]);
>     _totalSupply = _totalSupply.sub(amount);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     _balances[account] = _balances[account].sub(amount);

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    ERC20Detailed
Line:        73
Source: 
> 
>   function symbol() public view returns(string memory) {
>                                         ^^^^^^
>     return _symbol;

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    AMERICANINU
Line:        194
Source: 
>     require(amount != 0);
>     require(amount <= _balances[account]);
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     _totalSupply = _totalSupply.sub(amount);

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    AMERICANINU
Line:        201
Source: 
>   function burnFrom(address account, uint256 amount) external {
>     require(amount <= _allowed[account][msg.sender]);
>                                         ^^^^^^^^^^
>     _allowed[account][msg.sender] = _allowed[account][msg.sender].sub(amount);

[0m
