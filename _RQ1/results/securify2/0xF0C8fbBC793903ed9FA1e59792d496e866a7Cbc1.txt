[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    AuthGemJoin8
Line:        106
Source: 
> 
>     function exit(address usr, uint256 amt) external {
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         uint256 wad = mul(amt, 10 ** (18 - dec));

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    AuthGemJoin8
Line:        46
Source: 
>     mapping (address => uint256) public wards;
>     function rely(address usr) external auth {
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         wards[usr] = 1;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    AuthGemJoin8
Line:        50
Source: 
>     }
>     function deny(address usr) external auth {
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         wards[usr] = 0;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    AuthGemJoin8
Line:        88
Source: 
> 
>     function setImplementation(address implementation, uint256 permitted) public auth {
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         implementations[implementation] = permitted;  // 1 live, 0 disable

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    AuthGemJoin8
Line:        96
Source: 
> 
>     function join(address usr, uint256 amt, address msgSender) external auth {
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(live == 1, "AuthGemJoin8/not-live");

[0m
[0;31mSeverity:    HIGH
Pattern:     Repeated Call to Untrusted Contract
Description: Repeated call to an untrusted contract may result in
             different values
Type:        Violation
Contract:    AuthGemJoin8
Line:        74
Source: 
>         dec = GemLike(gem_).decimals();
>         require(GemLike(gem_).decimals() < 18, "AuthGemJoin8/decimals-18-or-higher");
>                  ^^^^^^^^^^^^^^^^^^^^^^^^
>         wards[msg.sender] = 1;

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        27
Source: 
> 
> pragma solidity >=0.6.12;
>  ^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    AuthGemJoin8
Line:        73
Source: 
>         gem = GemLike(gem_);
>         dec = GemLike(gem_).decimals();
>                ^^^^^^^^^^^^^^^^^^^^^^^^
>         require(GemLike(gem_).decimals() < 18, "AuthGemJoin8/decimals-18-or-higher");

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    AuthGemJoin8
Line:        74
Source: 
>         dec = GemLike(gem_).decimals();
>         require(GemLike(gem_).decimals() < 18, "AuthGemJoin8/decimals-18-or-higher");
>                  ^^^^^^^^^^^^^^^^^^^^^^^^
>         wards[msg.sender] = 1;

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    AuthGemJoin8
Line:        100
Source: 
>         require(int256(wad) >= 0, "AuthGemJoin8/overflow");
>         require(implementations[gem.erc20Impl()] == 1, "AuthGemJoin8/implementation-invalid");
>                                  ^^^^^^^^^^^^^^^
>         vat.slip(ilk, usr, int256(wad));

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    AuthGemJoin8
Line:        102
Source: 
>         vat.slip(ilk, usr, int256(wad));
>         require(gem.transferFrom(msg.sender, address(this), amt), "AuthGemJoin8/failed-transfer");
>                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         emit Join(usr, amt, msgSender);

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    AuthGemJoin8
Line:        109
Source: 
>         require(int256(wad) >= 0, "AuthGemJoin8/overflow");
>         require(implementations[gem.erc20Impl()] == 1, "AuthGemJoin8/implementation-invalid");
>                                  ^^^^^^^^^^^^^^^
>         vat.slip(ilk, msg.sender, -int256(wad));

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    AuthGemJoin8
Line:        111
Source: 
>         vat.slip(ilk, msg.sender, -int256(wad));
>         require(gem.transfer(usr, amt), "AuthGemJoin8/failed-transfer");
>                  ^^^^^^^^^^^^^^^^^^^^^^
>         emit Exit(usr, amt);

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    AuthGemJoin8
Line:        77
Source: 
>         live = 1;
>         setImplementation(GemLike(gem_).erc20Impl(), 1);
>                            ^^^^^^^^^^^^^^^^^^^^^^^^^
>         vat = VatLike(vat_);

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    AuthGemJoin8
Line:        101
Source: 
>         require(implementations[gem.erc20Impl()] == 1, "AuthGemJoin8/implementation-invalid");
>         vat.slip(ilk, usr, int256(wad));
>          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(gem.transferFrom(msg.sender, address(this), amt), "AuthGemJoin8/failed-transfer");

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    AuthGemJoin8
Line:        110
Source: 
>         require(implementations[gem.erc20Impl()] == 1, "AuthGemJoin8/implementation-invalid");
>         vat.slip(ilk, msg.sender, -int256(wad));
>          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(gem.transfer(usr, amt), "AuthGemJoin8/failed-transfer");

[0m
[0;31mSeverity:    INFO
Pattern:     Uninitialized Local Variables
Description: A variable is declared but never initialized.
Type:        Violation
Contract:    AuthGemJoin8
Line:        93
Source: 
>     function mul(uint256 x, uint256 y) internal pure returns (uint256 z) {
>         require(y == 0 || (z = x * y) / y == x, "AuthGemJoin8/overflow");
>                             ^
>     }

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    AuthGemJoin8
Line:        59
Source: 
>     GemLike public immutable gem;
>     uint256 public immutable dec;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 public live;  // Access Flag

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    AuthGemJoin8
Line:        60
Source: 
>     uint256 public immutable dec;
>     uint256 public live;  // Access Flag
>      ^^^^^^^^^^^^^^^^^^^
> 

[0m
