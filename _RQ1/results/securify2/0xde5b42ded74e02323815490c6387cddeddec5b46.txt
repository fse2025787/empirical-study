[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    testArrayEvent
Line:        23
Source: 
>     
>     function emitEventFixedArray() public {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    testArrayEvent
Line:        35
Source: 
>     
>     function emitEventDynamicArray(uint slots) public {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    testArrayEvent
Line:        13
Source: 
> 
> contract testArrayEvent {
> ^^^^^^^^^^^^^^^^^^^^^^^^^
>     

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    testArrayEvent
Line:        18
Source: 
>     address[] growableAddressArray;
>     event arraysFixed(uint256[3] numbers, address[2] addresses, bool[4] bools);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     event arraysDynamic(uint256[] numbers, address[] addresses, bool[] bools);

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    testArrayEvent
Line:        19
Source: 
>     event arraysFixed(uint256[3] numbers, address[2] addresses, bool[4] bools);
>     event arraysDynamic(uint256[] numbers, address[] addresses, bool[] bools);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    testArrayEvent
Line:        15
Source: 
>     
>     uint256[] growableUintsArray;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bool[] growableBoolArray;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    testArrayEvent
Line:        16
Source: 
>     uint256[] growableUintsArray;
>     bool[] growableBoolArray;
>     ^^^^^^^^^^^^^^^^^^^^^^^^
>     address[] growableAddressArray;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    testArrayEvent
Line:        17
Source: 
>     bool[] growableBoolArray;
>     address[] growableAddressArray;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     event arraysFixed(uint256[3] numbers, address[2] addresses, bool[4] bools);

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    testArrayEvent
Line:        40
Source: 
>         while (count <= slots){
>             growableUintsArray.push(count);
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             growableBoolArray.push(current);

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    testArrayEvent
Line:        41
Source: 
>             growableUintsArray.push(count);
>             growableBoolArray.push(current);
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             current = !current;

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    testArrayEvent
Line:        43
Source: 
>             current = !current;
>             growableAddressArray.push(block.coinbase);
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             count++;

[0m
