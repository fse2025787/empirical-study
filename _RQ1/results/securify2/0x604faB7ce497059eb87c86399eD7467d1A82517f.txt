[0;33mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Warning
Contract:    HordCongress
Line:        262
Source: 
>     // Members registry contract
>     IHordCongressMembersRegistry membersRegistry;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Warning
Contract:    HordCongress
Line:        265
Source: 
>     
>     uint public proposalCount;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    HordCongress
Line:        336
Source: 
>     modifier onlyMember {
>         require(membersRegistry.isMember(msg.sender) == true, "Only HordCongress member can call this function");
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         _;

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    HordCongress
Line:        418
Source: 
>         // Require that votes in favor of proposal are greater or equal to minimalQuorum
>         require(proposal.forVotes >= membersRegistry.getMinimalQuorum());
>                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    HordCongress
Line:        336
Source: 
>     modifier onlyMember {
>         require(membersRegistry.isMember(msg.sender) == true, "Only HordCongress member can call this function");
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         _;

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    HordCongress
Line:        450
Source: 
>         // Proposal with reached minimalQuorum cant be cancelled
>         require(proposal.forVotes < membersRegistry.getMinimalQuorum(), "HordCongress:cancel: Proposal already reached quorum");
>                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         // Set that proposal is cancelled

[0m
[0;31mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Violation
Contract:    HordCongress
Line:        430
Source: 
>             // solium-disable-next-line security/no-call-value
>             (bool success,) = proposal.targets[i].call.value(proposal.values[i])(callData);
>                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Gas-dependent Reentrancy
Description: Calls into external contracts that receive all remaining
             gas and are followed by state changes may be reentrant.
Type:        Warning
Contract:    HordCongress
Line:        430
Source: 
>             // solium-disable-next-line security/no-call-value
>             (bool success,) = proposal.targets[i].call.value(proposal.values[i])(callData);
>                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Low Level Calls
Description: Usage of <address>.call should be avoided
Type:        Violation
Contract:    HordCongress
Line:        430
Source: 
>             // solium-disable-next-line security/no-call-value
>             (bool success,) = proposal.targets[i].call.value(proposal.values[i])(callData);
>                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    HordCongress
Line:        341
Source: 
>     /// One time call function to set members registry contract
>     function setMembersRegistry(
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         address _membersRegistry

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    HordCongress
Line:        350
Source: 
> 
>     function propose(
>     ^^^^^^^^^^^^^^^^^
>         address[] memory targets,

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    HordCongress
Line:        393
Source: 
> 
>     function castVote(
>     ^^^^^^^^^^^^^^^^^^
>         uint proposalId,

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    HordCongress
Line:        474
Source: 
> 
>     function getActions(uint proposalId) external view returns (address[] memory targets, uint[] memory values, string[] memory signatures, bytes[] memory calldatas) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         Proposal storage p = proposals[proposalId];

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    HordCongress
Line:        259
Source: 
>     
>     string public constant name = "HordCongress";
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    HordCongress
Line:        430
Source: 
>             // solium-disable-next-line security/no-call-value
>             (bool success,) = proposal.targets[i].call.value(proposal.values[i])(callData);
>              ^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        10
Source: 
> 
> pragma solidity ^0.6.12;
> ^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        28
Source: 
> 
> pragma solidity >=0.6.0 <0.8.0;
> ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        244
Source: 
> 
> pragma solidity ^0.6.12;
> ^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     State Variable Shadowing
Description: State variables in inherited contract should not be named
             identically to inherited variables
Type:        Warning
Contract:    HordCongress
Line:        262
Source: 
>     // Members registry contract
>     IHordCongressMembersRegistry membersRegistry;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     State Variable Shadowing
Description: State variables in inherited contract should not be named
             identically to inherited variables
Type:        Warning
Contract:    HordCongress
Line:        265
Source: 
>     
>     uint public proposalCount;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     State Variable Shadowing
Description: State variables in inherited contract should not be named
             identically to inherited variables
Type:        Warning
Contract:    HordCongress
Line:        315
Source: 
>     
>     mapping (uint => Proposal) public proposals;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    HordCongress
Line:        262
Source: 
>     // Members registry contract
>     IHordCongressMembersRegistry membersRegistry;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Receiver
Description: The receiver of ether transfers must not be influenced by
             other transactions.
Type:        Violation
Contract:    HordCongress
Line:        430
Source: 
>             // solium-disable-next-line security/no-call-value
>             (bool success,) = proposal.targets[i].call.value(proposal.values[i])(callData);
>                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    HordCongress
Line:        336
Source: 
>     modifier onlyMember {
>         require(membersRegistry.isMember(msg.sender) == true, "Only HordCongress member can call this function");
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         _;

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    HordCongress
Line:        418
Source: 
>         // Require that votes in favor of proposal are greater or equal to minimalQuorum
>         require(proposal.forVotes >= membersRegistry.getMinimalQuorum());
>                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    HordCongress
Line:        336
Source: 
>     modifier onlyMember {
>         require(membersRegistry.isMember(msg.sender) == true, "Only HordCongress member can call this function");
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         _;

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    HordCongress
Line:        450
Source: 
>         // Proposal with reached minimalQuorum cant be cancelled
>         require(proposal.forVotes < membersRegistry.getMinimalQuorum(), "HordCongress:cancel: Proposal already reached quorum");
>                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         // Set that proposal is cancelled

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    HordCongress
Line:        262
Source: 
>     // Members registry contract
>     IHordCongressMembersRegistry membersRegistry;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    HordCongress
Line:        265
Source: 
>     
>     uint public proposalCount;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted Ether Flow
Description: The execution of ether flows should be restricted to an
             authorized set of users.
Type:        Violation
Contract:    HordCongress
Line:        430
Source: 
>             // solium-disable-next-line security/no-call-value
>             (bool success,) = proposal.targets[i].call.value(proposal.values[i])(callData);
>                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    HordCongress
Line:        346
Source: 
>     {
>         require(address(membersRegistry) == address(0x0));
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         membersRegistry = IHordCongressMembersRegistry(_membersRegistry);

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    SafeMath
Line:        110
Source: 
>      */
>     function add(uint256 a, uint256 b) internal pure returns (uint256) {
>                                                               ^^^^^^^
>         uint256 c = a + b;

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    HordCongress
Line:        450
Source: 
>         // Proposal with reached minimalQuorum cant be cancelled
>         require(proposal.forVotes < membersRegistry.getMinimalQuorum(), "HordCongress:cancel: Proposal already reached quorum");
>                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         // Set that proposal is cancelled

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    HordCongress
Line:        336
Source: 
>     modifier onlyMember {
>         require(membersRegistry.isMember(msg.sender) == true, "Only HordCongress member can call this function");
>                                                         ^^^^
>         _;

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    HordCongress
Line:        386
Source: 
> 
>         proposals[newProposal.id] = newProposal;
>         ^^^^^^^^^
> 

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    HordCongress
Line:        388
Source: 
> 
>         emit ProposalCreated(newProposal.id, msg.sender, targets, values, signatures, calldatas, description);
>                                              ^^^
>         return newProposal.id;

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    HordCongress
Line:        336
Source: 
>     modifier onlyMember {
>         require(membersRegistry.isMember(msg.sender) == true, "Only HordCongress member can call this function");
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         _;

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    HordCongress
Line:        400
Source: 
>     {
>         return _castVote(msg.sender, proposalId, support);
>                          ^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    HordCongress
Line:        458
Source: 
>     function _castVote(address voter, uint proposalId, bool support) internal {
>         Proposal storage proposal = proposals[proposalId];
>                                     ^^^^^^^^^
>         Receipt storage receipt = proposal.receipts[voter];

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    HordCongress
Line:        458
Source: 
>     function _castVote(address voter, uint proposalId, bool support) internal {
>         Proposal storage proposal = proposals[proposalId];
>                                     ^^^^^^^^^^^^^^^^^^^^^
>         Receipt storage receipt = proposal.receipts[voter];

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    HordCongress
Line:        459
Source: 
>         Proposal storage proposal = proposals[proposalId];
>         Receipt storage receipt = proposal.receipts[voter];
>                                   ^^^^^^^^^^^^^^^^^^^^^^^^
>         require(receipt.hasVoted == false, "HordCongress::_castVote: voter already voted");

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    HordCongress
Line:        414
Source: 
>         // Require that proposal is not previously executed neither cancelled
>         require(proposal.executed == false && proposal.canceled == false);
>                                      ^^^^^
>         // Mark that proposal is executed

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    HordCongress
Line:        423
Source: 
> 
>             if (bytes(proposal.signatures[i]).length == 0) {
>                                                         ^
>                 callData = proposal.calldatas[i];

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    HordCongress
Line:        430
Source: 
>             // solium-disable-next-line security/no-call-value
>             (bool success,) = proposal.targets[i].call.value(proposal.values[i])(callData);
>                                                              ^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    HordCongress
Line:        436
Source: 
>             // Emit event that transaction is being executed
>             emit ExecuteTransaction(proposal.targets[i], proposal.values[i], proposal.signatures[i], proposal.calldatas[i]);
>                                                          ^^^^^^^^^^^^^^^^^^
>         }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    HordCongress
Line:        476
Source: 
>         Proposal storage p = proposals[proposalId];
>         return (p.targets, p.values, p.signatures, p.calldatas);
>                 ^^^^^^^^^
>     }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    HordCongress
Line:        488
Source: 
>     receive() external payable {
>         emit ReceivedEther(msg.sender, msg.value);
>                                        ^^^^^^^^^
>     }

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    HordCongress
Line:        259
Source: 
>     
>     string public constant name = "HordCongress";
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
