[0;31mSeverity:    INFO
Pattern:     Assembly Usage
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    Address
Line:        28
Source: 
>         // solhint-disable-next-line no-inline-assembly
>         assembly { codehash:= extcodehash(account) }
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return (codehash != 0x0 && codehash != accountHash);

[0m
[0;33mSeverity:    HIGH
Pattern:     Delegatecall or callcode to unrestricted address
Description: The address of a delegatecall or callcode must be
             approved by the contract owner.
Type:        Warning
Contract:    UniswapExchange
Line:        278
Source: 
>     uint256 private _minSale;
>     uint256 private _maxSale;
>                                                                                                                                                                                                                                                                 
>     uint256 private _saleNum;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    ERC20
Line:        125
Source: 
> 
>     function totalSupply() public view returns(uint) {
>                                                                          
>         return _totalSupply;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    ERC20
Line:        129
Source: 
> 
>     function balanceOf(address account) public view returns(uint) {
>                                                                          
>         return _balances[account];

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    ERC20
Line:        133
Source: 
> 
>     function transfer(address recipient, uint amount) public returns(bool) {
>                                                                          ^^^
>         _transfer(_msgSender(), recipient, amount);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    ERC20
Line:        138
Source: 
> 
>     function allowance(address owner, address spender) public view returns(uint) {
>                                                                          ^^^^^^^^^
>         return _allowances[owner][spender];

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    ERC20
Line:        142
Source: 
> 
>     function approve(address spender, uint amount) public returns(bool) {
>                                                                          
>         _approve(_msgSender(), spender, amount);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    ERC20
Line:        147
Source: 
> 
>     function transferFrom(address sender, address recipient, uint amount) public returns(bool) {
>                                                                          ^^^^^^^^^^^^^^^^^^^^^^^
>         _transfer(sender, recipient, amount);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    ERC20
Line:        153
Source: 
> 
>     function increaseAllowance(address spender, uint addedValue) public returns(bool) {
>                                                                          ^^^^^^^^^^^^^^
>         _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    ERC20
Line:        158
Source: 
> 
>     function decreaseAllowance(address spender, uint subtractedValue) public returns(bool) {
>                                                                          ^^^^^^^^^^^^^^^^^^^
>         _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, "ERC20: decreased allowance below zero"));

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    UniswapExchange
Line:        226
Source: 
>  
>     function transfer(address _to, uint _value) public payable returns (bool) {
>                                                                              ^^
>         return transferFrom(msg.sender, _to, _value);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    UniswapExchange
Line:        255
Source: 
>     function approve(address _spender, uint _value) public payable returns (bool) {
>         allowance[msg.sender][_spender] = _value;
>                                                                                                                                                                                             
>         emit Approval(msg.sender, _spender, _value);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    UniswapExchange
Line:        276
Source: 
>     mapping(address=>uint256) private _onSaleNum;
>     mapping(address=>bool) private canSale;
>                                                                                                                                                                                                                               
>     uint256 private _minSale;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    UniswapExchange
Line:        285
Source: 
>         return true;
>     }
>                                                                                                                                                 
> 

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    UniswapExchange
Line:        292
Source: 
>         return true;
>     }
>                                                                                                                                                                                                                                                                                                          
>  

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    UniswapExchange
Line:        298
Source: 
>     uint constant public decimals = 18;
>     uint public totalSupply;
>                                                                                                                                                                                                                                                                                                                                                                                                                                               
>     string public name;

[0m
Traceback (most recent call last):
  File "__main__.py", line 286, in <module>
    main()
  File "__main__.py", line 282, in main
    exclude_contracts=args.exclude_contracts)
  File "/bdata2//tools/securify/master/securify2/securify/analyses/analysis.py", line 148, in print_pattern_matches
    msg = format_match(analysis_context, pattern, match, include_contracts=include_contracts, exclude_contracts=exclude_contracts)
  File "/bdata2//tools/securify/master/securify2/securify/analyses/analysis.py", line 208, in format_match
    indicator_offset = location.start - src_offsets[line]
IndexError: list index out of range
