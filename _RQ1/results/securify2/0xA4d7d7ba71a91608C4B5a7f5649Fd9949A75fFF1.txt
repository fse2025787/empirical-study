[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Ownable
Line:        68
Source: 
>      */
>     function owner() public view returns (address) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return _owner;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Ownable
Line:        87
Source: 
>      */
>     function renounceOwnership() public onlyOwner {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         emit OwnershipTransferred(_owner, address(0));

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Ownable
Line:        96
Source: 
>      */
>     function transferOwnership(address newOwner) public onlyOwner {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         _transferOwnership(newOwner);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Ownable
Line:        87
Source: 
>      */
>     function renounceOwnership() public onlyOwner {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         emit OwnershipTransferred(_owner, address(0));

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Ownable
Line:        96
Source: 
>      */
>     function transferOwnership(address newOwner) public onlyOwner {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         _transferOwnership(newOwner);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    StakingPoolGIFTGoldYield
Line:        524
Source: 
> 
>     function changeFireblocksWallet(address _newallet) public onlyAdmins {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         fireblocksWallet = _newallet; 

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    StakingPoolGIFTGoldYield
Line:        534
Source: 
> 
>     function changeSecondAdmin(address _newadmin) public {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(msg.sender == secondAdmin, 'invalid address');

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    StakingPoolGIFTGoldYield
Line:        539
Source: 
> 
>     function whitelistBlacklist(address _addr, bool _status) public onlyAdmins{
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         whitelist[_addr] = _status;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    StakingPoolGIFTGoldYield
Line:        546
Source: 
> 
>     function getKycdWithPagination(uint256 cursor, uint256 howMany) public view returns(address[] memory values, uint256 newCursor){
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         uint256 length = howMany;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    StakingPoolGIFTGoldYield
Line:        560
Source: 
> 
>     function getRequestsOpenWithPagination(uint256 cursor, uint256 howMany) public view returns(address[] memory values, uint256 newCursor){
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         uint256 length = howMany;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    StakingPoolGIFTGoldYield
Line:        573
Source: 
> 
>     function getHistoricalDeposits(uint256 cursor, uint256 howMany) public view returns(HistoricalDeposit[] memory values, uint256 newCursor){
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         uint256 length = howMany;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    StakingPoolGIFTGoldYield
Line:        586
Source: 
> 
>     function getHistoricalWithdrawals(uint256 cursor, uint256 howMany) public view returns(HistoricalWithdrawal[] memory values, uint256 newCursor){
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         uint256 length = howMany;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    StakingPoolGIFTGoldYield
Line:        607
Source: 
> 
>     function changeMinInvestment(uint256 _newAmount) public onlyAdmins {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         minInvestment = _newAmount;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    StakingPoolGIFTGoldYield
Line:        611
Source: 
> 
>     function deposit(uint256 _amount) public nonReentrant {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(whitelist[msg.sender] == true, "GoldYield: not whitelisted. If you KYCd, contact us");

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    StakingPoolGIFTGoldYield
Line:        639
Source: 
> 
>     function satisfyRequest(address _user, uint256 _usdcReturn, uint256 _afiAmount, uint256 _requestId) public onlyAdmins {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         uint256 _amount = requests[_user];

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    StakingPoolGIFTGoldYield
Line:        664
Source: 
> 
>     function satisfyRequestAndReturnRebase(address _user, uint256 _usdcReturn, uint256 _afiAmount, uint256 _requestId) public onlyAdmins {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         uint256 _amount = requests[_user];

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    StakingPoolGIFTGoldYield
Line:        692
Source: 
> 
>     function withdraw(uint256 _amount) public nonReentrant {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(requests[msg.sender] == 0, "GoldYield: request in progress");

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    StakingPoolGIFTGoldYield
Line:        705
Source: 
> 
>     function adminWithdrawAnyLostFunds(uint256 _amount) public onlyOwner {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         poolToken.transfer(msg.sender, _amount);

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    StakingPoolGIFTGoldYield
Line:        613
Source: 
>         require(whitelist[msg.sender] == true, "GoldYield: not whitelisted. If you KYCd, contact us");
>         require(poolToken.allowance(msg.sender, address(this)) >= _amount, "erc20 not allowed");
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(_amount >= minInvestment, "min investment not met");

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    StakingPoolGIFTGoldYield
Line:        619
Source: 
>         deposits[msg.sender].blockWithdrawal = block.timestamp.add(31560000); // 31,560,000 is 12 months in seconds
>         poolToken.transferFrom(msg.sender, fireblocksWallet, _amount); 
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         deposits[msg.sender].balance = deposits[msg.sender].balance.add(_amount);

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    StakingPoolGIFTGoldYield
Line:        621
Source: 
>         deposits[msg.sender].balance = deposits[msg.sender].balance.add(_amount);
>         returnPoolToken.transfer(msg.sender, _amount);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         totalStaked = totalStaked.add(_amount);

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    StakingPoolGIFTGoldYield
Line:        644
Source: 
>         requestTime[_user] = 0;
>         poolToken.transferFrom(msg.sender, _user, _usdcReturn);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         // afitoken.transferFrom(msg.sender, _user, _afiAmount);

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    StakingPoolGIFTGoldYield
Line:        671
Source: 
>         requestTime[_user] = 0;
>         poolToken.transferFrom(msg.sender, _user, _usdcReturn);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         returnPoolToken.transfer(_user, difference);

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    StakingPoolGIFTGoldYield
Line:        672
Source: 
>         poolToken.transferFrom(msg.sender, _user, _usdcReturn);
>         returnPoolToken.transfer(_user, difference);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         // afitoken.transferFrom(msg.sender, _user, _afiAmount);

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    StakingPoolGIFTGoldYield
Line:        695
Source: 
>         require(whitelist[msg.sender] == true, "GoldYield: not whitelisted. If you KYCd contact us");
>         require(returnPoolToken.allowance(msg.sender, address(this)) >= _amount, "not allowed");
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(returnPoolToken.balanceOf(msg.sender) >= _amount, 'you do not have enough jytUSDT balance');

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    StakingPoolGIFTGoldYield
Line:        696
Source: 
>         require(returnPoolToken.allowance(msg.sender, address(this)) >= _amount, "not allowed");
>         require(returnPoolToken.balanceOf(msg.sender) >= _amount, 'you do not have enough jytUSDT balance');
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         returnPoolToken.transferFrom(msg.sender, address(this), _amount);

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    StakingPoolGIFTGoldYield
Line:        697
Source: 
>         require(returnPoolToken.balanceOf(msg.sender) >= _amount, 'you do not have enough jytUSDT balance');
>         returnPoolToken.transferFrom(msg.sender, address(this), _amount);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         requests[msg.sender] = requests[msg.sender].add(_amount);

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    StakingPoolGIFTGoldYield
Line:        706
Source: 
>     function adminWithdrawAnyLostFunds(uint256 _amount) public onlyOwner {
>         poolToken.transfer(msg.sender, _amount);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    Ownable
Line:        96
Source: 
>      */
>     function transferOwnership(address newOwner) public onlyOwner {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         _transferOwnership(newOwner);

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    StakingPoolGIFTGoldYield
Line:        524
Source: 
> 
>     function changeFireblocksWallet(address _newallet) public onlyAdmins {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         fireblocksWallet = _newallet; 

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    StakingPoolGIFTGoldYield
Line:        534
Source: 
> 
>     function changeSecondAdmin(address _newadmin) public {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(msg.sender == secondAdmin, 'invalid address');

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    StakingPoolGIFTGoldYield
Line:        607
Source: 
> 
>     function changeMinInvestment(uint256 _newAmount) public onlyAdmins {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         minInvestment = _newAmount;

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    StakingPoolGIFTGoldYield
Line:        705
Source: 
> 
>     function adminWithdrawAnyLostFunds(uint256 _amount) public onlyOwner {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         poolToken.transfer(msg.sender, _amount);

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    StakingPoolGIFTGoldYield
Line:        539
Source: 
> 
>     function whitelistBlacklist(address _addr, bool _status) public onlyAdmins{
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         whitelist[_addr] = _status;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    StakingPoolGIFTGoldYield
Line:        639
Source: 
> 
>     function satisfyRequest(address _user, uint256 _usdcReturn, uint256 _afiAmount, uint256 _requestId) public onlyAdmins {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         uint256 _amount = requests[_user];

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    StakingPoolGIFTGoldYield
Line:        664
Source: 
> 
>     function satisfyRequestAndReturnRebase(address _user, uint256 _usdcReturn, uint256 _afiAmount, uint256 _requestId) public onlyAdmins {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         uint256 _amount = requests[_user];

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    StakingPoolGIFTGoldYield
Line:        613
Source: 
>         require(whitelist[msg.sender] == true, "GoldYield: not whitelisted. If you KYCd, contact us");
>         require(poolToken.allowance(msg.sender, address(this)) >= _amount, "erc20 not allowed");
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(_amount >= minInvestment, "min investment not met");

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    StakingPoolGIFTGoldYield
Line:        619
Source: 
>         deposits[msg.sender].blockWithdrawal = block.timestamp.add(31560000); // 31,560,000 is 12 months in seconds
>         poolToken.transferFrom(msg.sender, fireblocksWallet, _amount); 
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         deposits[msg.sender].balance = deposits[msg.sender].balance.add(_amount);

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    StakingPoolGIFTGoldYield
Line:        621
Source: 
>         deposits[msg.sender].balance = deposits[msg.sender].balance.add(_amount);
>         returnPoolToken.transfer(msg.sender, _amount);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         totalStaked = totalStaked.add(_amount);

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    StakingPoolGIFTGoldYield
Line:        695
Source: 
>         require(whitelist[msg.sender] == true, "GoldYield: not whitelisted. If you KYCd contact us");
>         require(returnPoolToken.allowance(msg.sender, address(this)) >= _amount, "not allowed");
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(returnPoolToken.balanceOf(msg.sender) >= _amount, 'you do not have enough jytUSDT balance');

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    StakingPoolGIFTGoldYield
Line:        696
Source: 
>         require(returnPoolToken.allowance(msg.sender, address(this)) >= _amount, "not allowed");
>         require(returnPoolToken.balanceOf(msg.sender) >= _amount, 'you do not have enough jytUSDT balance');
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         returnPoolToken.transferFrom(msg.sender, address(this), _amount);

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    StakingPoolGIFTGoldYield
Line:        697
Source: 
>         require(returnPoolToken.balanceOf(msg.sender) >= _amount, 'you do not have enough jytUSDT balance');
>         returnPoolToken.transferFrom(msg.sender, address(this), _amount);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         requests[msg.sender] = requests[msg.sender].add(_amount);

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Shadowed Local Variable
Description: Reports local variable declarations that shadow
             declarations from outer scopes.
Type:        Violation
Contract:    StakingPoolGIFTGoldYield
Line:        539
Source: 
> 
>     function whitelistBlacklist(address _addr, bool _status) public onlyAdmins{
>                                                ^^^^^^^^^^^^
>         whitelist[_addr] = _status;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    StakingPoolGIFTGoldYield
Line:        640
Source: 
>     function satisfyRequest(address _user, uint256 _usdcReturn, uint256 _afiAmount, uint256 _requestId) public onlyAdmins {
>         uint256 _amount = requests[_user];
>         ^^^^^^^^^^^^^^^
>         // uint256 _original = deposits[_user]

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    StakingPoolGIFTGoldYield
Line:        665
Source: 
>     function satisfyRequestAndReturnRebase(address _user, uint256 _usdcReturn, uint256 _afiAmount, uint256 _requestId) public onlyAdmins {
>         uint256 _amount = requests[_user];
>         ^^^^^^^^^^^^^^^
>         require(_usdcReturn <= _amount, 'invalid');

[0m
[0;31mSeverity:    INFO
Pattern:     Too Many Digit Literals
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    StakingPoolGIFTGoldYield
Line:        475
Source: 
>     bool public fundsAreSafu = true; // always 
>     uint256 public minInvestment = 1000000000000000000;
>                                    ^^^^^^^^^^^^^^^^^^^
>     IBEP20 public poolToken;

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    StakingPoolGIFTGoldYield
Line:        613
Source: 
>         require(whitelist[msg.sender] == true, "GoldYield: not whitelisted. If you KYCd, contact us");
>         require(poolToken.allowance(msg.sender, address(this)) >= _amount, "erc20 not allowed");
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(_amount >= minInvestment, "min investment not met");

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    StakingPoolGIFTGoldYield
Line:        695
Source: 
>         require(whitelist[msg.sender] == true, "GoldYield: not whitelisted. If you KYCd contact us");
>         require(returnPoolToken.allowance(msg.sender, address(this)) >= _amount, "not allowed");
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(returnPoolToken.balanceOf(msg.sender) >= _amount, 'you do not have enough jytUSDT balance');

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    StakingPoolGIFTGoldYield
Line:        696
Source: 
>         require(returnPoolToken.allowance(msg.sender, address(this)) >= _amount, "not allowed");
>         require(returnPoolToken.balanceOf(msg.sender) >= _amount, 'you do not have enough jytUSDT balance');
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         returnPoolToken.transferFrom(msg.sender, address(this), _amount);

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    StakingPoolGIFTGoldYield
Line:        619
Source: 
>         deposits[msg.sender].blockWithdrawal = block.timestamp.add(31560000); // 31,560,000 is 12 months in seconds
>         poolToken.transferFrom(msg.sender, fireblocksWallet, _amount); 
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         deposits[msg.sender].balance = deposits[msg.sender].balance.add(_amount);

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    StakingPoolGIFTGoldYield
Line:        621
Source: 
>         deposits[msg.sender].balance = deposits[msg.sender].balance.add(_amount);
>         returnPoolToken.transfer(msg.sender, _amount);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         totalStaked = totalStaked.add(_amount);

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    StakingPoolGIFTGoldYield
Line:        644
Source: 
>         requestTime[_user] = 0;
>         poolToken.transferFrom(msg.sender, _user, _usdcReturn);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         // afitoken.transferFrom(msg.sender, _user, _afiAmount);

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    StakingPoolGIFTGoldYield
Line:        671
Source: 
>         requestTime[_user] = 0;
>         poolToken.transferFrom(msg.sender, _user, _usdcReturn);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         returnPoolToken.transfer(_user, difference);

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    StakingPoolGIFTGoldYield
Line:        672
Source: 
>         poolToken.transferFrom(msg.sender, _user, _usdcReturn);
>         returnPoolToken.transfer(_user, difference);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         // afitoken.transferFrom(msg.sender, _user, _afiAmount);

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    StakingPoolGIFTGoldYield
Line:        697
Source: 
>         require(returnPoolToken.balanceOf(msg.sender) >= _amount, 'you do not have enough jytUSDT balance');
>         returnPoolToken.transferFrom(msg.sender, address(this), _amount);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         requests[msg.sender] = requests[msg.sender].add(_amount);

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    StakingPoolGIFTGoldYield
Line:        706
Source: 
>     function adminWithdrawAnyLostFunds(uint256 _amount) public onlyOwner {
>         poolToken.transfer(msg.sender, _amount);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    INFO
Pattern:     Uninitialized Local Variables
Description: A variable is declared but never initialized.
Type:        Violation
Contract:    StakingPoolGIFTGoldYield
Line:        624
Source: 
>         HistoricalDeposit memory info; 
>         info.user = msg.sender;
>         ^^^^
>         info.depositAmount = _amount;

[0m
[0;31mSeverity:    INFO
Pattern:     Uninitialized Local Variables
Description: A variable is declared but never initialized.
Type:        Violation
Contract:    StakingPoolGIFTGoldYield
Line:        656
Source: 
>         HistoricalWithdrawal memory info; 
>         info.user = _user;
>         ^^^^
>         info.withdrawalAmount = _usdcReturn;

[0m
[0;31mSeverity:    INFO
Pattern:     Uninitialized Local Variables
Description: A variable is declared but never initialized.
Type:        Violation
Contract:    StakingPoolGIFTGoldYield
Line:        684
Source: 
>         HistoricalWithdrawal memory info; 
>         info.user = _user;
>         ^^^^
>         info.withdrawalAmount = _usdcReturn;

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    ReentrancyGuard
Line:        461
Source: 
>         // Any calls to nonReentrant after this point will fail
>         _status = _ENTERED;
>         ^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    StakingPoolGIFTGoldYield
Line:        619
Source: 
>         deposits[msg.sender].blockWithdrawal = block.timestamp.add(31560000); // 31,560,000 is 12 months in seconds
>         poolToken.transferFrom(msg.sender, fireblocksWallet, _amount); 
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         deposits[msg.sender].balance = deposits[msg.sender].balance.add(_amount);

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    StakingPoolGIFTGoldYield
Line:        621
Source: 
>         deposits[msg.sender].balance = deposits[msg.sender].balance.add(_amount);
>         returnPoolToken.transfer(msg.sender, _amount);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         totalStaked = totalStaked.add(_amount);

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    StakingPoolGIFTGoldYield
Line:        644
Source: 
>         requestTime[_user] = 0;
>         poolToken.transferFrom(msg.sender, _user, _usdcReturn);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         // afitoken.transferFrom(msg.sender, _user, _afiAmount);

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    StakingPoolGIFTGoldYield
Line:        671
Source: 
>         requestTime[_user] = 0;
>         poolToken.transferFrom(msg.sender, _user, _usdcReturn);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         returnPoolToken.transfer(_user, difference);

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    StakingPoolGIFTGoldYield
Line:        672
Source: 
>         poolToken.transferFrom(msg.sender, _user, _usdcReturn);
>         returnPoolToken.transfer(_user, difference);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         // afitoken.transferFrom(msg.sender, _user, _afiAmount);

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    StakingPoolGIFTGoldYield
Line:        697
Source: 
>         require(returnPoolToken.balanceOf(msg.sender) >= _amount, 'you do not have enough jytUSDT balance');
>         returnPoolToken.transferFrom(msg.sender, address(this), _amount);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         requests[msg.sender] = requests[msg.sender].add(_amount);

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    StakingPoolGIFTGoldYield
Line:        706
Source: 
>     function adminWithdrawAnyLostFunds(uint256 _amount) public onlyOwner {
>         poolToken.transfer(msg.sender, _amount);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    LOW
Pattern:     Usage of block timestamp
Description: Returned value relies on block timestamp.
Type:        Violation
Contract:    StakingPoolGIFTGoldYield
Line:        618
Source: 
> 
>         deposits[msg.sender].blockWithdrawal = block.timestamp.add(31560000); // 31,560,000 is 12 months in seconds
>                                                ^^^^^^^^^^^^^^^
>         poolToken.transferFrom(msg.sender, fireblocksWallet, _amount); 

[0m
