Traceback (most recent call last):
  File "__main__.py", line 286, in <module>
    main()
  File "__main__.py", line 277, in main
    matches.extend(pattern.find_matches())
  File "/bdata2//tools/securify/master/securify2/securify/analyses/patterns/ir/base_interface_signatures_pattern.py", line 18, in find_matches
    for contract in self.get_cfg().contracts:
  File "/bdata2//tools/securify/master/securify2/securify/analyses/patterns/ir/abstract_ir_pattern.py", line 10, in get_cfg
    cfg = self.analysis_context.cfg
  File "/bdata2//tools/securify/master/securify2/securify/analyses/analysis.py", line 81, in cfg
    self._cfg = self.config.cfg_compiler(self)
  File "__main__.py", line 254, in <lambda>
    cfg_compiler=lambda t: solidity_cfg_compiler.compile_cfg(t.ast).cfg,
  File "/bdata2//tools/securify/master/securify2/securify/solidity/solidity_cfg_compiler.py", line 88, in compile_cfg
    cfg = ast_attr.cfg
  File "/bdata2//tools/securify/master/securify2/securify/grammar/attributes/evaluators/evaluator_demand_base.py", line 84, in __get__
    return self.__evaluator.evaluate(instance, self.__name)
  File "/bdata2//tools/securify/master/securify2/securify/grammar/attributes/evaluators/evaluator_demand_iterative.py", line 26, in evaluate
    rule_info = self[node].resolve_rule(attribute)
  File "/bdata2//tools/securify/master/securify2/securify/grammar/attributes/__init__.py", line 290, in resolve_rule
    node_dependencies = {c.node: self.resolve_node(rule_node, c.node, rule_node_production) for c in rule.arguments}
  File "/bdata2//tools/securify/master/securify2/securify/grammar/attributes/__init__.py", line 290, in <dictcomp>
    node_dependencies = {c.node: self.resolve_node(rule_node, c.node, rule_node_production) for c in rule.arguments}
  File "/bdata2//tools/securify/master/securify2/securify/grammar/__init__.py", line 616, in resolve_node
    raise AttributeError(f"Semantic rule references unavailable child node '{requested}'.")
AttributeError: Semantic rule references unavailable child node 'value'.
